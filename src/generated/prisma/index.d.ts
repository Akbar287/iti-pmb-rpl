
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Alamat
 * 
 */
export type Alamat = $Result.DefaultSelection<Prisma.$AlamatPayload>
/**
 * Model Asesor
 * 
 */
export type Asesor = $Result.DefaultSelection<Prisma.$AsesorPayload>
/**
 * Model AsesorAkademik
 * 
 */
export type AsesorAkademik = $Result.DefaultSelection<Prisma.$AsesorAkademikPayload>
/**
 * Model AsesorAkademikKeanggotaanAsosiasi
 * 
 */
export type AsesorAkademikKeanggotaanAsosiasi = $Result.DefaultSelection<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
/**
 * Model AsesorPraktisi
 * 
 */
export type AsesorPraktisi = $Result.DefaultSelection<Prisma.$AsesorPraktisiPayload>
/**
 * Model AssesorMahasiswa
 * 
 */
export type AssesorMahasiswa = $Result.DefaultSelection<Prisma.$AssesorMahasiswaPayload>
/**
 * Model BuktiForm
 * 
 */
export type BuktiForm = $Result.DefaultSelection<Prisma.$BuktiFormPayload>
/**
 * Model BuktiFormEvaluasiDiri
 * 
 */
export type BuktiFormEvaluasiDiri = $Result.DefaultSelection<Prisma.$BuktiFormEvaluasiDiriPayload>
/**
 * Model CapaianPembelajaran
 * 
 */
export type CapaianPembelajaran = $Result.DefaultSelection<Prisma.$CapaianPembelajaranPayload>
/**
 * Model Country
 * 
 */
export type Country = $Result.DefaultSelection<Prisma.$CountryPayload>
/**
 * Model DaftarUlang
 * 
 */
export type DaftarUlang = $Result.DefaultSelection<Prisma.$DaftarUlangPayload>
/**
 * Model Desa
 * 
 */
export type Desa = $Result.DefaultSelection<Prisma.$DesaPayload>
/**
 * Model EvaluasiDiri
 * 
 */
export type EvaluasiDiri = $Result.DefaultSelection<Prisma.$EvaluasiDiriPayload>
/**
 * Model HasilAssesmen
 * 
 */
export type HasilAssesmen = $Result.DefaultSelection<Prisma.$HasilAssesmenPayload>
/**
 * Model InformasiKependudukan
 * 
 */
export type InformasiKependudukan = $Result.DefaultSelection<Prisma.$InformasiKependudukanPayload>
/**
 * Model InstitusiLama
 * 
 */
export type InstitusiLama = $Result.DefaultSelection<Prisma.$InstitusiLamaPayload>
/**
 * Model JenisDokumen
 * 
 */
export type JenisDokumen = $Result.DefaultSelection<Prisma.$JenisDokumenPayload>
/**
 * Model Kabupaten
 * 
 */
export type Kabupaten = $Result.DefaultSelection<Prisma.$KabupatenPayload>
/**
 * Model Kecamatan
 * 
 */
export type Kecamatan = $Result.DefaultSelection<Prisma.$KecamatanPayload>
/**
 * Model Mahasiswa
 * 
 */
export type Mahasiswa = $Result.DefaultSelection<Prisma.$MahasiswaPayload>
/**
 * Model MahasiswaKonferensi
 * 
 */
export type MahasiswaKonferensi = $Result.DefaultSelection<Prisma.$MahasiswaKonferensiPayload>
/**
 * Model MahasiswaOrganisasiProfesi
 * 
 */
export type MahasiswaOrganisasiProfesi = $Result.DefaultSelection<Prisma.$MahasiswaOrganisasiProfesiPayload>
/**
 * Model MahasiswaPelatihanProfessional
 * 
 */
export type MahasiswaPelatihanProfessional = $Result.DefaultSelection<Prisma.$MahasiswaPelatihanProfessionalPayload>
/**
 * Model MahasiswaPendidikan
 * 
 */
export type MahasiswaPendidikan = $Result.DefaultSelection<Prisma.$MahasiswaPendidikanPayload>
/**
 * Model MahasiswaPiagam
 * 
 */
export type MahasiswaPiagam = $Result.DefaultSelection<Prisma.$MahasiswaPiagamPayload>
/**
 * Model MahasiswaRiwayatPekerjaan
 * 
 */
export type MahasiswaRiwayatPekerjaan = $Result.DefaultSelection<Prisma.$MahasiswaRiwayatPekerjaanPayload>
/**
 * Model MataKuliah
 * 
 */
export type MataKuliah = $Result.DefaultSelection<Prisma.$MataKuliahPayload>
/**
 * Model MataKuliahMahasiswa
 * 
 */
export type MataKuliahMahasiswa = $Result.DefaultSelection<Prisma.$MataKuliahMahasiswaPayload>
/**
 * Model UserHasPermissions
 * 
 */
export type UserHasPermissions = $Result.DefaultSelection<Prisma.$UserHasPermissionsPayload>
/**
 * Model UserHasRoles
 * 
 */
export type UserHasRoles = $Result.DefaultSelection<Prisma.$UserHasRolesPayload>
/**
 * Model OrangTua
 * 
 */
export type OrangTua = $Result.DefaultSelection<Prisma.$OrangTuaPayload>
/**
 * Model PasswordResetTokens
 * 
 */
export type PasswordResetTokens = $Result.DefaultSelection<Prisma.$PasswordResetTokensPayload>
/**
 * Model PekerjaanMahasiswa
 * 
 */
export type PekerjaanMahasiswa = $Result.DefaultSelection<Prisma.$PekerjaanMahasiswaPayload>
/**
 * Model Pendaftaran
 * 
 */
export type Pendaftaran = $Result.DefaultSelection<Prisma.$PendaftaranPayload>
/**
 * Model Permission
 * 
 */
export type Permission = $Result.DefaultSelection<Prisma.$PermissionPayload>
/**
 * Model Pesantren
 * 
 */
export type Pesantren = $Result.DefaultSelection<Prisma.$PesantrenPayload>
/**
 * Model ProgramStudi
 * 
 */
export type ProgramStudi = $Result.DefaultSelection<Prisma.$ProgramStudiPayload>
/**
 * Model Provinsi
 * 
 */
export type Provinsi = $Result.DefaultSelection<Prisma.$ProvinsiPayload>
/**
 * Model RoleHasPermissions
 * 
 */
export type RoleHasPermissions = $Result.DefaultSelection<Prisma.$RoleHasPermissionsPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model SanggahanAssesmen
 * 
 */
export type SanggahanAssesmen = $Result.DefaultSelection<Prisma.$SanggahanAssesmenPayload>
/**
 * Model SanggahanAssesmenMk
 * 
 */
export type SanggahanAssesmenMk = $Result.DefaultSelection<Prisma.$SanggahanAssesmenMkPayload>
/**
 * Model SanggahanAssesmenPihak
 * 
 */
export type SanggahanAssesmenPihak = $Result.DefaultSelection<Prisma.$SanggahanAssesmenPihakPayload>
/**
 * Model SkRektor
 * 
 */
export type SkRektor = $Result.DefaultSelection<Prisma.$SkRektorPayload>
/**
 * Model SkRektorAssesor
 * 
 */
export type SkRektorAssesor = $Result.DefaultSelection<Prisma.$SkRektorAssesorPayload>
/**
 * Model SkRektorMahasiswa
 * 
 */
export type SkRektorMahasiswa = $Result.DefaultSelection<Prisma.$SkRektorMahasiswaPayload>
/**
 * Model SkorAssesmen
 * 
 */
export type SkorAssesmen = $Result.DefaultSelection<Prisma.$SkorAssesmenPayload>
/**
 * Model StatusMahasiswaAssesment
 * 
 */
export type StatusMahasiswaAssesment = $Result.DefaultSelection<Prisma.$StatusMahasiswaAssesmentPayload>
/**
 * Model StatusMahasiswaAssesmentHistory
 * 
 */
export type StatusMahasiswaAssesmentHistory = $Result.DefaultSelection<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
/**
 * Model TipeAsesor
 * 
 */
export type TipeAsesor = $Result.DefaultSelection<Prisma.$TipeAsesorPayload>
/**
 * Model University
 * 
 */
export type University = $Result.DefaultSelection<Prisma.$UniversityPayload>
/**
 * Model UniversitySosialMedia
 * 
 */
export type UniversitySosialMedia = $Result.DefaultSelection<Prisma.$UniversitySosialMediaPayload>
/**
 * Model UniversityInformasi
 * 
 */
export type UniversityInformasi = $Result.DefaultSelection<Prisma.$UniversityInformasiPayload>
/**
 * Model UniversityJabatan
 * 
 */
export type UniversityJabatan = $Result.DefaultSelection<Prisma.$UniversityJabatanPayload>
/**
 * Model UniversityJabatanOrang
 * 
 */
export type UniversityJabatanOrang = $Result.DefaultSelection<Prisma.$UniversityJabatanOrangPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Userlogin
 * 
 */
export type Userlogin = $Result.DefaultSelection<Prisma.$UserloginPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const ProfiensiPengetahuan: {
  SANGAT_BAIK: 'SANGAT_BAIK',
  BAIK: 'BAIK',
  TIDAK_PERNAH: 'TIDAK_PERNAH'
};

export type ProfiensiPengetahuan = (typeof ProfiensiPengetahuan)[keyof typeof ProfiensiPengetahuan]


export const Jenjang: {
  TIDAK_TAMAT_SD: 'TIDAK_TAMAT_SD',
  SD: 'SD',
  SMP: 'SMP',
  SMA: 'SMA',
  D3: 'D3',
  S1: 'S1',
  S2: 'S2',
  S3: 'S3'
};

export type Jenjang = (typeof Jenjang)[keyof typeof Jenjang]


export const StatusMataKuliahMahasiswa: {
  DRAFT: 'DRAFT',
  EVALUASI_MANDIRI: 'EVALUASI_MANDIRI',
  DALAM_ASESSMEN: 'DALAM_ASESSMEN',
  DISANGGAH: 'DISANGGAH',
  PERLU_DIREVISI: 'PERLU_DIREVISI',
  SELESAI: 'SELESAI'
};

export type StatusMataKuliahMahasiswa = (typeof StatusMataKuliahMahasiswa)[keyof typeof StatusMataKuliahMahasiswa]


export const StatusPerkawinan: {
  Lajang: 'Lajang',
  Menikah: 'Menikah',
  Cerai: 'Cerai'
};

export type StatusPerkawinan = (typeof StatusPerkawinan)[keyof typeof StatusPerkawinan]


export const StatusKeikutsertaan: {
  Peserta: 'Peserta',
  Panitia: 'Panitia',
  Pembicara: 'Pembicara'
};

export type StatusKeikutsertaan = (typeof StatusKeikutsertaan)[keyof typeof StatusKeikutsertaan]


export const KeteranganMataKuliah: {
  Transfer_SKS: 'Transfer_SKS',
  Perolehan_SKS: 'Perolehan_SKS'
};

export type KeteranganMataKuliah = (typeof KeteranganMataKuliah)[keyof typeof KeteranganMataKuliah]


export const JenisKelamin: {
  PRIA: 'PRIA',
  WANITA: 'WANITA'
};

export type JenisKelamin = (typeof JenisKelamin)[keyof typeof JenisKelamin]


export const JenisOrtu: {
  AYAH: 'AYAH',
  IBU: 'IBU',
  KAKEK: 'KAKEK',
  NENEK: 'NENEK'
};

export type JenisOrtu = (typeof JenisOrtu)[keyof typeof JenisOrtu]


export const StatusPekerjaan: {
  PegawaiTetap: 'PegawaiTetap',
  PegawaiHonorer: 'PegawaiHonorer',
  Pns: 'Pns',
  Lainnya: 'Lainnya'
};

export type StatusPekerjaan = (typeof StatusPekerjaan)[keyof typeof StatusPekerjaan]


export const SistemKuliah: {
  RPL: 'RPL',
  REGULER: 'REGULER'
};

export type SistemKuliah = (typeof SistemKuliah)[keyof typeof SistemKuliah]

}

export type ProfiensiPengetahuan = $Enums.ProfiensiPengetahuan

export const ProfiensiPengetahuan: typeof $Enums.ProfiensiPengetahuan

export type Jenjang = $Enums.Jenjang

export const Jenjang: typeof $Enums.Jenjang

export type StatusMataKuliahMahasiswa = $Enums.StatusMataKuliahMahasiswa

export const StatusMataKuliahMahasiswa: typeof $Enums.StatusMataKuliahMahasiswa

export type StatusPerkawinan = $Enums.StatusPerkawinan

export const StatusPerkawinan: typeof $Enums.StatusPerkawinan

export type StatusKeikutsertaan = $Enums.StatusKeikutsertaan

export const StatusKeikutsertaan: typeof $Enums.StatusKeikutsertaan

export type KeteranganMataKuliah = $Enums.KeteranganMataKuliah

export const KeteranganMataKuliah: typeof $Enums.KeteranganMataKuliah

export type JenisKelamin = $Enums.JenisKelamin

export const JenisKelamin: typeof $Enums.JenisKelamin

export type JenisOrtu = $Enums.JenisOrtu

export const JenisOrtu: typeof $Enums.JenisOrtu

export type StatusPekerjaan = $Enums.StatusPekerjaan

export const StatusPekerjaan: typeof $Enums.StatusPekerjaan

export type SistemKuliah = $Enums.SistemKuliah

export const SistemKuliah: typeof $Enums.SistemKuliah

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Alamats
 * const alamats = await prisma.alamat.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Alamats
   * const alamats = await prisma.alamat.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.alamat`: Exposes CRUD operations for the **Alamat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alamats
    * const alamats = await prisma.alamat.findMany()
    * ```
    */
  get alamat(): Prisma.AlamatDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asesor`: Exposes CRUD operations for the **Asesor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Asesors
    * const asesors = await prisma.asesor.findMany()
    * ```
    */
  get asesor(): Prisma.AsesorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asesorAkademik`: Exposes CRUD operations for the **AsesorAkademik** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AsesorAkademiks
    * const asesorAkademiks = await prisma.asesorAkademik.findMany()
    * ```
    */
  get asesorAkademik(): Prisma.AsesorAkademikDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asesorAkademikKeanggotaanAsosiasi`: Exposes CRUD operations for the **AsesorAkademikKeanggotaanAsosiasi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AsesorAkademikKeanggotaanAsosiasis
    * const asesorAkademikKeanggotaanAsosiasis = await prisma.asesorAkademikKeanggotaanAsosiasi.findMany()
    * ```
    */
  get asesorAkademikKeanggotaanAsosiasi(): Prisma.AsesorAkademikKeanggotaanAsosiasiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asesorPraktisi`: Exposes CRUD operations for the **AsesorPraktisi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AsesorPraktisis
    * const asesorPraktisis = await prisma.asesorPraktisi.findMany()
    * ```
    */
  get asesorPraktisi(): Prisma.AsesorPraktisiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.assesorMahasiswa`: Exposes CRUD operations for the **AssesorMahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AssesorMahasiswas
    * const assesorMahasiswas = await prisma.assesorMahasiswa.findMany()
    * ```
    */
  get assesorMahasiswa(): Prisma.AssesorMahasiswaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.buktiForm`: Exposes CRUD operations for the **BuktiForm** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BuktiForms
    * const buktiForms = await prisma.buktiForm.findMany()
    * ```
    */
  get buktiForm(): Prisma.BuktiFormDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.buktiFormEvaluasiDiri`: Exposes CRUD operations for the **BuktiFormEvaluasiDiri** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BuktiFormEvaluasiDiris
    * const buktiFormEvaluasiDiris = await prisma.buktiFormEvaluasiDiri.findMany()
    * ```
    */
  get buktiFormEvaluasiDiri(): Prisma.BuktiFormEvaluasiDiriDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.capaianPembelajaran`: Exposes CRUD operations for the **CapaianPembelajaran** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CapaianPembelajarans
    * const capaianPembelajarans = await prisma.capaianPembelajaran.findMany()
    * ```
    */
  get capaianPembelajaran(): Prisma.CapaianPembelajaranDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.country`: Exposes CRUD operations for the **Country** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Countries
    * const countries = await prisma.country.findMany()
    * ```
    */
  get country(): Prisma.CountryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.daftarUlang`: Exposes CRUD operations for the **DaftarUlang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DaftarUlangs
    * const daftarUlangs = await prisma.daftarUlang.findMany()
    * ```
    */
  get daftarUlang(): Prisma.DaftarUlangDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.desa`: Exposes CRUD operations for the **Desa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Desas
    * const desas = await prisma.desa.findMany()
    * ```
    */
  get desa(): Prisma.DesaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evaluasiDiri`: Exposes CRUD operations for the **EvaluasiDiri** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EvaluasiDiris
    * const evaluasiDiris = await prisma.evaluasiDiri.findMany()
    * ```
    */
  get evaluasiDiri(): Prisma.EvaluasiDiriDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.hasilAssesmen`: Exposes CRUD operations for the **HasilAssesmen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HasilAssesmen
    * const hasilAssesmen = await prisma.hasilAssesmen.findMany()
    * ```
    */
  get hasilAssesmen(): Prisma.HasilAssesmenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.informasiKependudukan`: Exposes CRUD operations for the **InformasiKependudukan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InformasiKependudukans
    * const informasiKependudukans = await prisma.informasiKependudukan.findMany()
    * ```
    */
  get informasiKependudukan(): Prisma.InformasiKependudukanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.institusiLama`: Exposes CRUD operations for the **InstitusiLama** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more InstitusiLamas
    * const institusiLamas = await prisma.institusiLama.findMany()
    * ```
    */
  get institusiLama(): Prisma.InstitusiLamaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jenisDokumen`: Exposes CRUD operations for the **JenisDokumen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JenisDokumen
    * const jenisDokumen = await prisma.jenisDokumen.findMany()
    * ```
    */
  get jenisDokumen(): Prisma.JenisDokumenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.kabupaten`: Exposes CRUD operations for the **Kabupaten** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kabupatens
    * const kabupatens = await prisma.kabupaten.findMany()
    * ```
    */
  get kabupaten(): Prisma.KabupatenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.kecamatan`: Exposes CRUD operations for the **Kecamatan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Kecamatans
    * const kecamatans = await prisma.kecamatan.findMany()
    * ```
    */
  get kecamatan(): Prisma.KecamatanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswa`: Exposes CRUD operations for the **Mahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mahasiswas
    * const mahasiswas = await prisma.mahasiswa.findMany()
    * ```
    */
  get mahasiswa(): Prisma.MahasiswaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswaKonferensi`: Exposes CRUD operations for the **MahasiswaKonferensi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MahasiswaKonferensis
    * const mahasiswaKonferensis = await prisma.mahasiswaKonferensi.findMany()
    * ```
    */
  get mahasiswaKonferensi(): Prisma.MahasiswaKonferensiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswaOrganisasiProfesi`: Exposes CRUD operations for the **MahasiswaOrganisasiProfesi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MahasiswaOrganisasiProfesis
    * const mahasiswaOrganisasiProfesis = await prisma.mahasiswaOrganisasiProfesi.findMany()
    * ```
    */
  get mahasiswaOrganisasiProfesi(): Prisma.MahasiswaOrganisasiProfesiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswaPelatihanProfessional`: Exposes CRUD operations for the **MahasiswaPelatihanProfessional** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MahasiswaPelatihanProfessionals
    * const mahasiswaPelatihanProfessionals = await prisma.mahasiswaPelatihanProfessional.findMany()
    * ```
    */
  get mahasiswaPelatihanProfessional(): Prisma.MahasiswaPelatihanProfessionalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswaPendidikan`: Exposes CRUD operations for the **MahasiswaPendidikan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MahasiswaPendidikans
    * const mahasiswaPendidikans = await prisma.mahasiswaPendidikan.findMany()
    * ```
    */
  get mahasiswaPendidikan(): Prisma.MahasiswaPendidikanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswaPiagam`: Exposes CRUD operations for the **MahasiswaPiagam** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MahasiswaPiagams
    * const mahasiswaPiagams = await prisma.mahasiswaPiagam.findMany()
    * ```
    */
  get mahasiswaPiagam(): Prisma.MahasiswaPiagamDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mahasiswaRiwayatPekerjaan`: Exposes CRUD operations for the **MahasiswaRiwayatPekerjaan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MahasiswaRiwayatPekerjaans
    * const mahasiswaRiwayatPekerjaans = await prisma.mahasiswaRiwayatPekerjaan.findMany()
    * ```
    */
  get mahasiswaRiwayatPekerjaan(): Prisma.MahasiswaRiwayatPekerjaanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mataKuliah`: Exposes CRUD operations for the **MataKuliah** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MataKuliahs
    * const mataKuliahs = await prisma.mataKuliah.findMany()
    * ```
    */
  get mataKuliah(): Prisma.MataKuliahDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mataKuliahMahasiswa`: Exposes CRUD operations for the **MataKuliahMahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MataKuliahMahasiswas
    * const mataKuliahMahasiswas = await prisma.mataKuliahMahasiswa.findMany()
    * ```
    */
  get mataKuliahMahasiswa(): Prisma.MataKuliahMahasiswaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userHasPermissions`: Exposes CRUD operations for the **UserHasPermissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserHasPermissions
    * const userHasPermissions = await prisma.userHasPermissions.findMany()
    * ```
    */
  get userHasPermissions(): Prisma.UserHasPermissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userHasRoles`: Exposes CRUD operations for the **UserHasRoles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserHasRoles
    * const userHasRoles = await prisma.userHasRoles.findMany()
    * ```
    */
  get userHasRoles(): Prisma.UserHasRolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orangTua`: Exposes CRUD operations for the **OrangTua** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrangTuas
    * const orangTuas = await prisma.orangTua.findMany()
    * ```
    */
  get orangTua(): Prisma.OrangTuaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.passwordResetTokens`: Exposes CRUD operations for the **PasswordResetTokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PasswordResetTokens
    * const passwordResetTokens = await prisma.passwordResetTokens.findMany()
    * ```
    */
  get passwordResetTokens(): Prisma.PasswordResetTokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pekerjaanMahasiswa`: Exposes CRUD operations for the **PekerjaanMahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PekerjaanMahasiswas
    * const pekerjaanMahasiswas = await prisma.pekerjaanMahasiswa.findMany()
    * ```
    */
  get pekerjaanMahasiswa(): Prisma.PekerjaanMahasiswaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pendaftaran`: Exposes CRUD operations for the **Pendaftaran** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pendaftarans
    * const pendaftarans = await prisma.pendaftaran.findMany()
    * ```
    */
  get pendaftaran(): Prisma.PendaftaranDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **Permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.PermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pesantren`: Exposes CRUD operations for the **Pesantren** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pesantrens
    * const pesantrens = await prisma.pesantren.findMany()
    * ```
    */
  get pesantren(): Prisma.PesantrenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.programStudi`: Exposes CRUD operations for the **ProgramStudi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgramStudis
    * const programStudis = await prisma.programStudi.findMany()
    * ```
    */
  get programStudi(): Prisma.ProgramStudiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provinsi`: Exposes CRUD operations for the **Provinsi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provinsis
    * const provinsis = await prisma.provinsi.findMany()
    * ```
    */
  get provinsi(): Prisma.ProvinsiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roleHasPermissions`: Exposes CRUD operations for the **RoleHasPermissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoleHasPermissions
    * const roleHasPermissions = await prisma.roleHasPermissions.findMany()
    * ```
    */
  get roleHasPermissions(): Prisma.RoleHasPermissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sanggahanAssesmen`: Exposes CRUD operations for the **SanggahanAssesmen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SanggahanAssesmen
    * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findMany()
    * ```
    */
  get sanggahanAssesmen(): Prisma.SanggahanAssesmenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sanggahanAssesmenMk`: Exposes CRUD operations for the **SanggahanAssesmenMk** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SanggahanAssesmenMks
    * const sanggahanAssesmenMks = await prisma.sanggahanAssesmenMk.findMany()
    * ```
    */
  get sanggahanAssesmenMk(): Prisma.SanggahanAssesmenMkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sanggahanAssesmenPihak`: Exposes CRUD operations for the **SanggahanAssesmenPihak** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SanggahanAssesmenPihaks
    * const sanggahanAssesmenPihaks = await prisma.sanggahanAssesmenPihak.findMany()
    * ```
    */
  get sanggahanAssesmenPihak(): Prisma.SanggahanAssesmenPihakDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skRektor`: Exposes CRUD operations for the **SkRektor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SkRektors
    * const skRektors = await prisma.skRektor.findMany()
    * ```
    */
  get skRektor(): Prisma.SkRektorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skRektorAssesor`: Exposes CRUD operations for the **SkRektorAssesor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SkRektorAssesors
    * const skRektorAssesors = await prisma.skRektorAssesor.findMany()
    * ```
    */
  get skRektorAssesor(): Prisma.SkRektorAssesorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skRektorMahasiswa`: Exposes CRUD operations for the **SkRektorMahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SkRektorMahasiswas
    * const skRektorMahasiswas = await prisma.skRektorMahasiswa.findMany()
    * ```
    */
  get skRektorMahasiswa(): Prisma.SkRektorMahasiswaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.skorAssesmen`: Exposes CRUD operations for the **SkorAssesmen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SkorAssesmen
    * const skorAssesmen = await prisma.skorAssesmen.findMany()
    * ```
    */
  get skorAssesmen(): Prisma.SkorAssesmenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.statusMahasiswaAssesment`: Exposes CRUD operations for the **StatusMahasiswaAssesment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StatusMahasiswaAssesments
    * const statusMahasiswaAssesments = await prisma.statusMahasiswaAssesment.findMany()
    * ```
    */
  get statusMahasiswaAssesment(): Prisma.StatusMahasiswaAssesmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.statusMahasiswaAssesmentHistory`: Exposes CRUD operations for the **StatusMahasiswaAssesmentHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StatusMahasiswaAssesmentHistories
    * const statusMahasiswaAssesmentHistories = await prisma.statusMahasiswaAssesmentHistory.findMany()
    * ```
    */
  get statusMahasiswaAssesmentHistory(): Prisma.StatusMahasiswaAssesmentHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipeAsesor`: Exposes CRUD operations for the **TipeAsesor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TipeAsesors
    * const tipeAsesors = await prisma.tipeAsesor.findMany()
    * ```
    */
  get tipeAsesor(): Prisma.TipeAsesorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.university`: Exposes CRUD operations for the **University** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Universities
    * const universities = await prisma.university.findMany()
    * ```
    */
  get university(): Prisma.UniversityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.universitySosialMedia`: Exposes CRUD operations for the **UniversitySosialMedia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UniversitySosialMedias
    * const universitySosialMedias = await prisma.universitySosialMedia.findMany()
    * ```
    */
  get universitySosialMedia(): Prisma.UniversitySosialMediaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.universityInformasi`: Exposes CRUD operations for the **UniversityInformasi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UniversityInformasis
    * const universityInformasis = await prisma.universityInformasi.findMany()
    * ```
    */
  get universityInformasi(): Prisma.UniversityInformasiDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.universityJabatan`: Exposes CRUD operations for the **UniversityJabatan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UniversityJabatans
    * const universityJabatans = await prisma.universityJabatan.findMany()
    * ```
    */
  get universityJabatan(): Prisma.UniversityJabatanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.universityJabatanOrang`: Exposes CRUD operations for the **UniversityJabatanOrang** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UniversityJabatanOrangs
    * const universityJabatanOrangs = await prisma.universityJabatanOrang.findMany()
    * ```
    */
  get universityJabatanOrang(): Prisma.UniversityJabatanOrangDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userlogin`: Exposes CRUD operations for the **Userlogin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Userlogins
    * const userlogins = await prisma.userlogin.findMany()
    * ```
    */
  get userlogin(): Prisma.UserloginDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Alamat: 'Alamat',
    Asesor: 'Asesor',
    AsesorAkademik: 'AsesorAkademik',
    AsesorAkademikKeanggotaanAsosiasi: 'AsesorAkademikKeanggotaanAsosiasi',
    AsesorPraktisi: 'AsesorPraktisi',
    AssesorMahasiswa: 'AssesorMahasiswa',
    BuktiForm: 'BuktiForm',
    BuktiFormEvaluasiDiri: 'BuktiFormEvaluasiDiri',
    CapaianPembelajaran: 'CapaianPembelajaran',
    Country: 'Country',
    DaftarUlang: 'DaftarUlang',
    Desa: 'Desa',
    EvaluasiDiri: 'EvaluasiDiri',
    HasilAssesmen: 'HasilAssesmen',
    InformasiKependudukan: 'InformasiKependudukan',
    InstitusiLama: 'InstitusiLama',
    JenisDokumen: 'JenisDokumen',
    Kabupaten: 'Kabupaten',
    Kecamatan: 'Kecamatan',
    Mahasiswa: 'Mahasiswa',
    MahasiswaKonferensi: 'MahasiswaKonferensi',
    MahasiswaOrganisasiProfesi: 'MahasiswaOrganisasiProfesi',
    MahasiswaPelatihanProfessional: 'MahasiswaPelatihanProfessional',
    MahasiswaPendidikan: 'MahasiswaPendidikan',
    MahasiswaPiagam: 'MahasiswaPiagam',
    MahasiswaRiwayatPekerjaan: 'MahasiswaRiwayatPekerjaan',
    MataKuliah: 'MataKuliah',
    MataKuliahMahasiswa: 'MataKuliahMahasiswa',
    UserHasPermissions: 'UserHasPermissions',
    UserHasRoles: 'UserHasRoles',
    OrangTua: 'OrangTua',
    PasswordResetTokens: 'PasswordResetTokens',
    PekerjaanMahasiswa: 'PekerjaanMahasiswa',
    Pendaftaran: 'Pendaftaran',
    Permission: 'Permission',
    Pesantren: 'Pesantren',
    ProgramStudi: 'ProgramStudi',
    Provinsi: 'Provinsi',
    RoleHasPermissions: 'RoleHasPermissions',
    Role: 'Role',
    SanggahanAssesmen: 'SanggahanAssesmen',
    SanggahanAssesmenMk: 'SanggahanAssesmenMk',
    SanggahanAssesmenPihak: 'SanggahanAssesmenPihak',
    SkRektor: 'SkRektor',
    SkRektorAssesor: 'SkRektorAssesor',
    SkRektorMahasiswa: 'SkRektorMahasiswa',
    SkorAssesmen: 'SkorAssesmen',
    StatusMahasiswaAssesment: 'StatusMahasiswaAssesment',
    StatusMahasiswaAssesmentHistory: 'StatusMahasiswaAssesmentHistory',
    TipeAsesor: 'TipeAsesor',
    University: 'University',
    UniversitySosialMedia: 'UniversitySosialMedia',
    UniversityInformasi: 'UniversityInformasi',
    UniversityJabatan: 'UniversityJabatan',
    UniversityJabatanOrang: 'UniversityJabatanOrang',
    User: 'User',
    Userlogin: 'Userlogin'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "alamat" | "asesor" | "asesorAkademik" | "asesorAkademikKeanggotaanAsosiasi" | "asesorPraktisi" | "assesorMahasiswa" | "buktiForm" | "buktiFormEvaluasiDiri" | "capaianPembelajaran" | "country" | "daftarUlang" | "desa" | "evaluasiDiri" | "hasilAssesmen" | "informasiKependudukan" | "institusiLama" | "jenisDokumen" | "kabupaten" | "kecamatan" | "mahasiswa" | "mahasiswaKonferensi" | "mahasiswaOrganisasiProfesi" | "mahasiswaPelatihanProfessional" | "mahasiswaPendidikan" | "mahasiswaPiagam" | "mahasiswaRiwayatPekerjaan" | "mataKuliah" | "mataKuliahMahasiswa" | "userHasPermissions" | "userHasRoles" | "orangTua" | "passwordResetTokens" | "pekerjaanMahasiswa" | "pendaftaran" | "permission" | "pesantren" | "programStudi" | "provinsi" | "roleHasPermissions" | "role" | "sanggahanAssesmen" | "sanggahanAssesmenMk" | "sanggahanAssesmenPihak" | "skRektor" | "skRektorAssesor" | "skRektorMahasiswa" | "skorAssesmen" | "statusMahasiswaAssesment" | "statusMahasiswaAssesmentHistory" | "tipeAsesor" | "university" | "universitySosialMedia" | "universityInformasi" | "universityJabatan" | "universityJabatanOrang" | "user" | "userlogin"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Alamat: {
        payload: Prisma.$AlamatPayload<ExtArgs>
        fields: Prisma.AlamatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlamatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlamatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          findFirst: {
            args: Prisma.AlamatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlamatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          findMany: {
            args: Prisma.AlamatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>[]
          }
          create: {
            args: Prisma.AlamatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          createMany: {
            args: Prisma.AlamatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlamatCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>[]
          }
          delete: {
            args: Prisma.AlamatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          update: {
            args: Prisma.AlamatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          deleteMany: {
            args: Prisma.AlamatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlamatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AlamatUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>[]
          }
          upsert: {
            args: Prisma.AlamatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlamatPayload>
          }
          aggregate: {
            args: Prisma.AlamatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlamat>
          }
          groupBy: {
            args: Prisma.AlamatGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlamatGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlamatCountArgs<ExtArgs>
            result: $Utils.Optional<AlamatCountAggregateOutputType> | number
          }
        }
      }
      Asesor: {
        payload: Prisma.$AsesorPayload<ExtArgs>
        fields: Prisma.AsesorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AsesorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AsesorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>
          }
          findFirst: {
            args: Prisma.AsesorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AsesorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>
          }
          findMany: {
            args: Prisma.AsesorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>[]
          }
          create: {
            args: Prisma.AsesorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>
          }
          createMany: {
            args: Prisma.AsesorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AsesorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>[]
          }
          delete: {
            args: Prisma.AsesorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>
          }
          update: {
            args: Prisma.AsesorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>
          }
          deleteMany: {
            args: Prisma.AsesorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AsesorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AsesorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>[]
          }
          upsert: {
            args: Prisma.AsesorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPayload>
          }
          aggregate: {
            args: Prisma.AsesorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsesor>
          }
          groupBy: {
            args: Prisma.AsesorGroupByArgs<ExtArgs>
            result: $Utils.Optional<AsesorGroupByOutputType>[]
          }
          count: {
            args: Prisma.AsesorCountArgs<ExtArgs>
            result: $Utils.Optional<AsesorCountAggregateOutputType> | number
          }
        }
      }
      AsesorAkademik: {
        payload: Prisma.$AsesorAkademikPayload<ExtArgs>
        fields: Prisma.AsesorAkademikFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AsesorAkademikFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AsesorAkademikFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>
          }
          findFirst: {
            args: Prisma.AsesorAkademikFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AsesorAkademikFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>
          }
          findMany: {
            args: Prisma.AsesorAkademikFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>[]
          }
          create: {
            args: Prisma.AsesorAkademikCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>
          }
          createMany: {
            args: Prisma.AsesorAkademikCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AsesorAkademikCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>[]
          }
          delete: {
            args: Prisma.AsesorAkademikDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>
          }
          update: {
            args: Prisma.AsesorAkademikUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>
          }
          deleteMany: {
            args: Prisma.AsesorAkademikDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AsesorAkademikUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AsesorAkademikUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>[]
          }
          upsert: {
            args: Prisma.AsesorAkademikUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikPayload>
          }
          aggregate: {
            args: Prisma.AsesorAkademikAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsesorAkademik>
          }
          groupBy: {
            args: Prisma.AsesorAkademikGroupByArgs<ExtArgs>
            result: $Utils.Optional<AsesorAkademikGroupByOutputType>[]
          }
          count: {
            args: Prisma.AsesorAkademikCountArgs<ExtArgs>
            result: $Utils.Optional<AsesorAkademikCountAggregateOutputType> | number
          }
        }
      }
      AsesorAkademikKeanggotaanAsosiasi: {
        payload: Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>
        fields: Prisma.AsesorAkademikKeanggotaanAsosiasiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
          }
          findFirst: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
          }
          findMany: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>[]
          }
          create: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
          }
          createMany: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>[]
          }
          delete: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
          }
          update: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
          }
          deleteMany: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>[]
          }
          upsert: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload>
          }
          aggregate: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsesorAkademikKeanggotaanAsosiasi>
          }
          groupBy: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiGroupByArgs<ExtArgs>
            result: $Utils.Optional<AsesorAkademikKeanggotaanAsosiasiGroupByOutputType>[]
          }
          count: {
            args: Prisma.AsesorAkademikKeanggotaanAsosiasiCountArgs<ExtArgs>
            result: $Utils.Optional<AsesorAkademikKeanggotaanAsosiasiCountAggregateOutputType> | number
          }
        }
      }
      AsesorPraktisi: {
        payload: Prisma.$AsesorPraktisiPayload<ExtArgs>
        fields: Prisma.AsesorPraktisiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AsesorPraktisiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AsesorPraktisiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>
          }
          findFirst: {
            args: Prisma.AsesorPraktisiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AsesorPraktisiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>
          }
          findMany: {
            args: Prisma.AsesorPraktisiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>[]
          }
          create: {
            args: Prisma.AsesorPraktisiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>
          }
          createMany: {
            args: Prisma.AsesorPraktisiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AsesorPraktisiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>[]
          }
          delete: {
            args: Prisma.AsesorPraktisiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>
          }
          update: {
            args: Prisma.AsesorPraktisiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>
          }
          deleteMany: {
            args: Prisma.AsesorPraktisiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AsesorPraktisiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AsesorPraktisiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>[]
          }
          upsert: {
            args: Prisma.AsesorPraktisiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsesorPraktisiPayload>
          }
          aggregate: {
            args: Prisma.AsesorPraktisiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsesorPraktisi>
          }
          groupBy: {
            args: Prisma.AsesorPraktisiGroupByArgs<ExtArgs>
            result: $Utils.Optional<AsesorPraktisiGroupByOutputType>[]
          }
          count: {
            args: Prisma.AsesorPraktisiCountArgs<ExtArgs>
            result: $Utils.Optional<AsesorPraktisiCountAggregateOutputType> | number
          }
        }
      }
      AssesorMahasiswa: {
        payload: Prisma.$AssesorMahasiswaPayload<ExtArgs>
        fields: Prisma.AssesorMahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssesorMahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssesorMahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>
          }
          findFirst: {
            args: Prisma.AssesorMahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssesorMahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>
          }
          findMany: {
            args: Prisma.AssesorMahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>[]
          }
          create: {
            args: Prisma.AssesorMahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>
          }
          createMany: {
            args: Prisma.AssesorMahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssesorMahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>[]
          }
          delete: {
            args: Prisma.AssesorMahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>
          }
          update: {
            args: Prisma.AssesorMahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.AssesorMahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssesorMahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssesorMahasiswaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>[]
          }
          upsert: {
            args: Prisma.AssesorMahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssesorMahasiswaPayload>
          }
          aggregate: {
            args: Prisma.AssesorMahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssesorMahasiswa>
          }
          groupBy: {
            args: Prisma.AssesorMahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssesorMahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssesorMahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<AssesorMahasiswaCountAggregateOutputType> | number
          }
        }
      }
      BuktiForm: {
        payload: Prisma.$BuktiFormPayload<ExtArgs>
        fields: Prisma.BuktiFormFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BuktiFormFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BuktiFormFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>
          }
          findFirst: {
            args: Prisma.BuktiFormFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BuktiFormFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>
          }
          findMany: {
            args: Prisma.BuktiFormFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>[]
          }
          create: {
            args: Prisma.BuktiFormCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>
          }
          createMany: {
            args: Prisma.BuktiFormCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BuktiFormCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>[]
          }
          delete: {
            args: Prisma.BuktiFormDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>
          }
          update: {
            args: Prisma.BuktiFormUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>
          }
          deleteMany: {
            args: Prisma.BuktiFormDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BuktiFormUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BuktiFormUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>[]
          }
          upsert: {
            args: Prisma.BuktiFormUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormPayload>
          }
          aggregate: {
            args: Prisma.BuktiFormAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuktiForm>
          }
          groupBy: {
            args: Prisma.BuktiFormGroupByArgs<ExtArgs>
            result: $Utils.Optional<BuktiFormGroupByOutputType>[]
          }
          count: {
            args: Prisma.BuktiFormCountArgs<ExtArgs>
            result: $Utils.Optional<BuktiFormCountAggregateOutputType> | number
          }
        }
      }
      BuktiFormEvaluasiDiri: {
        payload: Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>
        fields: Prisma.BuktiFormEvaluasiDiriFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BuktiFormEvaluasiDiriFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BuktiFormEvaluasiDiriFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>
          }
          findFirst: {
            args: Prisma.BuktiFormEvaluasiDiriFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BuktiFormEvaluasiDiriFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>
          }
          findMany: {
            args: Prisma.BuktiFormEvaluasiDiriFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>[]
          }
          create: {
            args: Prisma.BuktiFormEvaluasiDiriCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>
          }
          createMany: {
            args: Prisma.BuktiFormEvaluasiDiriCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BuktiFormEvaluasiDiriCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>[]
          }
          delete: {
            args: Prisma.BuktiFormEvaluasiDiriDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>
          }
          update: {
            args: Prisma.BuktiFormEvaluasiDiriUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>
          }
          deleteMany: {
            args: Prisma.BuktiFormEvaluasiDiriDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BuktiFormEvaluasiDiriUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BuktiFormEvaluasiDiriUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>[]
          }
          upsert: {
            args: Prisma.BuktiFormEvaluasiDiriUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuktiFormEvaluasiDiriPayload>
          }
          aggregate: {
            args: Prisma.BuktiFormEvaluasiDiriAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuktiFormEvaluasiDiri>
          }
          groupBy: {
            args: Prisma.BuktiFormEvaluasiDiriGroupByArgs<ExtArgs>
            result: $Utils.Optional<BuktiFormEvaluasiDiriGroupByOutputType>[]
          }
          count: {
            args: Prisma.BuktiFormEvaluasiDiriCountArgs<ExtArgs>
            result: $Utils.Optional<BuktiFormEvaluasiDiriCountAggregateOutputType> | number
          }
        }
      }
      CapaianPembelajaran: {
        payload: Prisma.$CapaianPembelajaranPayload<ExtArgs>
        fields: Prisma.CapaianPembelajaranFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CapaianPembelajaranFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CapaianPembelajaranFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>
          }
          findFirst: {
            args: Prisma.CapaianPembelajaranFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CapaianPembelajaranFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>
          }
          findMany: {
            args: Prisma.CapaianPembelajaranFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>[]
          }
          create: {
            args: Prisma.CapaianPembelajaranCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>
          }
          createMany: {
            args: Prisma.CapaianPembelajaranCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CapaianPembelajaranCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>[]
          }
          delete: {
            args: Prisma.CapaianPembelajaranDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>
          }
          update: {
            args: Prisma.CapaianPembelajaranUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>
          }
          deleteMany: {
            args: Prisma.CapaianPembelajaranDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CapaianPembelajaranUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CapaianPembelajaranUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>[]
          }
          upsert: {
            args: Prisma.CapaianPembelajaranUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapaianPembelajaranPayload>
          }
          aggregate: {
            args: Prisma.CapaianPembelajaranAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCapaianPembelajaran>
          }
          groupBy: {
            args: Prisma.CapaianPembelajaranGroupByArgs<ExtArgs>
            result: $Utils.Optional<CapaianPembelajaranGroupByOutputType>[]
          }
          count: {
            args: Prisma.CapaianPembelajaranCountArgs<ExtArgs>
            result: $Utils.Optional<CapaianPembelajaranCountAggregateOutputType> | number
          }
        }
      }
      Country: {
        payload: Prisma.$CountryPayload<ExtArgs>
        fields: Prisma.CountryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CountryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CountryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          findFirst: {
            args: Prisma.CountryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CountryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          findMany: {
            args: Prisma.CountryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          create: {
            args: Prisma.CountryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          createMany: {
            args: Prisma.CountryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CountryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          delete: {
            args: Prisma.CountryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          update: {
            args: Prisma.CountryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          deleteMany: {
            args: Prisma.CountryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CountryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CountryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>[]
          }
          upsert: {
            args: Prisma.CountryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CountryPayload>
          }
          aggregate: {
            args: Prisma.CountryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCountry>
          }
          groupBy: {
            args: Prisma.CountryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CountryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CountryCountArgs<ExtArgs>
            result: $Utils.Optional<CountryCountAggregateOutputType> | number
          }
        }
      }
      DaftarUlang: {
        payload: Prisma.$DaftarUlangPayload<ExtArgs>
        fields: Prisma.DaftarUlangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DaftarUlangFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DaftarUlangFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>
          }
          findFirst: {
            args: Prisma.DaftarUlangFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DaftarUlangFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>
          }
          findMany: {
            args: Prisma.DaftarUlangFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>[]
          }
          create: {
            args: Prisma.DaftarUlangCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>
          }
          createMany: {
            args: Prisma.DaftarUlangCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DaftarUlangCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>[]
          }
          delete: {
            args: Prisma.DaftarUlangDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>
          }
          update: {
            args: Prisma.DaftarUlangUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>
          }
          deleteMany: {
            args: Prisma.DaftarUlangDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DaftarUlangUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DaftarUlangUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>[]
          }
          upsert: {
            args: Prisma.DaftarUlangUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DaftarUlangPayload>
          }
          aggregate: {
            args: Prisma.DaftarUlangAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDaftarUlang>
          }
          groupBy: {
            args: Prisma.DaftarUlangGroupByArgs<ExtArgs>
            result: $Utils.Optional<DaftarUlangGroupByOutputType>[]
          }
          count: {
            args: Prisma.DaftarUlangCountArgs<ExtArgs>
            result: $Utils.Optional<DaftarUlangCountAggregateOutputType> | number
          }
        }
      }
      Desa: {
        payload: Prisma.$DesaPayload<ExtArgs>
        fields: Prisma.DesaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DesaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DesaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          findFirst: {
            args: Prisma.DesaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DesaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          findMany: {
            args: Prisma.DesaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>[]
          }
          create: {
            args: Prisma.DesaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          createMany: {
            args: Prisma.DesaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DesaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>[]
          }
          delete: {
            args: Prisma.DesaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          update: {
            args: Prisma.DesaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          deleteMany: {
            args: Prisma.DesaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DesaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DesaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>[]
          }
          upsert: {
            args: Prisma.DesaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DesaPayload>
          }
          aggregate: {
            args: Prisma.DesaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDesa>
          }
          groupBy: {
            args: Prisma.DesaGroupByArgs<ExtArgs>
            result: $Utils.Optional<DesaGroupByOutputType>[]
          }
          count: {
            args: Prisma.DesaCountArgs<ExtArgs>
            result: $Utils.Optional<DesaCountAggregateOutputType> | number
          }
        }
      }
      EvaluasiDiri: {
        payload: Prisma.$EvaluasiDiriPayload<ExtArgs>
        fields: Prisma.EvaluasiDiriFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EvaluasiDiriFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EvaluasiDiriFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>
          }
          findFirst: {
            args: Prisma.EvaluasiDiriFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EvaluasiDiriFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>
          }
          findMany: {
            args: Prisma.EvaluasiDiriFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>[]
          }
          create: {
            args: Prisma.EvaluasiDiriCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>
          }
          createMany: {
            args: Prisma.EvaluasiDiriCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EvaluasiDiriCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>[]
          }
          delete: {
            args: Prisma.EvaluasiDiriDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>
          }
          update: {
            args: Prisma.EvaluasiDiriUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>
          }
          deleteMany: {
            args: Prisma.EvaluasiDiriDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EvaluasiDiriUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EvaluasiDiriUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>[]
          }
          upsert: {
            args: Prisma.EvaluasiDiriUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluasiDiriPayload>
          }
          aggregate: {
            args: Prisma.EvaluasiDiriAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvaluasiDiri>
          }
          groupBy: {
            args: Prisma.EvaluasiDiriGroupByArgs<ExtArgs>
            result: $Utils.Optional<EvaluasiDiriGroupByOutputType>[]
          }
          count: {
            args: Prisma.EvaluasiDiriCountArgs<ExtArgs>
            result: $Utils.Optional<EvaluasiDiriCountAggregateOutputType> | number
          }
        }
      }
      HasilAssesmen: {
        payload: Prisma.$HasilAssesmenPayload<ExtArgs>
        fields: Prisma.HasilAssesmenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HasilAssesmenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HasilAssesmenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>
          }
          findFirst: {
            args: Prisma.HasilAssesmenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HasilAssesmenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>
          }
          findMany: {
            args: Prisma.HasilAssesmenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>[]
          }
          create: {
            args: Prisma.HasilAssesmenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>
          }
          createMany: {
            args: Prisma.HasilAssesmenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HasilAssesmenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>[]
          }
          delete: {
            args: Prisma.HasilAssesmenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>
          }
          update: {
            args: Prisma.HasilAssesmenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>
          }
          deleteMany: {
            args: Prisma.HasilAssesmenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HasilAssesmenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HasilAssesmenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>[]
          }
          upsert: {
            args: Prisma.HasilAssesmenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HasilAssesmenPayload>
          }
          aggregate: {
            args: Prisma.HasilAssesmenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHasilAssesmen>
          }
          groupBy: {
            args: Prisma.HasilAssesmenGroupByArgs<ExtArgs>
            result: $Utils.Optional<HasilAssesmenGroupByOutputType>[]
          }
          count: {
            args: Prisma.HasilAssesmenCountArgs<ExtArgs>
            result: $Utils.Optional<HasilAssesmenCountAggregateOutputType> | number
          }
        }
      }
      InformasiKependudukan: {
        payload: Prisma.$InformasiKependudukanPayload<ExtArgs>
        fields: Prisma.InformasiKependudukanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InformasiKependudukanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InformasiKependudukanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>
          }
          findFirst: {
            args: Prisma.InformasiKependudukanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InformasiKependudukanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>
          }
          findMany: {
            args: Prisma.InformasiKependudukanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>[]
          }
          create: {
            args: Prisma.InformasiKependudukanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>
          }
          createMany: {
            args: Prisma.InformasiKependudukanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InformasiKependudukanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>[]
          }
          delete: {
            args: Prisma.InformasiKependudukanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>
          }
          update: {
            args: Prisma.InformasiKependudukanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>
          }
          deleteMany: {
            args: Prisma.InformasiKependudukanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InformasiKependudukanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InformasiKependudukanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>[]
          }
          upsert: {
            args: Prisma.InformasiKependudukanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InformasiKependudukanPayload>
          }
          aggregate: {
            args: Prisma.InformasiKependudukanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInformasiKependudukan>
          }
          groupBy: {
            args: Prisma.InformasiKependudukanGroupByArgs<ExtArgs>
            result: $Utils.Optional<InformasiKependudukanGroupByOutputType>[]
          }
          count: {
            args: Prisma.InformasiKependudukanCountArgs<ExtArgs>
            result: $Utils.Optional<InformasiKependudukanCountAggregateOutputType> | number
          }
        }
      }
      InstitusiLama: {
        payload: Prisma.$InstitusiLamaPayload<ExtArgs>
        fields: Prisma.InstitusiLamaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InstitusiLamaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InstitusiLamaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>
          }
          findFirst: {
            args: Prisma.InstitusiLamaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InstitusiLamaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>
          }
          findMany: {
            args: Prisma.InstitusiLamaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>[]
          }
          create: {
            args: Prisma.InstitusiLamaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>
          }
          createMany: {
            args: Prisma.InstitusiLamaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InstitusiLamaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>[]
          }
          delete: {
            args: Prisma.InstitusiLamaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>
          }
          update: {
            args: Prisma.InstitusiLamaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>
          }
          deleteMany: {
            args: Prisma.InstitusiLamaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InstitusiLamaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InstitusiLamaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>[]
          }
          upsert: {
            args: Prisma.InstitusiLamaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InstitusiLamaPayload>
          }
          aggregate: {
            args: Prisma.InstitusiLamaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInstitusiLama>
          }
          groupBy: {
            args: Prisma.InstitusiLamaGroupByArgs<ExtArgs>
            result: $Utils.Optional<InstitusiLamaGroupByOutputType>[]
          }
          count: {
            args: Prisma.InstitusiLamaCountArgs<ExtArgs>
            result: $Utils.Optional<InstitusiLamaCountAggregateOutputType> | number
          }
        }
      }
      JenisDokumen: {
        payload: Prisma.$JenisDokumenPayload<ExtArgs>
        fields: Prisma.JenisDokumenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JenisDokumenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JenisDokumenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>
          }
          findFirst: {
            args: Prisma.JenisDokumenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JenisDokumenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>
          }
          findMany: {
            args: Prisma.JenisDokumenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>[]
          }
          create: {
            args: Prisma.JenisDokumenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>
          }
          createMany: {
            args: Prisma.JenisDokumenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JenisDokumenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>[]
          }
          delete: {
            args: Prisma.JenisDokumenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>
          }
          update: {
            args: Prisma.JenisDokumenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>
          }
          deleteMany: {
            args: Prisma.JenisDokumenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JenisDokumenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JenisDokumenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>[]
          }
          upsert: {
            args: Prisma.JenisDokumenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisDokumenPayload>
          }
          aggregate: {
            args: Prisma.JenisDokumenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJenisDokumen>
          }
          groupBy: {
            args: Prisma.JenisDokumenGroupByArgs<ExtArgs>
            result: $Utils.Optional<JenisDokumenGroupByOutputType>[]
          }
          count: {
            args: Prisma.JenisDokumenCountArgs<ExtArgs>
            result: $Utils.Optional<JenisDokumenCountAggregateOutputType> | number
          }
        }
      }
      Kabupaten: {
        payload: Prisma.$KabupatenPayload<ExtArgs>
        fields: Prisma.KabupatenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KabupatenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KabupatenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          findFirst: {
            args: Prisma.KabupatenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KabupatenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          findMany: {
            args: Prisma.KabupatenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>[]
          }
          create: {
            args: Prisma.KabupatenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          createMany: {
            args: Prisma.KabupatenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.KabupatenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>[]
          }
          delete: {
            args: Prisma.KabupatenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          update: {
            args: Prisma.KabupatenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          deleteMany: {
            args: Prisma.KabupatenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KabupatenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.KabupatenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>[]
          }
          upsert: {
            args: Prisma.KabupatenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KabupatenPayload>
          }
          aggregate: {
            args: Prisma.KabupatenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKabupaten>
          }
          groupBy: {
            args: Prisma.KabupatenGroupByArgs<ExtArgs>
            result: $Utils.Optional<KabupatenGroupByOutputType>[]
          }
          count: {
            args: Prisma.KabupatenCountArgs<ExtArgs>
            result: $Utils.Optional<KabupatenCountAggregateOutputType> | number
          }
        }
      }
      Kecamatan: {
        payload: Prisma.$KecamatanPayload<ExtArgs>
        fields: Prisma.KecamatanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KecamatanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KecamatanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          findFirst: {
            args: Prisma.KecamatanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KecamatanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          findMany: {
            args: Prisma.KecamatanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>[]
          }
          create: {
            args: Prisma.KecamatanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          createMany: {
            args: Prisma.KecamatanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.KecamatanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>[]
          }
          delete: {
            args: Prisma.KecamatanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          update: {
            args: Prisma.KecamatanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          deleteMany: {
            args: Prisma.KecamatanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KecamatanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.KecamatanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>[]
          }
          upsert: {
            args: Prisma.KecamatanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KecamatanPayload>
          }
          aggregate: {
            args: Prisma.KecamatanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKecamatan>
          }
          groupBy: {
            args: Prisma.KecamatanGroupByArgs<ExtArgs>
            result: $Utils.Optional<KecamatanGroupByOutputType>[]
          }
          count: {
            args: Prisma.KecamatanCountArgs<ExtArgs>
            result: $Utils.Optional<KecamatanCountAggregateOutputType> | number
          }
        }
      }
      Mahasiswa: {
        payload: Prisma.$MahasiswaPayload<ExtArgs>
        fields: Prisma.MahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          findMany: {
            args: Prisma.MahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>[]
          }
          create: {
            args: Prisma.MahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          createMany: {
            args: Prisma.MahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          update: {
            args: Prisma.MahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswa>
          }
          groupBy: {
            args: Prisma.MahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaCountAggregateOutputType> | number
          }
        }
      }
      MahasiswaKonferensi: {
        payload: Prisma.$MahasiswaKonferensiPayload<ExtArgs>
        fields: Prisma.MahasiswaKonferensiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaKonferensiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaKonferensiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaKonferensiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaKonferensiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>
          }
          findMany: {
            args: Prisma.MahasiswaKonferensiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>[]
          }
          create: {
            args: Prisma.MahasiswaKonferensiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>
          }
          createMany: {
            args: Prisma.MahasiswaKonferensiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaKonferensiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaKonferensiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>
          }
          update: {
            args: Prisma.MahasiswaKonferensiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaKonferensiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaKonferensiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaKonferensiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaKonferensiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaKonferensiPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaKonferensiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswaKonferensi>
          }
          groupBy: {
            args: Prisma.MahasiswaKonferensiGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaKonferensiGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaKonferensiCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaKonferensiCountAggregateOutputType> | number
          }
        }
      }
      MahasiswaOrganisasiProfesi: {
        payload: Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>
        fields: Prisma.MahasiswaOrganisasiProfesiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaOrganisasiProfesiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaOrganisasiProfesiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaOrganisasiProfesiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaOrganisasiProfesiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>
          }
          findMany: {
            args: Prisma.MahasiswaOrganisasiProfesiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>[]
          }
          create: {
            args: Prisma.MahasiswaOrganisasiProfesiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>
          }
          createMany: {
            args: Prisma.MahasiswaOrganisasiProfesiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaOrganisasiProfesiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaOrganisasiProfesiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>
          }
          update: {
            args: Prisma.MahasiswaOrganisasiProfesiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaOrganisasiProfesiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaOrganisasiProfesiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaOrganisasiProfesiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaOrganisasiProfesiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaOrganisasiProfesiPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaOrganisasiProfesiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswaOrganisasiProfesi>
          }
          groupBy: {
            args: Prisma.MahasiswaOrganisasiProfesiGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaOrganisasiProfesiGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaOrganisasiProfesiCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaOrganisasiProfesiCountAggregateOutputType> | number
          }
        }
      }
      MahasiswaPelatihanProfessional: {
        payload: Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>
        fields: Prisma.MahasiswaPelatihanProfessionalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaPelatihanProfessionalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaPelatihanProfessionalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaPelatihanProfessionalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaPelatihanProfessionalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>
          }
          findMany: {
            args: Prisma.MahasiswaPelatihanProfessionalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>[]
          }
          create: {
            args: Prisma.MahasiswaPelatihanProfessionalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>
          }
          createMany: {
            args: Prisma.MahasiswaPelatihanProfessionalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaPelatihanProfessionalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaPelatihanProfessionalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>
          }
          update: {
            args: Prisma.MahasiswaPelatihanProfessionalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaPelatihanProfessionalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaPelatihanProfessionalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaPelatihanProfessionalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaPelatihanProfessionalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPelatihanProfessionalPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaPelatihanProfessionalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswaPelatihanProfessional>
          }
          groupBy: {
            args: Prisma.MahasiswaPelatihanProfessionalGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaPelatihanProfessionalGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaPelatihanProfessionalCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaPelatihanProfessionalCountAggregateOutputType> | number
          }
        }
      }
      MahasiswaPendidikan: {
        payload: Prisma.$MahasiswaPendidikanPayload<ExtArgs>
        fields: Prisma.MahasiswaPendidikanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaPendidikanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaPendidikanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaPendidikanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaPendidikanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>
          }
          findMany: {
            args: Prisma.MahasiswaPendidikanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>[]
          }
          create: {
            args: Prisma.MahasiswaPendidikanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>
          }
          createMany: {
            args: Prisma.MahasiswaPendidikanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaPendidikanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaPendidikanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>
          }
          update: {
            args: Prisma.MahasiswaPendidikanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaPendidikanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaPendidikanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaPendidikanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaPendidikanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPendidikanPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaPendidikanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswaPendidikan>
          }
          groupBy: {
            args: Prisma.MahasiswaPendidikanGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaPendidikanGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaPendidikanCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaPendidikanCountAggregateOutputType> | number
          }
        }
      }
      MahasiswaPiagam: {
        payload: Prisma.$MahasiswaPiagamPayload<ExtArgs>
        fields: Prisma.MahasiswaPiagamFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaPiagamFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaPiagamFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaPiagamFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaPiagamFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>
          }
          findMany: {
            args: Prisma.MahasiswaPiagamFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>[]
          }
          create: {
            args: Prisma.MahasiswaPiagamCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>
          }
          createMany: {
            args: Prisma.MahasiswaPiagamCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaPiagamCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaPiagamDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>
          }
          update: {
            args: Prisma.MahasiswaPiagamUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaPiagamDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaPiagamUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaPiagamUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaPiagamUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPiagamPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaPiagamAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswaPiagam>
          }
          groupBy: {
            args: Prisma.MahasiswaPiagamGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaPiagamGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaPiagamCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaPiagamCountAggregateOutputType> | number
          }
        }
      }
      MahasiswaRiwayatPekerjaan: {
        payload: Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>
        fields: Prisma.MahasiswaRiwayatPekerjaanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaRiwayatPekerjaanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaRiwayatPekerjaanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaRiwayatPekerjaanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaRiwayatPekerjaanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>
          }
          findMany: {
            args: Prisma.MahasiswaRiwayatPekerjaanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>[]
          }
          create: {
            args: Prisma.MahasiswaRiwayatPekerjaanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>
          }
          createMany: {
            args: Prisma.MahasiswaRiwayatPekerjaanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaRiwayatPekerjaanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaRiwayatPekerjaanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>
          }
          update: {
            args: Prisma.MahasiswaRiwayatPekerjaanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaRiwayatPekerjaanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaRiwayatPekerjaanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MahasiswaRiwayatPekerjaanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>[]
          }
          upsert: {
            args: Prisma.MahasiswaRiwayatPekerjaanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaRiwayatPekerjaanPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaRiwayatPekerjaanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswaRiwayatPekerjaan>
          }
          groupBy: {
            args: Prisma.MahasiswaRiwayatPekerjaanGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaRiwayatPekerjaanGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaRiwayatPekerjaanCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaRiwayatPekerjaanCountAggregateOutputType> | number
          }
        }
      }
      MataKuliah: {
        payload: Prisma.$MataKuliahPayload<ExtArgs>
        fields: Prisma.MataKuliahFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MataKuliahFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MataKuliahFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          findFirst: {
            args: Prisma.MataKuliahFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MataKuliahFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          findMany: {
            args: Prisma.MataKuliahFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>[]
          }
          create: {
            args: Prisma.MataKuliahCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          createMany: {
            args: Prisma.MataKuliahCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MataKuliahCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>[]
          }
          delete: {
            args: Prisma.MataKuliahDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          update: {
            args: Prisma.MataKuliahUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          deleteMany: {
            args: Prisma.MataKuliahDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MataKuliahUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MataKuliahUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>[]
          }
          upsert: {
            args: Prisma.MataKuliahUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          aggregate: {
            args: Prisma.MataKuliahAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMataKuliah>
          }
          groupBy: {
            args: Prisma.MataKuliahGroupByArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahGroupByOutputType>[]
          }
          count: {
            args: Prisma.MataKuliahCountArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahCountAggregateOutputType> | number
          }
        }
      }
      MataKuliahMahasiswa: {
        payload: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>
        fields: Prisma.MataKuliahMahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MataKuliahMahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MataKuliahMahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          findFirst: {
            args: Prisma.MataKuliahMahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MataKuliahMahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          findMany: {
            args: Prisma.MataKuliahMahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>[]
          }
          create: {
            args: Prisma.MataKuliahMahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          createMany: {
            args: Prisma.MataKuliahMahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MataKuliahMahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>[]
          }
          delete: {
            args: Prisma.MataKuliahMahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          update: {
            args: Prisma.MataKuliahMahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.MataKuliahMahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MataKuliahMahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MataKuliahMahasiswaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>[]
          }
          upsert: {
            args: Prisma.MataKuliahMahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          aggregate: {
            args: Prisma.MataKuliahMahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMataKuliahMahasiswa>
          }
          groupBy: {
            args: Prisma.MataKuliahMahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahMahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MataKuliahMahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahMahasiswaCountAggregateOutputType> | number
          }
        }
      }
      UserHasPermissions: {
        payload: Prisma.$UserHasPermissionsPayload<ExtArgs>
        fields: Prisma.UserHasPermissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserHasPermissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserHasPermissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>
          }
          findFirst: {
            args: Prisma.UserHasPermissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserHasPermissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>
          }
          findMany: {
            args: Prisma.UserHasPermissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>[]
          }
          create: {
            args: Prisma.UserHasPermissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>
          }
          createMany: {
            args: Prisma.UserHasPermissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserHasPermissionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>[]
          }
          delete: {
            args: Prisma.UserHasPermissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>
          }
          update: {
            args: Prisma.UserHasPermissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>
          }
          deleteMany: {
            args: Prisma.UserHasPermissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserHasPermissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserHasPermissionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>[]
          }
          upsert: {
            args: Prisma.UserHasPermissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasPermissionsPayload>
          }
          aggregate: {
            args: Prisma.UserHasPermissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserHasPermissions>
          }
          groupBy: {
            args: Prisma.UserHasPermissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserHasPermissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserHasPermissionsCountArgs<ExtArgs>
            result: $Utils.Optional<UserHasPermissionsCountAggregateOutputType> | number
          }
        }
      }
      UserHasRoles: {
        payload: Prisma.$UserHasRolesPayload<ExtArgs>
        fields: Prisma.UserHasRolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserHasRolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserHasRolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>
          }
          findFirst: {
            args: Prisma.UserHasRolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserHasRolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>
          }
          findMany: {
            args: Prisma.UserHasRolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>[]
          }
          create: {
            args: Prisma.UserHasRolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>
          }
          createMany: {
            args: Prisma.UserHasRolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserHasRolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>[]
          }
          delete: {
            args: Prisma.UserHasRolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>
          }
          update: {
            args: Prisma.UserHasRolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>
          }
          deleteMany: {
            args: Prisma.UserHasRolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserHasRolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserHasRolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>[]
          }
          upsert: {
            args: Prisma.UserHasRolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserHasRolesPayload>
          }
          aggregate: {
            args: Prisma.UserHasRolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserHasRoles>
          }
          groupBy: {
            args: Prisma.UserHasRolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserHasRolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserHasRolesCountArgs<ExtArgs>
            result: $Utils.Optional<UserHasRolesCountAggregateOutputType> | number
          }
        }
      }
      OrangTua: {
        payload: Prisma.$OrangTuaPayload<ExtArgs>
        fields: Prisma.OrangTuaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrangTuaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrangTuaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>
          }
          findFirst: {
            args: Prisma.OrangTuaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrangTuaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>
          }
          findMany: {
            args: Prisma.OrangTuaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>[]
          }
          create: {
            args: Prisma.OrangTuaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>
          }
          createMany: {
            args: Prisma.OrangTuaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrangTuaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>[]
          }
          delete: {
            args: Prisma.OrangTuaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>
          }
          update: {
            args: Prisma.OrangTuaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>
          }
          deleteMany: {
            args: Prisma.OrangTuaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrangTuaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrangTuaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>[]
          }
          upsert: {
            args: Prisma.OrangTuaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrangTuaPayload>
          }
          aggregate: {
            args: Prisma.OrangTuaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrangTua>
          }
          groupBy: {
            args: Prisma.OrangTuaGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrangTuaGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrangTuaCountArgs<ExtArgs>
            result: $Utils.Optional<OrangTuaCountAggregateOutputType> | number
          }
        }
      }
      PasswordResetTokens: {
        payload: Prisma.$PasswordResetTokensPayload<ExtArgs>
        fields: Prisma.PasswordResetTokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PasswordResetTokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PasswordResetTokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>
          }
          findFirst: {
            args: Prisma.PasswordResetTokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PasswordResetTokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>
          }
          findMany: {
            args: Prisma.PasswordResetTokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>[]
          }
          create: {
            args: Prisma.PasswordResetTokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>
          }
          createMany: {
            args: Prisma.PasswordResetTokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PasswordResetTokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>[]
          }
          delete: {
            args: Prisma.PasswordResetTokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>
          }
          update: {
            args: Prisma.PasswordResetTokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>
          }
          deleteMany: {
            args: Prisma.PasswordResetTokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PasswordResetTokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PasswordResetTokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>[]
          }
          upsert: {
            args: Prisma.PasswordResetTokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PasswordResetTokensPayload>
          }
          aggregate: {
            args: Prisma.PasswordResetTokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePasswordResetTokens>
          }
          groupBy: {
            args: Prisma.PasswordResetTokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.PasswordResetTokensCountArgs<ExtArgs>
            result: $Utils.Optional<PasswordResetTokensCountAggregateOutputType> | number
          }
        }
      }
      PekerjaanMahasiswa: {
        payload: Prisma.$PekerjaanMahasiswaPayload<ExtArgs>
        fields: Prisma.PekerjaanMahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PekerjaanMahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PekerjaanMahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>
          }
          findFirst: {
            args: Prisma.PekerjaanMahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PekerjaanMahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>
          }
          findMany: {
            args: Prisma.PekerjaanMahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>[]
          }
          create: {
            args: Prisma.PekerjaanMahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>
          }
          createMany: {
            args: Prisma.PekerjaanMahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PekerjaanMahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>[]
          }
          delete: {
            args: Prisma.PekerjaanMahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>
          }
          update: {
            args: Prisma.PekerjaanMahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.PekerjaanMahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PekerjaanMahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PekerjaanMahasiswaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>[]
          }
          upsert: {
            args: Prisma.PekerjaanMahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PekerjaanMahasiswaPayload>
          }
          aggregate: {
            args: Prisma.PekerjaanMahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePekerjaanMahasiswa>
          }
          groupBy: {
            args: Prisma.PekerjaanMahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PekerjaanMahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PekerjaanMahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<PekerjaanMahasiswaCountAggregateOutputType> | number
          }
        }
      }
      Pendaftaran: {
        payload: Prisma.$PendaftaranPayload<ExtArgs>
        fields: Prisma.PendaftaranFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PendaftaranFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PendaftaranFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>
          }
          findFirst: {
            args: Prisma.PendaftaranFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PendaftaranFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>
          }
          findMany: {
            args: Prisma.PendaftaranFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>[]
          }
          create: {
            args: Prisma.PendaftaranCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>
          }
          createMany: {
            args: Prisma.PendaftaranCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PendaftaranCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>[]
          }
          delete: {
            args: Prisma.PendaftaranDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>
          }
          update: {
            args: Prisma.PendaftaranUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>
          }
          deleteMany: {
            args: Prisma.PendaftaranDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PendaftaranUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PendaftaranUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>[]
          }
          upsert: {
            args: Prisma.PendaftaranUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendaftaranPayload>
          }
          aggregate: {
            args: Prisma.PendaftaranAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePendaftaran>
          }
          groupBy: {
            args: Prisma.PendaftaranGroupByArgs<ExtArgs>
            result: $Utils.Optional<PendaftaranGroupByOutputType>[]
          }
          count: {
            args: Prisma.PendaftaranCountArgs<ExtArgs>
            result: $Utils.Optional<PendaftaranCountAggregateOutputType> | number
          }
        }
      }
      Permission: {
        payload: Prisma.$PermissionPayload<ExtArgs>
        fields: Prisma.PermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findFirst: {
            args: Prisma.PermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findMany: {
            args: Prisma.PermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          create: {
            args: Prisma.PermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          createMany: {
            args: Prisma.PermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          delete: {
            args: Prisma.PermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          update: {
            args: Prisma.PermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          deleteMany: {
            args: Prisma.PermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          upsert: {
            args: Prisma.PermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.PermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      Pesantren: {
        payload: Prisma.$PesantrenPayload<ExtArgs>
        fields: Prisma.PesantrenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PesantrenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PesantrenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>
          }
          findFirst: {
            args: Prisma.PesantrenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PesantrenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>
          }
          findMany: {
            args: Prisma.PesantrenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>[]
          }
          create: {
            args: Prisma.PesantrenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>
          }
          createMany: {
            args: Prisma.PesantrenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PesantrenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>[]
          }
          delete: {
            args: Prisma.PesantrenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>
          }
          update: {
            args: Prisma.PesantrenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>
          }
          deleteMany: {
            args: Prisma.PesantrenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PesantrenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PesantrenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>[]
          }
          upsert: {
            args: Prisma.PesantrenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PesantrenPayload>
          }
          aggregate: {
            args: Prisma.PesantrenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePesantren>
          }
          groupBy: {
            args: Prisma.PesantrenGroupByArgs<ExtArgs>
            result: $Utils.Optional<PesantrenGroupByOutputType>[]
          }
          count: {
            args: Prisma.PesantrenCountArgs<ExtArgs>
            result: $Utils.Optional<PesantrenCountAggregateOutputType> | number
          }
        }
      }
      ProgramStudi: {
        payload: Prisma.$ProgramStudiPayload<ExtArgs>
        fields: Prisma.ProgramStudiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProgramStudiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProgramStudiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>
          }
          findFirst: {
            args: Prisma.ProgramStudiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProgramStudiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>
          }
          findMany: {
            args: Prisma.ProgramStudiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>[]
          }
          create: {
            args: Prisma.ProgramStudiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>
          }
          createMany: {
            args: Prisma.ProgramStudiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProgramStudiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>[]
          }
          delete: {
            args: Prisma.ProgramStudiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>
          }
          update: {
            args: Prisma.ProgramStudiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>
          }
          deleteMany: {
            args: Prisma.ProgramStudiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProgramStudiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProgramStudiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>[]
          }
          upsert: {
            args: Prisma.ProgramStudiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramStudiPayload>
          }
          aggregate: {
            args: Prisma.ProgramStudiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProgramStudi>
          }
          groupBy: {
            args: Prisma.ProgramStudiGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProgramStudiGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProgramStudiCountArgs<ExtArgs>
            result: $Utils.Optional<ProgramStudiCountAggregateOutputType> | number
          }
        }
      }
      Provinsi: {
        payload: Prisma.$ProvinsiPayload<ExtArgs>
        fields: Prisma.ProvinsiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProvinsiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProvinsiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          findFirst: {
            args: Prisma.ProvinsiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProvinsiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          findMany: {
            args: Prisma.ProvinsiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>[]
          }
          create: {
            args: Prisma.ProvinsiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          createMany: {
            args: Prisma.ProvinsiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProvinsiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>[]
          }
          delete: {
            args: Prisma.ProvinsiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          update: {
            args: Prisma.ProvinsiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          deleteMany: {
            args: Prisma.ProvinsiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProvinsiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProvinsiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>[]
          }
          upsert: {
            args: Prisma.ProvinsiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProvinsiPayload>
          }
          aggregate: {
            args: Prisma.ProvinsiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvinsi>
          }
          groupBy: {
            args: Prisma.ProvinsiGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProvinsiGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProvinsiCountArgs<ExtArgs>
            result: $Utils.Optional<ProvinsiCountAggregateOutputType> | number
          }
        }
      }
      RoleHasPermissions: {
        payload: Prisma.$RoleHasPermissionsPayload<ExtArgs>
        fields: Prisma.RoleHasPermissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleHasPermissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleHasPermissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>
          }
          findFirst: {
            args: Prisma.RoleHasPermissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleHasPermissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>
          }
          findMany: {
            args: Prisma.RoleHasPermissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>[]
          }
          create: {
            args: Prisma.RoleHasPermissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>
          }
          createMany: {
            args: Prisma.RoleHasPermissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleHasPermissionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>[]
          }
          delete: {
            args: Prisma.RoleHasPermissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>
          }
          update: {
            args: Prisma.RoleHasPermissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>
          }
          deleteMany: {
            args: Prisma.RoleHasPermissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleHasPermissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleHasPermissionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>[]
          }
          upsert: {
            args: Prisma.RoleHasPermissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleHasPermissionsPayload>
          }
          aggregate: {
            args: Prisma.RoleHasPermissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoleHasPermissions>
          }
          groupBy: {
            args: Prisma.RoleHasPermissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleHasPermissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleHasPermissionsCountArgs<ExtArgs>
            result: $Utils.Optional<RoleHasPermissionsCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      SanggahanAssesmen: {
        payload: Prisma.$SanggahanAssesmenPayload<ExtArgs>
        fields: Prisma.SanggahanAssesmenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SanggahanAssesmenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SanggahanAssesmenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>
          }
          findFirst: {
            args: Prisma.SanggahanAssesmenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SanggahanAssesmenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>
          }
          findMany: {
            args: Prisma.SanggahanAssesmenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>[]
          }
          create: {
            args: Prisma.SanggahanAssesmenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>
          }
          createMany: {
            args: Prisma.SanggahanAssesmenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SanggahanAssesmenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>[]
          }
          delete: {
            args: Prisma.SanggahanAssesmenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>
          }
          update: {
            args: Prisma.SanggahanAssesmenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>
          }
          deleteMany: {
            args: Prisma.SanggahanAssesmenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SanggahanAssesmenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SanggahanAssesmenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>[]
          }
          upsert: {
            args: Prisma.SanggahanAssesmenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPayload>
          }
          aggregate: {
            args: Prisma.SanggahanAssesmenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSanggahanAssesmen>
          }
          groupBy: {
            args: Prisma.SanggahanAssesmenGroupByArgs<ExtArgs>
            result: $Utils.Optional<SanggahanAssesmenGroupByOutputType>[]
          }
          count: {
            args: Prisma.SanggahanAssesmenCountArgs<ExtArgs>
            result: $Utils.Optional<SanggahanAssesmenCountAggregateOutputType> | number
          }
        }
      }
      SanggahanAssesmenMk: {
        payload: Prisma.$SanggahanAssesmenMkPayload<ExtArgs>
        fields: Prisma.SanggahanAssesmenMkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SanggahanAssesmenMkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SanggahanAssesmenMkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>
          }
          findFirst: {
            args: Prisma.SanggahanAssesmenMkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SanggahanAssesmenMkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>
          }
          findMany: {
            args: Prisma.SanggahanAssesmenMkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>[]
          }
          create: {
            args: Prisma.SanggahanAssesmenMkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>
          }
          createMany: {
            args: Prisma.SanggahanAssesmenMkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SanggahanAssesmenMkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>[]
          }
          delete: {
            args: Prisma.SanggahanAssesmenMkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>
          }
          update: {
            args: Prisma.SanggahanAssesmenMkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>
          }
          deleteMany: {
            args: Prisma.SanggahanAssesmenMkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SanggahanAssesmenMkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SanggahanAssesmenMkUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>[]
          }
          upsert: {
            args: Prisma.SanggahanAssesmenMkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenMkPayload>
          }
          aggregate: {
            args: Prisma.SanggahanAssesmenMkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSanggahanAssesmenMk>
          }
          groupBy: {
            args: Prisma.SanggahanAssesmenMkGroupByArgs<ExtArgs>
            result: $Utils.Optional<SanggahanAssesmenMkGroupByOutputType>[]
          }
          count: {
            args: Prisma.SanggahanAssesmenMkCountArgs<ExtArgs>
            result: $Utils.Optional<SanggahanAssesmenMkCountAggregateOutputType> | number
          }
        }
      }
      SanggahanAssesmenPihak: {
        payload: Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>
        fields: Prisma.SanggahanAssesmenPihakFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SanggahanAssesmenPihakFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SanggahanAssesmenPihakFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>
          }
          findFirst: {
            args: Prisma.SanggahanAssesmenPihakFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SanggahanAssesmenPihakFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>
          }
          findMany: {
            args: Prisma.SanggahanAssesmenPihakFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>[]
          }
          create: {
            args: Prisma.SanggahanAssesmenPihakCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>
          }
          createMany: {
            args: Prisma.SanggahanAssesmenPihakCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SanggahanAssesmenPihakCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>[]
          }
          delete: {
            args: Prisma.SanggahanAssesmenPihakDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>
          }
          update: {
            args: Prisma.SanggahanAssesmenPihakUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>
          }
          deleteMany: {
            args: Prisma.SanggahanAssesmenPihakDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SanggahanAssesmenPihakUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SanggahanAssesmenPihakUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>[]
          }
          upsert: {
            args: Prisma.SanggahanAssesmenPihakUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SanggahanAssesmenPihakPayload>
          }
          aggregate: {
            args: Prisma.SanggahanAssesmenPihakAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSanggahanAssesmenPihak>
          }
          groupBy: {
            args: Prisma.SanggahanAssesmenPihakGroupByArgs<ExtArgs>
            result: $Utils.Optional<SanggahanAssesmenPihakGroupByOutputType>[]
          }
          count: {
            args: Prisma.SanggahanAssesmenPihakCountArgs<ExtArgs>
            result: $Utils.Optional<SanggahanAssesmenPihakCountAggregateOutputType> | number
          }
        }
      }
      SkRektor: {
        payload: Prisma.$SkRektorPayload<ExtArgs>
        fields: Prisma.SkRektorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SkRektorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SkRektorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>
          }
          findFirst: {
            args: Prisma.SkRektorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SkRektorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>
          }
          findMany: {
            args: Prisma.SkRektorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>[]
          }
          create: {
            args: Prisma.SkRektorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>
          }
          createMany: {
            args: Prisma.SkRektorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SkRektorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>[]
          }
          delete: {
            args: Prisma.SkRektorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>
          }
          update: {
            args: Prisma.SkRektorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>
          }
          deleteMany: {
            args: Prisma.SkRektorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SkRektorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SkRektorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>[]
          }
          upsert: {
            args: Prisma.SkRektorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorPayload>
          }
          aggregate: {
            args: Prisma.SkRektorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkRektor>
          }
          groupBy: {
            args: Prisma.SkRektorGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkRektorGroupByOutputType>[]
          }
          count: {
            args: Prisma.SkRektorCountArgs<ExtArgs>
            result: $Utils.Optional<SkRektorCountAggregateOutputType> | number
          }
        }
      }
      SkRektorAssesor: {
        payload: Prisma.$SkRektorAssesorPayload<ExtArgs>
        fields: Prisma.SkRektorAssesorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SkRektorAssesorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SkRektorAssesorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>
          }
          findFirst: {
            args: Prisma.SkRektorAssesorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SkRektorAssesorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>
          }
          findMany: {
            args: Prisma.SkRektorAssesorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>[]
          }
          create: {
            args: Prisma.SkRektorAssesorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>
          }
          createMany: {
            args: Prisma.SkRektorAssesorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SkRektorAssesorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>[]
          }
          delete: {
            args: Prisma.SkRektorAssesorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>
          }
          update: {
            args: Prisma.SkRektorAssesorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>
          }
          deleteMany: {
            args: Prisma.SkRektorAssesorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SkRektorAssesorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SkRektorAssesorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>[]
          }
          upsert: {
            args: Prisma.SkRektorAssesorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorAssesorPayload>
          }
          aggregate: {
            args: Prisma.SkRektorAssesorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkRektorAssesor>
          }
          groupBy: {
            args: Prisma.SkRektorAssesorGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkRektorAssesorGroupByOutputType>[]
          }
          count: {
            args: Prisma.SkRektorAssesorCountArgs<ExtArgs>
            result: $Utils.Optional<SkRektorAssesorCountAggregateOutputType> | number
          }
        }
      }
      SkRektorMahasiswa: {
        payload: Prisma.$SkRektorMahasiswaPayload<ExtArgs>
        fields: Prisma.SkRektorMahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SkRektorMahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SkRektorMahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>
          }
          findFirst: {
            args: Prisma.SkRektorMahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SkRektorMahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>
          }
          findMany: {
            args: Prisma.SkRektorMahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>[]
          }
          create: {
            args: Prisma.SkRektorMahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>
          }
          createMany: {
            args: Prisma.SkRektorMahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SkRektorMahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>[]
          }
          delete: {
            args: Prisma.SkRektorMahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>
          }
          update: {
            args: Prisma.SkRektorMahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.SkRektorMahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SkRektorMahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SkRektorMahasiswaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>[]
          }
          upsert: {
            args: Prisma.SkRektorMahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkRektorMahasiswaPayload>
          }
          aggregate: {
            args: Prisma.SkRektorMahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkRektorMahasiswa>
          }
          groupBy: {
            args: Prisma.SkRektorMahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkRektorMahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.SkRektorMahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<SkRektorMahasiswaCountAggregateOutputType> | number
          }
        }
      }
      SkorAssesmen: {
        payload: Prisma.$SkorAssesmenPayload<ExtArgs>
        fields: Prisma.SkorAssesmenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SkorAssesmenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SkorAssesmenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>
          }
          findFirst: {
            args: Prisma.SkorAssesmenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SkorAssesmenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>
          }
          findMany: {
            args: Prisma.SkorAssesmenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>[]
          }
          create: {
            args: Prisma.SkorAssesmenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>
          }
          createMany: {
            args: Prisma.SkorAssesmenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SkorAssesmenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>[]
          }
          delete: {
            args: Prisma.SkorAssesmenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>
          }
          update: {
            args: Prisma.SkorAssesmenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>
          }
          deleteMany: {
            args: Prisma.SkorAssesmenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SkorAssesmenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SkorAssesmenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>[]
          }
          upsert: {
            args: Prisma.SkorAssesmenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SkorAssesmenPayload>
          }
          aggregate: {
            args: Prisma.SkorAssesmenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSkorAssesmen>
          }
          groupBy: {
            args: Prisma.SkorAssesmenGroupByArgs<ExtArgs>
            result: $Utils.Optional<SkorAssesmenGroupByOutputType>[]
          }
          count: {
            args: Prisma.SkorAssesmenCountArgs<ExtArgs>
            result: $Utils.Optional<SkorAssesmenCountAggregateOutputType> | number
          }
        }
      }
      StatusMahasiswaAssesment: {
        payload: Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>
        fields: Prisma.StatusMahasiswaAssesmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StatusMahasiswaAssesmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StatusMahasiswaAssesmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>
          }
          findFirst: {
            args: Prisma.StatusMahasiswaAssesmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StatusMahasiswaAssesmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>
          }
          findMany: {
            args: Prisma.StatusMahasiswaAssesmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>[]
          }
          create: {
            args: Prisma.StatusMahasiswaAssesmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>
          }
          createMany: {
            args: Prisma.StatusMahasiswaAssesmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StatusMahasiswaAssesmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>[]
          }
          delete: {
            args: Prisma.StatusMahasiswaAssesmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>
          }
          update: {
            args: Prisma.StatusMahasiswaAssesmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>
          }
          deleteMany: {
            args: Prisma.StatusMahasiswaAssesmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StatusMahasiswaAssesmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StatusMahasiswaAssesmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>[]
          }
          upsert: {
            args: Prisma.StatusMahasiswaAssesmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentPayload>
          }
          aggregate: {
            args: Prisma.StatusMahasiswaAssesmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStatusMahasiswaAssesment>
          }
          groupBy: {
            args: Prisma.StatusMahasiswaAssesmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<StatusMahasiswaAssesmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.StatusMahasiswaAssesmentCountArgs<ExtArgs>
            result: $Utils.Optional<StatusMahasiswaAssesmentCountAggregateOutputType> | number
          }
        }
      }
      StatusMahasiswaAssesmentHistory: {
        payload: Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>
        fields: Prisma.StatusMahasiswaAssesmentHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StatusMahasiswaAssesmentHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StatusMahasiswaAssesmentHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
          }
          findFirst: {
            args: Prisma.StatusMahasiswaAssesmentHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StatusMahasiswaAssesmentHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
          }
          findMany: {
            args: Prisma.StatusMahasiswaAssesmentHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>[]
          }
          create: {
            args: Prisma.StatusMahasiswaAssesmentHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
          }
          createMany: {
            args: Prisma.StatusMahasiswaAssesmentHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StatusMahasiswaAssesmentHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>[]
          }
          delete: {
            args: Prisma.StatusMahasiswaAssesmentHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
          }
          update: {
            args: Prisma.StatusMahasiswaAssesmentHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
          }
          deleteMany: {
            args: Prisma.StatusMahasiswaAssesmentHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StatusMahasiswaAssesmentHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StatusMahasiswaAssesmentHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>[]
          }
          upsert: {
            args: Prisma.StatusMahasiswaAssesmentHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload>
          }
          aggregate: {
            args: Prisma.StatusMahasiswaAssesmentHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStatusMahasiswaAssesmentHistory>
          }
          groupBy: {
            args: Prisma.StatusMahasiswaAssesmentHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<StatusMahasiswaAssesmentHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.StatusMahasiswaAssesmentHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<StatusMahasiswaAssesmentHistoryCountAggregateOutputType> | number
          }
        }
      }
      TipeAsesor: {
        payload: Prisma.$TipeAsesorPayload<ExtArgs>
        fields: Prisma.TipeAsesorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TipeAsesorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TipeAsesorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>
          }
          findFirst: {
            args: Prisma.TipeAsesorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TipeAsesorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>
          }
          findMany: {
            args: Prisma.TipeAsesorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>[]
          }
          create: {
            args: Prisma.TipeAsesorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>
          }
          createMany: {
            args: Prisma.TipeAsesorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TipeAsesorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>[]
          }
          delete: {
            args: Prisma.TipeAsesorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>
          }
          update: {
            args: Prisma.TipeAsesorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>
          }
          deleteMany: {
            args: Prisma.TipeAsesorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TipeAsesorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TipeAsesorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>[]
          }
          upsert: {
            args: Prisma.TipeAsesorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TipeAsesorPayload>
          }
          aggregate: {
            args: Prisma.TipeAsesorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipeAsesor>
          }
          groupBy: {
            args: Prisma.TipeAsesorGroupByArgs<ExtArgs>
            result: $Utils.Optional<TipeAsesorGroupByOutputType>[]
          }
          count: {
            args: Prisma.TipeAsesorCountArgs<ExtArgs>
            result: $Utils.Optional<TipeAsesorCountAggregateOutputType> | number
          }
        }
      }
      University: {
        payload: Prisma.$UniversityPayload<ExtArgs>
        fields: Prisma.UniversityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          findFirst: {
            args: Prisma.UniversityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          findMany: {
            args: Prisma.UniversityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>[]
          }
          create: {
            args: Prisma.UniversityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          createMany: {
            args: Prisma.UniversityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>[]
          }
          delete: {
            args: Prisma.UniversityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          update: {
            args: Prisma.UniversityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          deleteMany: {
            args: Prisma.UniversityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>[]
          }
          upsert: {
            args: Prisma.UniversityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          aggregate: {
            args: Prisma.UniversityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversity>
          }
          groupBy: {
            args: Prisma.UniversityGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversityGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversityCountArgs<ExtArgs>
            result: $Utils.Optional<UniversityCountAggregateOutputType> | number
          }
        }
      }
      UniversitySosialMedia: {
        payload: Prisma.$UniversitySosialMediaPayload<ExtArgs>
        fields: Prisma.UniversitySosialMediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversitySosialMediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversitySosialMediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>
          }
          findFirst: {
            args: Prisma.UniversitySosialMediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversitySosialMediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>
          }
          findMany: {
            args: Prisma.UniversitySosialMediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>[]
          }
          create: {
            args: Prisma.UniversitySosialMediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>
          }
          createMany: {
            args: Prisma.UniversitySosialMediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversitySosialMediaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>[]
          }
          delete: {
            args: Prisma.UniversitySosialMediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>
          }
          update: {
            args: Prisma.UniversitySosialMediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>
          }
          deleteMany: {
            args: Prisma.UniversitySosialMediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversitySosialMediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversitySosialMediaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>[]
          }
          upsert: {
            args: Prisma.UniversitySosialMediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversitySosialMediaPayload>
          }
          aggregate: {
            args: Prisma.UniversitySosialMediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversitySosialMedia>
          }
          groupBy: {
            args: Prisma.UniversitySosialMediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversitySosialMediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversitySosialMediaCountArgs<ExtArgs>
            result: $Utils.Optional<UniversitySosialMediaCountAggregateOutputType> | number
          }
        }
      }
      UniversityInformasi: {
        payload: Prisma.$UniversityInformasiPayload<ExtArgs>
        fields: Prisma.UniversityInformasiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversityInformasiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversityInformasiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>
          }
          findFirst: {
            args: Prisma.UniversityInformasiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversityInformasiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>
          }
          findMany: {
            args: Prisma.UniversityInformasiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>[]
          }
          create: {
            args: Prisma.UniversityInformasiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>
          }
          createMany: {
            args: Prisma.UniversityInformasiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversityInformasiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>[]
          }
          delete: {
            args: Prisma.UniversityInformasiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>
          }
          update: {
            args: Prisma.UniversityInformasiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>
          }
          deleteMany: {
            args: Prisma.UniversityInformasiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversityInformasiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversityInformasiUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>[]
          }
          upsert: {
            args: Prisma.UniversityInformasiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityInformasiPayload>
          }
          aggregate: {
            args: Prisma.UniversityInformasiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversityInformasi>
          }
          groupBy: {
            args: Prisma.UniversityInformasiGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversityInformasiGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversityInformasiCountArgs<ExtArgs>
            result: $Utils.Optional<UniversityInformasiCountAggregateOutputType> | number
          }
        }
      }
      UniversityJabatan: {
        payload: Prisma.$UniversityJabatanPayload<ExtArgs>
        fields: Prisma.UniversityJabatanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversityJabatanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversityJabatanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>
          }
          findFirst: {
            args: Prisma.UniversityJabatanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversityJabatanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>
          }
          findMany: {
            args: Prisma.UniversityJabatanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>[]
          }
          create: {
            args: Prisma.UniversityJabatanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>
          }
          createMany: {
            args: Prisma.UniversityJabatanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversityJabatanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>[]
          }
          delete: {
            args: Prisma.UniversityJabatanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>
          }
          update: {
            args: Prisma.UniversityJabatanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>
          }
          deleteMany: {
            args: Prisma.UniversityJabatanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversityJabatanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversityJabatanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>[]
          }
          upsert: {
            args: Prisma.UniversityJabatanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanPayload>
          }
          aggregate: {
            args: Prisma.UniversityJabatanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversityJabatan>
          }
          groupBy: {
            args: Prisma.UniversityJabatanGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversityJabatanGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversityJabatanCountArgs<ExtArgs>
            result: $Utils.Optional<UniversityJabatanCountAggregateOutputType> | number
          }
        }
      }
      UniversityJabatanOrang: {
        payload: Prisma.$UniversityJabatanOrangPayload<ExtArgs>
        fields: Prisma.UniversityJabatanOrangFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversityJabatanOrangFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversityJabatanOrangFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>
          }
          findFirst: {
            args: Prisma.UniversityJabatanOrangFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversityJabatanOrangFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>
          }
          findMany: {
            args: Prisma.UniversityJabatanOrangFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>[]
          }
          create: {
            args: Prisma.UniversityJabatanOrangCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>
          }
          createMany: {
            args: Prisma.UniversityJabatanOrangCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversityJabatanOrangCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>[]
          }
          delete: {
            args: Prisma.UniversityJabatanOrangDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>
          }
          update: {
            args: Prisma.UniversityJabatanOrangUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>
          }
          deleteMany: {
            args: Prisma.UniversityJabatanOrangDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversityJabatanOrangUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversityJabatanOrangUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>[]
          }
          upsert: {
            args: Prisma.UniversityJabatanOrangUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityJabatanOrangPayload>
          }
          aggregate: {
            args: Prisma.UniversityJabatanOrangAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversityJabatanOrang>
          }
          groupBy: {
            args: Prisma.UniversityJabatanOrangGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversityJabatanOrangGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversityJabatanOrangCountArgs<ExtArgs>
            result: $Utils.Optional<UniversityJabatanOrangCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Userlogin: {
        payload: Prisma.$UserloginPayload<ExtArgs>
        fields: Prisma.UserloginFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserloginFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserloginFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>
          }
          findFirst: {
            args: Prisma.UserloginFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserloginFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>
          }
          findMany: {
            args: Prisma.UserloginFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>[]
          }
          create: {
            args: Prisma.UserloginCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>
          }
          createMany: {
            args: Prisma.UserloginCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserloginCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>[]
          }
          delete: {
            args: Prisma.UserloginDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>
          }
          update: {
            args: Prisma.UserloginUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>
          }
          deleteMany: {
            args: Prisma.UserloginDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserloginUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserloginUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>[]
          }
          upsert: {
            args: Prisma.UserloginUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserloginPayload>
          }
          aggregate: {
            args: Prisma.UserloginAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserlogin>
          }
          groupBy: {
            args: Prisma.UserloginGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserloginGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserloginCountArgs<ExtArgs>
            result: $Utils.Optional<UserloginCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    alamat?: AlamatOmit
    asesor?: AsesorOmit
    asesorAkademik?: AsesorAkademikOmit
    asesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiOmit
    asesorPraktisi?: AsesorPraktisiOmit
    assesorMahasiswa?: AssesorMahasiswaOmit
    buktiForm?: BuktiFormOmit
    buktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriOmit
    capaianPembelajaran?: CapaianPembelajaranOmit
    country?: CountryOmit
    daftarUlang?: DaftarUlangOmit
    desa?: DesaOmit
    evaluasiDiri?: EvaluasiDiriOmit
    hasilAssesmen?: HasilAssesmenOmit
    informasiKependudukan?: InformasiKependudukanOmit
    institusiLama?: InstitusiLamaOmit
    jenisDokumen?: JenisDokumenOmit
    kabupaten?: KabupatenOmit
    kecamatan?: KecamatanOmit
    mahasiswa?: MahasiswaOmit
    mahasiswaKonferensi?: MahasiswaKonferensiOmit
    mahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiOmit
    mahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalOmit
    mahasiswaPendidikan?: MahasiswaPendidikanOmit
    mahasiswaPiagam?: MahasiswaPiagamOmit
    mahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanOmit
    mataKuliah?: MataKuliahOmit
    mataKuliahMahasiswa?: MataKuliahMahasiswaOmit
    userHasPermissions?: UserHasPermissionsOmit
    userHasRoles?: UserHasRolesOmit
    orangTua?: OrangTuaOmit
    passwordResetTokens?: PasswordResetTokensOmit
    pekerjaanMahasiswa?: PekerjaanMahasiswaOmit
    pendaftaran?: PendaftaranOmit
    permission?: PermissionOmit
    pesantren?: PesantrenOmit
    programStudi?: ProgramStudiOmit
    provinsi?: ProvinsiOmit
    roleHasPermissions?: RoleHasPermissionsOmit
    role?: RoleOmit
    sanggahanAssesmen?: SanggahanAssesmenOmit
    sanggahanAssesmenMk?: SanggahanAssesmenMkOmit
    sanggahanAssesmenPihak?: SanggahanAssesmenPihakOmit
    skRektor?: SkRektorOmit
    skRektorAssesor?: SkRektorAssesorOmit
    skRektorMahasiswa?: SkRektorMahasiswaOmit
    skorAssesmen?: SkorAssesmenOmit
    statusMahasiswaAssesment?: StatusMahasiswaAssesmentOmit
    statusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryOmit
    tipeAsesor?: TipeAsesorOmit
    university?: UniversityOmit
    universitySosialMedia?: UniversitySosialMediaOmit
    universityInformasi?: UniversityInformasiOmit
    universityJabatan?: UniversityJabatanOmit
    universityJabatanOrang?: UniversityJabatanOrangOmit
    user?: UserOmit
    userlogin?: UserloginOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AlamatCountOutputType
   */

  export type AlamatCountOutputType = {
    InstitusiLama: number
    University: number
    User: number
  }

  export type AlamatCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    InstitusiLama?: boolean | AlamatCountOutputTypeCountInstitusiLamaArgs
    University?: boolean | AlamatCountOutputTypeCountUniversityArgs
    User?: boolean | AlamatCountOutputTypeCountUserArgs
  }

  // Custom InputTypes
  /**
   * AlamatCountOutputType without action
   */
  export type AlamatCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlamatCountOutputType
     */
    select?: AlamatCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AlamatCountOutputType without action
   */
  export type AlamatCountOutputTypeCountInstitusiLamaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InstitusiLamaWhereInput
  }

  /**
   * AlamatCountOutputType without action
   */
  export type AlamatCountOutputTypeCountUniversityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityWhereInput
  }

  /**
   * AlamatCountOutputType without action
   */
  export type AlamatCountOutputTypeCountUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type AsesorCountOutputType
   */

  export type AsesorCountOutputType = {
    AsesorAkademik: number
    AsesorPraktisi: number
    AssesorMahasiswa: number
  }

  export type AsesorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AsesorAkademik?: boolean | AsesorCountOutputTypeCountAsesorAkademikArgs
    AsesorPraktisi?: boolean | AsesorCountOutputTypeCountAsesorPraktisiArgs
    AssesorMahasiswa?: boolean | AsesorCountOutputTypeCountAssesorMahasiswaArgs
  }

  // Custom InputTypes
  /**
   * AsesorCountOutputType without action
   */
  export type AsesorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorCountOutputType
     */
    select?: AsesorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AsesorCountOutputType without action
   */
  export type AsesorCountOutputTypeCountAsesorAkademikArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorAkademikWhereInput
  }

  /**
   * AsesorCountOutputType without action
   */
  export type AsesorCountOutputTypeCountAsesorPraktisiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorPraktisiWhereInput
  }

  /**
   * AsesorCountOutputType without action
   */
  export type AsesorCountOutputTypeCountAssesorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssesorMahasiswaWhereInput
  }


  /**
   * Count Type AsesorAkademikCountOutputType
   */

  export type AsesorAkademikCountOutputType = {
    AsesorAkademikKeanggotaanAsosiasi: number
  }

  export type AsesorAkademikCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AsesorAkademikKeanggotaanAsosiasi?: boolean | AsesorAkademikCountOutputTypeCountAsesorAkademikKeanggotaanAsosiasiArgs
  }

  // Custom InputTypes
  /**
   * AsesorAkademikCountOutputType without action
   */
  export type AsesorAkademikCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikCountOutputType
     */
    select?: AsesorAkademikCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AsesorAkademikCountOutputType without action
   */
  export type AsesorAkademikCountOutputTypeCountAsesorAkademikKeanggotaanAsosiasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
  }


  /**
   * Count Type AssesorMahasiswaCountOutputType
   */

  export type AssesorMahasiswaCountOutputType = {
    SkRektorAssesor: number
  }

  export type AssesorMahasiswaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektorAssesor?: boolean | AssesorMahasiswaCountOutputTypeCountSkRektorAssesorArgs
  }

  // Custom InputTypes
  /**
   * AssesorMahasiswaCountOutputType without action
   */
  export type AssesorMahasiswaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswaCountOutputType
     */
    select?: AssesorMahasiswaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AssesorMahasiswaCountOutputType without action
   */
  export type AssesorMahasiswaCountOutputTypeCountSkRektorAssesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorAssesorWhereInput
  }


  /**
   * Count Type BuktiFormCountOutputType
   */

  export type BuktiFormCountOutputType = {
    BuktiFormEvaluasiDiri: number
  }

  export type BuktiFormCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiFormEvaluasiDiri?: boolean | BuktiFormCountOutputTypeCountBuktiFormEvaluasiDiriArgs
  }

  // Custom InputTypes
  /**
   * BuktiFormCountOutputType without action
   */
  export type BuktiFormCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormCountOutputType
     */
    select?: BuktiFormCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BuktiFormCountOutputType without action
   */
  export type BuktiFormCountOutputTypeCountBuktiFormEvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuktiFormEvaluasiDiriWhereInput
  }


  /**
   * Count Type CapaianPembelajaranCountOutputType
   */

  export type CapaianPembelajaranCountOutputType = {
    EvaluasiDiri: number
  }

  export type CapaianPembelajaranCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EvaluasiDiri?: boolean | CapaianPembelajaranCountOutputTypeCountEvaluasiDiriArgs
  }

  // Custom InputTypes
  /**
   * CapaianPembelajaranCountOutputType without action
   */
  export type CapaianPembelajaranCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaranCountOutputType
     */
    select?: CapaianPembelajaranCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CapaianPembelajaranCountOutputType without action
   */
  export type CapaianPembelajaranCountOutputTypeCountEvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluasiDiriWhereInput
  }


  /**
   * Count Type CountryCountOutputType
   */

  export type CountryCountOutputType = {
    Provinsi: number
  }

  export type CountryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Provinsi?: boolean | CountryCountOutputTypeCountProvinsiArgs
  }

  // Custom InputTypes
  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CountryCountOutputType
     */
    select?: CountryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CountryCountOutputType without action
   */
  export type CountryCountOutputTypeCountProvinsiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinsiWhereInput
  }


  /**
   * Count Type DesaCountOutputType
   */

  export type DesaCountOutputType = {
    Alamat: number
  }

  export type DesaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | DesaCountOutputTypeCountAlamatArgs
  }

  // Custom InputTypes
  /**
   * DesaCountOutputType without action
   */
  export type DesaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DesaCountOutputType
     */
    select?: DesaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DesaCountOutputType without action
   */
  export type DesaCountOutputTypeCountAlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
  }


  /**
   * Count Type EvaluasiDiriCountOutputType
   */

  export type EvaluasiDiriCountOutputType = {
    BuktiFormEvaluasiDiri: number
    HasilAssesmen: number
  }

  export type EvaluasiDiriCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiFormEvaluasiDiri?: boolean | EvaluasiDiriCountOutputTypeCountBuktiFormEvaluasiDiriArgs
    HasilAssesmen?: boolean | EvaluasiDiriCountOutputTypeCountHasilAssesmenArgs
  }

  // Custom InputTypes
  /**
   * EvaluasiDiriCountOutputType without action
   */
  export type EvaluasiDiriCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiriCountOutputType
     */
    select?: EvaluasiDiriCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EvaluasiDiriCountOutputType without action
   */
  export type EvaluasiDiriCountOutputTypeCountBuktiFormEvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuktiFormEvaluasiDiriWhereInput
  }

  /**
   * EvaluasiDiriCountOutputType without action
   */
  export type EvaluasiDiriCountOutputTypeCountHasilAssesmenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HasilAssesmenWhereInput
  }


  /**
   * Count Type HasilAssesmenCountOutputType
   */

  export type HasilAssesmenCountOutputType = {
    SkorAssesmen: number
  }

  export type HasilAssesmenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkorAssesmen?: boolean | HasilAssesmenCountOutputTypeCountSkorAssesmenArgs
  }

  // Custom InputTypes
  /**
   * HasilAssesmenCountOutputType without action
   */
  export type HasilAssesmenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmenCountOutputType
     */
    select?: HasilAssesmenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * HasilAssesmenCountOutputType without action
   */
  export type HasilAssesmenCountOutputTypeCountSkorAssesmenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkorAssesmenWhereInput
  }


  /**
   * Count Type JenisDokumenCountOutputType
   */

  export type JenisDokumenCountOutputType = {
    BuktiForm: number
  }

  export type JenisDokumenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiForm?: boolean | JenisDokumenCountOutputTypeCountBuktiFormArgs
  }

  // Custom InputTypes
  /**
   * JenisDokumenCountOutputType without action
   */
  export type JenisDokumenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumenCountOutputType
     */
    select?: JenisDokumenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JenisDokumenCountOutputType without action
   */
  export type JenisDokumenCountOutputTypeCountBuktiFormArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuktiFormWhereInput
  }


  /**
   * Count Type KabupatenCountOutputType
   */

  export type KabupatenCountOutputType = {
    Kecamatan: number
  }

  export type KabupatenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kecamatan?: boolean | KabupatenCountOutputTypeCountKecamatanArgs
  }

  // Custom InputTypes
  /**
   * KabupatenCountOutputType without action
   */
  export type KabupatenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KabupatenCountOutputType
     */
    select?: KabupatenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * KabupatenCountOutputType without action
   */
  export type KabupatenCountOutputTypeCountKecamatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KecamatanWhereInput
  }


  /**
   * Count Type KecamatanCountOutputType
   */

  export type KecamatanCountOutputType = {
    Desa: number
  }

  export type KecamatanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Desa?: boolean | KecamatanCountOutputTypeCountDesaArgs
  }

  // Custom InputTypes
  /**
   * KecamatanCountOutputType without action
   */
  export type KecamatanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KecamatanCountOutputType
     */
    select?: KecamatanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * KecamatanCountOutputType without action
   */
  export type KecamatanCountOutputTypeCountDesaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DesaWhereInput
  }


  /**
   * Count Type MahasiswaCountOutputType
   */

  export type MahasiswaCountOutputType = {
    Pendaftaran: number
  }

  export type MahasiswaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | MahasiswaCountOutputTypeCountPendaftaranArgs
  }

  // Custom InputTypes
  /**
   * MahasiswaCountOutputType without action
   */
  export type MahasiswaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaCountOutputType
     */
    select?: MahasiswaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MahasiswaCountOutputType without action
   */
  export type MahasiswaCountOutputTypeCountPendaftaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PendaftaranWhereInput
  }


  /**
   * Count Type MataKuliahCountOutputType
   */

  export type MataKuliahCountOutputType = {
    CapaianPembelajaran: number
    MataKuliahMahasiswa: number
  }

  export type MataKuliahCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CapaianPembelajaran?: boolean | MataKuliahCountOutputTypeCountCapaianPembelajaranArgs
    MataKuliahMahasiswa?: boolean | MataKuliahCountOutputTypeCountMataKuliahMahasiswaArgs
  }

  // Custom InputTypes
  /**
   * MataKuliahCountOutputType without action
   */
  export type MataKuliahCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahCountOutputType
     */
    select?: MataKuliahCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MataKuliahCountOutputType without action
   */
  export type MataKuliahCountOutputTypeCountCapaianPembelajaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CapaianPembelajaranWhereInput
  }

  /**
   * MataKuliahCountOutputType without action
   */
  export type MataKuliahCountOutputTypeCountMataKuliahMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahMahasiswaWhereInput
  }


  /**
   * Count Type MataKuliahMahasiswaCountOutputType
   */

  export type MataKuliahMahasiswaCountOutputType = {
    EvaluasiDiri: number
    SanggahanAssesmenMk: number
  }

  export type MataKuliahMahasiswaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EvaluasiDiri?: boolean | MataKuliahMahasiswaCountOutputTypeCountEvaluasiDiriArgs
    SanggahanAssesmenMk?: boolean | MataKuliahMahasiswaCountOutputTypeCountSanggahanAssesmenMkArgs
  }

  // Custom InputTypes
  /**
   * MataKuliahMahasiswaCountOutputType without action
   */
  export type MataKuliahMahasiswaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswaCountOutputType
     */
    select?: MataKuliahMahasiswaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MataKuliahMahasiswaCountOutputType without action
   */
  export type MataKuliahMahasiswaCountOutputTypeCountEvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluasiDiriWhereInput
  }

  /**
   * MataKuliahMahasiswaCountOutputType without action
   */
  export type MataKuliahMahasiswaCountOutputTypeCountSanggahanAssesmenMkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenMkWhereInput
  }


  /**
   * Count Type PendaftaranCountOutputType
   */

  export type PendaftaranCountOutputType = {
    AssesorMahasiswa: number
    BuktiForm: number
    DaftarUlang: number
    InformasiKependudukan: number
    InstitusiLama: number
    MahasiswaKonferensi: number
    MahasiswaOrganisasiProfesi: number
    MahasiswaPelatihanProfessional: number
    MahasiswaPendidikan: number
    MahasiswaPiagam: number
    MahasiswaRiwayatPekerjaan: number
    MataKuliahMahasiswa: number
    OrangTua: number
    PekerjaanMahasiswa: number
    Pesantren: number
    SanggahanAssesmen: number
    SkRektorMahasiswa: number
  }

  export type PendaftaranCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AssesorMahasiswa?: boolean | PendaftaranCountOutputTypeCountAssesorMahasiswaArgs
    BuktiForm?: boolean | PendaftaranCountOutputTypeCountBuktiFormArgs
    DaftarUlang?: boolean | PendaftaranCountOutputTypeCountDaftarUlangArgs
    InformasiKependudukan?: boolean | PendaftaranCountOutputTypeCountInformasiKependudukanArgs
    InstitusiLama?: boolean | PendaftaranCountOutputTypeCountInstitusiLamaArgs
    MahasiswaKonferensi?: boolean | PendaftaranCountOutputTypeCountMahasiswaKonferensiArgs
    MahasiswaOrganisasiProfesi?: boolean | PendaftaranCountOutputTypeCountMahasiswaOrganisasiProfesiArgs
    MahasiswaPelatihanProfessional?: boolean | PendaftaranCountOutputTypeCountMahasiswaPelatihanProfessionalArgs
    MahasiswaPendidikan?: boolean | PendaftaranCountOutputTypeCountMahasiswaPendidikanArgs
    MahasiswaPiagam?: boolean | PendaftaranCountOutputTypeCountMahasiswaPiagamArgs
    MahasiswaRiwayatPekerjaan?: boolean | PendaftaranCountOutputTypeCountMahasiswaRiwayatPekerjaanArgs
    MataKuliahMahasiswa?: boolean | PendaftaranCountOutputTypeCountMataKuliahMahasiswaArgs
    OrangTua?: boolean | PendaftaranCountOutputTypeCountOrangTuaArgs
    PekerjaanMahasiswa?: boolean | PendaftaranCountOutputTypeCountPekerjaanMahasiswaArgs
    Pesantren?: boolean | PendaftaranCountOutputTypeCountPesantrenArgs
    SanggahanAssesmen?: boolean | PendaftaranCountOutputTypeCountSanggahanAssesmenArgs
    SkRektorMahasiswa?: boolean | PendaftaranCountOutputTypeCountSkRektorMahasiswaArgs
  }

  // Custom InputTypes
  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendaftaranCountOutputType
     */
    select?: PendaftaranCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountAssesorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssesorMahasiswaWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountBuktiFormArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuktiFormWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountDaftarUlangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DaftarUlangWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountInformasiKependudukanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InformasiKependudukanWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountInstitusiLamaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InstitusiLamaWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMahasiswaKonferensiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaKonferensiWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMahasiswaOrganisasiProfesiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaOrganisasiProfesiWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMahasiswaPelatihanProfessionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaPelatihanProfessionalWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMahasiswaPendidikanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaPendidikanWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMahasiswaPiagamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaPiagamWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMahasiswaRiwayatPekerjaanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaRiwayatPekerjaanWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountMataKuliahMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahMahasiswaWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountOrangTuaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrangTuaWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountPekerjaanMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PekerjaanMahasiswaWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountPesantrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PesantrenWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountSanggahanAssesmenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenWhereInput
  }

  /**
   * PendaftaranCountOutputType without action
   */
  export type PendaftaranCountOutputTypeCountSkRektorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorMahasiswaWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    UserHasPermissions: number
    RoleHasPermissions: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserHasPermissions?: boolean | PermissionCountOutputTypeCountUserHasPermissionsArgs
    RoleHasPermissions?: boolean | PermissionCountOutputTypeCountRoleHasPermissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountUserHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHasPermissionsWhereInput
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRoleHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleHasPermissionsWhereInput
  }


  /**
   * Count Type ProgramStudiCountOutputType
   */

  export type ProgramStudiCountOutputType = {
    DaftarUlang: number
    MataKuliah: number
  }

  export type ProgramStudiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    DaftarUlang?: boolean | ProgramStudiCountOutputTypeCountDaftarUlangArgs
    MataKuliah?: boolean | ProgramStudiCountOutputTypeCountMataKuliahArgs
  }

  // Custom InputTypes
  /**
   * ProgramStudiCountOutputType without action
   */
  export type ProgramStudiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudiCountOutputType
     */
    select?: ProgramStudiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProgramStudiCountOutputType without action
   */
  export type ProgramStudiCountOutputTypeCountDaftarUlangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DaftarUlangWhereInput
  }

  /**
   * ProgramStudiCountOutputType without action
   */
  export type ProgramStudiCountOutputTypeCountMataKuliahArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahWhereInput
  }


  /**
   * Count Type ProvinsiCountOutputType
   */

  export type ProvinsiCountOutputType = {
    Kabupaten: number
  }

  export type ProvinsiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kabupaten?: boolean | ProvinsiCountOutputTypeCountKabupatenArgs
  }

  // Custom InputTypes
  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvinsiCountOutputType
     */
    select?: ProvinsiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProvinsiCountOutputType without action
   */
  export type ProvinsiCountOutputTypeCountKabupatenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KabupatenWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    UserHasRoles: number
    RoleHasPermissions: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserHasRoles?: boolean | RoleCountOutputTypeCountUserHasRolesArgs
    RoleHasPermissions?: boolean | RoleCountOutputTypeCountRoleHasPermissionsArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUserHasRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHasRolesWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountRoleHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleHasPermissionsWhereInput
  }


  /**
   * Count Type SanggahanAssesmenCountOutputType
   */

  export type SanggahanAssesmenCountOutputType = {
    SanggahanAssesmenMk: number
    SanggahanAssesmenPihak: number
  }

  export type SanggahanAssesmenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmenMk?: boolean | SanggahanAssesmenCountOutputTypeCountSanggahanAssesmenMkArgs
    SanggahanAssesmenPihak?: boolean | SanggahanAssesmenCountOutputTypeCountSanggahanAssesmenPihakArgs
  }

  // Custom InputTypes
  /**
   * SanggahanAssesmenCountOutputType without action
   */
  export type SanggahanAssesmenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenCountOutputType
     */
    select?: SanggahanAssesmenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SanggahanAssesmenCountOutputType without action
   */
  export type SanggahanAssesmenCountOutputTypeCountSanggahanAssesmenMkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenMkWhereInput
  }

  /**
   * SanggahanAssesmenCountOutputType without action
   */
  export type SanggahanAssesmenCountOutputTypeCountSanggahanAssesmenPihakArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenPihakWhereInput
  }


  /**
   * Count Type SkRektorCountOutputType
   */

  export type SkRektorCountOutputType = {
    SkRektorAssesor: number
    SkRektorMahasiswa: number
  }

  export type SkRektorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektorAssesor?: boolean | SkRektorCountOutputTypeCountSkRektorAssesorArgs
    SkRektorMahasiswa?: boolean | SkRektorCountOutputTypeCountSkRektorMahasiswaArgs
  }

  // Custom InputTypes
  /**
   * SkRektorCountOutputType without action
   */
  export type SkRektorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorCountOutputType
     */
    select?: SkRektorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SkRektorCountOutputType without action
   */
  export type SkRektorCountOutputTypeCountSkRektorAssesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorAssesorWhereInput
  }

  /**
   * SkRektorCountOutputType without action
   */
  export type SkRektorCountOutputTypeCountSkRektorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorMahasiswaWhereInput
  }


  /**
   * Count Type StatusMahasiswaAssesmentCountOutputType
   */

  export type StatusMahasiswaAssesmentCountOutputType = {
    StatusMahasiswaAssesmentHistory: number
  }

  export type StatusMahasiswaAssesmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StatusMahasiswaAssesmentHistory?: boolean | StatusMahasiswaAssesmentCountOutputTypeCountStatusMahasiswaAssesmentHistoryArgs
  }

  // Custom InputTypes
  /**
   * StatusMahasiswaAssesmentCountOutputType without action
   */
  export type StatusMahasiswaAssesmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentCountOutputType
     */
    select?: StatusMahasiswaAssesmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StatusMahasiswaAssesmentCountOutputType without action
   */
  export type StatusMahasiswaAssesmentCountOutputTypeCountStatusMahasiswaAssesmentHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatusMahasiswaAssesmentHistoryWhereInput
  }


  /**
   * Count Type TipeAsesorCountOutputType
   */

  export type TipeAsesorCountOutputType = {
    Asesor: number
  }

  export type TipeAsesorCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | TipeAsesorCountOutputTypeCountAsesorArgs
  }

  // Custom InputTypes
  /**
   * TipeAsesorCountOutputType without action
   */
  export type TipeAsesorCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesorCountOutputType
     */
    select?: TipeAsesorCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TipeAsesorCountOutputType without action
   */
  export type TipeAsesorCountOutputTypeCountAsesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorWhereInput
  }


  /**
   * Count Type UniversityCountOutputType
   */

  export type UniversityCountOutputType = {
    ProgramStudi: number
    UniversityJabatan: number
    UniversitySosialMedia: number
    UniversityInformasi: number
  }

  export type UniversityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProgramStudi?: boolean | UniversityCountOutputTypeCountProgramStudiArgs
    UniversityJabatan?: boolean | UniversityCountOutputTypeCountUniversityJabatanArgs
    UniversitySosialMedia?: boolean | UniversityCountOutputTypeCountUniversitySosialMediaArgs
    UniversityInformasi?: boolean | UniversityCountOutputTypeCountUniversityInformasiArgs
  }

  // Custom InputTypes
  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityCountOutputType
     */
    select?: UniversityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountProgramStudiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramStudiWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountUniversityJabatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityJabatanWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountUniversitySosialMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversitySosialMediaWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountUniversityInformasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityInformasiWhereInput
  }


  /**
   * Count Type UniversityJabatanCountOutputType
   */

  export type UniversityJabatanCountOutputType = {
    UniversityJabatanOrang: number
  }

  export type UniversityJabatanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UniversityJabatanOrang?: boolean | UniversityJabatanCountOutputTypeCountUniversityJabatanOrangArgs
  }

  // Custom InputTypes
  /**
   * UniversityJabatanCountOutputType without action
   */
  export type UniversityJabatanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanCountOutputType
     */
    select?: UniversityJabatanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UniversityJabatanCountOutputType without action
   */
  export type UniversityJabatanCountOutputTypeCountUniversityJabatanOrangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityJabatanOrangWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    Mahasiswa: number
    UserHasPermissions: number
    UserHasRoles: number
    Userlogin: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Mahasiswa?: boolean | UserCountOutputTypeCountMahasiswaArgs
    UserHasPermissions?: boolean | UserCountOutputTypeCountUserHasPermissionsArgs
    UserHasRoles?: boolean | UserCountOutputTypeCountUserHasRolesArgs
    Userlogin?: boolean | UserCountOutputTypeCountUserloginArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHasPermissionsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserHasRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHasRolesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserloginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserloginWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Alamat
   */

  export type AggregateAlamat = {
    _count: AlamatCountAggregateOutputType | null
    _min: AlamatMinAggregateOutputType | null
    _max: AlamatMaxAggregateOutputType | null
  }

  export type AlamatMinAggregateOutputType = {
    AlamatId: string | null
    DesaId: string | null
    Alamat: string | null
    KodePos: string | null
  }

  export type AlamatMaxAggregateOutputType = {
    AlamatId: string | null
    DesaId: string | null
    Alamat: string | null
    KodePos: string | null
  }

  export type AlamatCountAggregateOutputType = {
    AlamatId: number
    DesaId: number
    Alamat: number
    KodePos: number
    _all: number
  }


  export type AlamatMinAggregateInputType = {
    AlamatId?: true
    DesaId?: true
    Alamat?: true
    KodePos?: true
  }

  export type AlamatMaxAggregateInputType = {
    AlamatId?: true
    DesaId?: true
    Alamat?: true
    KodePos?: true
  }

  export type AlamatCountAggregateInputType = {
    AlamatId?: true
    DesaId?: true
    Alamat?: true
    KodePos?: true
    _all?: true
  }

  export type AlamatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alamat to aggregate.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Alamats
    **/
    _count?: true | AlamatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlamatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlamatMaxAggregateInputType
  }

  export type GetAlamatAggregateType<T extends AlamatAggregateArgs> = {
        [P in keyof T & keyof AggregateAlamat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlamat[P]>
      : GetScalarType<T[P], AggregateAlamat[P]>
  }




  export type AlamatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithAggregationInput | AlamatOrderByWithAggregationInput[]
    by: AlamatScalarFieldEnum[] | AlamatScalarFieldEnum
    having?: AlamatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlamatCountAggregateInputType | true
    _min?: AlamatMinAggregateInputType
    _max?: AlamatMaxAggregateInputType
  }

  export type AlamatGroupByOutputType = {
    AlamatId: string
    DesaId: string
    Alamat: string
    KodePos: string
    _count: AlamatCountAggregateOutputType | null
    _min: AlamatMinAggregateOutputType | null
    _max: AlamatMaxAggregateOutputType | null
  }

  type GetAlamatGroupByPayload<T extends AlamatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlamatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlamatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlamatGroupByOutputType[P]>
            : GetScalarType<T[P], AlamatGroupByOutputType[P]>
        }
      >
    >


  export type AlamatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AlamatId?: boolean
    DesaId?: boolean
    Alamat?: boolean
    KodePos?: boolean
    Desa?: boolean | DesaDefaultArgs<ExtArgs>
    InstitusiLama?: boolean | Alamat$InstitusiLamaArgs<ExtArgs>
    University?: boolean | Alamat$UniversityArgs<ExtArgs>
    User?: boolean | Alamat$UserArgs<ExtArgs>
    _count?: boolean | AlamatCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat"]>

  export type AlamatSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AlamatId?: boolean
    DesaId?: boolean
    Alamat?: boolean
    KodePos?: boolean
    Desa?: boolean | DesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat"]>

  export type AlamatSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AlamatId?: boolean
    DesaId?: boolean
    Alamat?: boolean
    KodePos?: boolean
    Desa?: boolean | DesaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alamat"]>

  export type AlamatSelectScalar = {
    AlamatId?: boolean
    DesaId?: boolean
    Alamat?: boolean
    KodePos?: boolean
  }

  export type AlamatOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"AlamatId" | "DesaId" | "Alamat" | "KodePos", ExtArgs["result"]["alamat"]>
  export type AlamatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Desa?: boolean | DesaDefaultArgs<ExtArgs>
    InstitusiLama?: boolean | Alamat$InstitusiLamaArgs<ExtArgs>
    University?: boolean | Alamat$UniversityArgs<ExtArgs>
    User?: boolean | Alamat$UserArgs<ExtArgs>
    _count?: boolean | AlamatCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AlamatIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Desa?: boolean | DesaDefaultArgs<ExtArgs>
  }
  export type AlamatIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Desa?: boolean | DesaDefaultArgs<ExtArgs>
  }

  export type $AlamatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Alamat"
    objects: {
      Desa: Prisma.$DesaPayload<ExtArgs>
      InstitusiLama: Prisma.$InstitusiLamaPayload<ExtArgs>[]
      University: Prisma.$UniversityPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      AlamatId: string
      DesaId: string
      Alamat: string
      KodePos: string
    }, ExtArgs["result"]["alamat"]>
    composites: {}
  }

  type AlamatGetPayload<S extends boolean | null | undefined | AlamatDefaultArgs> = $Result.GetResult<Prisma.$AlamatPayload, S>

  type AlamatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlamatFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlamatCountAggregateInputType | true
    }

  export interface AlamatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Alamat'], meta: { name: 'Alamat' } }
    /**
     * Find zero or one Alamat that matches the filter.
     * @param {AlamatFindUniqueArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlamatFindUniqueArgs>(args: SelectSubset<T, AlamatFindUniqueArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Alamat that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlamatFindUniqueOrThrowArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlamatFindUniqueOrThrowArgs>(args: SelectSubset<T, AlamatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alamat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatFindFirstArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlamatFindFirstArgs>(args?: SelectSubset<T, AlamatFindFirstArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alamat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatFindFirstOrThrowArgs} args - Arguments to find a Alamat
     * @example
     * // Get one Alamat
     * const alamat = await prisma.alamat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlamatFindFirstOrThrowArgs>(args?: SelectSubset<T, AlamatFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Alamats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alamats
     * const alamats = await prisma.alamat.findMany()
     * 
     * // Get first 10 Alamats
     * const alamats = await prisma.alamat.findMany({ take: 10 })
     * 
     * // Only select the `AlamatId`
     * const alamatWithAlamatIdOnly = await prisma.alamat.findMany({ select: { AlamatId: true } })
     * 
     */
    findMany<T extends AlamatFindManyArgs>(args?: SelectSubset<T, AlamatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Alamat.
     * @param {AlamatCreateArgs} args - Arguments to create a Alamat.
     * @example
     * // Create one Alamat
     * const Alamat = await prisma.alamat.create({
     *   data: {
     *     // ... data to create a Alamat
     *   }
     * })
     * 
     */
    create<T extends AlamatCreateArgs>(args: SelectSubset<T, AlamatCreateArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Alamats.
     * @param {AlamatCreateManyArgs} args - Arguments to create many Alamats.
     * @example
     * // Create many Alamats
     * const alamat = await prisma.alamat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlamatCreateManyArgs>(args?: SelectSubset<T, AlamatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alamats and returns the data saved in the database.
     * @param {AlamatCreateManyAndReturnArgs} args - Arguments to create many Alamats.
     * @example
     * // Create many Alamats
     * const alamat = await prisma.alamat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alamats and only return the `AlamatId`
     * const alamatWithAlamatIdOnly = await prisma.alamat.createManyAndReturn({
     *   select: { AlamatId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AlamatCreateManyAndReturnArgs>(args?: SelectSubset<T, AlamatCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Alamat.
     * @param {AlamatDeleteArgs} args - Arguments to delete one Alamat.
     * @example
     * // Delete one Alamat
     * const Alamat = await prisma.alamat.delete({
     *   where: {
     *     // ... filter to delete one Alamat
     *   }
     * })
     * 
     */
    delete<T extends AlamatDeleteArgs>(args: SelectSubset<T, AlamatDeleteArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Alamat.
     * @param {AlamatUpdateArgs} args - Arguments to update one Alamat.
     * @example
     * // Update one Alamat
     * const alamat = await prisma.alamat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlamatUpdateArgs>(args: SelectSubset<T, AlamatUpdateArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Alamats.
     * @param {AlamatDeleteManyArgs} args - Arguments to filter Alamats to delete.
     * @example
     * // Delete a few Alamats
     * const { count } = await prisma.alamat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlamatDeleteManyArgs>(args?: SelectSubset<T, AlamatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alamats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alamats
     * const alamat = await prisma.alamat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlamatUpdateManyArgs>(args: SelectSubset<T, AlamatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alamats and returns the data updated in the database.
     * @param {AlamatUpdateManyAndReturnArgs} args - Arguments to update many Alamats.
     * @example
     * // Update many Alamats
     * const alamat = await prisma.alamat.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Alamats and only return the `AlamatId`
     * const alamatWithAlamatIdOnly = await prisma.alamat.updateManyAndReturn({
     *   select: { AlamatId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AlamatUpdateManyAndReturnArgs>(args: SelectSubset<T, AlamatUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Alamat.
     * @param {AlamatUpsertArgs} args - Arguments to update or create a Alamat.
     * @example
     * // Update or create a Alamat
     * const alamat = await prisma.alamat.upsert({
     *   create: {
     *     // ... data to create a Alamat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alamat we want to update
     *   }
     * })
     */
    upsert<T extends AlamatUpsertArgs>(args: SelectSubset<T, AlamatUpsertArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Alamats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatCountArgs} args - Arguments to filter Alamats to count.
     * @example
     * // Count the number of Alamats
     * const count = await prisma.alamat.count({
     *   where: {
     *     // ... the filter for the Alamats we want to count
     *   }
     * })
    **/
    count<T extends AlamatCountArgs>(
      args?: Subset<T, AlamatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlamatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alamat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlamatAggregateArgs>(args: Subset<T, AlamatAggregateArgs>): Prisma.PrismaPromise<GetAlamatAggregateType<T>>

    /**
     * Group by Alamat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlamatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlamatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlamatGroupByArgs['orderBy'] }
        : { orderBy?: AlamatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlamatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlamatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Alamat model
   */
  readonly fields: AlamatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Alamat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlamatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Desa<T extends DesaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DesaDefaultArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    InstitusiLama<T extends Alamat$InstitusiLamaArgs<ExtArgs> = {}>(args?: Subset<T, Alamat$InstitusiLamaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    University<T extends Alamat$UniversityArgs<ExtArgs> = {}>(args?: Subset<T, Alamat$UniversityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends Alamat$UserArgs<ExtArgs> = {}>(args?: Subset<T, Alamat$UserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Alamat model
   */
  interface AlamatFieldRefs {
    readonly AlamatId: FieldRef<"Alamat", 'String'>
    readonly DesaId: FieldRef<"Alamat", 'String'>
    readonly Alamat: FieldRef<"Alamat", 'String'>
    readonly KodePos: FieldRef<"Alamat", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Alamat findUnique
   */
  export type AlamatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat findUniqueOrThrow
   */
  export type AlamatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat findFirst
   */
  export type AlamatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alamats.
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alamats.
     */
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Alamat findFirstOrThrow
   */
  export type AlamatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamat to fetch.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alamats.
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alamats.
     */
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Alamat findMany
   */
  export type AlamatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter, which Alamats to fetch.
     */
    where?: AlamatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alamats to fetch.
     */
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Alamats.
     */
    cursor?: AlamatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alamats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alamats.
     */
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Alamat create
   */
  export type AlamatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * The data needed to create a Alamat.
     */
    data: XOR<AlamatCreateInput, AlamatUncheckedCreateInput>
  }

  /**
   * Alamat createMany
   */
  export type AlamatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Alamats.
     */
    data: AlamatCreateManyInput | AlamatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Alamat createManyAndReturn
   */
  export type AlamatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * The data used to create many Alamats.
     */
    data: AlamatCreateManyInput | AlamatCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Alamat update
   */
  export type AlamatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * The data needed to update a Alamat.
     */
    data: XOR<AlamatUpdateInput, AlamatUncheckedUpdateInput>
    /**
     * Choose, which Alamat to update.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat updateMany
   */
  export type AlamatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Alamats.
     */
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyInput>
    /**
     * Filter which Alamats to update
     */
    where?: AlamatWhereInput
    /**
     * Limit how many Alamats to update.
     */
    limit?: number
  }

  /**
   * Alamat updateManyAndReturn
   */
  export type AlamatUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * The data used to update Alamats.
     */
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyInput>
    /**
     * Filter which Alamats to update
     */
    where?: AlamatWhereInput
    /**
     * Limit how many Alamats to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Alamat upsert
   */
  export type AlamatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * The filter to search for the Alamat to update in case it exists.
     */
    where: AlamatWhereUniqueInput
    /**
     * In case the Alamat found by the `where` argument doesn't exist, create a new Alamat with this data.
     */
    create: XOR<AlamatCreateInput, AlamatUncheckedCreateInput>
    /**
     * In case the Alamat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlamatUpdateInput, AlamatUncheckedUpdateInput>
  }

  /**
   * Alamat delete
   */
  export type AlamatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    /**
     * Filter which Alamat to delete.
     */
    where: AlamatWhereUniqueInput
  }

  /**
   * Alamat deleteMany
   */
  export type AlamatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alamats to delete
     */
    where?: AlamatWhereInput
    /**
     * Limit how many Alamats to delete.
     */
    limit?: number
  }

  /**
   * Alamat.InstitusiLama
   */
  export type Alamat$InstitusiLamaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    where?: InstitusiLamaWhereInput
    orderBy?: InstitusiLamaOrderByWithRelationInput | InstitusiLamaOrderByWithRelationInput[]
    cursor?: InstitusiLamaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InstitusiLamaScalarFieldEnum | InstitusiLamaScalarFieldEnum[]
  }

  /**
   * Alamat.University
   */
  export type Alamat$UniversityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    where?: UniversityWhereInput
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    cursor?: UniversityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * Alamat.User
   */
  export type Alamat$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Alamat without action
   */
  export type AlamatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
  }


  /**
   * Model Asesor
   */

  export type AggregateAsesor = {
    _count: AsesorCountAggregateOutputType | null
    _min: AsesorMinAggregateOutputType | null
    _max: AsesorMaxAggregateOutputType | null
  }

  export type AsesorMinAggregateOutputType = {
    AsesorId: string | null
    TipeAsesorId: string | null
    UserId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type AsesorMaxAggregateOutputType = {
    AsesorId: string | null
    TipeAsesorId: string | null
    UserId: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type AsesorCountAggregateOutputType = {
    AsesorId: number
    TipeAsesorId: number
    UserId: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type AsesorMinAggregateInputType = {
    AsesorId?: true
    TipeAsesorId?: true
    UserId?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type AsesorMaxAggregateInputType = {
    AsesorId?: true
    TipeAsesorId?: true
    UserId?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type AsesorCountAggregateInputType = {
    AsesorId?: true
    TipeAsesorId?: true
    UserId?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type AsesorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Asesor to aggregate.
     */
    where?: AsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asesors to fetch.
     */
    orderBy?: AsesorOrderByWithRelationInput | AsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Asesors
    **/
    _count?: true | AsesorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AsesorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AsesorMaxAggregateInputType
  }

  export type GetAsesorAggregateType<T extends AsesorAggregateArgs> = {
        [P in keyof T & keyof AggregateAsesor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsesor[P]>
      : GetScalarType<T[P], AggregateAsesor[P]>
  }




  export type AsesorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorWhereInput
    orderBy?: AsesorOrderByWithAggregationInput | AsesorOrderByWithAggregationInput[]
    by: AsesorScalarFieldEnum[] | AsesorScalarFieldEnum
    having?: AsesorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AsesorCountAggregateInputType | true
    _min?: AsesorMinAggregateInputType
    _max?: AsesorMaxAggregateInputType
  }

  export type AsesorGroupByOutputType = {
    AsesorId: string
    TipeAsesorId: string
    UserId: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: AsesorCountAggregateOutputType | null
    _min: AsesorMinAggregateOutputType | null
    _max: AsesorMaxAggregateOutputType | null
  }

  type GetAsesorGroupByPayload<T extends AsesorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AsesorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AsesorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AsesorGroupByOutputType[P]>
            : GetScalarType<T[P], AsesorGroupByOutputType[P]>
        }
      >
    >


  export type AsesorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorId?: boolean
    TipeAsesorId?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    TipeAsesor?: boolean | TipeAsesorDefaultArgs<ExtArgs>
    AsesorAkademik?: boolean | Asesor$AsesorAkademikArgs<ExtArgs>
    AsesorPraktisi?: boolean | Asesor$AsesorPraktisiArgs<ExtArgs>
    AssesorMahasiswa?: boolean | Asesor$AssesorMahasiswaArgs<ExtArgs>
    _count?: boolean | AsesorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesor"]>

  export type AsesorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorId?: boolean
    TipeAsesorId?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    TipeAsesor?: boolean | TipeAsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesor"]>

  export type AsesorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorId?: boolean
    TipeAsesorId?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    TipeAsesor?: boolean | TipeAsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesor"]>

  export type AsesorSelectScalar = {
    AsesorId?: boolean
    TipeAsesorId?: boolean
    UserId?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type AsesorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"AsesorId" | "TipeAsesorId" | "UserId" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["asesor"]>
  export type AsesorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TipeAsesor?: boolean | TipeAsesorDefaultArgs<ExtArgs>
    AsesorAkademik?: boolean | Asesor$AsesorAkademikArgs<ExtArgs>
    AsesorPraktisi?: boolean | Asesor$AsesorPraktisiArgs<ExtArgs>
    AssesorMahasiswa?: boolean | Asesor$AssesorMahasiswaArgs<ExtArgs>
    _count?: boolean | AsesorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AsesorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TipeAsesor?: boolean | TipeAsesorDefaultArgs<ExtArgs>
  }
  export type AsesorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TipeAsesor?: boolean | TipeAsesorDefaultArgs<ExtArgs>
  }

  export type $AsesorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Asesor"
    objects: {
      TipeAsesor: Prisma.$TipeAsesorPayload<ExtArgs>
      AsesorAkademik: Prisma.$AsesorAkademikPayload<ExtArgs>[]
      AsesorPraktisi: Prisma.$AsesorPraktisiPayload<ExtArgs>[]
      AssesorMahasiswa: Prisma.$AssesorMahasiswaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      AsesorId: string
      TipeAsesorId: string
      UserId: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["asesor"]>
    composites: {}
  }

  type AsesorGetPayload<S extends boolean | null | undefined | AsesorDefaultArgs> = $Result.GetResult<Prisma.$AsesorPayload, S>

  type AsesorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AsesorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AsesorCountAggregateInputType | true
    }

  export interface AsesorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Asesor'], meta: { name: 'Asesor' } }
    /**
     * Find zero or one Asesor that matches the filter.
     * @param {AsesorFindUniqueArgs} args - Arguments to find a Asesor
     * @example
     * // Get one Asesor
     * const asesor = await prisma.asesor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AsesorFindUniqueArgs>(args: SelectSubset<T, AsesorFindUniqueArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Asesor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AsesorFindUniqueOrThrowArgs} args - Arguments to find a Asesor
     * @example
     * // Get one Asesor
     * const asesor = await prisma.asesor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AsesorFindUniqueOrThrowArgs>(args: SelectSubset<T, AsesorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asesor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorFindFirstArgs} args - Arguments to find a Asesor
     * @example
     * // Get one Asesor
     * const asesor = await prisma.asesor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AsesorFindFirstArgs>(args?: SelectSubset<T, AsesorFindFirstArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asesor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorFindFirstOrThrowArgs} args - Arguments to find a Asesor
     * @example
     * // Get one Asesor
     * const asesor = await prisma.asesor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AsesorFindFirstOrThrowArgs>(args?: SelectSubset<T, AsesorFindFirstOrThrowArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Asesors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Asesors
     * const asesors = await prisma.asesor.findMany()
     * 
     * // Get first 10 Asesors
     * const asesors = await prisma.asesor.findMany({ take: 10 })
     * 
     * // Only select the `AsesorId`
     * const asesorWithAsesorIdOnly = await prisma.asesor.findMany({ select: { AsesorId: true } })
     * 
     */
    findMany<T extends AsesorFindManyArgs>(args?: SelectSubset<T, AsesorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Asesor.
     * @param {AsesorCreateArgs} args - Arguments to create a Asesor.
     * @example
     * // Create one Asesor
     * const Asesor = await prisma.asesor.create({
     *   data: {
     *     // ... data to create a Asesor
     *   }
     * })
     * 
     */
    create<T extends AsesorCreateArgs>(args: SelectSubset<T, AsesorCreateArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Asesors.
     * @param {AsesorCreateManyArgs} args - Arguments to create many Asesors.
     * @example
     * // Create many Asesors
     * const asesor = await prisma.asesor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AsesorCreateManyArgs>(args?: SelectSubset<T, AsesorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Asesors and returns the data saved in the database.
     * @param {AsesorCreateManyAndReturnArgs} args - Arguments to create many Asesors.
     * @example
     * // Create many Asesors
     * const asesor = await prisma.asesor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Asesors and only return the `AsesorId`
     * const asesorWithAsesorIdOnly = await prisma.asesor.createManyAndReturn({
     *   select: { AsesorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AsesorCreateManyAndReturnArgs>(args?: SelectSubset<T, AsesorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Asesor.
     * @param {AsesorDeleteArgs} args - Arguments to delete one Asesor.
     * @example
     * // Delete one Asesor
     * const Asesor = await prisma.asesor.delete({
     *   where: {
     *     // ... filter to delete one Asesor
     *   }
     * })
     * 
     */
    delete<T extends AsesorDeleteArgs>(args: SelectSubset<T, AsesorDeleteArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Asesor.
     * @param {AsesorUpdateArgs} args - Arguments to update one Asesor.
     * @example
     * // Update one Asesor
     * const asesor = await prisma.asesor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AsesorUpdateArgs>(args: SelectSubset<T, AsesorUpdateArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Asesors.
     * @param {AsesorDeleteManyArgs} args - Arguments to filter Asesors to delete.
     * @example
     * // Delete a few Asesors
     * const { count } = await prisma.asesor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AsesorDeleteManyArgs>(args?: SelectSubset<T, AsesorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asesors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Asesors
     * const asesor = await prisma.asesor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AsesorUpdateManyArgs>(args: SelectSubset<T, AsesorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asesors and returns the data updated in the database.
     * @param {AsesorUpdateManyAndReturnArgs} args - Arguments to update many Asesors.
     * @example
     * // Update many Asesors
     * const asesor = await prisma.asesor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Asesors and only return the `AsesorId`
     * const asesorWithAsesorIdOnly = await prisma.asesor.updateManyAndReturn({
     *   select: { AsesorId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AsesorUpdateManyAndReturnArgs>(args: SelectSubset<T, AsesorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Asesor.
     * @param {AsesorUpsertArgs} args - Arguments to update or create a Asesor.
     * @example
     * // Update or create a Asesor
     * const asesor = await prisma.asesor.upsert({
     *   create: {
     *     // ... data to create a Asesor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Asesor we want to update
     *   }
     * })
     */
    upsert<T extends AsesorUpsertArgs>(args: SelectSubset<T, AsesorUpsertArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Asesors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorCountArgs} args - Arguments to filter Asesors to count.
     * @example
     * // Count the number of Asesors
     * const count = await prisma.asesor.count({
     *   where: {
     *     // ... the filter for the Asesors we want to count
     *   }
     * })
    **/
    count<T extends AsesorCountArgs>(
      args?: Subset<T, AsesorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AsesorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Asesor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AsesorAggregateArgs>(args: Subset<T, AsesorAggregateArgs>): Prisma.PrismaPromise<GetAsesorAggregateType<T>>

    /**
     * Group by Asesor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AsesorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AsesorGroupByArgs['orderBy'] }
        : { orderBy?: AsesorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AsesorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsesorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Asesor model
   */
  readonly fields: AsesorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Asesor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AsesorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    TipeAsesor<T extends TipeAsesorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TipeAsesorDefaultArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    AsesorAkademik<T extends Asesor$AsesorAkademikArgs<ExtArgs> = {}>(args?: Subset<T, Asesor$AsesorAkademikArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AsesorPraktisi<T extends Asesor$AsesorPraktisiArgs<ExtArgs> = {}>(args?: Subset<T, Asesor$AsesorPraktisiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    AssesorMahasiswa<T extends Asesor$AssesorMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, Asesor$AssesorMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Asesor model
   */
  interface AsesorFieldRefs {
    readonly AsesorId: FieldRef<"Asesor", 'String'>
    readonly TipeAsesorId: FieldRef<"Asesor", 'String'>
    readonly UserId: FieldRef<"Asesor", 'String'>
    readonly CreatedAt: FieldRef<"Asesor", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Asesor", 'DateTime'>
    readonly DeletedAt: FieldRef<"Asesor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Asesor findUnique
   */
  export type AsesorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * Filter, which Asesor to fetch.
     */
    where: AsesorWhereUniqueInput
  }

  /**
   * Asesor findUniqueOrThrow
   */
  export type AsesorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * Filter, which Asesor to fetch.
     */
    where: AsesorWhereUniqueInput
  }

  /**
   * Asesor findFirst
   */
  export type AsesorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * Filter, which Asesor to fetch.
     */
    where?: AsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asesors to fetch.
     */
    orderBy?: AsesorOrderByWithRelationInput | AsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Asesors.
     */
    cursor?: AsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Asesors.
     */
    distinct?: AsesorScalarFieldEnum | AsesorScalarFieldEnum[]
  }

  /**
   * Asesor findFirstOrThrow
   */
  export type AsesorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * Filter, which Asesor to fetch.
     */
    where?: AsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asesors to fetch.
     */
    orderBy?: AsesorOrderByWithRelationInput | AsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Asesors.
     */
    cursor?: AsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Asesors.
     */
    distinct?: AsesorScalarFieldEnum | AsesorScalarFieldEnum[]
  }

  /**
   * Asesor findMany
   */
  export type AsesorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * Filter, which Asesors to fetch.
     */
    where?: AsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asesors to fetch.
     */
    orderBy?: AsesorOrderByWithRelationInput | AsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Asesors.
     */
    cursor?: AsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asesors.
     */
    skip?: number
    distinct?: AsesorScalarFieldEnum | AsesorScalarFieldEnum[]
  }

  /**
   * Asesor create
   */
  export type AsesorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * The data needed to create a Asesor.
     */
    data: XOR<AsesorCreateInput, AsesorUncheckedCreateInput>
  }

  /**
   * Asesor createMany
   */
  export type AsesorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Asesors.
     */
    data: AsesorCreateManyInput | AsesorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Asesor createManyAndReturn
   */
  export type AsesorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * The data used to create many Asesors.
     */
    data: AsesorCreateManyInput | AsesorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Asesor update
   */
  export type AsesorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * The data needed to update a Asesor.
     */
    data: XOR<AsesorUpdateInput, AsesorUncheckedUpdateInput>
    /**
     * Choose, which Asesor to update.
     */
    where: AsesorWhereUniqueInput
  }

  /**
   * Asesor updateMany
   */
  export type AsesorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Asesors.
     */
    data: XOR<AsesorUpdateManyMutationInput, AsesorUncheckedUpdateManyInput>
    /**
     * Filter which Asesors to update
     */
    where?: AsesorWhereInput
    /**
     * Limit how many Asesors to update.
     */
    limit?: number
  }

  /**
   * Asesor updateManyAndReturn
   */
  export type AsesorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * The data used to update Asesors.
     */
    data: XOR<AsesorUpdateManyMutationInput, AsesorUncheckedUpdateManyInput>
    /**
     * Filter which Asesors to update
     */
    where?: AsesorWhereInput
    /**
     * Limit how many Asesors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Asesor upsert
   */
  export type AsesorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * The filter to search for the Asesor to update in case it exists.
     */
    where: AsesorWhereUniqueInput
    /**
     * In case the Asesor found by the `where` argument doesn't exist, create a new Asesor with this data.
     */
    create: XOR<AsesorCreateInput, AsesorUncheckedCreateInput>
    /**
     * In case the Asesor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AsesorUpdateInput, AsesorUncheckedUpdateInput>
  }

  /**
   * Asesor delete
   */
  export type AsesorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    /**
     * Filter which Asesor to delete.
     */
    where: AsesorWhereUniqueInput
  }

  /**
   * Asesor deleteMany
   */
  export type AsesorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Asesors to delete
     */
    where?: AsesorWhereInput
    /**
     * Limit how many Asesors to delete.
     */
    limit?: number
  }

  /**
   * Asesor.AsesorAkademik
   */
  export type Asesor$AsesorAkademikArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    where?: AsesorAkademikWhereInput
    orderBy?: AsesorAkademikOrderByWithRelationInput | AsesorAkademikOrderByWithRelationInput[]
    cursor?: AsesorAkademikWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsesorAkademikScalarFieldEnum | AsesorAkademikScalarFieldEnum[]
  }

  /**
   * Asesor.AsesorPraktisi
   */
  export type Asesor$AsesorPraktisiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    where?: AsesorPraktisiWhereInput
    orderBy?: AsesorPraktisiOrderByWithRelationInput | AsesorPraktisiOrderByWithRelationInput[]
    cursor?: AsesorPraktisiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsesorPraktisiScalarFieldEnum | AsesorPraktisiScalarFieldEnum[]
  }

  /**
   * Asesor.AssesorMahasiswa
   */
  export type Asesor$AssesorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    where?: AssesorMahasiswaWhereInput
    orderBy?: AssesorMahasiswaOrderByWithRelationInput | AssesorMahasiswaOrderByWithRelationInput[]
    cursor?: AssesorMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssesorMahasiswaScalarFieldEnum | AssesorMahasiswaScalarFieldEnum[]
  }

  /**
   * Asesor without action
   */
  export type AsesorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
  }


  /**
   * Model AsesorAkademik
   */

  export type AggregateAsesorAkademik = {
    _count: AsesorAkademikCountAggregateOutputType | null
    _min: AsesorAkademikMinAggregateOutputType | null
    _max: AsesorAkademikMaxAggregateOutputType | null
  }

  export type AsesorAkademikMinAggregateOutputType = {
    AsesorAkademikId: string | null
    AsesorId: string | null
    Pangkat: string | null
    JabatanFungsionalAkademik: string | null
    NipNidn: string | null
    NamaPerguruanTinggi: string | null
    AlamatPerguruanTinggi: string | null
    PendidikanTerakhirBidangKeilmuan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type AsesorAkademikMaxAggregateOutputType = {
    AsesorAkademikId: string | null
    AsesorId: string | null
    Pangkat: string | null
    JabatanFungsionalAkademik: string | null
    NipNidn: string | null
    NamaPerguruanTinggi: string | null
    AlamatPerguruanTinggi: string | null
    PendidikanTerakhirBidangKeilmuan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type AsesorAkademikCountAggregateOutputType = {
    AsesorAkademikId: number
    AsesorId: number
    Pangkat: number
    JabatanFungsionalAkademik: number
    NipNidn: number
    NamaPerguruanTinggi: number
    AlamatPerguruanTinggi: number
    PendidikanTerakhirBidangKeilmuan: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type AsesorAkademikMinAggregateInputType = {
    AsesorAkademikId?: true
    AsesorId?: true
    Pangkat?: true
    JabatanFungsionalAkademik?: true
    NipNidn?: true
    NamaPerguruanTinggi?: true
    AlamatPerguruanTinggi?: true
    PendidikanTerakhirBidangKeilmuan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type AsesorAkademikMaxAggregateInputType = {
    AsesorAkademikId?: true
    AsesorId?: true
    Pangkat?: true
    JabatanFungsionalAkademik?: true
    NipNidn?: true
    NamaPerguruanTinggi?: true
    AlamatPerguruanTinggi?: true
    PendidikanTerakhirBidangKeilmuan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type AsesorAkademikCountAggregateInputType = {
    AsesorAkademikId?: true
    AsesorId?: true
    Pangkat?: true
    JabatanFungsionalAkademik?: true
    NipNidn?: true
    NamaPerguruanTinggi?: true
    AlamatPerguruanTinggi?: true
    PendidikanTerakhirBidangKeilmuan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type AsesorAkademikAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsesorAkademik to aggregate.
     */
    where?: AsesorAkademikWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademiks to fetch.
     */
    orderBy?: AsesorAkademikOrderByWithRelationInput | AsesorAkademikOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AsesorAkademikWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademiks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademiks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AsesorAkademiks
    **/
    _count?: true | AsesorAkademikCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AsesorAkademikMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AsesorAkademikMaxAggregateInputType
  }

  export type GetAsesorAkademikAggregateType<T extends AsesorAkademikAggregateArgs> = {
        [P in keyof T & keyof AggregateAsesorAkademik]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsesorAkademik[P]>
      : GetScalarType<T[P], AggregateAsesorAkademik[P]>
  }




  export type AsesorAkademikGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorAkademikWhereInput
    orderBy?: AsesorAkademikOrderByWithAggregationInput | AsesorAkademikOrderByWithAggregationInput[]
    by: AsesorAkademikScalarFieldEnum[] | AsesorAkademikScalarFieldEnum
    having?: AsesorAkademikScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AsesorAkademikCountAggregateInputType | true
    _min?: AsesorAkademikMinAggregateInputType
    _max?: AsesorAkademikMaxAggregateInputType
  }

  export type AsesorAkademikGroupByOutputType = {
    AsesorAkademikId: string
    AsesorId: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi: string | null
    PendidikanTerakhirBidangKeilmuan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: AsesorAkademikCountAggregateOutputType | null
    _min: AsesorAkademikMinAggregateOutputType | null
    _max: AsesorAkademikMaxAggregateOutputType | null
  }

  type GetAsesorAkademikGroupByPayload<T extends AsesorAkademikGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AsesorAkademikGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AsesorAkademikGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AsesorAkademikGroupByOutputType[P]>
            : GetScalarType<T[P], AsesorAkademikGroupByOutputType[P]>
        }
      >
    >


  export type AsesorAkademikSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorAkademikId?: boolean
    AsesorId?: boolean
    Pangkat?: boolean
    JabatanFungsionalAkademik?: boolean
    NipNidn?: boolean
    NamaPerguruanTinggi?: boolean
    AlamatPerguruanTinggi?: boolean
    PendidikanTerakhirBidangKeilmuan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    AsesorAkademikKeanggotaanAsosiasi?: boolean | AsesorAkademik$AsesorAkademikKeanggotaanAsosiasiArgs<ExtArgs>
    _count?: boolean | AsesorAkademikCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorAkademik"]>

  export type AsesorAkademikSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorAkademikId?: boolean
    AsesorId?: boolean
    Pangkat?: boolean
    JabatanFungsionalAkademik?: boolean
    NipNidn?: boolean
    NamaPerguruanTinggi?: boolean
    AlamatPerguruanTinggi?: boolean
    PendidikanTerakhirBidangKeilmuan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorAkademik"]>

  export type AsesorAkademikSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorAkademikId?: boolean
    AsesorId?: boolean
    Pangkat?: boolean
    JabatanFungsionalAkademik?: boolean
    NipNidn?: boolean
    NamaPerguruanTinggi?: boolean
    AlamatPerguruanTinggi?: boolean
    PendidikanTerakhirBidangKeilmuan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorAkademik"]>

  export type AsesorAkademikSelectScalar = {
    AsesorAkademikId?: boolean
    AsesorId?: boolean
    Pangkat?: boolean
    JabatanFungsionalAkademik?: boolean
    NipNidn?: boolean
    NamaPerguruanTinggi?: boolean
    AlamatPerguruanTinggi?: boolean
    PendidikanTerakhirBidangKeilmuan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type AsesorAkademikOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"AsesorAkademikId" | "AsesorId" | "Pangkat" | "JabatanFungsionalAkademik" | "NipNidn" | "NamaPerguruanTinggi" | "AlamatPerguruanTinggi" | "PendidikanTerakhirBidangKeilmuan" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["asesorAkademik"]>
  export type AsesorAkademikInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    AsesorAkademikKeanggotaanAsosiasi?: boolean | AsesorAkademik$AsesorAkademikKeanggotaanAsosiasiArgs<ExtArgs>
    _count?: boolean | AsesorAkademikCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AsesorAkademikIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }
  export type AsesorAkademikIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }

  export type $AsesorAkademikPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AsesorAkademik"
    objects: {
      Asesor: Prisma.$AsesorPayload<ExtArgs>
      AsesorAkademikKeanggotaanAsosiasi: Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      AsesorAkademikId: string
      AsesorId: string
      Pangkat: string
      JabatanFungsionalAkademik: string
      NipNidn: string
      NamaPerguruanTinggi: string
      AlamatPerguruanTinggi: string | null
      PendidikanTerakhirBidangKeilmuan: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["asesorAkademik"]>
    composites: {}
  }

  type AsesorAkademikGetPayload<S extends boolean | null | undefined | AsesorAkademikDefaultArgs> = $Result.GetResult<Prisma.$AsesorAkademikPayload, S>

  type AsesorAkademikCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AsesorAkademikFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AsesorAkademikCountAggregateInputType | true
    }

  export interface AsesorAkademikDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AsesorAkademik'], meta: { name: 'AsesorAkademik' } }
    /**
     * Find zero or one AsesorAkademik that matches the filter.
     * @param {AsesorAkademikFindUniqueArgs} args - Arguments to find a AsesorAkademik
     * @example
     * // Get one AsesorAkademik
     * const asesorAkademik = await prisma.asesorAkademik.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AsesorAkademikFindUniqueArgs>(args: SelectSubset<T, AsesorAkademikFindUniqueArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AsesorAkademik that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AsesorAkademikFindUniqueOrThrowArgs} args - Arguments to find a AsesorAkademik
     * @example
     * // Get one AsesorAkademik
     * const asesorAkademik = await prisma.asesorAkademik.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AsesorAkademikFindUniqueOrThrowArgs>(args: SelectSubset<T, AsesorAkademikFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsesorAkademik that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikFindFirstArgs} args - Arguments to find a AsesorAkademik
     * @example
     * // Get one AsesorAkademik
     * const asesorAkademik = await prisma.asesorAkademik.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AsesorAkademikFindFirstArgs>(args?: SelectSubset<T, AsesorAkademikFindFirstArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsesorAkademik that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikFindFirstOrThrowArgs} args - Arguments to find a AsesorAkademik
     * @example
     * // Get one AsesorAkademik
     * const asesorAkademik = await prisma.asesorAkademik.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AsesorAkademikFindFirstOrThrowArgs>(args?: SelectSubset<T, AsesorAkademikFindFirstOrThrowArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AsesorAkademiks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AsesorAkademiks
     * const asesorAkademiks = await prisma.asesorAkademik.findMany()
     * 
     * // Get first 10 AsesorAkademiks
     * const asesorAkademiks = await prisma.asesorAkademik.findMany({ take: 10 })
     * 
     * // Only select the `AsesorAkademikId`
     * const asesorAkademikWithAsesorAkademikIdOnly = await prisma.asesorAkademik.findMany({ select: { AsesorAkademikId: true } })
     * 
     */
    findMany<T extends AsesorAkademikFindManyArgs>(args?: SelectSubset<T, AsesorAkademikFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AsesorAkademik.
     * @param {AsesorAkademikCreateArgs} args - Arguments to create a AsesorAkademik.
     * @example
     * // Create one AsesorAkademik
     * const AsesorAkademik = await prisma.asesorAkademik.create({
     *   data: {
     *     // ... data to create a AsesorAkademik
     *   }
     * })
     * 
     */
    create<T extends AsesorAkademikCreateArgs>(args: SelectSubset<T, AsesorAkademikCreateArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AsesorAkademiks.
     * @param {AsesorAkademikCreateManyArgs} args - Arguments to create many AsesorAkademiks.
     * @example
     * // Create many AsesorAkademiks
     * const asesorAkademik = await prisma.asesorAkademik.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AsesorAkademikCreateManyArgs>(args?: SelectSubset<T, AsesorAkademikCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AsesorAkademiks and returns the data saved in the database.
     * @param {AsesorAkademikCreateManyAndReturnArgs} args - Arguments to create many AsesorAkademiks.
     * @example
     * // Create many AsesorAkademiks
     * const asesorAkademik = await prisma.asesorAkademik.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AsesorAkademiks and only return the `AsesorAkademikId`
     * const asesorAkademikWithAsesorAkademikIdOnly = await prisma.asesorAkademik.createManyAndReturn({
     *   select: { AsesorAkademikId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AsesorAkademikCreateManyAndReturnArgs>(args?: SelectSubset<T, AsesorAkademikCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AsesorAkademik.
     * @param {AsesorAkademikDeleteArgs} args - Arguments to delete one AsesorAkademik.
     * @example
     * // Delete one AsesorAkademik
     * const AsesorAkademik = await prisma.asesorAkademik.delete({
     *   where: {
     *     // ... filter to delete one AsesorAkademik
     *   }
     * })
     * 
     */
    delete<T extends AsesorAkademikDeleteArgs>(args: SelectSubset<T, AsesorAkademikDeleteArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AsesorAkademik.
     * @param {AsesorAkademikUpdateArgs} args - Arguments to update one AsesorAkademik.
     * @example
     * // Update one AsesorAkademik
     * const asesorAkademik = await prisma.asesorAkademik.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AsesorAkademikUpdateArgs>(args: SelectSubset<T, AsesorAkademikUpdateArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AsesorAkademiks.
     * @param {AsesorAkademikDeleteManyArgs} args - Arguments to filter AsesorAkademiks to delete.
     * @example
     * // Delete a few AsesorAkademiks
     * const { count } = await prisma.asesorAkademik.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AsesorAkademikDeleteManyArgs>(args?: SelectSubset<T, AsesorAkademikDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsesorAkademiks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AsesorAkademiks
     * const asesorAkademik = await prisma.asesorAkademik.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AsesorAkademikUpdateManyArgs>(args: SelectSubset<T, AsesorAkademikUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsesorAkademiks and returns the data updated in the database.
     * @param {AsesorAkademikUpdateManyAndReturnArgs} args - Arguments to update many AsesorAkademiks.
     * @example
     * // Update many AsesorAkademiks
     * const asesorAkademik = await prisma.asesorAkademik.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AsesorAkademiks and only return the `AsesorAkademikId`
     * const asesorAkademikWithAsesorAkademikIdOnly = await prisma.asesorAkademik.updateManyAndReturn({
     *   select: { AsesorAkademikId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AsesorAkademikUpdateManyAndReturnArgs>(args: SelectSubset<T, AsesorAkademikUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AsesorAkademik.
     * @param {AsesorAkademikUpsertArgs} args - Arguments to update or create a AsesorAkademik.
     * @example
     * // Update or create a AsesorAkademik
     * const asesorAkademik = await prisma.asesorAkademik.upsert({
     *   create: {
     *     // ... data to create a AsesorAkademik
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AsesorAkademik we want to update
     *   }
     * })
     */
    upsert<T extends AsesorAkademikUpsertArgs>(args: SelectSubset<T, AsesorAkademikUpsertArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AsesorAkademiks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikCountArgs} args - Arguments to filter AsesorAkademiks to count.
     * @example
     * // Count the number of AsesorAkademiks
     * const count = await prisma.asesorAkademik.count({
     *   where: {
     *     // ... the filter for the AsesorAkademiks we want to count
     *   }
     * })
    **/
    count<T extends AsesorAkademikCountArgs>(
      args?: Subset<T, AsesorAkademikCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AsesorAkademikCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AsesorAkademik.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AsesorAkademikAggregateArgs>(args: Subset<T, AsesorAkademikAggregateArgs>): Prisma.PrismaPromise<GetAsesorAkademikAggregateType<T>>

    /**
     * Group by AsesorAkademik.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AsesorAkademikGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AsesorAkademikGroupByArgs['orderBy'] }
        : { orderBy?: AsesorAkademikGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AsesorAkademikGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsesorAkademikGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AsesorAkademik model
   */
  readonly fields: AsesorAkademikFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AsesorAkademik.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AsesorAkademikClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Asesor<T extends AsesorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AsesorDefaultArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    AsesorAkademikKeanggotaanAsosiasi<T extends AsesorAkademik$AsesorAkademikKeanggotaanAsosiasiArgs<ExtArgs> = {}>(args?: Subset<T, AsesorAkademik$AsesorAkademikKeanggotaanAsosiasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AsesorAkademik model
   */
  interface AsesorAkademikFieldRefs {
    readonly AsesorAkademikId: FieldRef<"AsesorAkademik", 'String'>
    readonly AsesorId: FieldRef<"AsesorAkademik", 'String'>
    readonly Pangkat: FieldRef<"AsesorAkademik", 'String'>
    readonly JabatanFungsionalAkademik: FieldRef<"AsesorAkademik", 'String'>
    readonly NipNidn: FieldRef<"AsesorAkademik", 'String'>
    readonly NamaPerguruanTinggi: FieldRef<"AsesorAkademik", 'String'>
    readonly AlamatPerguruanTinggi: FieldRef<"AsesorAkademik", 'String'>
    readonly PendidikanTerakhirBidangKeilmuan: FieldRef<"AsesorAkademik", 'String'>
    readonly CreatedAt: FieldRef<"AsesorAkademik", 'DateTime'>
    readonly UpdatedAt: FieldRef<"AsesorAkademik", 'DateTime'>
    readonly DeletedAt: FieldRef<"AsesorAkademik", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AsesorAkademik findUnique
   */
  export type AsesorAkademikFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademik to fetch.
     */
    where: AsesorAkademikWhereUniqueInput
  }

  /**
   * AsesorAkademik findUniqueOrThrow
   */
  export type AsesorAkademikFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademik to fetch.
     */
    where: AsesorAkademikWhereUniqueInput
  }

  /**
   * AsesorAkademik findFirst
   */
  export type AsesorAkademikFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademik to fetch.
     */
    where?: AsesorAkademikWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademiks to fetch.
     */
    orderBy?: AsesorAkademikOrderByWithRelationInput | AsesorAkademikOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsesorAkademiks.
     */
    cursor?: AsesorAkademikWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademiks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademiks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsesorAkademiks.
     */
    distinct?: AsesorAkademikScalarFieldEnum | AsesorAkademikScalarFieldEnum[]
  }

  /**
   * AsesorAkademik findFirstOrThrow
   */
  export type AsesorAkademikFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademik to fetch.
     */
    where?: AsesorAkademikWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademiks to fetch.
     */
    orderBy?: AsesorAkademikOrderByWithRelationInput | AsesorAkademikOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsesorAkademiks.
     */
    cursor?: AsesorAkademikWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademiks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademiks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsesorAkademiks.
     */
    distinct?: AsesorAkademikScalarFieldEnum | AsesorAkademikScalarFieldEnum[]
  }

  /**
   * AsesorAkademik findMany
   */
  export type AsesorAkademikFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademiks to fetch.
     */
    where?: AsesorAkademikWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademiks to fetch.
     */
    orderBy?: AsesorAkademikOrderByWithRelationInput | AsesorAkademikOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AsesorAkademiks.
     */
    cursor?: AsesorAkademikWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademiks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademiks.
     */
    skip?: number
    distinct?: AsesorAkademikScalarFieldEnum | AsesorAkademikScalarFieldEnum[]
  }

  /**
   * AsesorAkademik create
   */
  export type AsesorAkademikCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * The data needed to create a AsesorAkademik.
     */
    data: XOR<AsesorAkademikCreateInput, AsesorAkademikUncheckedCreateInput>
  }

  /**
   * AsesorAkademik createMany
   */
  export type AsesorAkademikCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AsesorAkademiks.
     */
    data: AsesorAkademikCreateManyInput | AsesorAkademikCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AsesorAkademik createManyAndReturn
   */
  export type AsesorAkademikCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * The data used to create many AsesorAkademiks.
     */
    data: AsesorAkademikCreateManyInput | AsesorAkademikCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsesorAkademik update
   */
  export type AsesorAkademikUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * The data needed to update a AsesorAkademik.
     */
    data: XOR<AsesorAkademikUpdateInput, AsesorAkademikUncheckedUpdateInput>
    /**
     * Choose, which AsesorAkademik to update.
     */
    where: AsesorAkademikWhereUniqueInput
  }

  /**
   * AsesorAkademik updateMany
   */
  export type AsesorAkademikUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AsesorAkademiks.
     */
    data: XOR<AsesorAkademikUpdateManyMutationInput, AsesorAkademikUncheckedUpdateManyInput>
    /**
     * Filter which AsesorAkademiks to update
     */
    where?: AsesorAkademikWhereInput
    /**
     * Limit how many AsesorAkademiks to update.
     */
    limit?: number
  }

  /**
   * AsesorAkademik updateManyAndReturn
   */
  export type AsesorAkademikUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * The data used to update AsesorAkademiks.
     */
    data: XOR<AsesorAkademikUpdateManyMutationInput, AsesorAkademikUncheckedUpdateManyInput>
    /**
     * Filter which AsesorAkademiks to update
     */
    where?: AsesorAkademikWhereInput
    /**
     * Limit how many AsesorAkademiks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsesorAkademik upsert
   */
  export type AsesorAkademikUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * The filter to search for the AsesorAkademik to update in case it exists.
     */
    where: AsesorAkademikWhereUniqueInput
    /**
     * In case the AsesorAkademik found by the `where` argument doesn't exist, create a new AsesorAkademik with this data.
     */
    create: XOR<AsesorAkademikCreateInput, AsesorAkademikUncheckedCreateInput>
    /**
     * In case the AsesorAkademik was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AsesorAkademikUpdateInput, AsesorAkademikUncheckedUpdateInput>
  }

  /**
   * AsesorAkademik delete
   */
  export type AsesorAkademikDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
    /**
     * Filter which AsesorAkademik to delete.
     */
    where: AsesorAkademikWhereUniqueInput
  }

  /**
   * AsesorAkademik deleteMany
   */
  export type AsesorAkademikDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsesorAkademiks to delete
     */
    where?: AsesorAkademikWhereInput
    /**
     * Limit how many AsesorAkademiks to delete.
     */
    limit?: number
  }

  /**
   * AsesorAkademik.AsesorAkademikKeanggotaanAsosiasi
   */
  export type AsesorAkademik$AsesorAkademikKeanggotaanAsosiasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    orderBy?: AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput | AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput[]
    cursor?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum | AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum[]
  }

  /**
   * AsesorAkademik without action
   */
  export type AsesorAkademikDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademik
     */
    select?: AsesorAkademikSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademik
     */
    omit?: AsesorAkademikOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikInclude<ExtArgs> | null
  }


  /**
   * Model AsesorAkademikKeanggotaanAsosiasi
   */

  export type AggregateAsesorAkademikKeanggotaanAsosiasi = {
    _count: AsesorAkademikKeanggotaanAsosiasiCountAggregateOutputType | null
    _min: AsesorAkademikKeanggotaanAsosiasiMinAggregateOutputType | null
    _max: AsesorAkademikKeanggotaanAsosiasiMaxAggregateOutputType | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiMinAggregateOutputType = {
    AsesorAkademikKeanggotaanAsosiasiId: string | null
    AsesorAkademikId: string | null
    NamaAsosiasi: string | null
    NomorKeanggotaan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiMaxAggregateOutputType = {
    AsesorAkademikKeanggotaanAsosiasiId: string | null
    AsesorAkademikId: string | null
    NamaAsosiasi: string | null
    NomorKeanggotaan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiCountAggregateOutputType = {
    AsesorAkademikKeanggotaanAsosiasiId: number
    AsesorAkademikId: number
    NamaAsosiasi: number
    NomorKeanggotaan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type AsesorAkademikKeanggotaanAsosiasiMinAggregateInputType = {
    AsesorAkademikKeanggotaanAsosiasiId?: true
    AsesorAkademikId?: true
    NamaAsosiasi?: true
    NomorKeanggotaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AsesorAkademikKeanggotaanAsosiasiMaxAggregateInputType = {
    AsesorAkademikKeanggotaanAsosiasiId?: true
    AsesorAkademikId?: true
    NamaAsosiasi?: true
    NomorKeanggotaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AsesorAkademikKeanggotaanAsosiasiCountAggregateInputType = {
    AsesorAkademikKeanggotaanAsosiasiId?: true
    AsesorAkademikId?: true
    NamaAsosiasi?: true
    NomorKeanggotaan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type AsesorAkademikKeanggotaanAsosiasiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsesorAkademikKeanggotaanAsosiasi to aggregate.
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademikKeanggotaanAsosiasis to fetch.
     */
    orderBy?: AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput | AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademikKeanggotaanAsosiasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademikKeanggotaanAsosiasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AsesorAkademikKeanggotaanAsosiasis
    **/
    _count?: true | AsesorAkademikKeanggotaanAsosiasiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AsesorAkademikKeanggotaanAsosiasiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AsesorAkademikKeanggotaanAsosiasiMaxAggregateInputType
  }

  export type GetAsesorAkademikKeanggotaanAsosiasiAggregateType<T extends AsesorAkademikKeanggotaanAsosiasiAggregateArgs> = {
        [P in keyof T & keyof AggregateAsesorAkademikKeanggotaanAsosiasi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsesorAkademikKeanggotaanAsosiasi[P]>
      : GetScalarType<T[P], AggregateAsesorAkademikKeanggotaanAsosiasi[P]>
  }




  export type AsesorAkademikKeanggotaanAsosiasiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    orderBy?: AsesorAkademikKeanggotaanAsosiasiOrderByWithAggregationInput | AsesorAkademikKeanggotaanAsosiasiOrderByWithAggregationInput[]
    by: AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum[] | AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum
    having?: AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AsesorAkademikKeanggotaanAsosiasiCountAggregateInputType | true
    _min?: AsesorAkademikKeanggotaanAsosiasiMinAggregateInputType
    _max?: AsesorAkademikKeanggotaanAsosiasiMaxAggregateInputType
  }

  export type AsesorAkademikKeanggotaanAsosiasiGroupByOutputType = {
    AsesorAkademikKeanggotaanAsosiasiId: string
    AsesorAkademikId: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: AsesorAkademikKeanggotaanAsosiasiCountAggregateOutputType | null
    _min: AsesorAkademikKeanggotaanAsosiasiMinAggregateOutputType | null
    _max: AsesorAkademikKeanggotaanAsosiasiMaxAggregateOutputType | null
  }

  type GetAsesorAkademikKeanggotaanAsosiasiGroupByPayload<T extends AsesorAkademikKeanggotaanAsosiasiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AsesorAkademikKeanggotaanAsosiasiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AsesorAkademikKeanggotaanAsosiasiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AsesorAkademikKeanggotaanAsosiasiGroupByOutputType[P]>
            : GetScalarType<T[P], AsesorAkademikKeanggotaanAsosiasiGroupByOutputType[P]>
        }
      >
    >


  export type AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorAkademikKeanggotaanAsosiasiId?: boolean
    AsesorAkademikId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AsesorAkademik?: boolean | AsesorAkademikDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorAkademikKeanggotaanAsosiasi"]>

  export type AsesorAkademikKeanggotaanAsosiasiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorAkademikKeanggotaanAsosiasiId?: boolean
    AsesorAkademikId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AsesorAkademik?: boolean | AsesorAkademikDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorAkademikKeanggotaanAsosiasi"]>

  export type AsesorAkademikKeanggotaanAsosiasiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorAkademikKeanggotaanAsosiasiId?: boolean
    AsesorAkademikId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    AsesorAkademik?: boolean | AsesorAkademikDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorAkademikKeanggotaanAsosiasi"]>

  export type AsesorAkademikKeanggotaanAsosiasiSelectScalar = {
    AsesorAkademikKeanggotaanAsosiasiId?: boolean
    AsesorAkademikId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"AsesorAkademikKeanggotaanAsosiasiId" | "AsesorAkademikId" | "NamaAsosiasi" | "NomorKeanggotaan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["asesorAkademikKeanggotaanAsosiasi"]>
  export type AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AsesorAkademik?: boolean | AsesorAkademikDefaultArgs<ExtArgs>
  }
  export type AsesorAkademikKeanggotaanAsosiasiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AsesorAkademik?: boolean | AsesorAkademikDefaultArgs<ExtArgs>
  }
  export type AsesorAkademikKeanggotaanAsosiasiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AsesorAkademik?: boolean | AsesorAkademikDefaultArgs<ExtArgs>
  }

  export type $AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AsesorAkademikKeanggotaanAsosiasi"
    objects: {
      AsesorAkademik: Prisma.$AsesorAkademikPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      AsesorAkademikKeanggotaanAsosiasiId: string
      AsesorAkademikId: string
      NamaAsosiasi: string
      NomorKeanggotaan: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["asesorAkademikKeanggotaanAsosiasi"]>
    composites: {}
  }

  type AsesorAkademikKeanggotaanAsosiasiGetPayload<S extends boolean | null | undefined | AsesorAkademikKeanggotaanAsosiasiDefaultArgs> = $Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload, S>

  type AsesorAkademikKeanggotaanAsosiasiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AsesorAkademikKeanggotaanAsosiasiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AsesorAkademikKeanggotaanAsosiasiCountAggregateInputType | true
    }

  export interface AsesorAkademikKeanggotaanAsosiasiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AsesorAkademikKeanggotaanAsosiasi'], meta: { name: 'AsesorAkademikKeanggotaanAsosiasi' } }
    /**
     * Find zero or one AsesorAkademikKeanggotaanAsosiasi that matches the filter.
     * @param {AsesorAkademikKeanggotaanAsosiasiFindUniqueArgs} args - Arguments to find a AsesorAkademikKeanggotaanAsosiasi
     * @example
     * // Get one AsesorAkademikKeanggotaanAsosiasi
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AsesorAkademikKeanggotaanAsosiasiFindUniqueArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiFindUniqueArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AsesorAkademikKeanggotaanAsosiasi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AsesorAkademikKeanggotaanAsosiasiFindUniqueOrThrowArgs} args - Arguments to find a AsesorAkademikKeanggotaanAsosiasi
     * @example
     * // Get one AsesorAkademikKeanggotaanAsosiasi
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AsesorAkademikKeanggotaanAsosiasiFindUniqueOrThrowArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsesorAkademikKeanggotaanAsosiasi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiFindFirstArgs} args - Arguments to find a AsesorAkademikKeanggotaanAsosiasi
     * @example
     * // Get one AsesorAkademikKeanggotaanAsosiasi
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AsesorAkademikKeanggotaanAsosiasiFindFirstArgs>(args?: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiFindFirstArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsesorAkademikKeanggotaanAsosiasi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiFindFirstOrThrowArgs} args - Arguments to find a AsesorAkademikKeanggotaanAsosiasi
     * @example
     * // Get one AsesorAkademikKeanggotaanAsosiasi
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AsesorAkademikKeanggotaanAsosiasiFindFirstOrThrowArgs>(args?: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiFindFirstOrThrowArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AsesorAkademikKeanggotaanAsosiasis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AsesorAkademikKeanggotaanAsosiasis
     * const asesorAkademikKeanggotaanAsosiasis = await prisma.asesorAkademikKeanggotaanAsosiasi.findMany()
     * 
     * // Get first 10 AsesorAkademikKeanggotaanAsosiasis
     * const asesorAkademikKeanggotaanAsosiasis = await prisma.asesorAkademikKeanggotaanAsosiasi.findMany({ take: 10 })
     * 
     * // Only select the `AsesorAkademikKeanggotaanAsosiasiId`
     * const asesorAkademikKeanggotaanAsosiasiWithAsesorAkademikKeanggotaanAsosiasiIdOnly = await prisma.asesorAkademikKeanggotaanAsosiasi.findMany({ select: { AsesorAkademikKeanggotaanAsosiasiId: true } })
     * 
     */
    findMany<T extends AsesorAkademikKeanggotaanAsosiasiFindManyArgs>(args?: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AsesorAkademikKeanggotaanAsosiasi.
     * @param {AsesorAkademikKeanggotaanAsosiasiCreateArgs} args - Arguments to create a AsesorAkademikKeanggotaanAsosiasi.
     * @example
     * // Create one AsesorAkademikKeanggotaanAsosiasi
     * const AsesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.create({
     *   data: {
     *     // ... data to create a AsesorAkademikKeanggotaanAsosiasi
     *   }
     * })
     * 
     */
    create<T extends AsesorAkademikKeanggotaanAsosiasiCreateArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiCreateArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AsesorAkademikKeanggotaanAsosiasis.
     * @param {AsesorAkademikKeanggotaanAsosiasiCreateManyArgs} args - Arguments to create many AsesorAkademikKeanggotaanAsosiasis.
     * @example
     * // Create many AsesorAkademikKeanggotaanAsosiasis
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AsesorAkademikKeanggotaanAsosiasiCreateManyArgs>(args?: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AsesorAkademikKeanggotaanAsosiasis and returns the data saved in the database.
     * @param {AsesorAkademikKeanggotaanAsosiasiCreateManyAndReturnArgs} args - Arguments to create many AsesorAkademikKeanggotaanAsosiasis.
     * @example
     * // Create many AsesorAkademikKeanggotaanAsosiasis
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AsesorAkademikKeanggotaanAsosiasis and only return the `AsesorAkademikKeanggotaanAsosiasiId`
     * const asesorAkademikKeanggotaanAsosiasiWithAsesorAkademikKeanggotaanAsosiasiIdOnly = await prisma.asesorAkademikKeanggotaanAsosiasi.createManyAndReturn({
     *   select: { AsesorAkademikKeanggotaanAsosiasiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AsesorAkademikKeanggotaanAsosiasiCreateManyAndReturnArgs>(args?: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AsesorAkademikKeanggotaanAsosiasi.
     * @param {AsesorAkademikKeanggotaanAsosiasiDeleteArgs} args - Arguments to delete one AsesorAkademikKeanggotaanAsosiasi.
     * @example
     * // Delete one AsesorAkademikKeanggotaanAsosiasi
     * const AsesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.delete({
     *   where: {
     *     // ... filter to delete one AsesorAkademikKeanggotaanAsosiasi
     *   }
     * })
     * 
     */
    delete<T extends AsesorAkademikKeanggotaanAsosiasiDeleteArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiDeleteArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AsesorAkademikKeanggotaanAsosiasi.
     * @param {AsesorAkademikKeanggotaanAsosiasiUpdateArgs} args - Arguments to update one AsesorAkademikKeanggotaanAsosiasi.
     * @example
     * // Update one AsesorAkademikKeanggotaanAsosiasi
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AsesorAkademikKeanggotaanAsosiasiUpdateArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiUpdateArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AsesorAkademikKeanggotaanAsosiasis.
     * @param {AsesorAkademikKeanggotaanAsosiasiDeleteManyArgs} args - Arguments to filter AsesorAkademikKeanggotaanAsosiasis to delete.
     * @example
     * // Delete a few AsesorAkademikKeanggotaanAsosiasis
     * const { count } = await prisma.asesorAkademikKeanggotaanAsosiasi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AsesorAkademikKeanggotaanAsosiasiDeleteManyArgs>(args?: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsesorAkademikKeanggotaanAsosiasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AsesorAkademikKeanggotaanAsosiasis
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AsesorAkademikKeanggotaanAsosiasiUpdateManyArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsesorAkademikKeanggotaanAsosiasis and returns the data updated in the database.
     * @param {AsesorAkademikKeanggotaanAsosiasiUpdateManyAndReturnArgs} args - Arguments to update many AsesorAkademikKeanggotaanAsosiasis.
     * @example
     * // Update many AsesorAkademikKeanggotaanAsosiasis
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AsesorAkademikKeanggotaanAsosiasis and only return the `AsesorAkademikKeanggotaanAsosiasiId`
     * const asesorAkademikKeanggotaanAsosiasiWithAsesorAkademikKeanggotaanAsosiasiIdOnly = await prisma.asesorAkademikKeanggotaanAsosiasi.updateManyAndReturn({
     *   select: { AsesorAkademikKeanggotaanAsosiasiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AsesorAkademikKeanggotaanAsosiasiUpdateManyAndReturnArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AsesorAkademikKeanggotaanAsosiasi.
     * @param {AsesorAkademikKeanggotaanAsosiasiUpsertArgs} args - Arguments to update or create a AsesorAkademikKeanggotaanAsosiasi.
     * @example
     * // Update or create a AsesorAkademikKeanggotaanAsosiasi
     * const asesorAkademikKeanggotaanAsosiasi = await prisma.asesorAkademikKeanggotaanAsosiasi.upsert({
     *   create: {
     *     // ... data to create a AsesorAkademikKeanggotaanAsosiasi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AsesorAkademikKeanggotaanAsosiasi we want to update
     *   }
     * })
     */
    upsert<T extends AsesorAkademikKeanggotaanAsosiasiUpsertArgs>(args: SelectSubset<T, AsesorAkademikKeanggotaanAsosiasiUpsertArgs<ExtArgs>>): Prisma__AsesorAkademikKeanggotaanAsosiasiClient<$Result.GetResult<Prisma.$AsesorAkademikKeanggotaanAsosiasiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AsesorAkademikKeanggotaanAsosiasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiCountArgs} args - Arguments to filter AsesorAkademikKeanggotaanAsosiasis to count.
     * @example
     * // Count the number of AsesorAkademikKeanggotaanAsosiasis
     * const count = await prisma.asesorAkademikKeanggotaanAsosiasi.count({
     *   where: {
     *     // ... the filter for the AsesorAkademikKeanggotaanAsosiasis we want to count
     *   }
     * })
    **/
    count<T extends AsesorAkademikKeanggotaanAsosiasiCountArgs>(
      args?: Subset<T, AsesorAkademikKeanggotaanAsosiasiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AsesorAkademikKeanggotaanAsosiasiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AsesorAkademikKeanggotaanAsosiasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AsesorAkademikKeanggotaanAsosiasiAggregateArgs>(args: Subset<T, AsesorAkademikKeanggotaanAsosiasiAggregateArgs>): Prisma.PrismaPromise<GetAsesorAkademikKeanggotaanAsosiasiAggregateType<T>>

    /**
     * Group by AsesorAkademikKeanggotaanAsosiasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorAkademikKeanggotaanAsosiasiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AsesorAkademikKeanggotaanAsosiasiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AsesorAkademikKeanggotaanAsosiasiGroupByArgs['orderBy'] }
        : { orderBy?: AsesorAkademikKeanggotaanAsosiasiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AsesorAkademikKeanggotaanAsosiasiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsesorAkademikKeanggotaanAsosiasiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AsesorAkademikKeanggotaanAsosiasi model
   */
  readonly fields: AsesorAkademikKeanggotaanAsosiasiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AsesorAkademikKeanggotaanAsosiasi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AsesorAkademikKeanggotaanAsosiasiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AsesorAkademik<T extends AsesorAkademikDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AsesorAkademikDefaultArgs<ExtArgs>>): Prisma__AsesorAkademikClient<$Result.GetResult<Prisma.$AsesorAkademikPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AsesorAkademikKeanggotaanAsosiasi model
   */
  interface AsesorAkademikKeanggotaanAsosiasiFieldRefs {
    readonly AsesorAkademikKeanggotaanAsosiasiId: FieldRef<"AsesorAkademikKeanggotaanAsosiasi", 'String'>
    readonly AsesorAkademikId: FieldRef<"AsesorAkademikKeanggotaanAsosiasi", 'String'>
    readonly NamaAsosiasi: FieldRef<"AsesorAkademikKeanggotaanAsosiasi", 'String'>
    readonly NomorKeanggotaan: FieldRef<"AsesorAkademikKeanggotaanAsosiasi", 'String'>
    readonly CreatedAt: FieldRef<"AsesorAkademikKeanggotaanAsosiasi", 'DateTime'>
    readonly UpdatedAt: FieldRef<"AsesorAkademikKeanggotaanAsosiasi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AsesorAkademikKeanggotaanAsosiasi findUnique
   */
  export type AsesorAkademikKeanggotaanAsosiasiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademikKeanggotaanAsosiasi to fetch.
     */
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi findUniqueOrThrow
   */
  export type AsesorAkademikKeanggotaanAsosiasiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademikKeanggotaanAsosiasi to fetch.
     */
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi findFirst
   */
  export type AsesorAkademikKeanggotaanAsosiasiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademikKeanggotaanAsosiasi to fetch.
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademikKeanggotaanAsosiasis to fetch.
     */
    orderBy?: AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput | AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsesorAkademikKeanggotaanAsosiasis.
     */
    cursor?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademikKeanggotaanAsosiasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademikKeanggotaanAsosiasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsesorAkademikKeanggotaanAsosiasis.
     */
    distinct?: AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum | AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum[]
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi findFirstOrThrow
   */
  export type AsesorAkademikKeanggotaanAsosiasiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademikKeanggotaanAsosiasi to fetch.
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademikKeanggotaanAsosiasis to fetch.
     */
    orderBy?: AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput | AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsesorAkademikKeanggotaanAsosiasis.
     */
    cursor?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademikKeanggotaanAsosiasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademikKeanggotaanAsosiasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsesorAkademikKeanggotaanAsosiasis.
     */
    distinct?: AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum | AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum[]
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi findMany
   */
  export type AsesorAkademikKeanggotaanAsosiasiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorAkademikKeanggotaanAsosiasis to fetch.
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorAkademikKeanggotaanAsosiasis to fetch.
     */
    orderBy?: AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput | AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AsesorAkademikKeanggotaanAsosiasis.
     */
    cursor?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorAkademikKeanggotaanAsosiasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorAkademikKeanggotaanAsosiasis.
     */
    skip?: number
    distinct?: AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum | AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum[]
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi create
   */
  export type AsesorAkademikKeanggotaanAsosiasiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * The data needed to create a AsesorAkademikKeanggotaanAsosiasi.
     */
    data: XOR<AsesorAkademikKeanggotaanAsosiasiCreateInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateInput>
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi createMany
   */
  export type AsesorAkademikKeanggotaanAsosiasiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AsesorAkademikKeanggotaanAsosiasis.
     */
    data: AsesorAkademikKeanggotaanAsosiasiCreateManyInput | AsesorAkademikKeanggotaanAsosiasiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi createManyAndReturn
   */
  export type AsesorAkademikKeanggotaanAsosiasiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * The data used to create many AsesorAkademikKeanggotaanAsosiasis.
     */
    data: AsesorAkademikKeanggotaanAsosiasiCreateManyInput | AsesorAkademikKeanggotaanAsosiasiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi update
   */
  export type AsesorAkademikKeanggotaanAsosiasiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * The data needed to update a AsesorAkademikKeanggotaanAsosiasi.
     */
    data: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateInput>
    /**
     * Choose, which AsesorAkademikKeanggotaanAsosiasi to update.
     */
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi updateMany
   */
  export type AsesorAkademikKeanggotaanAsosiasiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AsesorAkademikKeanggotaanAsosiasis.
     */
    data: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateManyMutationInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyInput>
    /**
     * Filter which AsesorAkademikKeanggotaanAsosiasis to update
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * Limit how many AsesorAkademikKeanggotaanAsosiasis to update.
     */
    limit?: number
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi updateManyAndReturn
   */
  export type AsesorAkademikKeanggotaanAsosiasiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * The data used to update AsesorAkademikKeanggotaanAsosiasis.
     */
    data: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateManyMutationInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyInput>
    /**
     * Filter which AsesorAkademikKeanggotaanAsosiasis to update
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * Limit how many AsesorAkademikKeanggotaanAsosiasis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi upsert
   */
  export type AsesorAkademikKeanggotaanAsosiasiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * The filter to search for the AsesorAkademikKeanggotaanAsosiasi to update in case it exists.
     */
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    /**
     * In case the AsesorAkademikKeanggotaanAsosiasi found by the `where` argument doesn't exist, create a new AsesorAkademikKeanggotaanAsosiasi with this data.
     */
    create: XOR<AsesorAkademikKeanggotaanAsosiasiCreateInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateInput>
    /**
     * In case the AsesorAkademikKeanggotaanAsosiasi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateInput>
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi delete
   */
  export type AsesorAkademikKeanggotaanAsosiasiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
    /**
     * Filter which AsesorAkademikKeanggotaanAsosiasi to delete.
     */
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi deleteMany
   */
  export type AsesorAkademikKeanggotaanAsosiasiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsesorAkademikKeanggotaanAsosiasis to delete
     */
    where?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    /**
     * Limit how many AsesorAkademikKeanggotaanAsosiasis to delete.
     */
    limit?: number
  }

  /**
   * AsesorAkademikKeanggotaanAsosiasi without action
   */
  export type AsesorAkademikKeanggotaanAsosiasiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorAkademikKeanggotaanAsosiasi
     */
    select?: AsesorAkademikKeanggotaanAsosiasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorAkademikKeanggotaanAsosiasi
     */
    omit?: AsesorAkademikKeanggotaanAsosiasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorAkademikKeanggotaanAsosiasiInclude<ExtArgs> | null
  }


  /**
   * Model AsesorPraktisi
   */

  export type AggregateAsesorPraktisi = {
    _count: AsesorPraktisiCountAggregateOutputType | null
    _min: AsesorPraktisiMinAggregateOutputType | null
    _max: AsesorPraktisiMaxAggregateOutputType | null
  }

  export type AsesorPraktisiMinAggregateOutputType = {
    AsesorPraktisiId: string | null
    AsesorId: string | null
    NamaAsosiasi: string | null
    NomorKeanggotaan: string | null
    Jabatan: string | null
    AlamatKantor: string | null
    NamaInstansi: string | null
    JabatanInstansi: string | null
    BidangKeahlian: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type AsesorPraktisiMaxAggregateOutputType = {
    AsesorPraktisiId: string | null
    AsesorId: string | null
    NamaAsosiasi: string | null
    NomorKeanggotaan: string | null
    Jabatan: string | null
    AlamatKantor: string | null
    NamaInstansi: string | null
    JabatanInstansi: string | null
    BidangKeahlian: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type AsesorPraktisiCountAggregateOutputType = {
    AsesorPraktisiId: number
    AsesorId: number
    NamaAsosiasi: number
    NomorKeanggotaan: number
    Jabatan: number
    AlamatKantor: number
    NamaInstansi: number
    JabatanInstansi: number
    BidangKeahlian: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type AsesorPraktisiMinAggregateInputType = {
    AsesorPraktisiId?: true
    AsesorId?: true
    NamaAsosiasi?: true
    NomorKeanggotaan?: true
    Jabatan?: true
    AlamatKantor?: true
    NamaInstansi?: true
    JabatanInstansi?: true
    BidangKeahlian?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type AsesorPraktisiMaxAggregateInputType = {
    AsesorPraktisiId?: true
    AsesorId?: true
    NamaAsosiasi?: true
    NomorKeanggotaan?: true
    Jabatan?: true
    AlamatKantor?: true
    NamaInstansi?: true
    JabatanInstansi?: true
    BidangKeahlian?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type AsesorPraktisiCountAggregateInputType = {
    AsesorPraktisiId?: true
    AsesorId?: true
    NamaAsosiasi?: true
    NomorKeanggotaan?: true
    Jabatan?: true
    AlamatKantor?: true
    NamaInstansi?: true
    JabatanInstansi?: true
    BidangKeahlian?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type AsesorPraktisiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsesorPraktisi to aggregate.
     */
    where?: AsesorPraktisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorPraktisis to fetch.
     */
    orderBy?: AsesorPraktisiOrderByWithRelationInput | AsesorPraktisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AsesorPraktisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorPraktisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorPraktisis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AsesorPraktisis
    **/
    _count?: true | AsesorPraktisiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AsesorPraktisiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AsesorPraktisiMaxAggregateInputType
  }

  export type GetAsesorPraktisiAggregateType<T extends AsesorPraktisiAggregateArgs> = {
        [P in keyof T & keyof AggregateAsesorPraktisi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsesorPraktisi[P]>
      : GetScalarType<T[P], AggregateAsesorPraktisi[P]>
  }




  export type AsesorPraktisiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsesorPraktisiWhereInput
    orderBy?: AsesorPraktisiOrderByWithAggregationInput | AsesorPraktisiOrderByWithAggregationInput[]
    by: AsesorPraktisiScalarFieldEnum[] | AsesorPraktisiScalarFieldEnum
    having?: AsesorPraktisiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AsesorPraktisiCountAggregateInputType | true
    _min?: AsesorPraktisiMinAggregateInputType
    _max?: AsesorPraktisiMaxAggregateInputType
  }

  export type AsesorPraktisiGroupByOutputType = {
    AsesorPraktisiId: string
    AsesorId: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: AsesorPraktisiCountAggregateOutputType | null
    _min: AsesorPraktisiMinAggregateOutputType | null
    _max: AsesorPraktisiMaxAggregateOutputType | null
  }

  type GetAsesorPraktisiGroupByPayload<T extends AsesorPraktisiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AsesorPraktisiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AsesorPraktisiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AsesorPraktisiGroupByOutputType[P]>
            : GetScalarType<T[P], AsesorPraktisiGroupByOutputType[P]>
        }
      >
    >


  export type AsesorPraktisiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorPraktisiId?: boolean
    AsesorId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    Jabatan?: boolean
    AlamatKantor?: boolean
    NamaInstansi?: boolean
    JabatanInstansi?: boolean
    BidangKeahlian?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorPraktisi"]>

  export type AsesorPraktisiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorPraktisiId?: boolean
    AsesorId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    Jabatan?: boolean
    AlamatKantor?: boolean
    NamaInstansi?: boolean
    JabatanInstansi?: boolean
    BidangKeahlian?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorPraktisi"]>

  export type AsesorPraktisiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AsesorPraktisiId?: boolean
    AsesorId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    Jabatan?: boolean
    AlamatKantor?: boolean
    NamaInstansi?: boolean
    JabatanInstansi?: boolean
    BidangKeahlian?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asesorPraktisi"]>

  export type AsesorPraktisiSelectScalar = {
    AsesorPraktisiId?: boolean
    AsesorId?: boolean
    NamaAsosiasi?: boolean
    NomorKeanggotaan?: boolean
    Jabatan?: boolean
    AlamatKantor?: boolean
    NamaInstansi?: boolean
    JabatanInstansi?: boolean
    BidangKeahlian?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type AsesorPraktisiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"AsesorPraktisiId" | "AsesorId" | "NamaAsosiasi" | "NomorKeanggotaan" | "Jabatan" | "AlamatKantor" | "NamaInstansi" | "JabatanInstansi" | "BidangKeahlian" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["asesorPraktisi"]>
  export type AsesorPraktisiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }
  export type AsesorPraktisiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }
  export type AsesorPraktisiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
  }

  export type $AsesorPraktisiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AsesorPraktisi"
    objects: {
      Asesor: Prisma.$AsesorPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      AsesorPraktisiId: string
      AsesorId: string
      NamaAsosiasi: string
      NomorKeanggotaan: string
      Jabatan: string
      AlamatKantor: string | null
      NamaInstansi: string
      JabatanInstansi: string
      BidangKeahlian: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["asesorPraktisi"]>
    composites: {}
  }

  type AsesorPraktisiGetPayload<S extends boolean | null | undefined | AsesorPraktisiDefaultArgs> = $Result.GetResult<Prisma.$AsesorPraktisiPayload, S>

  type AsesorPraktisiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AsesorPraktisiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AsesorPraktisiCountAggregateInputType | true
    }

  export interface AsesorPraktisiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AsesorPraktisi'], meta: { name: 'AsesorPraktisi' } }
    /**
     * Find zero or one AsesorPraktisi that matches the filter.
     * @param {AsesorPraktisiFindUniqueArgs} args - Arguments to find a AsesorPraktisi
     * @example
     * // Get one AsesorPraktisi
     * const asesorPraktisi = await prisma.asesorPraktisi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AsesorPraktisiFindUniqueArgs>(args: SelectSubset<T, AsesorPraktisiFindUniqueArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AsesorPraktisi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AsesorPraktisiFindUniqueOrThrowArgs} args - Arguments to find a AsesorPraktisi
     * @example
     * // Get one AsesorPraktisi
     * const asesorPraktisi = await prisma.asesorPraktisi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AsesorPraktisiFindUniqueOrThrowArgs>(args: SelectSubset<T, AsesorPraktisiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsesorPraktisi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiFindFirstArgs} args - Arguments to find a AsesorPraktisi
     * @example
     * // Get one AsesorPraktisi
     * const asesorPraktisi = await prisma.asesorPraktisi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AsesorPraktisiFindFirstArgs>(args?: SelectSubset<T, AsesorPraktisiFindFirstArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AsesorPraktisi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiFindFirstOrThrowArgs} args - Arguments to find a AsesorPraktisi
     * @example
     * // Get one AsesorPraktisi
     * const asesorPraktisi = await prisma.asesorPraktisi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AsesorPraktisiFindFirstOrThrowArgs>(args?: SelectSubset<T, AsesorPraktisiFindFirstOrThrowArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AsesorPraktisis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AsesorPraktisis
     * const asesorPraktisis = await prisma.asesorPraktisi.findMany()
     * 
     * // Get first 10 AsesorPraktisis
     * const asesorPraktisis = await prisma.asesorPraktisi.findMany({ take: 10 })
     * 
     * // Only select the `AsesorPraktisiId`
     * const asesorPraktisiWithAsesorPraktisiIdOnly = await prisma.asesorPraktisi.findMany({ select: { AsesorPraktisiId: true } })
     * 
     */
    findMany<T extends AsesorPraktisiFindManyArgs>(args?: SelectSubset<T, AsesorPraktisiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AsesorPraktisi.
     * @param {AsesorPraktisiCreateArgs} args - Arguments to create a AsesorPraktisi.
     * @example
     * // Create one AsesorPraktisi
     * const AsesorPraktisi = await prisma.asesorPraktisi.create({
     *   data: {
     *     // ... data to create a AsesorPraktisi
     *   }
     * })
     * 
     */
    create<T extends AsesorPraktisiCreateArgs>(args: SelectSubset<T, AsesorPraktisiCreateArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AsesorPraktisis.
     * @param {AsesorPraktisiCreateManyArgs} args - Arguments to create many AsesorPraktisis.
     * @example
     * // Create many AsesorPraktisis
     * const asesorPraktisi = await prisma.asesorPraktisi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AsesorPraktisiCreateManyArgs>(args?: SelectSubset<T, AsesorPraktisiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AsesorPraktisis and returns the data saved in the database.
     * @param {AsesorPraktisiCreateManyAndReturnArgs} args - Arguments to create many AsesorPraktisis.
     * @example
     * // Create many AsesorPraktisis
     * const asesorPraktisi = await prisma.asesorPraktisi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AsesorPraktisis and only return the `AsesorPraktisiId`
     * const asesorPraktisiWithAsesorPraktisiIdOnly = await prisma.asesorPraktisi.createManyAndReturn({
     *   select: { AsesorPraktisiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AsesorPraktisiCreateManyAndReturnArgs>(args?: SelectSubset<T, AsesorPraktisiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AsesorPraktisi.
     * @param {AsesorPraktisiDeleteArgs} args - Arguments to delete one AsesorPraktisi.
     * @example
     * // Delete one AsesorPraktisi
     * const AsesorPraktisi = await prisma.asesorPraktisi.delete({
     *   where: {
     *     // ... filter to delete one AsesorPraktisi
     *   }
     * })
     * 
     */
    delete<T extends AsesorPraktisiDeleteArgs>(args: SelectSubset<T, AsesorPraktisiDeleteArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AsesorPraktisi.
     * @param {AsesorPraktisiUpdateArgs} args - Arguments to update one AsesorPraktisi.
     * @example
     * // Update one AsesorPraktisi
     * const asesorPraktisi = await prisma.asesorPraktisi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AsesorPraktisiUpdateArgs>(args: SelectSubset<T, AsesorPraktisiUpdateArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AsesorPraktisis.
     * @param {AsesorPraktisiDeleteManyArgs} args - Arguments to filter AsesorPraktisis to delete.
     * @example
     * // Delete a few AsesorPraktisis
     * const { count } = await prisma.asesorPraktisi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AsesorPraktisiDeleteManyArgs>(args?: SelectSubset<T, AsesorPraktisiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsesorPraktisis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AsesorPraktisis
     * const asesorPraktisi = await prisma.asesorPraktisi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AsesorPraktisiUpdateManyArgs>(args: SelectSubset<T, AsesorPraktisiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AsesorPraktisis and returns the data updated in the database.
     * @param {AsesorPraktisiUpdateManyAndReturnArgs} args - Arguments to update many AsesorPraktisis.
     * @example
     * // Update many AsesorPraktisis
     * const asesorPraktisi = await prisma.asesorPraktisi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AsesorPraktisis and only return the `AsesorPraktisiId`
     * const asesorPraktisiWithAsesorPraktisiIdOnly = await prisma.asesorPraktisi.updateManyAndReturn({
     *   select: { AsesorPraktisiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AsesorPraktisiUpdateManyAndReturnArgs>(args: SelectSubset<T, AsesorPraktisiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AsesorPraktisi.
     * @param {AsesorPraktisiUpsertArgs} args - Arguments to update or create a AsesorPraktisi.
     * @example
     * // Update or create a AsesorPraktisi
     * const asesorPraktisi = await prisma.asesorPraktisi.upsert({
     *   create: {
     *     // ... data to create a AsesorPraktisi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AsesorPraktisi we want to update
     *   }
     * })
     */
    upsert<T extends AsesorPraktisiUpsertArgs>(args: SelectSubset<T, AsesorPraktisiUpsertArgs<ExtArgs>>): Prisma__AsesorPraktisiClient<$Result.GetResult<Prisma.$AsesorPraktisiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AsesorPraktisis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiCountArgs} args - Arguments to filter AsesorPraktisis to count.
     * @example
     * // Count the number of AsesorPraktisis
     * const count = await prisma.asesorPraktisi.count({
     *   where: {
     *     // ... the filter for the AsesorPraktisis we want to count
     *   }
     * })
    **/
    count<T extends AsesorPraktisiCountArgs>(
      args?: Subset<T, AsesorPraktisiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AsesorPraktisiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AsesorPraktisi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AsesorPraktisiAggregateArgs>(args: Subset<T, AsesorPraktisiAggregateArgs>): Prisma.PrismaPromise<GetAsesorPraktisiAggregateType<T>>

    /**
     * Group by AsesorPraktisi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsesorPraktisiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AsesorPraktisiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AsesorPraktisiGroupByArgs['orderBy'] }
        : { orderBy?: AsesorPraktisiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AsesorPraktisiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsesorPraktisiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AsesorPraktisi model
   */
  readonly fields: AsesorPraktisiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AsesorPraktisi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AsesorPraktisiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Asesor<T extends AsesorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AsesorDefaultArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AsesorPraktisi model
   */
  interface AsesorPraktisiFieldRefs {
    readonly AsesorPraktisiId: FieldRef<"AsesorPraktisi", 'String'>
    readonly AsesorId: FieldRef<"AsesorPraktisi", 'String'>
    readonly NamaAsosiasi: FieldRef<"AsesorPraktisi", 'String'>
    readonly NomorKeanggotaan: FieldRef<"AsesorPraktisi", 'String'>
    readonly Jabatan: FieldRef<"AsesorPraktisi", 'String'>
    readonly AlamatKantor: FieldRef<"AsesorPraktisi", 'String'>
    readonly NamaInstansi: FieldRef<"AsesorPraktisi", 'String'>
    readonly JabatanInstansi: FieldRef<"AsesorPraktisi", 'String'>
    readonly BidangKeahlian: FieldRef<"AsesorPraktisi", 'String'>
    readonly CreatedAt: FieldRef<"AsesorPraktisi", 'DateTime'>
    readonly UpdatedAt: FieldRef<"AsesorPraktisi", 'DateTime'>
    readonly DeletedAt: FieldRef<"AsesorPraktisi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AsesorPraktisi findUnique
   */
  export type AsesorPraktisiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorPraktisi to fetch.
     */
    where: AsesorPraktisiWhereUniqueInput
  }

  /**
   * AsesorPraktisi findUniqueOrThrow
   */
  export type AsesorPraktisiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorPraktisi to fetch.
     */
    where: AsesorPraktisiWhereUniqueInput
  }

  /**
   * AsesorPraktisi findFirst
   */
  export type AsesorPraktisiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorPraktisi to fetch.
     */
    where?: AsesorPraktisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorPraktisis to fetch.
     */
    orderBy?: AsesorPraktisiOrderByWithRelationInput | AsesorPraktisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsesorPraktisis.
     */
    cursor?: AsesorPraktisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorPraktisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorPraktisis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsesorPraktisis.
     */
    distinct?: AsesorPraktisiScalarFieldEnum | AsesorPraktisiScalarFieldEnum[]
  }

  /**
   * AsesorPraktisi findFirstOrThrow
   */
  export type AsesorPraktisiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorPraktisi to fetch.
     */
    where?: AsesorPraktisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorPraktisis to fetch.
     */
    orderBy?: AsesorPraktisiOrderByWithRelationInput | AsesorPraktisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AsesorPraktisis.
     */
    cursor?: AsesorPraktisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorPraktisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorPraktisis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AsesorPraktisis.
     */
    distinct?: AsesorPraktisiScalarFieldEnum | AsesorPraktisiScalarFieldEnum[]
  }

  /**
   * AsesorPraktisi findMany
   */
  export type AsesorPraktisiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * Filter, which AsesorPraktisis to fetch.
     */
    where?: AsesorPraktisiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AsesorPraktisis to fetch.
     */
    orderBy?: AsesorPraktisiOrderByWithRelationInput | AsesorPraktisiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AsesorPraktisis.
     */
    cursor?: AsesorPraktisiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AsesorPraktisis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AsesorPraktisis.
     */
    skip?: number
    distinct?: AsesorPraktisiScalarFieldEnum | AsesorPraktisiScalarFieldEnum[]
  }

  /**
   * AsesorPraktisi create
   */
  export type AsesorPraktisiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * The data needed to create a AsesorPraktisi.
     */
    data: XOR<AsesorPraktisiCreateInput, AsesorPraktisiUncheckedCreateInput>
  }

  /**
   * AsesorPraktisi createMany
   */
  export type AsesorPraktisiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AsesorPraktisis.
     */
    data: AsesorPraktisiCreateManyInput | AsesorPraktisiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AsesorPraktisi createManyAndReturn
   */
  export type AsesorPraktisiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * The data used to create many AsesorPraktisis.
     */
    data: AsesorPraktisiCreateManyInput | AsesorPraktisiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsesorPraktisi update
   */
  export type AsesorPraktisiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * The data needed to update a AsesorPraktisi.
     */
    data: XOR<AsesorPraktisiUpdateInput, AsesorPraktisiUncheckedUpdateInput>
    /**
     * Choose, which AsesorPraktisi to update.
     */
    where: AsesorPraktisiWhereUniqueInput
  }

  /**
   * AsesorPraktisi updateMany
   */
  export type AsesorPraktisiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AsesorPraktisis.
     */
    data: XOR<AsesorPraktisiUpdateManyMutationInput, AsesorPraktisiUncheckedUpdateManyInput>
    /**
     * Filter which AsesorPraktisis to update
     */
    where?: AsesorPraktisiWhereInput
    /**
     * Limit how many AsesorPraktisis to update.
     */
    limit?: number
  }

  /**
   * AsesorPraktisi updateManyAndReturn
   */
  export type AsesorPraktisiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * The data used to update AsesorPraktisis.
     */
    data: XOR<AsesorPraktisiUpdateManyMutationInput, AsesorPraktisiUncheckedUpdateManyInput>
    /**
     * Filter which AsesorPraktisis to update
     */
    where?: AsesorPraktisiWhereInput
    /**
     * Limit how many AsesorPraktisis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AsesorPraktisi upsert
   */
  export type AsesorPraktisiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * The filter to search for the AsesorPraktisi to update in case it exists.
     */
    where: AsesorPraktisiWhereUniqueInput
    /**
     * In case the AsesorPraktisi found by the `where` argument doesn't exist, create a new AsesorPraktisi with this data.
     */
    create: XOR<AsesorPraktisiCreateInput, AsesorPraktisiUncheckedCreateInput>
    /**
     * In case the AsesorPraktisi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AsesorPraktisiUpdateInput, AsesorPraktisiUncheckedUpdateInput>
  }

  /**
   * AsesorPraktisi delete
   */
  export type AsesorPraktisiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
    /**
     * Filter which AsesorPraktisi to delete.
     */
    where: AsesorPraktisiWhereUniqueInput
  }

  /**
   * AsesorPraktisi deleteMany
   */
  export type AsesorPraktisiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AsesorPraktisis to delete
     */
    where?: AsesorPraktisiWhereInput
    /**
     * Limit how many AsesorPraktisis to delete.
     */
    limit?: number
  }

  /**
   * AsesorPraktisi without action
   */
  export type AsesorPraktisiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AsesorPraktisi
     */
    select?: AsesorPraktisiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AsesorPraktisi
     */
    omit?: AsesorPraktisiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorPraktisiInclude<ExtArgs> | null
  }


  /**
   * Model AssesorMahasiswa
   */

  export type AggregateAssesorMahasiswa = {
    _count: AssesorMahasiswaCountAggregateOutputType | null
    _avg: AssesorMahasiswaAvgAggregateOutputType | null
    _sum: AssesorMahasiswaSumAggregateOutputType | null
    _min: AssesorMahasiswaMinAggregateOutputType | null
    _max: AssesorMahasiswaMaxAggregateOutputType | null
  }

  export type AssesorMahasiswaAvgAggregateOutputType = {
    Urutan: number | null
  }

  export type AssesorMahasiswaSumAggregateOutputType = {
    Urutan: number | null
  }

  export type AssesorMahasiswaMinAggregateOutputType = {
    AssesorMahasiswaId: string | null
    PendaftaranId: string | null
    AsesorId: string | null
    Urutan: number | null
    Confirmation: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AssesorMahasiswaMaxAggregateOutputType = {
    AssesorMahasiswaId: string | null
    PendaftaranId: string | null
    AsesorId: string | null
    Urutan: number | null
    Confirmation: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type AssesorMahasiswaCountAggregateOutputType = {
    AssesorMahasiswaId: number
    PendaftaranId: number
    AsesorId: number
    Urutan: number
    Confirmation: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type AssesorMahasiswaAvgAggregateInputType = {
    Urutan?: true
  }

  export type AssesorMahasiswaSumAggregateInputType = {
    Urutan?: true
  }

  export type AssesorMahasiswaMinAggregateInputType = {
    AssesorMahasiswaId?: true
    PendaftaranId?: true
    AsesorId?: true
    Urutan?: true
    Confirmation?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AssesorMahasiswaMaxAggregateInputType = {
    AssesorMahasiswaId?: true
    PendaftaranId?: true
    AsesorId?: true
    Urutan?: true
    Confirmation?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type AssesorMahasiswaCountAggregateInputType = {
    AssesorMahasiswaId?: true
    PendaftaranId?: true
    AsesorId?: true
    Urutan?: true
    Confirmation?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type AssesorMahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssesorMahasiswa to aggregate.
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssesorMahasiswas to fetch.
     */
    orderBy?: AssesorMahasiswaOrderByWithRelationInput | AssesorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssesorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssesorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssesorMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AssesorMahasiswas
    **/
    _count?: true | AssesorMahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AssesorMahasiswaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AssesorMahasiswaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssesorMahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssesorMahasiswaMaxAggregateInputType
  }

  export type GetAssesorMahasiswaAggregateType<T extends AssesorMahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregateAssesorMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssesorMahasiswa[P]>
      : GetScalarType<T[P], AggregateAssesorMahasiswa[P]>
  }




  export type AssesorMahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssesorMahasiswaWhereInput
    orderBy?: AssesorMahasiswaOrderByWithAggregationInput | AssesorMahasiswaOrderByWithAggregationInput[]
    by: AssesorMahasiswaScalarFieldEnum[] | AssesorMahasiswaScalarFieldEnum
    having?: AssesorMahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssesorMahasiswaCountAggregateInputType | true
    _avg?: AssesorMahasiswaAvgAggregateInputType
    _sum?: AssesorMahasiswaSumAggregateInputType
    _min?: AssesorMahasiswaMinAggregateInputType
    _max?: AssesorMahasiswaMaxAggregateInputType
  }

  export type AssesorMahasiswaGroupByOutputType = {
    AssesorMahasiswaId: string
    PendaftaranId: string
    AsesorId: string
    Urutan: number
    Confirmation: boolean
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: AssesorMahasiswaCountAggregateOutputType | null
    _avg: AssesorMahasiswaAvgAggregateOutputType | null
    _sum: AssesorMahasiswaSumAggregateOutputType | null
    _min: AssesorMahasiswaMinAggregateOutputType | null
    _max: AssesorMahasiswaMaxAggregateOutputType | null
  }

  type GetAssesorMahasiswaGroupByPayload<T extends AssesorMahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssesorMahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssesorMahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssesorMahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], AssesorMahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type AssesorMahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AssesorMahasiswaId?: boolean
    PendaftaranId?: boolean
    AsesorId?: boolean
    Urutan?: boolean
    Confirmation?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    SkRektorAssesor?: boolean | AssesorMahasiswa$SkRektorAssesorArgs<ExtArgs>
    _count?: boolean | AssesorMahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assesorMahasiswa"]>

  export type AssesorMahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AssesorMahasiswaId?: boolean
    PendaftaranId?: boolean
    AsesorId?: boolean
    Urutan?: boolean
    Confirmation?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assesorMahasiswa"]>

  export type AssesorMahasiswaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    AssesorMahasiswaId?: boolean
    PendaftaranId?: boolean
    AsesorId?: boolean
    Urutan?: boolean
    Confirmation?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assesorMahasiswa"]>

  export type AssesorMahasiswaSelectScalar = {
    AssesorMahasiswaId?: boolean
    PendaftaranId?: boolean
    AsesorId?: boolean
    Urutan?: boolean
    Confirmation?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type AssesorMahasiswaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"AssesorMahasiswaId" | "PendaftaranId" | "AsesorId" | "Urutan" | "Confirmation" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["assesorMahasiswa"]>
  export type AssesorMahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    SkRektorAssesor?: boolean | AssesorMahasiswa$SkRektorAssesorArgs<ExtArgs>
    _count?: boolean | AssesorMahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AssesorMahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type AssesorMahasiswaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | AsesorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $AssesorMahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AssesorMahasiswa"
    objects: {
      Asesor: Prisma.$AsesorPayload<ExtArgs>
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
      SkRektorAssesor: Prisma.$SkRektorAssesorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      AssesorMahasiswaId: string
      PendaftaranId: string
      AsesorId: string
      Urutan: number
      Confirmation: boolean
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["assesorMahasiswa"]>
    composites: {}
  }

  type AssesorMahasiswaGetPayload<S extends boolean | null | undefined | AssesorMahasiswaDefaultArgs> = $Result.GetResult<Prisma.$AssesorMahasiswaPayload, S>

  type AssesorMahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssesorMahasiswaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssesorMahasiswaCountAggregateInputType | true
    }

  export interface AssesorMahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AssesorMahasiswa'], meta: { name: 'AssesorMahasiswa' } }
    /**
     * Find zero or one AssesorMahasiswa that matches the filter.
     * @param {AssesorMahasiswaFindUniqueArgs} args - Arguments to find a AssesorMahasiswa
     * @example
     * // Get one AssesorMahasiswa
     * const assesorMahasiswa = await prisma.assesorMahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssesorMahasiswaFindUniqueArgs>(args: SelectSubset<T, AssesorMahasiswaFindUniqueArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AssesorMahasiswa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssesorMahasiswaFindUniqueOrThrowArgs} args - Arguments to find a AssesorMahasiswa
     * @example
     * // Get one AssesorMahasiswa
     * const assesorMahasiswa = await prisma.assesorMahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssesorMahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, AssesorMahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssesorMahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaFindFirstArgs} args - Arguments to find a AssesorMahasiswa
     * @example
     * // Get one AssesorMahasiswa
     * const assesorMahasiswa = await prisma.assesorMahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssesorMahasiswaFindFirstArgs>(args?: SelectSubset<T, AssesorMahasiswaFindFirstArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssesorMahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaFindFirstOrThrowArgs} args - Arguments to find a AssesorMahasiswa
     * @example
     * // Get one AssesorMahasiswa
     * const assesorMahasiswa = await prisma.assesorMahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssesorMahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, AssesorMahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AssesorMahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AssesorMahasiswas
     * const assesorMahasiswas = await prisma.assesorMahasiswa.findMany()
     * 
     * // Get first 10 AssesorMahasiswas
     * const assesorMahasiswas = await prisma.assesorMahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `AssesorMahasiswaId`
     * const assesorMahasiswaWithAssesorMahasiswaIdOnly = await prisma.assesorMahasiswa.findMany({ select: { AssesorMahasiswaId: true } })
     * 
     */
    findMany<T extends AssesorMahasiswaFindManyArgs>(args?: SelectSubset<T, AssesorMahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AssesorMahasiswa.
     * @param {AssesorMahasiswaCreateArgs} args - Arguments to create a AssesorMahasiswa.
     * @example
     * // Create one AssesorMahasiswa
     * const AssesorMahasiswa = await prisma.assesorMahasiswa.create({
     *   data: {
     *     // ... data to create a AssesorMahasiswa
     *   }
     * })
     * 
     */
    create<T extends AssesorMahasiswaCreateArgs>(args: SelectSubset<T, AssesorMahasiswaCreateArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AssesorMahasiswas.
     * @param {AssesorMahasiswaCreateManyArgs} args - Arguments to create many AssesorMahasiswas.
     * @example
     * // Create many AssesorMahasiswas
     * const assesorMahasiswa = await prisma.assesorMahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssesorMahasiswaCreateManyArgs>(args?: SelectSubset<T, AssesorMahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AssesorMahasiswas and returns the data saved in the database.
     * @param {AssesorMahasiswaCreateManyAndReturnArgs} args - Arguments to create many AssesorMahasiswas.
     * @example
     * // Create many AssesorMahasiswas
     * const assesorMahasiswa = await prisma.assesorMahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AssesorMahasiswas and only return the `AssesorMahasiswaId`
     * const assesorMahasiswaWithAssesorMahasiswaIdOnly = await prisma.assesorMahasiswa.createManyAndReturn({
     *   select: { AssesorMahasiswaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssesorMahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, AssesorMahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AssesorMahasiswa.
     * @param {AssesorMahasiswaDeleteArgs} args - Arguments to delete one AssesorMahasiswa.
     * @example
     * // Delete one AssesorMahasiswa
     * const AssesorMahasiswa = await prisma.assesorMahasiswa.delete({
     *   where: {
     *     // ... filter to delete one AssesorMahasiswa
     *   }
     * })
     * 
     */
    delete<T extends AssesorMahasiswaDeleteArgs>(args: SelectSubset<T, AssesorMahasiswaDeleteArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AssesorMahasiswa.
     * @param {AssesorMahasiswaUpdateArgs} args - Arguments to update one AssesorMahasiswa.
     * @example
     * // Update one AssesorMahasiswa
     * const assesorMahasiswa = await prisma.assesorMahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssesorMahasiswaUpdateArgs>(args: SelectSubset<T, AssesorMahasiswaUpdateArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AssesorMahasiswas.
     * @param {AssesorMahasiswaDeleteManyArgs} args - Arguments to filter AssesorMahasiswas to delete.
     * @example
     * // Delete a few AssesorMahasiswas
     * const { count } = await prisma.assesorMahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssesorMahasiswaDeleteManyArgs>(args?: SelectSubset<T, AssesorMahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssesorMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AssesorMahasiswas
     * const assesorMahasiswa = await prisma.assesorMahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssesorMahasiswaUpdateManyArgs>(args: SelectSubset<T, AssesorMahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssesorMahasiswas and returns the data updated in the database.
     * @param {AssesorMahasiswaUpdateManyAndReturnArgs} args - Arguments to update many AssesorMahasiswas.
     * @example
     * // Update many AssesorMahasiswas
     * const assesorMahasiswa = await prisma.assesorMahasiswa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AssesorMahasiswas and only return the `AssesorMahasiswaId`
     * const assesorMahasiswaWithAssesorMahasiswaIdOnly = await prisma.assesorMahasiswa.updateManyAndReturn({
     *   select: { AssesorMahasiswaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssesorMahasiswaUpdateManyAndReturnArgs>(args: SelectSubset<T, AssesorMahasiswaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AssesorMahasiswa.
     * @param {AssesorMahasiswaUpsertArgs} args - Arguments to update or create a AssesorMahasiswa.
     * @example
     * // Update or create a AssesorMahasiswa
     * const assesorMahasiswa = await prisma.assesorMahasiswa.upsert({
     *   create: {
     *     // ... data to create a AssesorMahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AssesorMahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends AssesorMahasiswaUpsertArgs>(args: SelectSubset<T, AssesorMahasiswaUpsertArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AssesorMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaCountArgs} args - Arguments to filter AssesorMahasiswas to count.
     * @example
     * // Count the number of AssesorMahasiswas
     * const count = await prisma.assesorMahasiswa.count({
     *   where: {
     *     // ... the filter for the AssesorMahasiswas we want to count
     *   }
     * })
    **/
    count<T extends AssesorMahasiswaCountArgs>(
      args?: Subset<T, AssesorMahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssesorMahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AssesorMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssesorMahasiswaAggregateArgs>(args: Subset<T, AssesorMahasiswaAggregateArgs>): Prisma.PrismaPromise<GetAssesorMahasiswaAggregateType<T>>

    /**
     * Group by AssesorMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssesorMahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssesorMahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssesorMahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: AssesorMahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssesorMahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssesorMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AssesorMahasiswa model
   */
  readonly fields: AssesorMahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AssesorMahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssesorMahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Asesor<T extends AsesorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AsesorDefaultArgs<ExtArgs>>): Prisma__AsesorClient<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    SkRektorAssesor<T extends AssesorMahasiswa$SkRektorAssesorArgs<ExtArgs> = {}>(args?: Subset<T, AssesorMahasiswa$SkRektorAssesorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AssesorMahasiswa model
   */
  interface AssesorMahasiswaFieldRefs {
    readonly AssesorMahasiswaId: FieldRef<"AssesorMahasiswa", 'String'>
    readonly PendaftaranId: FieldRef<"AssesorMahasiswa", 'String'>
    readonly AsesorId: FieldRef<"AssesorMahasiswa", 'String'>
    readonly Urutan: FieldRef<"AssesorMahasiswa", 'Int'>
    readonly Confirmation: FieldRef<"AssesorMahasiswa", 'Boolean'>
    readonly CreatedAt: FieldRef<"AssesorMahasiswa", 'DateTime'>
    readonly UpdatedAt: FieldRef<"AssesorMahasiswa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AssesorMahasiswa findUnique
   */
  export type AssesorMahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which AssesorMahasiswa to fetch.
     */
    where: AssesorMahasiswaWhereUniqueInput
  }

  /**
   * AssesorMahasiswa findUniqueOrThrow
   */
  export type AssesorMahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which AssesorMahasiswa to fetch.
     */
    where: AssesorMahasiswaWhereUniqueInput
  }

  /**
   * AssesorMahasiswa findFirst
   */
  export type AssesorMahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which AssesorMahasiswa to fetch.
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssesorMahasiswas to fetch.
     */
    orderBy?: AssesorMahasiswaOrderByWithRelationInput | AssesorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssesorMahasiswas.
     */
    cursor?: AssesorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssesorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssesorMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssesorMahasiswas.
     */
    distinct?: AssesorMahasiswaScalarFieldEnum | AssesorMahasiswaScalarFieldEnum[]
  }

  /**
   * AssesorMahasiswa findFirstOrThrow
   */
  export type AssesorMahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which AssesorMahasiswa to fetch.
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssesorMahasiswas to fetch.
     */
    orderBy?: AssesorMahasiswaOrderByWithRelationInput | AssesorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssesorMahasiswas.
     */
    cursor?: AssesorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssesorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssesorMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssesorMahasiswas.
     */
    distinct?: AssesorMahasiswaScalarFieldEnum | AssesorMahasiswaScalarFieldEnum[]
  }

  /**
   * AssesorMahasiswa findMany
   */
  export type AssesorMahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which AssesorMahasiswas to fetch.
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssesorMahasiswas to fetch.
     */
    orderBy?: AssesorMahasiswaOrderByWithRelationInput | AssesorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AssesorMahasiswas.
     */
    cursor?: AssesorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssesorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssesorMahasiswas.
     */
    skip?: number
    distinct?: AssesorMahasiswaScalarFieldEnum | AssesorMahasiswaScalarFieldEnum[]
  }

  /**
   * AssesorMahasiswa create
   */
  export type AssesorMahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a AssesorMahasiswa.
     */
    data: XOR<AssesorMahasiswaCreateInput, AssesorMahasiswaUncheckedCreateInput>
  }

  /**
   * AssesorMahasiswa createMany
   */
  export type AssesorMahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AssesorMahasiswas.
     */
    data: AssesorMahasiswaCreateManyInput | AssesorMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssesorMahasiswa createManyAndReturn
   */
  export type AssesorMahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to create many AssesorMahasiswas.
     */
    data: AssesorMahasiswaCreateManyInput | AssesorMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssesorMahasiswa update
   */
  export type AssesorMahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a AssesorMahasiswa.
     */
    data: XOR<AssesorMahasiswaUpdateInput, AssesorMahasiswaUncheckedUpdateInput>
    /**
     * Choose, which AssesorMahasiswa to update.
     */
    where: AssesorMahasiswaWhereUniqueInput
  }

  /**
   * AssesorMahasiswa updateMany
   */
  export type AssesorMahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AssesorMahasiswas.
     */
    data: XOR<AssesorMahasiswaUpdateManyMutationInput, AssesorMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which AssesorMahasiswas to update
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * Limit how many AssesorMahasiswas to update.
     */
    limit?: number
  }

  /**
   * AssesorMahasiswa updateManyAndReturn
   */
  export type AssesorMahasiswaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to update AssesorMahasiswas.
     */
    data: XOR<AssesorMahasiswaUpdateManyMutationInput, AssesorMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which AssesorMahasiswas to update
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * Limit how many AssesorMahasiswas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssesorMahasiswa upsert
   */
  export type AssesorMahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the AssesorMahasiswa to update in case it exists.
     */
    where: AssesorMahasiswaWhereUniqueInput
    /**
     * In case the AssesorMahasiswa found by the `where` argument doesn't exist, create a new AssesorMahasiswa with this data.
     */
    create: XOR<AssesorMahasiswaCreateInput, AssesorMahasiswaUncheckedCreateInput>
    /**
     * In case the AssesorMahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssesorMahasiswaUpdateInput, AssesorMahasiswaUncheckedUpdateInput>
  }

  /**
   * AssesorMahasiswa delete
   */
  export type AssesorMahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter which AssesorMahasiswa to delete.
     */
    where: AssesorMahasiswaWhereUniqueInput
  }

  /**
   * AssesorMahasiswa deleteMany
   */
  export type AssesorMahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssesorMahasiswas to delete
     */
    where?: AssesorMahasiswaWhereInput
    /**
     * Limit how many AssesorMahasiswas to delete.
     */
    limit?: number
  }

  /**
   * AssesorMahasiswa.SkRektorAssesor
   */
  export type AssesorMahasiswa$SkRektorAssesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    where?: SkRektorAssesorWhereInput
    orderBy?: SkRektorAssesorOrderByWithRelationInput | SkRektorAssesorOrderByWithRelationInput[]
    cursor?: SkRektorAssesorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkRektorAssesorScalarFieldEnum | SkRektorAssesorScalarFieldEnum[]
  }

  /**
   * AssesorMahasiswa without action
   */
  export type AssesorMahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model BuktiForm
   */

  export type AggregateBuktiForm = {
    _count: BuktiFormCountAggregateOutputType | null
    _min: BuktiFormMinAggregateOutputType | null
    _max: BuktiFormMaxAggregateOutputType | null
  }

  export type BuktiFormMinAggregateOutputType = {
    BuktiFormId: string | null
    PendaftaranId: string | null
    JenisDokumenId: string | null
    NamaFile: string | null
    NamaDokumen: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type BuktiFormMaxAggregateOutputType = {
    BuktiFormId: string | null
    PendaftaranId: string | null
    JenisDokumenId: string | null
    NamaFile: string | null
    NamaDokumen: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type BuktiFormCountAggregateOutputType = {
    BuktiFormId: number
    PendaftaranId: number
    JenisDokumenId: number
    NamaFile: number
    NamaDokumen: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type BuktiFormMinAggregateInputType = {
    BuktiFormId?: true
    PendaftaranId?: true
    JenisDokumenId?: true
    NamaFile?: true
    NamaDokumen?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type BuktiFormMaxAggregateInputType = {
    BuktiFormId?: true
    PendaftaranId?: true
    JenisDokumenId?: true
    NamaFile?: true
    NamaDokumen?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type BuktiFormCountAggregateInputType = {
    BuktiFormId?: true
    PendaftaranId?: true
    JenisDokumenId?: true
    NamaFile?: true
    NamaDokumen?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type BuktiFormAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BuktiForm to aggregate.
     */
    where?: BuktiFormWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiForms to fetch.
     */
    orderBy?: BuktiFormOrderByWithRelationInput | BuktiFormOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BuktiFormWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiForms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiForms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BuktiForms
    **/
    _count?: true | BuktiFormCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BuktiFormMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BuktiFormMaxAggregateInputType
  }

  export type GetBuktiFormAggregateType<T extends BuktiFormAggregateArgs> = {
        [P in keyof T & keyof AggregateBuktiForm]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuktiForm[P]>
      : GetScalarType<T[P], AggregateBuktiForm[P]>
  }




  export type BuktiFormGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuktiFormWhereInput
    orderBy?: BuktiFormOrderByWithAggregationInput | BuktiFormOrderByWithAggregationInput[]
    by: BuktiFormScalarFieldEnum[] | BuktiFormScalarFieldEnum
    having?: BuktiFormScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BuktiFormCountAggregateInputType | true
    _min?: BuktiFormMinAggregateInputType
    _max?: BuktiFormMaxAggregateInputType
  }

  export type BuktiFormGroupByOutputType = {
    BuktiFormId: string
    PendaftaranId: string
    JenisDokumenId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: BuktiFormCountAggregateOutputType | null
    _min: BuktiFormMinAggregateOutputType | null
    _max: BuktiFormMaxAggregateOutputType | null
  }

  type GetBuktiFormGroupByPayload<T extends BuktiFormGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BuktiFormGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BuktiFormGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BuktiFormGroupByOutputType[P]>
            : GetScalarType<T[P], BuktiFormGroupByOutputType[P]>
        }
      >
    >


  export type BuktiFormSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    BuktiFormId?: boolean
    PendaftaranId?: boolean
    JenisDokumenId?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    JenisDokumen?: boolean | JenisDokumenDefaultArgs<ExtArgs>
    BuktiFormEvaluasiDiri?: boolean | BuktiForm$BuktiFormEvaluasiDiriArgs<ExtArgs>
    _count?: boolean | BuktiFormCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buktiForm"]>

  export type BuktiFormSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    BuktiFormId?: boolean
    PendaftaranId?: boolean
    JenisDokumenId?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    JenisDokumen?: boolean | JenisDokumenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buktiForm"]>

  export type BuktiFormSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    BuktiFormId?: boolean
    PendaftaranId?: boolean
    JenisDokumenId?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    JenisDokumen?: boolean | JenisDokumenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buktiForm"]>

  export type BuktiFormSelectScalar = {
    BuktiFormId?: boolean
    PendaftaranId?: boolean
    JenisDokumenId?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type BuktiFormOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"BuktiFormId" | "PendaftaranId" | "JenisDokumenId" | "NamaFile" | "NamaDokumen" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["buktiForm"]>
  export type BuktiFormInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    JenisDokumen?: boolean | JenisDokumenDefaultArgs<ExtArgs>
    BuktiFormEvaluasiDiri?: boolean | BuktiForm$BuktiFormEvaluasiDiriArgs<ExtArgs>
    _count?: boolean | BuktiFormCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BuktiFormIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    JenisDokumen?: boolean | JenisDokumenDefaultArgs<ExtArgs>
  }
  export type BuktiFormIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    JenisDokumen?: boolean | JenisDokumenDefaultArgs<ExtArgs>
  }

  export type $BuktiFormPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BuktiForm"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
      JenisDokumen: Prisma.$JenisDokumenPayload<ExtArgs>
      BuktiFormEvaluasiDiri: Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      BuktiFormId: string
      PendaftaranId: string
      JenisDokumenId: string
      NamaFile: string
      NamaDokumen: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["buktiForm"]>
    composites: {}
  }

  type BuktiFormGetPayload<S extends boolean | null | undefined | BuktiFormDefaultArgs> = $Result.GetResult<Prisma.$BuktiFormPayload, S>

  type BuktiFormCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BuktiFormFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BuktiFormCountAggregateInputType | true
    }

  export interface BuktiFormDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BuktiForm'], meta: { name: 'BuktiForm' } }
    /**
     * Find zero or one BuktiForm that matches the filter.
     * @param {BuktiFormFindUniqueArgs} args - Arguments to find a BuktiForm
     * @example
     * // Get one BuktiForm
     * const buktiForm = await prisma.buktiForm.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BuktiFormFindUniqueArgs>(args: SelectSubset<T, BuktiFormFindUniqueArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BuktiForm that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BuktiFormFindUniqueOrThrowArgs} args - Arguments to find a BuktiForm
     * @example
     * // Get one BuktiForm
     * const buktiForm = await prisma.buktiForm.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BuktiFormFindUniqueOrThrowArgs>(args: SelectSubset<T, BuktiFormFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BuktiForm that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormFindFirstArgs} args - Arguments to find a BuktiForm
     * @example
     * // Get one BuktiForm
     * const buktiForm = await prisma.buktiForm.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BuktiFormFindFirstArgs>(args?: SelectSubset<T, BuktiFormFindFirstArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BuktiForm that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormFindFirstOrThrowArgs} args - Arguments to find a BuktiForm
     * @example
     * // Get one BuktiForm
     * const buktiForm = await prisma.buktiForm.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BuktiFormFindFirstOrThrowArgs>(args?: SelectSubset<T, BuktiFormFindFirstOrThrowArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BuktiForms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BuktiForms
     * const buktiForms = await prisma.buktiForm.findMany()
     * 
     * // Get first 10 BuktiForms
     * const buktiForms = await prisma.buktiForm.findMany({ take: 10 })
     * 
     * // Only select the `BuktiFormId`
     * const buktiFormWithBuktiFormIdOnly = await prisma.buktiForm.findMany({ select: { BuktiFormId: true } })
     * 
     */
    findMany<T extends BuktiFormFindManyArgs>(args?: SelectSubset<T, BuktiFormFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BuktiForm.
     * @param {BuktiFormCreateArgs} args - Arguments to create a BuktiForm.
     * @example
     * // Create one BuktiForm
     * const BuktiForm = await prisma.buktiForm.create({
     *   data: {
     *     // ... data to create a BuktiForm
     *   }
     * })
     * 
     */
    create<T extends BuktiFormCreateArgs>(args: SelectSubset<T, BuktiFormCreateArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BuktiForms.
     * @param {BuktiFormCreateManyArgs} args - Arguments to create many BuktiForms.
     * @example
     * // Create many BuktiForms
     * const buktiForm = await prisma.buktiForm.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BuktiFormCreateManyArgs>(args?: SelectSubset<T, BuktiFormCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BuktiForms and returns the data saved in the database.
     * @param {BuktiFormCreateManyAndReturnArgs} args - Arguments to create many BuktiForms.
     * @example
     * // Create many BuktiForms
     * const buktiForm = await prisma.buktiForm.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BuktiForms and only return the `BuktiFormId`
     * const buktiFormWithBuktiFormIdOnly = await prisma.buktiForm.createManyAndReturn({
     *   select: { BuktiFormId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BuktiFormCreateManyAndReturnArgs>(args?: SelectSubset<T, BuktiFormCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BuktiForm.
     * @param {BuktiFormDeleteArgs} args - Arguments to delete one BuktiForm.
     * @example
     * // Delete one BuktiForm
     * const BuktiForm = await prisma.buktiForm.delete({
     *   where: {
     *     // ... filter to delete one BuktiForm
     *   }
     * })
     * 
     */
    delete<T extends BuktiFormDeleteArgs>(args: SelectSubset<T, BuktiFormDeleteArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BuktiForm.
     * @param {BuktiFormUpdateArgs} args - Arguments to update one BuktiForm.
     * @example
     * // Update one BuktiForm
     * const buktiForm = await prisma.buktiForm.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BuktiFormUpdateArgs>(args: SelectSubset<T, BuktiFormUpdateArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BuktiForms.
     * @param {BuktiFormDeleteManyArgs} args - Arguments to filter BuktiForms to delete.
     * @example
     * // Delete a few BuktiForms
     * const { count } = await prisma.buktiForm.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BuktiFormDeleteManyArgs>(args?: SelectSubset<T, BuktiFormDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BuktiForms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BuktiForms
     * const buktiForm = await prisma.buktiForm.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BuktiFormUpdateManyArgs>(args: SelectSubset<T, BuktiFormUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BuktiForms and returns the data updated in the database.
     * @param {BuktiFormUpdateManyAndReturnArgs} args - Arguments to update many BuktiForms.
     * @example
     * // Update many BuktiForms
     * const buktiForm = await prisma.buktiForm.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BuktiForms and only return the `BuktiFormId`
     * const buktiFormWithBuktiFormIdOnly = await prisma.buktiForm.updateManyAndReturn({
     *   select: { BuktiFormId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BuktiFormUpdateManyAndReturnArgs>(args: SelectSubset<T, BuktiFormUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BuktiForm.
     * @param {BuktiFormUpsertArgs} args - Arguments to update or create a BuktiForm.
     * @example
     * // Update or create a BuktiForm
     * const buktiForm = await prisma.buktiForm.upsert({
     *   create: {
     *     // ... data to create a BuktiForm
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BuktiForm we want to update
     *   }
     * })
     */
    upsert<T extends BuktiFormUpsertArgs>(args: SelectSubset<T, BuktiFormUpsertArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BuktiForms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormCountArgs} args - Arguments to filter BuktiForms to count.
     * @example
     * // Count the number of BuktiForms
     * const count = await prisma.buktiForm.count({
     *   where: {
     *     // ... the filter for the BuktiForms we want to count
     *   }
     * })
    **/
    count<T extends BuktiFormCountArgs>(
      args?: Subset<T, BuktiFormCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BuktiFormCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BuktiForm.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BuktiFormAggregateArgs>(args: Subset<T, BuktiFormAggregateArgs>): Prisma.PrismaPromise<GetBuktiFormAggregateType<T>>

    /**
     * Group by BuktiForm.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BuktiFormGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BuktiFormGroupByArgs['orderBy'] }
        : { orderBy?: BuktiFormGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BuktiFormGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuktiFormGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BuktiForm model
   */
  readonly fields: BuktiFormFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BuktiForm.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BuktiFormClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    JenisDokumen<T extends JenisDokumenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JenisDokumenDefaultArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    BuktiFormEvaluasiDiri<T extends BuktiForm$BuktiFormEvaluasiDiriArgs<ExtArgs> = {}>(args?: Subset<T, BuktiForm$BuktiFormEvaluasiDiriArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BuktiForm model
   */
  interface BuktiFormFieldRefs {
    readonly BuktiFormId: FieldRef<"BuktiForm", 'String'>
    readonly PendaftaranId: FieldRef<"BuktiForm", 'String'>
    readonly JenisDokumenId: FieldRef<"BuktiForm", 'String'>
    readonly NamaFile: FieldRef<"BuktiForm", 'String'>
    readonly NamaDokumen: FieldRef<"BuktiForm", 'String'>
    readonly CreatedAt: FieldRef<"BuktiForm", 'DateTime'>
    readonly UpdatedAt: FieldRef<"BuktiForm", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BuktiForm findUnique
   */
  export type BuktiFormFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * Filter, which BuktiForm to fetch.
     */
    where: BuktiFormWhereUniqueInput
  }

  /**
   * BuktiForm findUniqueOrThrow
   */
  export type BuktiFormFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * Filter, which BuktiForm to fetch.
     */
    where: BuktiFormWhereUniqueInput
  }

  /**
   * BuktiForm findFirst
   */
  export type BuktiFormFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * Filter, which BuktiForm to fetch.
     */
    where?: BuktiFormWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiForms to fetch.
     */
    orderBy?: BuktiFormOrderByWithRelationInput | BuktiFormOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BuktiForms.
     */
    cursor?: BuktiFormWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiForms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiForms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BuktiForms.
     */
    distinct?: BuktiFormScalarFieldEnum | BuktiFormScalarFieldEnum[]
  }

  /**
   * BuktiForm findFirstOrThrow
   */
  export type BuktiFormFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * Filter, which BuktiForm to fetch.
     */
    where?: BuktiFormWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiForms to fetch.
     */
    orderBy?: BuktiFormOrderByWithRelationInput | BuktiFormOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BuktiForms.
     */
    cursor?: BuktiFormWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiForms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiForms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BuktiForms.
     */
    distinct?: BuktiFormScalarFieldEnum | BuktiFormScalarFieldEnum[]
  }

  /**
   * BuktiForm findMany
   */
  export type BuktiFormFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * Filter, which BuktiForms to fetch.
     */
    where?: BuktiFormWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiForms to fetch.
     */
    orderBy?: BuktiFormOrderByWithRelationInput | BuktiFormOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BuktiForms.
     */
    cursor?: BuktiFormWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiForms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiForms.
     */
    skip?: number
    distinct?: BuktiFormScalarFieldEnum | BuktiFormScalarFieldEnum[]
  }

  /**
   * BuktiForm create
   */
  export type BuktiFormCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * The data needed to create a BuktiForm.
     */
    data: XOR<BuktiFormCreateInput, BuktiFormUncheckedCreateInput>
  }

  /**
   * BuktiForm createMany
   */
  export type BuktiFormCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BuktiForms.
     */
    data: BuktiFormCreateManyInput | BuktiFormCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BuktiForm createManyAndReturn
   */
  export type BuktiFormCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * The data used to create many BuktiForms.
     */
    data: BuktiFormCreateManyInput | BuktiFormCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BuktiForm update
   */
  export type BuktiFormUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * The data needed to update a BuktiForm.
     */
    data: XOR<BuktiFormUpdateInput, BuktiFormUncheckedUpdateInput>
    /**
     * Choose, which BuktiForm to update.
     */
    where: BuktiFormWhereUniqueInput
  }

  /**
   * BuktiForm updateMany
   */
  export type BuktiFormUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BuktiForms.
     */
    data: XOR<BuktiFormUpdateManyMutationInput, BuktiFormUncheckedUpdateManyInput>
    /**
     * Filter which BuktiForms to update
     */
    where?: BuktiFormWhereInput
    /**
     * Limit how many BuktiForms to update.
     */
    limit?: number
  }

  /**
   * BuktiForm updateManyAndReturn
   */
  export type BuktiFormUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * The data used to update BuktiForms.
     */
    data: XOR<BuktiFormUpdateManyMutationInput, BuktiFormUncheckedUpdateManyInput>
    /**
     * Filter which BuktiForms to update
     */
    where?: BuktiFormWhereInput
    /**
     * Limit how many BuktiForms to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BuktiForm upsert
   */
  export type BuktiFormUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * The filter to search for the BuktiForm to update in case it exists.
     */
    where: BuktiFormWhereUniqueInput
    /**
     * In case the BuktiForm found by the `where` argument doesn't exist, create a new BuktiForm with this data.
     */
    create: XOR<BuktiFormCreateInput, BuktiFormUncheckedCreateInput>
    /**
     * In case the BuktiForm was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BuktiFormUpdateInput, BuktiFormUncheckedUpdateInput>
  }

  /**
   * BuktiForm delete
   */
  export type BuktiFormDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    /**
     * Filter which BuktiForm to delete.
     */
    where: BuktiFormWhereUniqueInput
  }

  /**
   * BuktiForm deleteMany
   */
  export type BuktiFormDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BuktiForms to delete
     */
    where?: BuktiFormWhereInput
    /**
     * Limit how many BuktiForms to delete.
     */
    limit?: number
  }

  /**
   * BuktiForm.BuktiFormEvaluasiDiri
   */
  export type BuktiForm$BuktiFormEvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    where?: BuktiFormEvaluasiDiriWhereInput
    orderBy?: BuktiFormEvaluasiDiriOrderByWithRelationInput | BuktiFormEvaluasiDiriOrderByWithRelationInput[]
    cursor?: BuktiFormEvaluasiDiriWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BuktiFormEvaluasiDiriScalarFieldEnum | BuktiFormEvaluasiDiriScalarFieldEnum[]
  }

  /**
   * BuktiForm without action
   */
  export type BuktiFormDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
  }


  /**
   * Model BuktiFormEvaluasiDiri
   */

  export type AggregateBuktiFormEvaluasiDiri = {
    _count: BuktiFormEvaluasiDiriCountAggregateOutputType | null
    _min: BuktiFormEvaluasiDiriMinAggregateOutputType | null
    _max: BuktiFormEvaluasiDiriMaxAggregateOutputType | null
  }

  export type BuktiFormEvaluasiDiriMinAggregateOutputType = {
    BuktiFormId: string | null
    EvaluasiDiriId: string | null
  }

  export type BuktiFormEvaluasiDiriMaxAggregateOutputType = {
    BuktiFormId: string | null
    EvaluasiDiriId: string | null
  }

  export type BuktiFormEvaluasiDiriCountAggregateOutputType = {
    BuktiFormId: number
    EvaluasiDiriId: number
    _all: number
  }


  export type BuktiFormEvaluasiDiriMinAggregateInputType = {
    BuktiFormId?: true
    EvaluasiDiriId?: true
  }

  export type BuktiFormEvaluasiDiriMaxAggregateInputType = {
    BuktiFormId?: true
    EvaluasiDiriId?: true
  }

  export type BuktiFormEvaluasiDiriCountAggregateInputType = {
    BuktiFormId?: true
    EvaluasiDiriId?: true
    _all?: true
  }

  export type BuktiFormEvaluasiDiriAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BuktiFormEvaluasiDiri to aggregate.
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiFormEvaluasiDiris to fetch.
     */
    orderBy?: BuktiFormEvaluasiDiriOrderByWithRelationInput | BuktiFormEvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BuktiFormEvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiFormEvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiFormEvaluasiDiris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BuktiFormEvaluasiDiris
    **/
    _count?: true | BuktiFormEvaluasiDiriCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BuktiFormEvaluasiDiriMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BuktiFormEvaluasiDiriMaxAggregateInputType
  }

  export type GetBuktiFormEvaluasiDiriAggregateType<T extends BuktiFormEvaluasiDiriAggregateArgs> = {
        [P in keyof T & keyof AggregateBuktiFormEvaluasiDiri]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuktiFormEvaluasiDiri[P]>
      : GetScalarType<T[P], AggregateBuktiFormEvaluasiDiri[P]>
  }




  export type BuktiFormEvaluasiDiriGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuktiFormEvaluasiDiriWhereInput
    orderBy?: BuktiFormEvaluasiDiriOrderByWithAggregationInput | BuktiFormEvaluasiDiriOrderByWithAggregationInput[]
    by: BuktiFormEvaluasiDiriScalarFieldEnum[] | BuktiFormEvaluasiDiriScalarFieldEnum
    having?: BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BuktiFormEvaluasiDiriCountAggregateInputType | true
    _min?: BuktiFormEvaluasiDiriMinAggregateInputType
    _max?: BuktiFormEvaluasiDiriMaxAggregateInputType
  }

  export type BuktiFormEvaluasiDiriGroupByOutputType = {
    BuktiFormId: string
    EvaluasiDiriId: string
    _count: BuktiFormEvaluasiDiriCountAggregateOutputType | null
    _min: BuktiFormEvaluasiDiriMinAggregateOutputType | null
    _max: BuktiFormEvaluasiDiriMaxAggregateOutputType | null
  }

  type GetBuktiFormEvaluasiDiriGroupByPayload<T extends BuktiFormEvaluasiDiriGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BuktiFormEvaluasiDiriGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BuktiFormEvaluasiDiriGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BuktiFormEvaluasiDiriGroupByOutputType[P]>
            : GetScalarType<T[P], BuktiFormEvaluasiDiriGroupByOutputType[P]>
        }
      >
    >


  export type BuktiFormEvaluasiDiriSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    BuktiFormId?: boolean
    EvaluasiDiriId?: boolean
    BuktiForm?: boolean | BuktiFormDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buktiFormEvaluasiDiri"]>

  export type BuktiFormEvaluasiDiriSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    BuktiFormId?: boolean
    EvaluasiDiriId?: boolean
    BuktiForm?: boolean | BuktiFormDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buktiFormEvaluasiDiri"]>

  export type BuktiFormEvaluasiDiriSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    BuktiFormId?: boolean
    EvaluasiDiriId?: boolean
    BuktiForm?: boolean | BuktiFormDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buktiFormEvaluasiDiri"]>

  export type BuktiFormEvaluasiDiriSelectScalar = {
    BuktiFormId?: boolean
    EvaluasiDiriId?: boolean
  }

  export type BuktiFormEvaluasiDiriOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"BuktiFormId" | "EvaluasiDiriId", ExtArgs["result"]["buktiFormEvaluasiDiri"]>
  export type BuktiFormEvaluasiDiriInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiForm?: boolean | BuktiFormDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }
  export type BuktiFormEvaluasiDiriIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiForm?: boolean | BuktiFormDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }
  export type BuktiFormEvaluasiDiriIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiForm?: boolean | BuktiFormDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }

  export type $BuktiFormEvaluasiDiriPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BuktiFormEvaluasiDiri"
    objects: {
      BuktiForm: Prisma.$BuktiFormPayload<ExtArgs>
      EvaluasiDiri: Prisma.$EvaluasiDiriPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      BuktiFormId: string
      EvaluasiDiriId: string
    }, ExtArgs["result"]["buktiFormEvaluasiDiri"]>
    composites: {}
  }

  type BuktiFormEvaluasiDiriGetPayload<S extends boolean | null | undefined | BuktiFormEvaluasiDiriDefaultArgs> = $Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload, S>

  type BuktiFormEvaluasiDiriCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BuktiFormEvaluasiDiriFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BuktiFormEvaluasiDiriCountAggregateInputType | true
    }

  export interface BuktiFormEvaluasiDiriDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BuktiFormEvaluasiDiri'], meta: { name: 'BuktiFormEvaluasiDiri' } }
    /**
     * Find zero or one BuktiFormEvaluasiDiri that matches the filter.
     * @param {BuktiFormEvaluasiDiriFindUniqueArgs} args - Arguments to find a BuktiFormEvaluasiDiri
     * @example
     * // Get one BuktiFormEvaluasiDiri
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BuktiFormEvaluasiDiriFindUniqueArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriFindUniqueArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BuktiFormEvaluasiDiri that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BuktiFormEvaluasiDiriFindUniqueOrThrowArgs} args - Arguments to find a BuktiFormEvaluasiDiri
     * @example
     * // Get one BuktiFormEvaluasiDiri
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BuktiFormEvaluasiDiriFindUniqueOrThrowArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BuktiFormEvaluasiDiri that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriFindFirstArgs} args - Arguments to find a BuktiFormEvaluasiDiri
     * @example
     * // Get one BuktiFormEvaluasiDiri
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BuktiFormEvaluasiDiriFindFirstArgs>(args?: SelectSubset<T, BuktiFormEvaluasiDiriFindFirstArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BuktiFormEvaluasiDiri that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriFindFirstOrThrowArgs} args - Arguments to find a BuktiFormEvaluasiDiri
     * @example
     * // Get one BuktiFormEvaluasiDiri
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BuktiFormEvaluasiDiriFindFirstOrThrowArgs>(args?: SelectSubset<T, BuktiFormEvaluasiDiriFindFirstOrThrowArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BuktiFormEvaluasiDiris that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BuktiFormEvaluasiDiris
     * const buktiFormEvaluasiDiris = await prisma.buktiFormEvaluasiDiri.findMany()
     * 
     * // Get first 10 BuktiFormEvaluasiDiris
     * const buktiFormEvaluasiDiris = await prisma.buktiFormEvaluasiDiri.findMany({ take: 10 })
     * 
     * // Only select the `BuktiFormId`
     * const buktiFormEvaluasiDiriWithBuktiFormIdOnly = await prisma.buktiFormEvaluasiDiri.findMany({ select: { BuktiFormId: true } })
     * 
     */
    findMany<T extends BuktiFormEvaluasiDiriFindManyArgs>(args?: SelectSubset<T, BuktiFormEvaluasiDiriFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BuktiFormEvaluasiDiri.
     * @param {BuktiFormEvaluasiDiriCreateArgs} args - Arguments to create a BuktiFormEvaluasiDiri.
     * @example
     * // Create one BuktiFormEvaluasiDiri
     * const BuktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.create({
     *   data: {
     *     // ... data to create a BuktiFormEvaluasiDiri
     *   }
     * })
     * 
     */
    create<T extends BuktiFormEvaluasiDiriCreateArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriCreateArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BuktiFormEvaluasiDiris.
     * @param {BuktiFormEvaluasiDiriCreateManyArgs} args - Arguments to create many BuktiFormEvaluasiDiris.
     * @example
     * // Create many BuktiFormEvaluasiDiris
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BuktiFormEvaluasiDiriCreateManyArgs>(args?: SelectSubset<T, BuktiFormEvaluasiDiriCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BuktiFormEvaluasiDiris and returns the data saved in the database.
     * @param {BuktiFormEvaluasiDiriCreateManyAndReturnArgs} args - Arguments to create many BuktiFormEvaluasiDiris.
     * @example
     * // Create many BuktiFormEvaluasiDiris
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BuktiFormEvaluasiDiris and only return the `BuktiFormId`
     * const buktiFormEvaluasiDiriWithBuktiFormIdOnly = await prisma.buktiFormEvaluasiDiri.createManyAndReturn({
     *   select: { BuktiFormId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BuktiFormEvaluasiDiriCreateManyAndReturnArgs>(args?: SelectSubset<T, BuktiFormEvaluasiDiriCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BuktiFormEvaluasiDiri.
     * @param {BuktiFormEvaluasiDiriDeleteArgs} args - Arguments to delete one BuktiFormEvaluasiDiri.
     * @example
     * // Delete one BuktiFormEvaluasiDiri
     * const BuktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.delete({
     *   where: {
     *     // ... filter to delete one BuktiFormEvaluasiDiri
     *   }
     * })
     * 
     */
    delete<T extends BuktiFormEvaluasiDiriDeleteArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriDeleteArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BuktiFormEvaluasiDiri.
     * @param {BuktiFormEvaluasiDiriUpdateArgs} args - Arguments to update one BuktiFormEvaluasiDiri.
     * @example
     * // Update one BuktiFormEvaluasiDiri
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BuktiFormEvaluasiDiriUpdateArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriUpdateArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BuktiFormEvaluasiDiris.
     * @param {BuktiFormEvaluasiDiriDeleteManyArgs} args - Arguments to filter BuktiFormEvaluasiDiris to delete.
     * @example
     * // Delete a few BuktiFormEvaluasiDiris
     * const { count } = await prisma.buktiFormEvaluasiDiri.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BuktiFormEvaluasiDiriDeleteManyArgs>(args?: SelectSubset<T, BuktiFormEvaluasiDiriDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BuktiFormEvaluasiDiris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BuktiFormEvaluasiDiris
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BuktiFormEvaluasiDiriUpdateManyArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BuktiFormEvaluasiDiris and returns the data updated in the database.
     * @param {BuktiFormEvaluasiDiriUpdateManyAndReturnArgs} args - Arguments to update many BuktiFormEvaluasiDiris.
     * @example
     * // Update many BuktiFormEvaluasiDiris
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BuktiFormEvaluasiDiris and only return the `BuktiFormId`
     * const buktiFormEvaluasiDiriWithBuktiFormIdOnly = await prisma.buktiFormEvaluasiDiri.updateManyAndReturn({
     *   select: { BuktiFormId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BuktiFormEvaluasiDiriUpdateManyAndReturnArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BuktiFormEvaluasiDiri.
     * @param {BuktiFormEvaluasiDiriUpsertArgs} args - Arguments to update or create a BuktiFormEvaluasiDiri.
     * @example
     * // Update or create a BuktiFormEvaluasiDiri
     * const buktiFormEvaluasiDiri = await prisma.buktiFormEvaluasiDiri.upsert({
     *   create: {
     *     // ... data to create a BuktiFormEvaluasiDiri
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BuktiFormEvaluasiDiri we want to update
     *   }
     * })
     */
    upsert<T extends BuktiFormEvaluasiDiriUpsertArgs>(args: SelectSubset<T, BuktiFormEvaluasiDiriUpsertArgs<ExtArgs>>): Prisma__BuktiFormEvaluasiDiriClient<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BuktiFormEvaluasiDiris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriCountArgs} args - Arguments to filter BuktiFormEvaluasiDiris to count.
     * @example
     * // Count the number of BuktiFormEvaluasiDiris
     * const count = await prisma.buktiFormEvaluasiDiri.count({
     *   where: {
     *     // ... the filter for the BuktiFormEvaluasiDiris we want to count
     *   }
     * })
    **/
    count<T extends BuktiFormEvaluasiDiriCountArgs>(
      args?: Subset<T, BuktiFormEvaluasiDiriCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BuktiFormEvaluasiDiriCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BuktiFormEvaluasiDiri.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BuktiFormEvaluasiDiriAggregateArgs>(args: Subset<T, BuktiFormEvaluasiDiriAggregateArgs>): Prisma.PrismaPromise<GetBuktiFormEvaluasiDiriAggregateType<T>>

    /**
     * Group by BuktiFormEvaluasiDiri.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuktiFormEvaluasiDiriGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BuktiFormEvaluasiDiriGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BuktiFormEvaluasiDiriGroupByArgs['orderBy'] }
        : { orderBy?: BuktiFormEvaluasiDiriGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BuktiFormEvaluasiDiriGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuktiFormEvaluasiDiriGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BuktiFormEvaluasiDiri model
   */
  readonly fields: BuktiFormEvaluasiDiriFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BuktiFormEvaluasiDiri.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BuktiFormEvaluasiDiriClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    BuktiForm<T extends BuktiFormDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BuktiFormDefaultArgs<ExtArgs>>): Prisma__BuktiFormClient<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EvaluasiDiri<T extends EvaluasiDiriDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluasiDiriDefaultArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BuktiFormEvaluasiDiri model
   */
  interface BuktiFormEvaluasiDiriFieldRefs {
    readonly BuktiFormId: FieldRef<"BuktiFormEvaluasiDiri", 'String'>
    readonly EvaluasiDiriId: FieldRef<"BuktiFormEvaluasiDiri", 'String'>
  }
    

  // Custom InputTypes
  /**
   * BuktiFormEvaluasiDiri findUnique
   */
  export type BuktiFormEvaluasiDiriFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which BuktiFormEvaluasiDiri to fetch.
     */
    where: BuktiFormEvaluasiDiriWhereUniqueInput
  }

  /**
   * BuktiFormEvaluasiDiri findUniqueOrThrow
   */
  export type BuktiFormEvaluasiDiriFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which BuktiFormEvaluasiDiri to fetch.
     */
    where: BuktiFormEvaluasiDiriWhereUniqueInput
  }

  /**
   * BuktiFormEvaluasiDiri findFirst
   */
  export type BuktiFormEvaluasiDiriFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which BuktiFormEvaluasiDiri to fetch.
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiFormEvaluasiDiris to fetch.
     */
    orderBy?: BuktiFormEvaluasiDiriOrderByWithRelationInput | BuktiFormEvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BuktiFormEvaluasiDiris.
     */
    cursor?: BuktiFormEvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiFormEvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiFormEvaluasiDiris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BuktiFormEvaluasiDiris.
     */
    distinct?: BuktiFormEvaluasiDiriScalarFieldEnum | BuktiFormEvaluasiDiriScalarFieldEnum[]
  }

  /**
   * BuktiFormEvaluasiDiri findFirstOrThrow
   */
  export type BuktiFormEvaluasiDiriFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which BuktiFormEvaluasiDiri to fetch.
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiFormEvaluasiDiris to fetch.
     */
    orderBy?: BuktiFormEvaluasiDiriOrderByWithRelationInput | BuktiFormEvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BuktiFormEvaluasiDiris.
     */
    cursor?: BuktiFormEvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiFormEvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiFormEvaluasiDiris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BuktiFormEvaluasiDiris.
     */
    distinct?: BuktiFormEvaluasiDiriScalarFieldEnum | BuktiFormEvaluasiDiriScalarFieldEnum[]
  }

  /**
   * BuktiFormEvaluasiDiri findMany
   */
  export type BuktiFormEvaluasiDiriFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which BuktiFormEvaluasiDiris to fetch.
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BuktiFormEvaluasiDiris to fetch.
     */
    orderBy?: BuktiFormEvaluasiDiriOrderByWithRelationInput | BuktiFormEvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BuktiFormEvaluasiDiris.
     */
    cursor?: BuktiFormEvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BuktiFormEvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BuktiFormEvaluasiDiris.
     */
    skip?: number
    distinct?: BuktiFormEvaluasiDiriScalarFieldEnum | BuktiFormEvaluasiDiriScalarFieldEnum[]
  }

  /**
   * BuktiFormEvaluasiDiri create
   */
  export type BuktiFormEvaluasiDiriCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * The data needed to create a BuktiFormEvaluasiDiri.
     */
    data: XOR<BuktiFormEvaluasiDiriCreateInput, BuktiFormEvaluasiDiriUncheckedCreateInput>
  }

  /**
   * BuktiFormEvaluasiDiri createMany
   */
  export type BuktiFormEvaluasiDiriCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BuktiFormEvaluasiDiris.
     */
    data: BuktiFormEvaluasiDiriCreateManyInput | BuktiFormEvaluasiDiriCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BuktiFormEvaluasiDiri createManyAndReturn
   */
  export type BuktiFormEvaluasiDiriCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * The data used to create many BuktiFormEvaluasiDiris.
     */
    data: BuktiFormEvaluasiDiriCreateManyInput | BuktiFormEvaluasiDiriCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BuktiFormEvaluasiDiri update
   */
  export type BuktiFormEvaluasiDiriUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * The data needed to update a BuktiFormEvaluasiDiri.
     */
    data: XOR<BuktiFormEvaluasiDiriUpdateInput, BuktiFormEvaluasiDiriUncheckedUpdateInput>
    /**
     * Choose, which BuktiFormEvaluasiDiri to update.
     */
    where: BuktiFormEvaluasiDiriWhereUniqueInput
  }

  /**
   * BuktiFormEvaluasiDiri updateMany
   */
  export type BuktiFormEvaluasiDiriUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BuktiFormEvaluasiDiris.
     */
    data: XOR<BuktiFormEvaluasiDiriUpdateManyMutationInput, BuktiFormEvaluasiDiriUncheckedUpdateManyInput>
    /**
     * Filter which BuktiFormEvaluasiDiris to update
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * Limit how many BuktiFormEvaluasiDiris to update.
     */
    limit?: number
  }

  /**
   * BuktiFormEvaluasiDiri updateManyAndReturn
   */
  export type BuktiFormEvaluasiDiriUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * The data used to update BuktiFormEvaluasiDiris.
     */
    data: XOR<BuktiFormEvaluasiDiriUpdateManyMutationInput, BuktiFormEvaluasiDiriUncheckedUpdateManyInput>
    /**
     * Filter which BuktiFormEvaluasiDiris to update
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * Limit how many BuktiFormEvaluasiDiris to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BuktiFormEvaluasiDiri upsert
   */
  export type BuktiFormEvaluasiDiriUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * The filter to search for the BuktiFormEvaluasiDiri to update in case it exists.
     */
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    /**
     * In case the BuktiFormEvaluasiDiri found by the `where` argument doesn't exist, create a new BuktiFormEvaluasiDiri with this data.
     */
    create: XOR<BuktiFormEvaluasiDiriCreateInput, BuktiFormEvaluasiDiriUncheckedCreateInput>
    /**
     * In case the BuktiFormEvaluasiDiri was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BuktiFormEvaluasiDiriUpdateInput, BuktiFormEvaluasiDiriUncheckedUpdateInput>
  }

  /**
   * BuktiFormEvaluasiDiri delete
   */
  export type BuktiFormEvaluasiDiriDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter which BuktiFormEvaluasiDiri to delete.
     */
    where: BuktiFormEvaluasiDiriWhereUniqueInput
  }

  /**
   * BuktiFormEvaluasiDiri deleteMany
   */
  export type BuktiFormEvaluasiDiriDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BuktiFormEvaluasiDiris to delete
     */
    where?: BuktiFormEvaluasiDiriWhereInput
    /**
     * Limit how many BuktiFormEvaluasiDiris to delete.
     */
    limit?: number
  }

  /**
   * BuktiFormEvaluasiDiri without action
   */
  export type BuktiFormEvaluasiDiriDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
  }


  /**
   * Model CapaianPembelajaran
   */

  export type AggregateCapaianPembelajaran = {
    _count: CapaianPembelajaranCountAggregateOutputType | null
    _avg: CapaianPembelajaranAvgAggregateOutputType | null
    _sum: CapaianPembelajaranSumAggregateOutputType | null
    _min: CapaianPembelajaranMinAggregateOutputType | null
    _max: CapaianPembelajaranMaxAggregateOutputType | null
  }

  export type CapaianPembelajaranAvgAggregateOutputType = {
    Urutan: number | null
  }

  export type CapaianPembelajaranSumAggregateOutputType = {
    Urutan: number | null
  }

  export type CapaianPembelajaranMinAggregateOutputType = {
    CapaianPembelajaranId: string | null
    MataKuliahId: string | null
    Nama: string | null
    Urutan: number | null
    Active: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type CapaianPembelajaranMaxAggregateOutputType = {
    CapaianPembelajaranId: string | null
    MataKuliahId: string | null
    Nama: string | null
    Urutan: number | null
    Active: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type CapaianPembelajaranCountAggregateOutputType = {
    CapaianPembelajaranId: number
    MataKuliahId: number
    Nama: number
    Urutan: number
    Active: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type CapaianPembelajaranAvgAggregateInputType = {
    Urutan?: true
  }

  export type CapaianPembelajaranSumAggregateInputType = {
    Urutan?: true
  }

  export type CapaianPembelajaranMinAggregateInputType = {
    CapaianPembelajaranId?: true
    MataKuliahId?: true
    Nama?: true
    Urutan?: true
    Active?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type CapaianPembelajaranMaxAggregateInputType = {
    CapaianPembelajaranId?: true
    MataKuliahId?: true
    Nama?: true
    Urutan?: true
    Active?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type CapaianPembelajaranCountAggregateInputType = {
    CapaianPembelajaranId?: true
    MataKuliahId?: true
    Nama?: true
    Urutan?: true
    Active?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type CapaianPembelajaranAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CapaianPembelajaran to aggregate.
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapaianPembelajarans to fetch.
     */
    orderBy?: CapaianPembelajaranOrderByWithRelationInput | CapaianPembelajaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CapaianPembelajaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapaianPembelajarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapaianPembelajarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CapaianPembelajarans
    **/
    _count?: true | CapaianPembelajaranCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CapaianPembelajaranAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CapaianPembelajaranSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CapaianPembelajaranMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CapaianPembelajaranMaxAggregateInputType
  }

  export type GetCapaianPembelajaranAggregateType<T extends CapaianPembelajaranAggregateArgs> = {
        [P in keyof T & keyof AggregateCapaianPembelajaran]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCapaianPembelajaran[P]>
      : GetScalarType<T[P], AggregateCapaianPembelajaran[P]>
  }




  export type CapaianPembelajaranGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CapaianPembelajaranWhereInput
    orderBy?: CapaianPembelajaranOrderByWithAggregationInput | CapaianPembelajaranOrderByWithAggregationInput[]
    by: CapaianPembelajaranScalarFieldEnum[] | CapaianPembelajaranScalarFieldEnum
    having?: CapaianPembelajaranScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CapaianPembelajaranCountAggregateInputType | true
    _avg?: CapaianPembelajaranAvgAggregateInputType
    _sum?: CapaianPembelajaranSumAggregateInputType
    _min?: CapaianPembelajaranMinAggregateInputType
    _max?: CapaianPembelajaranMaxAggregateInputType
  }

  export type CapaianPembelajaranGroupByOutputType = {
    CapaianPembelajaranId: string
    MataKuliahId: string
    Nama: string
    Urutan: number
    Active: boolean
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: CapaianPembelajaranCountAggregateOutputType | null
    _avg: CapaianPembelajaranAvgAggregateOutputType | null
    _sum: CapaianPembelajaranSumAggregateOutputType | null
    _min: CapaianPembelajaranMinAggregateOutputType | null
    _max: CapaianPembelajaranMaxAggregateOutputType | null
  }

  type GetCapaianPembelajaranGroupByPayload<T extends CapaianPembelajaranGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CapaianPembelajaranGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CapaianPembelajaranGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CapaianPembelajaranGroupByOutputType[P]>
            : GetScalarType<T[P], CapaianPembelajaranGroupByOutputType[P]>
        }
      >
    >


  export type CapaianPembelajaranSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    CapaianPembelajaranId?: boolean
    MataKuliahId?: boolean
    Nama?: boolean
    Urutan?: boolean
    Active?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | CapaianPembelajaran$EvaluasiDiriArgs<ExtArgs>
    _count?: boolean | CapaianPembelajaranCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["capaianPembelajaran"]>

  export type CapaianPembelajaranSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    CapaianPembelajaranId?: boolean
    MataKuliahId?: boolean
    Nama?: boolean
    Urutan?: boolean
    Active?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["capaianPembelajaran"]>

  export type CapaianPembelajaranSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    CapaianPembelajaranId?: boolean
    MataKuliahId?: boolean
    Nama?: boolean
    Urutan?: boolean
    Active?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["capaianPembelajaran"]>

  export type CapaianPembelajaranSelectScalar = {
    CapaianPembelajaranId?: boolean
    MataKuliahId?: boolean
    Nama?: boolean
    Urutan?: boolean
    Active?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type CapaianPembelajaranOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"CapaianPembelajaranId" | "MataKuliahId" | "Nama" | "Urutan" | "Active" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["capaianPembelajaran"]>
  export type CapaianPembelajaranInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | CapaianPembelajaran$EvaluasiDiriArgs<ExtArgs>
    _count?: boolean | CapaianPembelajaranCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CapaianPembelajaranIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }
  export type CapaianPembelajaranIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }

  export type $CapaianPembelajaranPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CapaianPembelajaran"
    objects: {
      MataKuliah: Prisma.$MataKuliahPayload<ExtArgs>
      EvaluasiDiri: Prisma.$EvaluasiDiriPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      CapaianPembelajaranId: string
      MataKuliahId: string
      Nama: string
      Urutan: number
      Active: boolean
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["capaianPembelajaran"]>
    composites: {}
  }

  type CapaianPembelajaranGetPayload<S extends boolean | null | undefined | CapaianPembelajaranDefaultArgs> = $Result.GetResult<Prisma.$CapaianPembelajaranPayload, S>

  type CapaianPembelajaranCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CapaianPembelajaranFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CapaianPembelajaranCountAggregateInputType | true
    }

  export interface CapaianPembelajaranDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CapaianPembelajaran'], meta: { name: 'CapaianPembelajaran' } }
    /**
     * Find zero or one CapaianPembelajaran that matches the filter.
     * @param {CapaianPembelajaranFindUniqueArgs} args - Arguments to find a CapaianPembelajaran
     * @example
     * // Get one CapaianPembelajaran
     * const capaianPembelajaran = await prisma.capaianPembelajaran.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CapaianPembelajaranFindUniqueArgs>(args: SelectSubset<T, CapaianPembelajaranFindUniqueArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CapaianPembelajaran that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CapaianPembelajaranFindUniqueOrThrowArgs} args - Arguments to find a CapaianPembelajaran
     * @example
     * // Get one CapaianPembelajaran
     * const capaianPembelajaran = await prisma.capaianPembelajaran.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CapaianPembelajaranFindUniqueOrThrowArgs>(args: SelectSubset<T, CapaianPembelajaranFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CapaianPembelajaran that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranFindFirstArgs} args - Arguments to find a CapaianPembelajaran
     * @example
     * // Get one CapaianPembelajaran
     * const capaianPembelajaran = await prisma.capaianPembelajaran.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CapaianPembelajaranFindFirstArgs>(args?: SelectSubset<T, CapaianPembelajaranFindFirstArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CapaianPembelajaran that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranFindFirstOrThrowArgs} args - Arguments to find a CapaianPembelajaran
     * @example
     * // Get one CapaianPembelajaran
     * const capaianPembelajaran = await prisma.capaianPembelajaran.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CapaianPembelajaranFindFirstOrThrowArgs>(args?: SelectSubset<T, CapaianPembelajaranFindFirstOrThrowArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CapaianPembelajarans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CapaianPembelajarans
     * const capaianPembelajarans = await prisma.capaianPembelajaran.findMany()
     * 
     * // Get first 10 CapaianPembelajarans
     * const capaianPembelajarans = await prisma.capaianPembelajaran.findMany({ take: 10 })
     * 
     * // Only select the `CapaianPembelajaranId`
     * const capaianPembelajaranWithCapaianPembelajaranIdOnly = await prisma.capaianPembelajaran.findMany({ select: { CapaianPembelajaranId: true } })
     * 
     */
    findMany<T extends CapaianPembelajaranFindManyArgs>(args?: SelectSubset<T, CapaianPembelajaranFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CapaianPembelajaran.
     * @param {CapaianPembelajaranCreateArgs} args - Arguments to create a CapaianPembelajaran.
     * @example
     * // Create one CapaianPembelajaran
     * const CapaianPembelajaran = await prisma.capaianPembelajaran.create({
     *   data: {
     *     // ... data to create a CapaianPembelajaran
     *   }
     * })
     * 
     */
    create<T extends CapaianPembelajaranCreateArgs>(args: SelectSubset<T, CapaianPembelajaranCreateArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CapaianPembelajarans.
     * @param {CapaianPembelajaranCreateManyArgs} args - Arguments to create many CapaianPembelajarans.
     * @example
     * // Create many CapaianPembelajarans
     * const capaianPembelajaran = await prisma.capaianPembelajaran.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CapaianPembelajaranCreateManyArgs>(args?: SelectSubset<T, CapaianPembelajaranCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CapaianPembelajarans and returns the data saved in the database.
     * @param {CapaianPembelajaranCreateManyAndReturnArgs} args - Arguments to create many CapaianPembelajarans.
     * @example
     * // Create many CapaianPembelajarans
     * const capaianPembelajaran = await prisma.capaianPembelajaran.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CapaianPembelajarans and only return the `CapaianPembelajaranId`
     * const capaianPembelajaranWithCapaianPembelajaranIdOnly = await prisma.capaianPembelajaran.createManyAndReturn({
     *   select: { CapaianPembelajaranId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CapaianPembelajaranCreateManyAndReturnArgs>(args?: SelectSubset<T, CapaianPembelajaranCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CapaianPembelajaran.
     * @param {CapaianPembelajaranDeleteArgs} args - Arguments to delete one CapaianPembelajaran.
     * @example
     * // Delete one CapaianPembelajaran
     * const CapaianPembelajaran = await prisma.capaianPembelajaran.delete({
     *   where: {
     *     // ... filter to delete one CapaianPembelajaran
     *   }
     * })
     * 
     */
    delete<T extends CapaianPembelajaranDeleteArgs>(args: SelectSubset<T, CapaianPembelajaranDeleteArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CapaianPembelajaran.
     * @param {CapaianPembelajaranUpdateArgs} args - Arguments to update one CapaianPembelajaran.
     * @example
     * // Update one CapaianPembelajaran
     * const capaianPembelajaran = await prisma.capaianPembelajaran.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CapaianPembelajaranUpdateArgs>(args: SelectSubset<T, CapaianPembelajaranUpdateArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CapaianPembelajarans.
     * @param {CapaianPembelajaranDeleteManyArgs} args - Arguments to filter CapaianPembelajarans to delete.
     * @example
     * // Delete a few CapaianPembelajarans
     * const { count } = await prisma.capaianPembelajaran.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CapaianPembelajaranDeleteManyArgs>(args?: SelectSubset<T, CapaianPembelajaranDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CapaianPembelajarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CapaianPembelajarans
     * const capaianPembelajaran = await prisma.capaianPembelajaran.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CapaianPembelajaranUpdateManyArgs>(args: SelectSubset<T, CapaianPembelajaranUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CapaianPembelajarans and returns the data updated in the database.
     * @param {CapaianPembelajaranUpdateManyAndReturnArgs} args - Arguments to update many CapaianPembelajarans.
     * @example
     * // Update many CapaianPembelajarans
     * const capaianPembelajaran = await prisma.capaianPembelajaran.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CapaianPembelajarans and only return the `CapaianPembelajaranId`
     * const capaianPembelajaranWithCapaianPembelajaranIdOnly = await prisma.capaianPembelajaran.updateManyAndReturn({
     *   select: { CapaianPembelajaranId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CapaianPembelajaranUpdateManyAndReturnArgs>(args: SelectSubset<T, CapaianPembelajaranUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CapaianPembelajaran.
     * @param {CapaianPembelajaranUpsertArgs} args - Arguments to update or create a CapaianPembelajaran.
     * @example
     * // Update or create a CapaianPembelajaran
     * const capaianPembelajaran = await prisma.capaianPembelajaran.upsert({
     *   create: {
     *     // ... data to create a CapaianPembelajaran
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CapaianPembelajaran we want to update
     *   }
     * })
     */
    upsert<T extends CapaianPembelajaranUpsertArgs>(args: SelectSubset<T, CapaianPembelajaranUpsertArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CapaianPembelajarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranCountArgs} args - Arguments to filter CapaianPembelajarans to count.
     * @example
     * // Count the number of CapaianPembelajarans
     * const count = await prisma.capaianPembelajaran.count({
     *   where: {
     *     // ... the filter for the CapaianPembelajarans we want to count
     *   }
     * })
    **/
    count<T extends CapaianPembelajaranCountArgs>(
      args?: Subset<T, CapaianPembelajaranCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CapaianPembelajaranCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CapaianPembelajaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CapaianPembelajaranAggregateArgs>(args: Subset<T, CapaianPembelajaranAggregateArgs>): Prisma.PrismaPromise<GetCapaianPembelajaranAggregateType<T>>

    /**
     * Group by CapaianPembelajaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapaianPembelajaranGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CapaianPembelajaranGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CapaianPembelajaranGroupByArgs['orderBy'] }
        : { orderBy?: CapaianPembelajaranGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CapaianPembelajaranGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCapaianPembelajaranGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CapaianPembelajaran model
   */
  readonly fields: CapaianPembelajaranFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CapaianPembelajaran.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CapaianPembelajaranClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    MataKuliah<T extends MataKuliahDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahDefaultArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EvaluasiDiri<T extends CapaianPembelajaran$EvaluasiDiriArgs<ExtArgs> = {}>(args?: Subset<T, CapaianPembelajaran$EvaluasiDiriArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CapaianPembelajaran model
   */
  interface CapaianPembelajaranFieldRefs {
    readonly CapaianPembelajaranId: FieldRef<"CapaianPembelajaran", 'String'>
    readonly MataKuliahId: FieldRef<"CapaianPembelajaran", 'String'>
    readonly Nama: FieldRef<"CapaianPembelajaran", 'String'>
    readonly Urutan: FieldRef<"CapaianPembelajaran", 'Int'>
    readonly Active: FieldRef<"CapaianPembelajaran", 'Boolean'>
    readonly CreatedAt: FieldRef<"CapaianPembelajaran", 'DateTime'>
    readonly UpdatedAt: FieldRef<"CapaianPembelajaran", 'DateTime'>
    readonly DeletedAt: FieldRef<"CapaianPembelajaran", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CapaianPembelajaran findUnique
   */
  export type CapaianPembelajaranFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * Filter, which CapaianPembelajaran to fetch.
     */
    where: CapaianPembelajaranWhereUniqueInput
  }

  /**
   * CapaianPembelajaran findUniqueOrThrow
   */
  export type CapaianPembelajaranFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * Filter, which CapaianPembelajaran to fetch.
     */
    where: CapaianPembelajaranWhereUniqueInput
  }

  /**
   * CapaianPembelajaran findFirst
   */
  export type CapaianPembelajaranFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * Filter, which CapaianPembelajaran to fetch.
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapaianPembelajarans to fetch.
     */
    orderBy?: CapaianPembelajaranOrderByWithRelationInput | CapaianPembelajaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CapaianPembelajarans.
     */
    cursor?: CapaianPembelajaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapaianPembelajarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapaianPembelajarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CapaianPembelajarans.
     */
    distinct?: CapaianPembelajaranScalarFieldEnum | CapaianPembelajaranScalarFieldEnum[]
  }

  /**
   * CapaianPembelajaran findFirstOrThrow
   */
  export type CapaianPembelajaranFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * Filter, which CapaianPembelajaran to fetch.
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapaianPembelajarans to fetch.
     */
    orderBy?: CapaianPembelajaranOrderByWithRelationInput | CapaianPembelajaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CapaianPembelajarans.
     */
    cursor?: CapaianPembelajaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapaianPembelajarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapaianPembelajarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CapaianPembelajarans.
     */
    distinct?: CapaianPembelajaranScalarFieldEnum | CapaianPembelajaranScalarFieldEnum[]
  }

  /**
   * CapaianPembelajaran findMany
   */
  export type CapaianPembelajaranFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * Filter, which CapaianPembelajarans to fetch.
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapaianPembelajarans to fetch.
     */
    orderBy?: CapaianPembelajaranOrderByWithRelationInput | CapaianPembelajaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CapaianPembelajarans.
     */
    cursor?: CapaianPembelajaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapaianPembelajarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapaianPembelajarans.
     */
    skip?: number
    distinct?: CapaianPembelajaranScalarFieldEnum | CapaianPembelajaranScalarFieldEnum[]
  }

  /**
   * CapaianPembelajaran create
   */
  export type CapaianPembelajaranCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * The data needed to create a CapaianPembelajaran.
     */
    data: XOR<CapaianPembelajaranCreateInput, CapaianPembelajaranUncheckedCreateInput>
  }

  /**
   * CapaianPembelajaran createMany
   */
  export type CapaianPembelajaranCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CapaianPembelajarans.
     */
    data: CapaianPembelajaranCreateManyInput | CapaianPembelajaranCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CapaianPembelajaran createManyAndReturn
   */
  export type CapaianPembelajaranCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * The data used to create many CapaianPembelajarans.
     */
    data: CapaianPembelajaranCreateManyInput | CapaianPembelajaranCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CapaianPembelajaran update
   */
  export type CapaianPembelajaranUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * The data needed to update a CapaianPembelajaran.
     */
    data: XOR<CapaianPembelajaranUpdateInput, CapaianPembelajaranUncheckedUpdateInput>
    /**
     * Choose, which CapaianPembelajaran to update.
     */
    where: CapaianPembelajaranWhereUniqueInput
  }

  /**
   * CapaianPembelajaran updateMany
   */
  export type CapaianPembelajaranUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CapaianPembelajarans.
     */
    data: XOR<CapaianPembelajaranUpdateManyMutationInput, CapaianPembelajaranUncheckedUpdateManyInput>
    /**
     * Filter which CapaianPembelajarans to update
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * Limit how many CapaianPembelajarans to update.
     */
    limit?: number
  }

  /**
   * CapaianPembelajaran updateManyAndReturn
   */
  export type CapaianPembelajaranUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * The data used to update CapaianPembelajarans.
     */
    data: XOR<CapaianPembelajaranUpdateManyMutationInput, CapaianPembelajaranUncheckedUpdateManyInput>
    /**
     * Filter which CapaianPembelajarans to update
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * Limit how many CapaianPembelajarans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CapaianPembelajaran upsert
   */
  export type CapaianPembelajaranUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * The filter to search for the CapaianPembelajaran to update in case it exists.
     */
    where: CapaianPembelajaranWhereUniqueInput
    /**
     * In case the CapaianPembelajaran found by the `where` argument doesn't exist, create a new CapaianPembelajaran with this data.
     */
    create: XOR<CapaianPembelajaranCreateInput, CapaianPembelajaranUncheckedCreateInput>
    /**
     * In case the CapaianPembelajaran was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CapaianPembelajaranUpdateInput, CapaianPembelajaranUncheckedUpdateInput>
  }

  /**
   * CapaianPembelajaran delete
   */
  export type CapaianPembelajaranDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    /**
     * Filter which CapaianPembelajaran to delete.
     */
    where: CapaianPembelajaranWhereUniqueInput
  }

  /**
   * CapaianPembelajaran deleteMany
   */
  export type CapaianPembelajaranDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CapaianPembelajarans to delete
     */
    where?: CapaianPembelajaranWhereInput
    /**
     * Limit how many CapaianPembelajarans to delete.
     */
    limit?: number
  }

  /**
   * CapaianPembelajaran.EvaluasiDiri
   */
  export type CapaianPembelajaran$EvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    where?: EvaluasiDiriWhereInput
    orderBy?: EvaluasiDiriOrderByWithRelationInput | EvaluasiDiriOrderByWithRelationInput[]
    cursor?: EvaluasiDiriWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluasiDiriScalarFieldEnum | EvaluasiDiriScalarFieldEnum[]
  }

  /**
   * CapaianPembelajaran without action
   */
  export type CapaianPembelajaranDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
  }


  /**
   * Model Country
   */

  export type AggregateCountry = {
    _count: CountryCountAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  export type CountryMinAggregateOutputType = {
    CountryId: string | null
    Nama: string | null
  }

  export type CountryMaxAggregateOutputType = {
    CountryId: string | null
    Nama: string | null
  }

  export type CountryCountAggregateOutputType = {
    CountryId: number
    Nama: number
    _all: number
  }


  export type CountryMinAggregateInputType = {
    CountryId?: true
    Nama?: true
  }

  export type CountryMaxAggregateInputType = {
    CountryId?: true
    Nama?: true
  }

  export type CountryCountAggregateInputType = {
    CountryId?: true
    Nama?: true
    _all?: true
  }

  export type CountryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Country to aggregate.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Countries
    **/
    _count?: true | CountryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CountryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CountryMaxAggregateInputType
  }

  export type GetCountryAggregateType<T extends CountryAggregateArgs> = {
        [P in keyof T & keyof AggregateCountry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCountry[P]>
      : GetScalarType<T[P], AggregateCountry[P]>
  }




  export type CountryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CountryWhereInput
    orderBy?: CountryOrderByWithAggregationInput | CountryOrderByWithAggregationInput[]
    by: CountryScalarFieldEnum[] | CountryScalarFieldEnum
    having?: CountryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CountryCountAggregateInputType | true
    _min?: CountryMinAggregateInputType
    _max?: CountryMaxAggregateInputType
  }

  export type CountryGroupByOutputType = {
    CountryId: string
    Nama: string
    _count: CountryCountAggregateOutputType | null
    _min: CountryMinAggregateOutputType | null
    _max: CountryMaxAggregateOutputType | null
  }

  type GetCountryGroupByPayload<T extends CountryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CountryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CountryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CountryGroupByOutputType[P]>
            : GetScalarType<T[P], CountryGroupByOutputType[P]>
        }
      >
    >


  export type CountrySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    CountryId?: boolean
    Nama?: boolean
    Provinsi?: boolean | Country$ProvinsiArgs<ExtArgs>
    _count?: boolean | CountryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["country"]>

  export type CountrySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    CountryId?: boolean
    Nama?: boolean
  }, ExtArgs["result"]["country"]>

  export type CountrySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    CountryId?: boolean
    Nama?: boolean
  }, ExtArgs["result"]["country"]>

  export type CountrySelectScalar = {
    CountryId?: boolean
    Nama?: boolean
  }

  export type CountryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"CountryId" | "Nama", ExtArgs["result"]["country"]>
  export type CountryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Provinsi?: boolean | Country$ProvinsiArgs<ExtArgs>
    _count?: boolean | CountryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CountryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CountryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CountryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Country"
    objects: {
      Provinsi: Prisma.$ProvinsiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      CountryId: string
      Nama: string
    }, ExtArgs["result"]["country"]>
    composites: {}
  }

  type CountryGetPayload<S extends boolean | null | undefined | CountryDefaultArgs> = $Result.GetResult<Prisma.$CountryPayload, S>

  type CountryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CountryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CountryCountAggregateInputType | true
    }

  export interface CountryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Country'], meta: { name: 'Country' } }
    /**
     * Find zero or one Country that matches the filter.
     * @param {CountryFindUniqueArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CountryFindUniqueArgs>(args: SelectSubset<T, CountryFindUniqueArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Country that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CountryFindUniqueOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CountryFindUniqueOrThrowArgs>(args: SelectSubset<T, CountryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CountryFindFirstArgs>(args?: SelectSubset<T, CountryFindFirstArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Country that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindFirstOrThrowArgs} args - Arguments to find a Country
     * @example
     * // Get one Country
     * const country = await prisma.country.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CountryFindFirstOrThrowArgs>(args?: SelectSubset<T, CountryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Countries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Countries
     * const countries = await prisma.country.findMany()
     * 
     * // Get first 10 Countries
     * const countries = await prisma.country.findMany({ take: 10 })
     * 
     * // Only select the `CountryId`
     * const countryWithCountryIdOnly = await prisma.country.findMany({ select: { CountryId: true } })
     * 
     */
    findMany<T extends CountryFindManyArgs>(args?: SelectSubset<T, CountryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Country.
     * @param {CountryCreateArgs} args - Arguments to create a Country.
     * @example
     * // Create one Country
     * const Country = await prisma.country.create({
     *   data: {
     *     // ... data to create a Country
     *   }
     * })
     * 
     */
    create<T extends CountryCreateArgs>(args: SelectSubset<T, CountryCreateArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Countries.
     * @param {CountryCreateManyArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CountryCreateManyArgs>(args?: SelectSubset<T, CountryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Countries and returns the data saved in the database.
     * @param {CountryCreateManyAndReturnArgs} args - Arguments to create many Countries.
     * @example
     * // Create many Countries
     * const country = await prisma.country.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Countries and only return the `CountryId`
     * const countryWithCountryIdOnly = await prisma.country.createManyAndReturn({
     *   select: { CountryId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CountryCreateManyAndReturnArgs>(args?: SelectSubset<T, CountryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Country.
     * @param {CountryDeleteArgs} args - Arguments to delete one Country.
     * @example
     * // Delete one Country
     * const Country = await prisma.country.delete({
     *   where: {
     *     // ... filter to delete one Country
     *   }
     * })
     * 
     */
    delete<T extends CountryDeleteArgs>(args: SelectSubset<T, CountryDeleteArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Country.
     * @param {CountryUpdateArgs} args - Arguments to update one Country.
     * @example
     * // Update one Country
     * const country = await prisma.country.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CountryUpdateArgs>(args: SelectSubset<T, CountryUpdateArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Countries.
     * @param {CountryDeleteManyArgs} args - Arguments to filter Countries to delete.
     * @example
     * // Delete a few Countries
     * const { count } = await prisma.country.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CountryDeleteManyArgs>(args?: SelectSubset<T, CountryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CountryUpdateManyArgs>(args: SelectSubset<T, CountryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Countries and returns the data updated in the database.
     * @param {CountryUpdateManyAndReturnArgs} args - Arguments to update many Countries.
     * @example
     * // Update many Countries
     * const country = await prisma.country.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Countries and only return the `CountryId`
     * const countryWithCountryIdOnly = await prisma.country.updateManyAndReturn({
     *   select: { CountryId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CountryUpdateManyAndReturnArgs>(args: SelectSubset<T, CountryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Country.
     * @param {CountryUpsertArgs} args - Arguments to update or create a Country.
     * @example
     * // Update or create a Country
     * const country = await prisma.country.upsert({
     *   create: {
     *     // ... data to create a Country
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Country we want to update
     *   }
     * })
     */
    upsert<T extends CountryUpsertArgs>(args: SelectSubset<T, CountryUpsertArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Countries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryCountArgs} args - Arguments to filter Countries to count.
     * @example
     * // Count the number of Countries
     * const count = await prisma.country.count({
     *   where: {
     *     // ... the filter for the Countries we want to count
     *   }
     * })
    **/
    count<T extends CountryCountArgs>(
      args?: Subset<T, CountryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CountryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CountryAggregateArgs>(args: Subset<T, CountryAggregateArgs>): Prisma.PrismaPromise<GetCountryAggregateType<T>>

    /**
     * Group by Country.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CountryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CountryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CountryGroupByArgs['orderBy'] }
        : { orderBy?: CountryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CountryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCountryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Country model
   */
  readonly fields: CountryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Country.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CountryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Provinsi<T extends Country$ProvinsiArgs<ExtArgs> = {}>(args?: Subset<T, Country$ProvinsiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Country model
   */
  interface CountryFieldRefs {
    readonly CountryId: FieldRef<"Country", 'String'>
    readonly Nama: FieldRef<"Country", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Country findUnique
   */
  export type CountryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country findUniqueOrThrow
   */
  export type CountryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country findFirst
   */
  export type CountryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country findFirstOrThrow
   */
  export type CountryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Country to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Countries.
     */
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country findMany
   */
  export type CountryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter, which Countries to fetch.
     */
    where?: CountryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Countries to fetch.
     */
    orderBy?: CountryOrderByWithRelationInput | CountryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Countries.
     */
    cursor?: CountryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Countries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Countries.
     */
    skip?: number
    distinct?: CountryScalarFieldEnum | CountryScalarFieldEnum[]
  }

  /**
   * Country create
   */
  export type CountryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * The data needed to create a Country.
     */
    data: XOR<CountryCreateInput, CountryUncheckedCreateInput>
  }

  /**
   * Country createMany
   */
  export type CountryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Countries.
     */
    data: CountryCreateManyInput | CountryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Country createManyAndReturn
   */
  export type CountryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The data used to create many Countries.
     */
    data: CountryCreateManyInput | CountryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Country update
   */
  export type CountryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * The data needed to update a Country.
     */
    data: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
    /**
     * Choose, which Country to update.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country updateMany
   */
  export type CountryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Countries.
     */
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    /**
     * Filter which Countries to update
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to update.
     */
    limit?: number
  }

  /**
   * Country updateManyAndReturn
   */
  export type CountryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * The data used to update Countries.
     */
    data: XOR<CountryUpdateManyMutationInput, CountryUncheckedUpdateManyInput>
    /**
     * Filter which Countries to update
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to update.
     */
    limit?: number
  }

  /**
   * Country upsert
   */
  export type CountryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * The filter to search for the Country to update in case it exists.
     */
    where: CountryWhereUniqueInput
    /**
     * In case the Country found by the `where` argument doesn't exist, create a new Country with this data.
     */
    create: XOR<CountryCreateInput, CountryUncheckedCreateInput>
    /**
     * In case the Country was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CountryUpdateInput, CountryUncheckedUpdateInput>
  }

  /**
   * Country delete
   */
  export type CountryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
    /**
     * Filter which Country to delete.
     */
    where: CountryWhereUniqueInput
  }

  /**
   * Country deleteMany
   */
  export type CountryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Countries to delete
     */
    where?: CountryWhereInput
    /**
     * Limit how many Countries to delete.
     */
    limit?: number
  }

  /**
   * Country.Provinsi
   */
  export type Country$ProvinsiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    where?: ProvinsiWhereInput
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    cursor?: ProvinsiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Country without action
   */
  export type CountryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Country
     */
    select?: CountrySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Country
     */
    omit?: CountryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CountryInclude<ExtArgs> | null
  }


  /**
   * Model DaftarUlang
   */

  export type AggregateDaftarUlang = {
    _count: DaftarUlangCountAggregateOutputType | null
    _min: DaftarUlangMinAggregateOutputType | null
    _max: DaftarUlangMaxAggregateOutputType | null
  }

  export type DaftarUlangMinAggregateOutputType = {
    DaftarUlangId: string | null
    PendaftaranId: string | null
    ProgramStudiId: string | null
    Nim: string | null
    JenjangKkniDituju: string | null
    KipK: boolean | null
    Aktif: boolean | null
    MengisiBiodata: boolean | null
    Finalisasi: boolean | null
    TanggalDaftar: Date | null
    TanggalDaftarUlang: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DaftarUlangMaxAggregateOutputType = {
    DaftarUlangId: string | null
    PendaftaranId: string | null
    ProgramStudiId: string | null
    Nim: string | null
    JenjangKkniDituju: string | null
    KipK: boolean | null
    Aktif: boolean | null
    MengisiBiodata: boolean | null
    Finalisasi: boolean | null
    TanggalDaftar: Date | null
    TanggalDaftarUlang: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type DaftarUlangCountAggregateOutputType = {
    DaftarUlangId: number
    PendaftaranId: number
    ProgramStudiId: number
    Nim: number
    JenjangKkniDituju: number
    KipK: number
    Aktif: number
    MengisiBiodata: number
    Finalisasi: number
    TanggalDaftar: number
    TanggalDaftarUlang: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type DaftarUlangMinAggregateInputType = {
    DaftarUlangId?: true
    PendaftaranId?: true
    ProgramStudiId?: true
    Nim?: true
    JenjangKkniDituju?: true
    KipK?: true
    Aktif?: true
    MengisiBiodata?: true
    Finalisasi?: true
    TanggalDaftar?: true
    TanggalDaftarUlang?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DaftarUlangMaxAggregateInputType = {
    DaftarUlangId?: true
    PendaftaranId?: true
    ProgramStudiId?: true
    Nim?: true
    JenjangKkniDituju?: true
    KipK?: true
    Aktif?: true
    MengisiBiodata?: true
    Finalisasi?: true
    TanggalDaftar?: true
    TanggalDaftarUlang?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type DaftarUlangCountAggregateInputType = {
    DaftarUlangId?: true
    PendaftaranId?: true
    ProgramStudiId?: true
    Nim?: true
    JenjangKkniDituju?: true
    KipK?: true
    Aktif?: true
    MengisiBiodata?: true
    Finalisasi?: true
    TanggalDaftar?: true
    TanggalDaftarUlang?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type DaftarUlangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DaftarUlang to aggregate.
     */
    where?: DaftarUlangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DaftarUlangs to fetch.
     */
    orderBy?: DaftarUlangOrderByWithRelationInput | DaftarUlangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DaftarUlangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DaftarUlangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DaftarUlangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DaftarUlangs
    **/
    _count?: true | DaftarUlangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DaftarUlangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DaftarUlangMaxAggregateInputType
  }

  export type GetDaftarUlangAggregateType<T extends DaftarUlangAggregateArgs> = {
        [P in keyof T & keyof AggregateDaftarUlang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDaftarUlang[P]>
      : GetScalarType<T[P], AggregateDaftarUlang[P]>
  }




  export type DaftarUlangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DaftarUlangWhereInput
    orderBy?: DaftarUlangOrderByWithAggregationInput | DaftarUlangOrderByWithAggregationInput[]
    by: DaftarUlangScalarFieldEnum[] | DaftarUlangScalarFieldEnum
    having?: DaftarUlangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DaftarUlangCountAggregateInputType | true
    _min?: DaftarUlangMinAggregateInputType
    _max?: DaftarUlangMaxAggregateInputType
  }

  export type DaftarUlangGroupByOutputType = {
    DaftarUlangId: string
    PendaftaranId: string
    ProgramStudiId: string
    Nim: string | null
    JenjangKkniDituju: string | null
    KipK: boolean
    Aktif: boolean
    MengisiBiodata: boolean
    Finalisasi: boolean
    TanggalDaftar: Date | null
    TanggalDaftarUlang: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: DaftarUlangCountAggregateOutputType | null
    _min: DaftarUlangMinAggregateOutputType | null
    _max: DaftarUlangMaxAggregateOutputType | null
  }

  type GetDaftarUlangGroupByPayload<T extends DaftarUlangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DaftarUlangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DaftarUlangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DaftarUlangGroupByOutputType[P]>
            : GetScalarType<T[P], DaftarUlangGroupByOutputType[P]>
        }
      >
    >


  export type DaftarUlangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    DaftarUlangId?: boolean
    PendaftaranId?: boolean
    ProgramStudiId?: boolean
    Nim?: boolean
    JenjangKkniDituju?: boolean
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: boolean
    TanggalDaftarUlang?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["daftarUlang"]>

  export type DaftarUlangSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    DaftarUlangId?: boolean
    PendaftaranId?: boolean
    ProgramStudiId?: boolean
    Nim?: boolean
    JenjangKkniDituju?: boolean
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: boolean
    TanggalDaftarUlang?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["daftarUlang"]>

  export type DaftarUlangSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    DaftarUlangId?: boolean
    PendaftaranId?: boolean
    ProgramStudiId?: boolean
    Nim?: boolean
    JenjangKkniDituju?: boolean
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: boolean
    TanggalDaftarUlang?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["daftarUlang"]>

  export type DaftarUlangSelectScalar = {
    DaftarUlangId?: boolean
    PendaftaranId?: boolean
    ProgramStudiId?: boolean
    Nim?: boolean
    JenjangKkniDituju?: boolean
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: boolean
    TanggalDaftarUlang?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type DaftarUlangOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"DaftarUlangId" | "PendaftaranId" | "ProgramStudiId" | "Nim" | "JenjangKkniDituju" | "KipK" | "Aktif" | "MengisiBiodata" | "Finalisasi" | "TanggalDaftar" | "TanggalDaftarUlang" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["daftarUlang"]>
  export type DaftarUlangInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }
  export type DaftarUlangIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }
  export type DaftarUlangIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }

  export type $DaftarUlangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DaftarUlang"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
      ProgramStudi: Prisma.$ProgramStudiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      DaftarUlangId: string
      PendaftaranId: string
      ProgramStudiId: string
      Nim: string | null
      JenjangKkniDituju: string | null
      KipK: boolean
      Aktif: boolean
      MengisiBiodata: boolean
      Finalisasi: boolean
      TanggalDaftar: Date | null
      TanggalDaftarUlang: Date | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["daftarUlang"]>
    composites: {}
  }

  type DaftarUlangGetPayload<S extends boolean | null | undefined | DaftarUlangDefaultArgs> = $Result.GetResult<Prisma.$DaftarUlangPayload, S>

  type DaftarUlangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DaftarUlangFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DaftarUlangCountAggregateInputType | true
    }

  export interface DaftarUlangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DaftarUlang'], meta: { name: 'DaftarUlang' } }
    /**
     * Find zero or one DaftarUlang that matches the filter.
     * @param {DaftarUlangFindUniqueArgs} args - Arguments to find a DaftarUlang
     * @example
     * // Get one DaftarUlang
     * const daftarUlang = await prisma.daftarUlang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DaftarUlangFindUniqueArgs>(args: SelectSubset<T, DaftarUlangFindUniqueArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DaftarUlang that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DaftarUlangFindUniqueOrThrowArgs} args - Arguments to find a DaftarUlang
     * @example
     * // Get one DaftarUlang
     * const daftarUlang = await prisma.daftarUlang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DaftarUlangFindUniqueOrThrowArgs>(args: SelectSubset<T, DaftarUlangFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DaftarUlang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangFindFirstArgs} args - Arguments to find a DaftarUlang
     * @example
     * // Get one DaftarUlang
     * const daftarUlang = await prisma.daftarUlang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DaftarUlangFindFirstArgs>(args?: SelectSubset<T, DaftarUlangFindFirstArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DaftarUlang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangFindFirstOrThrowArgs} args - Arguments to find a DaftarUlang
     * @example
     * // Get one DaftarUlang
     * const daftarUlang = await prisma.daftarUlang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DaftarUlangFindFirstOrThrowArgs>(args?: SelectSubset<T, DaftarUlangFindFirstOrThrowArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DaftarUlangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DaftarUlangs
     * const daftarUlangs = await prisma.daftarUlang.findMany()
     * 
     * // Get first 10 DaftarUlangs
     * const daftarUlangs = await prisma.daftarUlang.findMany({ take: 10 })
     * 
     * // Only select the `DaftarUlangId`
     * const daftarUlangWithDaftarUlangIdOnly = await prisma.daftarUlang.findMany({ select: { DaftarUlangId: true } })
     * 
     */
    findMany<T extends DaftarUlangFindManyArgs>(args?: SelectSubset<T, DaftarUlangFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DaftarUlang.
     * @param {DaftarUlangCreateArgs} args - Arguments to create a DaftarUlang.
     * @example
     * // Create one DaftarUlang
     * const DaftarUlang = await prisma.daftarUlang.create({
     *   data: {
     *     // ... data to create a DaftarUlang
     *   }
     * })
     * 
     */
    create<T extends DaftarUlangCreateArgs>(args: SelectSubset<T, DaftarUlangCreateArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DaftarUlangs.
     * @param {DaftarUlangCreateManyArgs} args - Arguments to create many DaftarUlangs.
     * @example
     * // Create many DaftarUlangs
     * const daftarUlang = await prisma.daftarUlang.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DaftarUlangCreateManyArgs>(args?: SelectSubset<T, DaftarUlangCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DaftarUlangs and returns the data saved in the database.
     * @param {DaftarUlangCreateManyAndReturnArgs} args - Arguments to create many DaftarUlangs.
     * @example
     * // Create many DaftarUlangs
     * const daftarUlang = await prisma.daftarUlang.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DaftarUlangs and only return the `DaftarUlangId`
     * const daftarUlangWithDaftarUlangIdOnly = await prisma.daftarUlang.createManyAndReturn({
     *   select: { DaftarUlangId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DaftarUlangCreateManyAndReturnArgs>(args?: SelectSubset<T, DaftarUlangCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DaftarUlang.
     * @param {DaftarUlangDeleteArgs} args - Arguments to delete one DaftarUlang.
     * @example
     * // Delete one DaftarUlang
     * const DaftarUlang = await prisma.daftarUlang.delete({
     *   where: {
     *     // ... filter to delete one DaftarUlang
     *   }
     * })
     * 
     */
    delete<T extends DaftarUlangDeleteArgs>(args: SelectSubset<T, DaftarUlangDeleteArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DaftarUlang.
     * @param {DaftarUlangUpdateArgs} args - Arguments to update one DaftarUlang.
     * @example
     * // Update one DaftarUlang
     * const daftarUlang = await prisma.daftarUlang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DaftarUlangUpdateArgs>(args: SelectSubset<T, DaftarUlangUpdateArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DaftarUlangs.
     * @param {DaftarUlangDeleteManyArgs} args - Arguments to filter DaftarUlangs to delete.
     * @example
     * // Delete a few DaftarUlangs
     * const { count } = await prisma.daftarUlang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DaftarUlangDeleteManyArgs>(args?: SelectSubset<T, DaftarUlangDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DaftarUlangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DaftarUlangs
     * const daftarUlang = await prisma.daftarUlang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DaftarUlangUpdateManyArgs>(args: SelectSubset<T, DaftarUlangUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DaftarUlangs and returns the data updated in the database.
     * @param {DaftarUlangUpdateManyAndReturnArgs} args - Arguments to update many DaftarUlangs.
     * @example
     * // Update many DaftarUlangs
     * const daftarUlang = await prisma.daftarUlang.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DaftarUlangs and only return the `DaftarUlangId`
     * const daftarUlangWithDaftarUlangIdOnly = await prisma.daftarUlang.updateManyAndReturn({
     *   select: { DaftarUlangId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DaftarUlangUpdateManyAndReturnArgs>(args: SelectSubset<T, DaftarUlangUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DaftarUlang.
     * @param {DaftarUlangUpsertArgs} args - Arguments to update or create a DaftarUlang.
     * @example
     * // Update or create a DaftarUlang
     * const daftarUlang = await prisma.daftarUlang.upsert({
     *   create: {
     *     // ... data to create a DaftarUlang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DaftarUlang we want to update
     *   }
     * })
     */
    upsert<T extends DaftarUlangUpsertArgs>(args: SelectSubset<T, DaftarUlangUpsertArgs<ExtArgs>>): Prisma__DaftarUlangClient<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DaftarUlangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangCountArgs} args - Arguments to filter DaftarUlangs to count.
     * @example
     * // Count the number of DaftarUlangs
     * const count = await prisma.daftarUlang.count({
     *   where: {
     *     // ... the filter for the DaftarUlangs we want to count
     *   }
     * })
    **/
    count<T extends DaftarUlangCountArgs>(
      args?: Subset<T, DaftarUlangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DaftarUlangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DaftarUlang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DaftarUlangAggregateArgs>(args: Subset<T, DaftarUlangAggregateArgs>): Prisma.PrismaPromise<GetDaftarUlangAggregateType<T>>

    /**
     * Group by DaftarUlang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DaftarUlangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DaftarUlangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DaftarUlangGroupByArgs['orderBy'] }
        : { orderBy?: DaftarUlangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DaftarUlangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDaftarUlangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DaftarUlang model
   */
  readonly fields: DaftarUlangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DaftarUlang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DaftarUlangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ProgramStudi<T extends ProgramStudiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramStudiDefaultArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DaftarUlang model
   */
  interface DaftarUlangFieldRefs {
    readonly DaftarUlangId: FieldRef<"DaftarUlang", 'String'>
    readonly PendaftaranId: FieldRef<"DaftarUlang", 'String'>
    readonly ProgramStudiId: FieldRef<"DaftarUlang", 'String'>
    readonly Nim: FieldRef<"DaftarUlang", 'String'>
    readonly JenjangKkniDituju: FieldRef<"DaftarUlang", 'String'>
    readonly KipK: FieldRef<"DaftarUlang", 'Boolean'>
    readonly Aktif: FieldRef<"DaftarUlang", 'Boolean'>
    readonly MengisiBiodata: FieldRef<"DaftarUlang", 'Boolean'>
    readonly Finalisasi: FieldRef<"DaftarUlang", 'Boolean'>
    readonly TanggalDaftar: FieldRef<"DaftarUlang", 'DateTime'>
    readonly TanggalDaftarUlang: FieldRef<"DaftarUlang", 'DateTime'>
    readonly CreatedAt: FieldRef<"DaftarUlang", 'DateTime'>
    readonly UpdatedAt: FieldRef<"DaftarUlang", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DaftarUlang findUnique
   */
  export type DaftarUlangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * Filter, which DaftarUlang to fetch.
     */
    where: DaftarUlangWhereUniqueInput
  }

  /**
   * DaftarUlang findUniqueOrThrow
   */
  export type DaftarUlangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * Filter, which DaftarUlang to fetch.
     */
    where: DaftarUlangWhereUniqueInput
  }

  /**
   * DaftarUlang findFirst
   */
  export type DaftarUlangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * Filter, which DaftarUlang to fetch.
     */
    where?: DaftarUlangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DaftarUlangs to fetch.
     */
    orderBy?: DaftarUlangOrderByWithRelationInput | DaftarUlangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DaftarUlangs.
     */
    cursor?: DaftarUlangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DaftarUlangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DaftarUlangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DaftarUlangs.
     */
    distinct?: DaftarUlangScalarFieldEnum | DaftarUlangScalarFieldEnum[]
  }

  /**
   * DaftarUlang findFirstOrThrow
   */
  export type DaftarUlangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * Filter, which DaftarUlang to fetch.
     */
    where?: DaftarUlangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DaftarUlangs to fetch.
     */
    orderBy?: DaftarUlangOrderByWithRelationInput | DaftarUlangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DaftarUlangs.
     */
    cursor?: DaftarUlangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DaftarUlangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DaftarUlangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DaftarUlangs.
     */
    distinct?: DaftarUlangScalarFieldEnum | DaftarUlangScalarFieldEnum[]
  }

  /**
   * DaftarUlang findMany
   */
  export type DaftarUlangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * Filter, which DaftarUlangs to fetch.
     */
    where?: DaftarUlangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DaftarUlangs to fetch.
     */
    orderBy?: DaftarUlangOrderByWithRelationInput | DaftarUlangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DaftarUlangs.
     */
    cursor?: DaftarUlangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DaftarUlangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DaftarUlangs.
     */
    skip?: number
    distinct?: DaftarUlangScalarFieldEnum | DaftarUlangScalarFieldEnum[]
  }

  /**
   * DaftarUlang create
   */
  export type DaftarUlangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * The data needed to create a DaftarUlang.
     */
    data: XOR<DaftarUlangCreateInput, DaftarUlangUncheckedCreateInput>
  }

  /**
   * DaftarUlang createMany
   */
  export type DaftarUlangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DaftarUlangs.
     */
    data: DaftarUlangCreateManyInput | DaftarUlangCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DaftarUlang createManyAndReturn
   */
  export type DaftarUlangCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * The data used to create many DaftarUlangs.
     */
    data: DaftarUlangCreateManyInput | DaftarUlangCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DaftarUlang update
   */
  export type DaftarUlangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * The data needed to update a DaftarUlang.
     */
    data: XOR<DaftarUlangUpdateInput, DaftarUlangUncheckedUpdateInput>
    /**
     * Choose, which DaftarUlang to update.
     */
    where: DaftarUlangWhereUniqueInput
  }

  /**
   * DaftarUlang updateMany
   */
  export type DaftarUlangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DaftarUlangs.
     */
    data: XOR<DaftarUlangUpdateManyMutationInput, DaftarUlangUncheckedUpdateManyInput>
    /**
     * Filter which DaftarUlangs to update
     */
    where?: DaftarUlangWhereInput
    /**
     * Limit how many DaftarUlangs to update.
     */
    limit?: number
  }

  /**
   * DaftarUlang updateManyAndReturn
   */
  export type DaftarUlangUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * The data used to update DaftarUlangs.
     */
    data: XOR<DaftarUlangUpdateManyMutationInput, DaftarUlangUncheckedUpdateManyInput>
    /**
     * Filter which DaftarUlangs to update
     */
    where?: DaftarUlangWhereInput
    /**
     * Limit how many DaftarUlangs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DaftarUlang upsert
   */
  export type DaftarUlangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * The filter to search for the DaftarUlang to update in case it exists.
     */
    where: DaftarUlangWhereUniqueInput
    /**
     * In case the DaftarUlang found by the `where` argument doesn't exist, create a new DaftarUlang with this data.
     */
    create: XOR<DaftarUlangCreateInput, DaftarUlangUncheckedCreateInput>
    /**
     * In case the DaftarUlang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DaftarUlangUpdateInput, DaftarUlangUncheckedUpdateInput>
  }

  /**
   * DaftarUlang delete
   */
  export type DaftarUlangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    /**
     * Filter which DaftarUlang to delete.
     */
    where: DaftarUlangWhereUniqueInput
  }

  /**
   * DaftarUlang deleteMany
   */
  export type DaftarUlangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DaftarUlangs to delete
     */
    where?: DaftarUlangWhereInput
    /**
     * Limit how many DaftarUlangs to delete.
     */
    limit?: number
  }

  /**
   * DaftarUlang without action
   */
  export type DaftarUlangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
  }


  /**
   * Model Desa
   */

  export type AggregateDesa = {
    _count: DesaCountAggregateOutputType | null
    _min: DesaMinAggregateOutputType | null
    _max: DesaMaxAggregateOutputType | null
  }

  export type DesaMinAggregateOutputType = {
    DesaId: string | null
    KecamatanId: string | null
    Nama: string | null
  }

  export type DesaMaxAggregateOutputType = {
    DesaId: string | null
    KecamatanId: string | null
    Nama: string | null
  }

  export type DesaCountAggregateOutputType = {
    DesaId: number
    KecamatanId: number
    Nama: number
    _all: number
  }


  export type DesaMinAggregateInputType = {
    DesaId?: true
    KecamatanId?: true
    Nama?: true
  }

  export type DesaMaxAggregateInputType = {
    DesaId?: true
    KecamatanId?: true
    Nama?: true
  }

  export type DesaCountAggregateInputType = {
    DesaId?: true
    KecamatanId?: true
    Nama?: true
    _all?: true
  }

  export type DesaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Desa to aggregate.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Desas
    **/
    _count?: true | DesaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DesaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DesaMaxAggregateInputType
  }

  export type GetDesaAggregateType<T extends DesaAggregateArgs> = {
        [P in keyof T & keyof AggregateDesa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDesa[P]>
      : GetScalarType<T[P], AggregateDesa[P]>
  }




  export type DesaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DesaWhereInput
    orderBy?: DesaOrderByWithAggregationInput | DesaOrderByWithAggregationInput[]
    by: DesaScalarFieldEnum[] | DesaScalarFieldEnum
    having?: DesaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DesaCountAggregateInputType | true
    _min?: DesaMinAggregateInputType
    _max?: DesaMaxAggregateInputType
  }

  export type DesaGroupByOutputType = {
    DesaId: string
    KecamatanId: string
    Nama: string
    _count: DesaCountAggregateOutputType | null
    _min: DesaMinAggregateOutputType | null
    _max: DesaMaxAggregateOutputType | null
  }

  type GetDesaGroupByPayload<T extends DesaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DesaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DesaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DesaGroupByOutputType[P]>
            : GetScalarType<T[P], DesaGroupByOutputType[P]>
        }
      >
    >


  export type DesaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    DesaId?: boolean
    KecamatanId?: boolean
    Nama?: boolean
    Kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    Alamat?: boolean | Desa$AlamatArgs<ExtArgs>
    _count?: boolean | DesaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["desa"]>

  export type DesaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    DesaId?: boolean
    KecamatanId?: boolean
    Nama?: boolean
    Kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["desa"]>

  export type DesaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    DesaId?: boolean
    KecamatanId?: boolean
    Nama?: boolean
    Kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["desa"]>

  export type DesaSelectScalar = {
    DesaId?: boolean
    KecamatanId?: boolean
    Nama?: boolean
  }

  export type DesaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"DesaId" | "KecamatanId" | "Nama", ExtArgs["result"]["desa"]>
  export type DesaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
    Alamat?: boolean | Desa$AlamatArgs<ExtArgs>
    _count?: boolean | DesaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DesaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }
  export type DesaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kecamatan?: boolean | KecamatanDefaultArgs<ExtArgs>
  }

  export type $DesaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Desa"
    objects: {
      Kecamatan: Prisma.$KecamatanPayload<ExtArgs>
      Alamat: Prisma.$AlamatPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      DesaId: string
      KecamatanId: string
      Nama: string
    }, ExtArgs["result"]["desa"]>
    composites: {}
  }

  type DesaGetPayload<S extends boolean | null | undefined | DesaDefaultArgs> = $Result.GetResult<Prisma.$DesaPayload, S>

  type DesaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DesaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DesaCountAggregateInputType | true
    }

  export interface DesaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Desa'], meta: { name: 'Desa' } }
    /**
     * Find zero or one Desa that matches the filter.
     * @param {DesaFindUniqueArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DesaFindUniqueArgs>(args: SelectSubset<T, DesaFindUniqueArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Desa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DesaFindUniqueOrThrowArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DesaFindUniqueOrThrowArgs>(args: SelectSubset<T, DesaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Desa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaFindFirstArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DesaFindFirstArgs>(args?: SelectSubset<T, DesaFindFirstArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Desa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaFindFirstOrThrowArgs} args - Arguments to find a Desa
     * @example
     * // Get one Desa
     * const desa = await prisma.desa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DesaFindFirstOrThrowArgs>(args?: SelectSubset<T, DesaFindFirstOrThrowArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Desas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Desas
     * const desas = await prisma.desa.findMany()
     * 
     * // Get first 10 Desas
     * const desas = await prisma.desa.findMany({ take: 10 })
     * 
     * // Only select the `DesaId`
     * const desaWithDesaIdOnly = await prisma.desa.findMany({ select: { DesaId: true } })
     * 
     */
    findMany<T extends DesaFindManyArgs>(args?: SelectSubset<T, DesaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Desa.
     * @param {DesaCreateArgs} args - Arguments to create a Desa.
     * @example
     * // Create one Desa
     * const Desa = await prisma.desa.create({
     *   data: {
     *     // ... data to create a Desa
     *   }
     * })
     * 
     */
    create<T extends DesaCreateArgs>(args: SelectSubset<T, DesaCreateArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Desas.
     * @param {DesaCreateManyArgs} args - Arguments to create many Desas.
     * @example
     * // Create many Desas
     * const desa = await prisma.desa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DesaCreateManyArgs>(args?: SelectSubset<T, DesaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Desas and returns the data saved in the database.
     * @param {DesaCreateManyAndReturnArgs} args - Arguments to create many Desas.
     * @example
     * // Create many Desas
     * const desa = await prisma.desa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Desas and only return the `DesaId`
     * const desaWithDesaIdOnly = await prisma.desa.createManyAndReturn({
     *   select: { DesaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DesaCreateManyAndReturnArgs>(args?: SelectSubset<T, DesaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Desa.
     * @param {DesaDeleteArgs} args - Arguments to delete one Desa.
     * @example
     * // Delete one Desa
     * const Desa = await prisma.desa.delete({
     *   where: {
     *     // ... filter to delete one Desa
     *   }
     * })
     * 
     */
    delete<T extends DesaDeleteArgs>(args: SelectSubset<T, DesaDeleteArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Desa.
     * @param {DesaUpdateArgs} args - Arguments to update one Desa.
     * @example
     * // Update one Desa
     * const desa = await prisma.desa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DesaUpdateArgs>(args: SelectSubset<T, DesaUpdateArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Desas.
     * @param {DesaDeleteManyArgs} args - Arguments to filter Desas to delete.
     * @example
     * // Delete a few Desas
     * const { count } = await prisma.desa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DesaDeleteManyArgs>(args?: SelectSubset<T, DesaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Desas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Desas
     * const desa = await prisma.desa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DesaUpdateManyArgs>(args: SelectSubset<T, DesaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Desas and returns the data updated in the database.
     * @param {DesaUpdateManyAndReturnArgs} args - Arguments to update many Desas.
     * @example
     * // Update many Desas
     * const desa = await prisma.desa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Desas and only return the `DesaId`
     * const desaWithDesaIdOnly = await prisma.desa.updateManyAndReturn({
     *   select: { DesaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DesaUpdateManyAndReturnArgs>(args: SelectSubset<T, DesaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Desa.
     * @param {DesaUpsertArgs} args - Arguments to update or create a Desa.
     * @example
     * // Update or create a Desa
     * const desa = await prisma.desa.upsert({
     *   create: {
     *     // ... data to create a Desa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Desa we want to update
     *   }
     * })
     */
    upsert<T extends DesaUpsertArgs>(args: SelectSubset<T, DesaUpsertArgs<ExtArgs>>): Prisma__DesaClient<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Desas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaCountArgs} args - Arguments to filter Desas to count.
     * @example
     * // Count the number of Desas
     * const count = await prisma.desa.count({
     *   where: {
     *     // ... the filter for the Desas we want to count
     *   }
     * })
    **/
    count<T extends DesaCountArgs>(
      args?: Subset<T, DesaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DesaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Desa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DesaAggregateArgs>(args: Subset<T, DesaAggregateArgs>): Prisma.PrismaPromise<GetDesaAggregateType<T>>

    /**
     * Group by Desa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DesaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DesaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DesaGroupByArgs['orderBy'] }
        : { orderBy?: DesaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DesaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDesaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Desa model
   */
  readonly fields: DesaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Desa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DesaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Kecamatan<T extends KecamatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KecamatanDefaultArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Alamat<T extends Desa$AlamatArgs<ExtArgs> = {}>(args?: Subset<T, Desa$AlamatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Desa model
   */
  interface DesaFieldRefs {
    readonly DesaId: FieldRef<"Desa", 'String'>
    readonly KecamatanId: FieldRef<"Desa", 'String'>
    readonly Nama: FieldRef<"Desa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Desa findUnique
   */
  export type DesaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa findUniqueOrThrow
   */
  export type DesaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa findFirst
   */
  export type DesaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Desas.
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Desas.
     */
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Desa findFirstOrThrow
   */
  export type DesaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desa to fetch.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Desas.
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Desas.
     */
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Desa findMany
   */
  export type DesaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter, which Desas to fetch.
     */
    where?: DesaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Desas to fetch.
     */
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Desas.
     */
    cursor?: DesaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Desas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Desas.
     */
    skip?: number
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Desa create
   */
  export type DesaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * The data needed to create a Desa.
     */
    data: XOR<DesaCreateInput, DesaUncheckedCreateInput>
  }

  /**
   * Desa createMany
   */
  export type DesaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Desas.
     */
    data: DesaCreateManyInput | DesaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Desa createManyAndReturn
   */
  export type DesaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * The data used to create many Desas.
     */
    data: DesaCreateManyInput | DesaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Desa update
   */
  export type DesaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * The data needed to update a Desa.
     */
    data: XOR<DesaUpdateInput, DesaUncheckedUpdateInput>
    /**
     * Choose, which Desa to update.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa updateMany
   */
  export type DesaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Desas.
     */
    data: XOR<DesaUpdateManyMutationInput, DesaUncheckedUpdateManyInput>
    /**
     * Filter which Desas to update
     */
    where?: DesaWhereInput
    /**
     * Limit how many Desas to update.
     */
    limit?: number
  }

  /**
   * Desa updateManyAndReturn
   */
  export type DesaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * The data used to update Desas.
     */
    data: XOR<DesaUpdateManyMutationInput, DesaUncheckedUpdateManyInput>
    /**
     * Filter which Desas to update
     */
    where?: DesaWhereInput
    /**
     * Limit how many Desas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Desa upsert
   */
  export type DesaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * The filter to search for the Desa to update in case it exists.
     */
    where: DesaWhereUniqueInput
    /**
     * In case the Desa found by the `where` argument doesn't exist, create a new Desa with this data.
     */
    create: XOR<DesaCreateInput, DesaUncheckedCreateInput>
    /**
     * In case the Desa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DesaUpdateInput, DesaUncheckedUpdateInput>
  }

  /**
   * Desa delete
   */
  export type DesaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    /**
     * Filter which Desa to delete.
     */
    where: DesaWhereUniqueInput
  }

  /**
   * Desa deleteMany
   */
  export type DesaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Desas to delete
     */
    where?: DesaWhereInput
    /**
     * Limit how many Desas to delete.
     */
    limit?: number
  }

  /**
   * Desa.Alamat
   */
  export type Desa$AlamatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alamat
     */
    select?: AlamatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alamat
     */
    omit?: AlamatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlamatInclude<ExtArgs> | null
    where?: AlamatWhereInput
    orderBy?: AlamatOrderByWithRelationInput | AlamatOrderByWithRelationInput[]
    cursor?: AlamatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlamatScalarFieldEnum | AlamatScalarFieldEnum[]
  }

  /**
   * Desa without action
   */
  export type DesaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
  }


  /**
   * Model EvaluasiDiri
   */

  export type AggregateEvaluasiDiri = {
    _count: EvaluasiDiriCountAggregateOutputType | null
    _min: EvaluasiDiriMinAggregateOutputType | null
    _max: EvaluasiDiriMaxAggregateOutputType | null
  }

  export type EvaluasiDiriMinAggregateOutputType = {
    EvaluasiDiriId: string | null
    MataKuliahMahasiswaId: string | null
    CapaianPembelajaranId: string | null
    ProfiensiPengetahuan: $Enums.ProfiensiPengetahuan | null
    TanggalPengesahan: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type EvaluasiDiriMaxAggregateOutputType = {
    EvaluasiDiriId: string | null
    MataKuliahMahasiswaId: string | null
    CapaianPembelajaranId: string | null
    ProfiensiPengetahuan: $Enums.ProfiensiPengetahuan | null
    TanggalPengesahan: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type EvaluasiDiriCountAggregateOutputType = {
    EvaluasiDiriId: number
    MataKuliahMahasiswaId: number
    CapaianPembelajaranId: number
    ProfiensiPengetahuan: number
    TanggalPengesahan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type EvaluasiDiriMinAggregateInputType = {
    EvaluasiDiriId?: true
    MataKuliahMahasiswaId?: true
    CapaianPembelajaranId?: true
    ProfiensiPengetahuan?: true
    TanggalPengesahan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type EvaluasiDiriMaxAggregateInputType = {
    EvaluasiDiriId?: true
    MataKuliahMahasiswaId?: true
    CapaianPembelajaranId?: true
    ProfiensiPengetahuan?: true
    TanggalPengesahan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type EvaluasiDiriCountAggregateInputType = {
    EvaluasiDiriId?: true
    MataKuliahMahasiswaId?: true
    CapaianPembelajaranId?: true
    ProfiensiPengetahuan?: true
    TanggalPengesahan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type EvaluasiDiriAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EvaluasiDiri to aggregate.
     */
    where?: EvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluasiDiris to fetch.
     */
    orderBy?: EvaluasiDiriOrderByWithRelationInput | EvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluasiDiris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EvaluasiDiris
    **/
    _count?: true | EvaluasiDiriCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EvaluasiDiriMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EvaluasiDiriMaxAggregateInputType
  }

  export type GetEvaluasiDiriAggregateType<T extends EvaluasiDiriAggregateArgs> = {
        [P in keyof T & keyof AggregateEvaluasiDiri]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvaluasiDiri[P]>
      : GetScalarType<T[P], AggregateEvaluasiDiri[P]>
  }




  export type EvaluasiDiriGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluasiDiriWhereInput
    orderBy?: EvaluasiDiriOrderByWithAggregationInput | EvaluasiDiriOrderByWithAggregationInput[]
    by: EvaluasiDiriScalarFieldEnum[] | EvaluasiDiriScalarFieldEnum
    having?: EvaluasiDiriScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EvaluasiDiriCountAggregateInputType | true
    _min?: EvaluasiDiriMinAggregateInputType
    _max?: EvaluasiDiriMaxAggregateInputType
  }

  export type EvaluasiDiriGroupByOutputType = {
    EvaluasiDiriId: string
    MataKuliahMahasiswaId: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan: $Enums.ProfiensiPengetahuan
    TanggalPengesahan: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: EvaluasiDiriCountAggregateOutputType | null
    _min: EvaluasiDiriMinAggregateOutputType | null
    _max: EvaluasiDiriMaxAggregateOutputType | null
  }

  type GetEvaluasiDiriGroupByPayload<T extends EvaluasiDiriGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EvaluasiDiriGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EvaluasiDiriGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EvaluasiDiriGroupByOutputType[P]>
            : GetScalarType<T[P], EvaluasiDiriGroupByOutputType[P]>
        }
      >
    >


  export type EvaluasiDiriSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    EvaluasiDiriId?: boolean
    MataKuliahMahasiswaId?: boolean
    CapaianPembelajaranId?: boolean
    ProfiensiPengetahuan?: boolean
    TanggalPengesahan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | CapaianPembelajaranDefaultArgs<ExtArgs>
    BuktiFormEvaluasiDiri?: boolean | EvaluasiDiri$BuktiFormEvaluasiDiriArgs<ExtArgs>
    HasilAssesmen?: boolean | EvaluasiDiri$HasilAssesmenArgs<ExtArgs>
    _count?: boolean | EvaluasiDiriCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluasiDiri"]>

  export type EvaluasiDiriSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    EvaluasiDiriId?: boolean
    MataKuliahMahasiswaId?: boolean
    CapaianPembelajaranId?: boolean
    ProfiensiPengetahuan?: boolean
    TanggalPengesahan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | CapaianPembelajaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluasiDiri"]>

  export type EvaluasiDiriSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    EvaluasiDiriId?: boolean
    MataKuliahMahasiswaId?: boolean
    CapaianPembelajaranId?: boolean
    ProfiensiPengetahuan?: boolean
    TanggalPengesahan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | CapaianPembelajaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluasiDiri"]>

  export type EvaluasiDiriSelectScalar = {
    EvaluasiDiriId?: boolean
    MataKuliahMahasiswaId?: boolean
    CapaianPembelajaranId?: boolean
    ProfiensiPengetahuan?: boolean
    TanggalPengesahan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type EvaluasiDiriOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"EvaluasiDiriId" | "MataKuliahMahasiswaId" | "CapaianPembelajaranId" | "ProfiensiPengetahuan" | "TanggalPengesahan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["evaluasiDiri"]>
  export type EvaluasiDiriInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | CapaianPembelajaranDefaultArgs<ExtArgs>
    BuktiFormEvaluasiDiri?: boolean | EvaluasiDiri$BuktiFormEvaluasiDiriArgs<ExtArgs>
    HasilAssesmen?: boolean | EvaluasiDiri$HasilAssesmenArgs<ExtArgs>
    _count?: boolean | EvaluasiDiriCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EvaluasiDiriIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | CapaianPembelajaranDefaultArgs<ExtArgs>
  }
  export type EvaluasiDiriIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | CapaianPembelajaranDefaultArgs<ExtArgs>
  }

  export type $EvaluasiDiriPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EvaluasiDiri"
    objects: {
      MataKuliahMahasiswa: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>
      CapaianPembelajaran: Prisma.$CapaianPembelajaranPayload<ExtArgs>
      BuktiFormEvaluasiDiri: Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>[]
      HasilAssesmen: Prisma.$HasilAssesmenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      EvaluasiDiriId: string
      MataKuliahMahasiswaId: string
      CapaianPembelajaranId: string
      ProfiensiPengetahuan: $Enums.ProfiensiPengetahuan
      TanggalPengesahan: Date | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["evaluasiDiri"]>
    composites: {}
  }

  type EvaluasiDiriGetPayload<S extends boolean | null | undefined | EvaluasiDiriDefaultArgs> = $Result.GetResult<Prisma.$EvaluasiDiriPayload, S>

  type EvaluasiDiriCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EvaluasiDiriFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EvaluasiDiriCountAggregateInputType | true
    }

  export interface EvaluasiDiriDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EvaluasiDiri'], meta: { name: 'EvaluasiDiri' } }
    /**
     * Find zero or one EvaluasiDiri that matches the filter.
     * @param {EvaluasiDiriFindUniqueArgs} args - Arguments to find a EvaluasiDiri
     * @example
     * // Get one EvaluasiDiri
     * const evaluasiDiri = await prisma.evaluasiDiri.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EvaluasiDiriFindUniqueArgs>(args: SelectSubset<T, EvaluasiDiriFindUniqueArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EvaluasiDiri that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EvaluasiDiriFindUniqueOrThrowArgs} args - Arguments to find a EvaluasiDiri
     * @example
     * // Get one EvaluasiDiri
     * const evaluasiDiri = await prisma.evaluasiDiri.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EvaluasiDiriFindUniqueOrThrowArgs>(args: SelectSubset<T, EvaluasiDiriFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EvaluasiDiri that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriFindFirstArgs} args - Arguments to find a EvaluasiDiri
     * @example
     * // Get one EvaluasiDiri
     * const evaluasiDiri = await prisma.evaluasiDiri.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EvaluasiDiriFindFirstArgs>(args?: SelectSubset<T, EvaluasiDiriFindFirstArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EvaluasiDiri that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriFindFirstOrThrowArgs} args - Arguments to find a EvaluasiDiri
     * @example
     * // Get one EvaluasiDiri
     * const evaluasiDiri = await prisma.evaluasiDiri.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EvaluasiDiriFindFirstOrThrowArgs>(args?: SelectSubset<T, EvaluasiDiriFindFirstOrThrowArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EvaluasiDiris that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EvaluasiDiris
     * const evaluasiDiris = await prisma.evaluasiDiri.findMany()
     * 
     * // Get first 10 EvaluasiDiris
     * const evaluasiDiris = await prisma.evaluasiDiri.findMany({ take: 10 })
     * 
     * // Only select the `EvaluasiDiriId`
     * const evaluasiDiriWithEvaluasiDiriIdOnly = await prisma.evaluasiDiri.findMany({ select: { EvaluasiDiriId: true } })
     * 
     */
    findMany<T extends EvaluasiDiriFindManyArgs>(args?: SelectSubset<T, EvaluasiDiriFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EvaluasiDiri.
     * @param {EvaluasiDiriCreateArgs} args - Arguments to create a EvaluasiDiri.
     * @example
     * // Create one EvaluasiDiri
     * const EvaluasiDiri = await prisma.evaluasiDiri.create({
     *   data: {
     *     // ... data to create a EvaluasiDiri
     *   }
     * })
     * 
     */
    create<T extends EvaluasiDiriCreateArgs>(args: SelectSubset<T, EvaluasiDiriCreateArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EvaluasiDiris.
     * @param {EvaluasiDiriCreateManyArgs} args - Arguments to create many EvaluasiDiris.
     * @example
     * // Create many EvaluasiDiris
     * const evaluasiDiri = await prisma.evaluasiDiri.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EvaluasiDiriCreateManyArgs>(args?: SelectSubset<T, EvaluasiDiriCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EvaluasiDiris and returns the data saved in the database.
     * @param {EvaluasiDiriCreateManyAndReturnArgs} args - Arguments to create many EvaluasiDiris.
     * @example
     * // Create many EvaluasiDiris
     * const evaluasiDiri = await prisma.evaluasiDiri.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EvaluasiDiris and only return the `EvaluasiDiriId`
     * const evaluasiDiriWithEvaluasiDiriIdOnly = await prisma.evaluasiDiri.createManyAndReturn({
     *   select: { EvaluasiDiriId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EvaluasiDiriCreateManyAndReturnArgs>(args?: SelectSubset<T, EvaluasiDiriCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EvaluasiDiri.
     * @param {EvaluasiDiriDeleteArgs} args - Arguments to delete one EvaluasiDiri.
     * @example
     * // Delete one EvaluasiDiri
     * const EvaluasiDiri = await prisma.evaluasiDiri.delete({
     *   where: {
     *     // ... filter to delete one EvaluasiDiri
     *   }
     * })
     * 
     */
    delete<T extends EvaluasiDiriDeleteArgs>(args: SelectSubset<T, EvaluasiDiriDeleteArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EvaluasiDiri.
     * @param {EvaluasiDiriUpdateArgs} args - Arguments to update one EvaluasiDiri.
     * @example
     * // Update one EvaluasiDiri
     * const evaluasiDiri = await prisma.evaluasiDiri.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EvaluasiDiriUpdateArgs>(args: SelectSubset<T, EvaluasiDiriUpdateArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EvaluasiDiris.
     * @param {EvaluasiDiriDeleteManyArgs} args - Arguments to filter EvaluasiDiris to delete.
     * @example
     * // Delete a few EvaluasiDiris
     * const { count } = await prisma.evaluasiDiri.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EvaluasiDiriDeleteManyArgs>(args?: SelectSubset<T, EvaluasiDiriDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EvaluasiDiris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EvaluasiDiris
     * const evaluasiDiri = await prisma.evaluasiDiri.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EvaluasiDiriUpdateManyArgs>(args: SelectSubset<T, EvaluasiDiriUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EvaluasiDiris and returns the data updated in the database.
     * @param {EvaluasiDiriUpdateManyAndReturnArgs} args - Arguments to update many EvaluasiDiris.
     * @example
     * // Update many EvaluasiDiris
     * const evaluasiDiri = await prisma.evaluasiDiri.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EvaluasiDiris and only return the `EvaluasiDiriId`
     * const evaluasiDiriWithEvaluasiDiriIdOnly = await prisma.evaluasiDiri.updateManyAndReturn({
     *   select: { EvaluasiDiriId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EvaluasiDiriUpdateManyAndReturnArgs>(args: SelectSubset<T, EvaluasiDiriUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EvaluasiDiri.
     * @param {EvaluasiDiriUpsertArgs} args - Arguments to update or create a EvaluasiDiri.
     * @example
     * // Update or create a EvaluasiDiri
     * const evaluasiDiri = await prisma.evaluasiDiri.upsert({
     *   create: {
     *     // ... data to create a EvaluasiDiri
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EvaluasiDiri we want to update
     *   }
     * })
     */
    upsert<T extends EvaluasiDiriUpsertArgs>(args: SelectSubset<T, EvaluasiDiriUpsertArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EvaluasiDiris.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriCountArgs} args - Arguments to filter EvaluasiDiris to count.
     * @example
     * // Count the number of EvaluasiDiris
     * const count = await prisma.evaluasiDiri.count({
     *   where: {
     *     // ... the filter for the EvaluasiDiris we want to count
     *   }
     * })
    **/
    count<T extends EvaluasiDiriCountArgs>(
      args?: Subset<T, EvaluasiDiriCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EvaluasiDiriCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EvaluasiDiri.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EvaluasiDiriAggregateArgs>(args: Subset<T, EvaluasiDiriAggregateArgs>): Prisma.PrismaPromise<GetEvaluasiDiriAggregateType<T>>

    /**
     * Group by EvaluasiDiri.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluasiDiriGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EvaluasiDiriGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EvaluasiDiriGroupByArgs['orderBy'] }
        : { orderBy?: EvaluasiDiriGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EvaluasiDiriGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvaluasiDiriGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EvaluasiDiri model
   */
  readonly fields: EvaluasiDiriFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EvaluasiDiri.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EvaluasiDiriClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    MataKuliahMahasiswa<T extends MataKuliahMahasiswaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahMahasiswaDefaultArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CapaianPembelajaran<T extends CapaianPembelajaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CapaianPembelajaranDefaultArgs<ExtArgs>>): Prisma__CapaianPembelajaranClient<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    BuktiFormEvaluasiDiri<T extends EvaluasiDiri$BuktiFormEvaluasiDiriArgs<ExtArgs> = {}>(args?: Subset<T, EvaluasiDiri$BuktiFormEvaluasiDiriArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormEvaluasiDiriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    HasilAssesmen<T extends EvaluasiDiri$HasilAssesmenArgs<ExtArgs> = {}>(args?: Subset<T, EvaluasiDiri$HasilAssesmenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EvaluasiDiri model
   */
  interface EvaluasiDiriFieldRefs {
    readonly EvaluasiDiriId: FieldRef<"EvaluasiDiri", 'String'>
    readonly MataKuliahMahasiswaId: FieldRef<"EvaluasiDiri", 'String'>
    readonly CapaianPembelajaranId: FieldRef<"EvaluasiDiri", 'String'>
    readonly ProfiensiPengetahuan: FieldRef<"EvaluasiDiri", 'ProfiensiPengetahuan'>
    readonly TanggalPengesahan: FieldRef<"EvaluasiDiri", 'DateTime'>
    readonly CreatedAt: FieldRef<"EvaluasiDiri", 'DateTime'>
    readonly UpdatedAt: FieldRef<"EvaluasiDiri", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EvaluasiDiri findUnique
   */
  export type EvaluasiDiriFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which EvaluasiDiri to fetch.
     */
    where: EvaluasiDiriWhereUniqueInput
  }

  /**
   * EvaluasiDiri findUniqueOrThrow
   */
  export type EvaluasiDiriFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which EvaluasiDiri to fetch.
     */
    where: EvaluasiDiriWhereUniqueInput
  }

  /**
   * EvaluasiDiri findFirst
   */
  export type EvaluasiDiriFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which EvaluasiDiri to fetch.
     */
    where?: EvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluasiDiris to fetch.
     */
    orderBy?: EvaluasiDiriOrderByWithRelationInput | EvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EvaluasiDiris.
     */
    cursor?: EvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluasiDiris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EvaluasiDiris.
     */
    distinct?: EvaluasiDiriScalarFieldEnum | EvaluasiDiriScalarFieldEnum[]
  }

  /**
   * EvaluasiDiri findFirstOrThrow
   */
  export type EvaluasiDiriFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which EvaluasiDiri to fetch.
     */
    where?: EvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluasiDiris to fetch.
     */
    orderBy?: EvaluasiDiriOrderByWithRelationInput | EvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EvaluasiDiris.
     */
    cursor?: EvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluasiDiris.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EvaluasiDiris.
     */
    distinct?: EvaluasiDiriScalarFieldEnum | EvaluasiDiriScalarFieldEnum[]
  }

  /**
   * EvaluasiDiri findMany
   */
  export type EvaluasiDiriFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter, which EvaluasiDiris to fetch.
     */
    where?: EvaluasiDiriWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluasiDiris to fetch.
     */
    orderBy?: EvaluasiDiriOrderByWithRelationInput | EvaluasiDiriOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EvaluasiDiris.
     */
    cursor?: EvaluasiDiriWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluasiDiris from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluasiDiris.
     */
    skip?: number
    distinct?: EvaluasiDiriScalarFieldEnum | EvaluasiDiriScalarFieldEnum[]
  }

  /**
   * EvaluasiDiri create
   */
  export type EvaluasiDiriCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * The data needed to create a EvaluasiDiri.
     */
    data: XOR<EvaluasiDiriCreateInput, EvaluasiDiriUncheckedCreateInput>
  }

  /**
   * EvaluasiDiri createMany
   */
  export type EvaluasiDiriCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EvaluasiDiris.
     */
    data: EvaluasiDiriCreateManyInput | EvaluasiDiriCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EvaluasiDiri createManyAndReturn
   */
  export type EvaluasiDiriCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * The data used to create many EvaluasiDiris.
     */
    data: EvaluasiDiriCreateManyInput | EvaluasiDiriCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EvaluasiDiri update
   */
  export type EvaluasiDiriUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * The data needed to update a EvaluasiDiri.
     */
    data: XOR<EvaluasiDiriUpdateInput, EvaluasiDiriUncheckedUpdateInput>
    /**
     * Choose, which EvaluasiDiri to update.
     */
    where: EvaluasiDiriWhereUniqueInput
  }

  /**
   * EvaluasiDiri updateMany
   */
  export type EvaluasiDiriUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EvaluasiDiris.
     */
    data: XOR<EvaluasiDiriUpdateManyMutationInput, EvaluasiDiriUncheckedUpdateManyInput>
    /**
     * Filter which EvaluasiDiris to update
     */
    where?: EvaluasiDiriWhereInput
    /**
     * Limit how many EvaluasiDiris to update.
     */
    limit?: number
  }

  /**
   * EvaluasiDiri updateManyAndReturn
   */
  export type EvaluasiDiriUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * The data used to update EvaluasiDiris.
     */
    data: XOR<EvaluasiDiriUpdateManyMutationInput, EvaluasiDiriUncheckedUpdateManyInput>
    /**
     * Filter which EvaluasiDiris to update
     */
    where?: EvaluasiDiriWhereInput
    /**
     * Limit how many EvaluasiDiris to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EvaluasiDiri upsert
   */
  export type EvaluasiDiriUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * The filter to search for the EvaluasiDiri to update in case it exists.
     */
    where: EvaluasiDiriWhereUniqueInput
    /**
     * In case the EvaluasiDiri found by the `where` argument doesn't exist, create a new EvaluasiDiri with this data.
     */
    create: XOR<EvaluasiDiriCreateInput, EvaluasiDiriUncheckedCreateInput>
    /**
     * In case the EvaluasiDiri was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EvaluasiDiriUpdateInput, EvaluasiDiriUncheckedUpdateInput>
  }

  /**
   * EvaluasiDiri delete
   */
  export type EvaluasiDiriDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    /**
     * Filter which EvaluasiDiri to delete.
     */
    where: EvaluasiDiriWhereUniqueInput
  }

  /**
   * EvaluasiDiri deleteMany
   */
  export type EvaluasiDiriDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EvaluasiDiris to delete
     */
    where?: EvaluasiDiriWhereInput
    /**
     * Limit how many EvaluasiDiris to delete.
     */
    limit?: number
  }

  /**
   * EvaluasiDiri.BuktiFormEvaluasiDiri
   */
  export type EvaluasiDiri$BuktiFormEvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiFormEvaluasiDiri
     */
    select?: BuktiFormEvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiFormEvaluasiDiri
     */
    omit?: BuktiFormEvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormEvaluasiDiriInclude<ExtArgs> | null
    where?: BuktiFormEvaluasiDiriWhereInput
    orderBy?: BuktiFormEvaluasiDiriOrderByWithRelationInput | BuktiFormEvaluasiDiriOrderByWithRelationInput[]
    cursor?: BuktiFormEvaluasiDiriWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BuktiFormEvaluasiDiriScalarFieldEnum | BuktiFormEvaluasiDiriScalarFieldEnum[]
  }

  /**
   * EvaluasiDiri.HasilAssesmen
   */
  export type EvaluasiDiri$HasilAssesmenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    where?: HasilAssesmenWhereInput
    orderBy?: HasilAssesmenOrderByWithRelationInput | HasilAssesmenOrderByWithRelationInput[]
    cursor?: HasilAssesmenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HasilAssesmenScalarFieldEnum | HasilAssesmenScalarFieldEnum[]
  }

  /**
   * EvaluasiDiri without action
   */
  export type EvaluasiDiriDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
  }


  /**
   * Model HasilAssesmen
   */

  export type AggregateHasilAssesmen = {
    _count: HasilAssesmenCountAggregateOutputType | null
    _avg: HasilAssesmenAvgAggregateOutputType | null
    _sum: HasilAssesmenSumAggregateOutputType | null
    _min: HasilAssesmenMinAggregateOutputType | null
    _max: HasilAssesmenMaxAggregateOutputType | null
  }

  export type HasilAssesmenAvgAggregateOutputType = {
    Nilai: number | null
  }

  export type HasilAssesmenSumAggregateOutputType = {
    Nilai: number | null
  }

  export type HasilAssesmenMinAggregateOutputType = {
    HasilAssesmenId: string | null
    EvaluasiDiriId: string | null
    Valid: boolean | null
    Autentik: boolean | null
    Terkini: boolean | null
    Memadai: boolean | null
    Assesmen: string | null
    Nilai: number | null
    Diakui: boolean | null
    TanggalAssesmen: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type HasilAssesmenMaxAggregateOutputType = {
    HasilAssesmenId: string | null
    EvaluasiDiriId: string | null
    Valid: boolean | null
    Autentik: boolean | null
    Terkini: boolean | null
    Memadai: boolean | null
    Assesmen: string | null
    Nilai: number | null
    Diakui: boolean | null
    TanggalAssesmen: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type HasilAssesmenCountAggregateOutputType = {
    HasilAssesmenId: number
    EvaluasiDiriId: number
    Valid: number
    Autentik: number
    Terkini: number
    Memadai: number
    Assesmen: number
    Nilai: number
    Diakui: number
    TanggalAssesmen: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type HasilAssesmenAvgAggregateInputType = {
    Nilai?: true
  }

  export type HasilAssesmenSumAggregateInputType = {
    Nilai?: true
  }

  export type HasilAssesmenMinAggregateInputType = {
    HasilAssesmenId?: true
    EvaluasiDiriId?: true
    Valid?: true
    Autentik?: true
    Terkini?: true
    Memadai?: true
    Assesmen?: true
    Nilai?: true
    Diakui?: true
    TanggalAssesmen?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type HasilAssesmenMaxAggregateInputType = {
    HasilAssesmenId?: true
    EvaluasiDiriId?: true
    Valid?: true
    Autentik?: true
    Terkini?: true
    Memadai?: true
    Assesmen?: true
    Nilai?: true
    Diakui?: true
    TanggalAssesmen?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type HasilAssesmenCountAggregateInputType = {
    HasilAssesmenId?: true
    EvaluasiDiriId?: true
    Valid?: true
    Autentik?: true
    Terkini?: true
    Memadai?: true
    Assesmen?: true
    Nilai?: true
    Diakui?: true
    TanggalAssesmen?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type HasilAssesmenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HasilAssesmen to aggregate.
     */
    where?: HasilAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HasilAssesmen to fetch.
     */
    orderBy?: HasilAssesmenOrderByWithRelationInput | HasilAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HasilAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HasilAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HasilAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HasilAssesmen
    **/
    _count?: true | HasilAssesmenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HasilAssesmenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HasilAssesmenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HasilAssesmenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HasilAssesmenMaxAggregateInputType
  }

  export type GetHasilAssesmenAggregateType<T extends HasilAssesmenAggregateArgs> = {
        [P in keyof T & keyof AggregateHasilAssesmen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHasilAssesmen[P]>
      : GetScalarType<T[P], AggregateHasilAssesmen[P]>
  }




  export type HasilAssesmenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HasilAssesmenWhereInput
    orderBy?: HasilAssesmenOrderByWithAggregationInput | HasilAssesmenOrderByWithAggregationInput[]
    by: HasilAssesmenScalarFieldEnum[] | HasilAssesmenScalarFieldEnum
    having?: HasilAssesmenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HasilAssesmenCountAggregateInputType | true
    _avg?: HasilAssesmenAvgAggregateInputType
    _sum?: HasilAssesmenSumAggregateInputType
    _min?: HasilAssesmenMinAggregateInputType
    _max?: HasilAssesmenMaxAggregateInputType
  }

  export type HasilAssesmenGroupByOutputType = {
    HasilAssesmenId: string
    EvaluasiDiriId: string
    Valid: boolean
    Autentik: boolean
    Terkini: boolean
    Memadai: boolean
    Assesmen: string | null
    Nilai: number
    Diakui: boolean
    TanggalAssesmen: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: HasilAssesmenCountAggregateOutputType | null
    _avg: HasilAssesmenAvgAggregateOutputType | null
    _sum: HasilAssesmenSumAggregateOutputType | null
    _min: HasilAssesmenMinAggregateOutputType | null
    _max: HasilAssesmenMaxAggregateOutputType | null
  }

  type GetHasilAssesmenGroupByPayload<T extends HasilAssesmenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HasilAssesmenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HasilAssesmenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HasilAssesmenGroupByOutputType[P]>
            : GetScalarType<T[P], HasilAssesmenGroupByOutputType[P]>
        }
      >
    >


  export type HasilAssesmenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    HasilAssesmenId?: boolean
    EvaluasiDiriId?: boolean
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: boolean
    Nilai?: boolean
    Diakui?: boolean
    TanggalAssesmen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
    SkorAssesmen?: boolean | HasilAssesmen$SkorAssesmenArgs<ExtArgs>
    _count?: boolean | HasilAssesmenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hasilAssesmen"]>

  export type HasilAssesmenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    HasilAssesmenId?: boolean
    EvaluasiDiriId?: boolean
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: boolean
    Nilai?: boolean
    Diakui?: boolean
    TanggalAssesmen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hasilAssesmen"]>

  export type HasilAssesmenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    HasilAssesmenId?: boolean
    EvaluasiDiriId?: boolean
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: boolean
    Nilai?: boolean
    Diakui?: boolean
    TanggalAssesmen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["hasilAssesmen"]>

  export type HasilAssesmenSelectScalar = {
    HasilAssesmenId?: boolean
    EvaluasiDiriId?: boolean
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: boolean
    Nilai?: boolean
    Diakui?: boolean
    TanggalAssesmen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type HasilAssesmenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"HasilAssesmenId" | "EvaluasiDiriId" | "Valid" | "Autentik" | "Terkini" | "Memadai" | "Assesmen" | "Nilai" | "Diakui" | "TanggalAssesmen" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["hasilAssesmen"]>
  export type HasilAssesmenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
    SkorAssesmen?: boolean | HasilAssesmen$SkorAssesmenArgs<ExtArgs>
    _count?: boolean | HasilAssesmenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type HasilAssesmenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }
  export type HasilAssesmenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EvaluasiDiri?: boolean | EvaluasiDiriDefaultArgs<ExtArgs>
  }

  export type $HasilAssesmenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HasilAssesmen"
    objects: {
      EvaluasiDiri: Prisma.$EvaluasiDiriPayload<ExtArgs>
      SkorAssesmen: Prisma.$SkorAssesmenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      HasilAssesmenId: string
      EvaluasiDiriId: string
      Valid: boolean
      Autentik: boolean
      Terkini: boolean
      Memadai: boolean
      Assesmen: string | null
      Nilai: number
      Diakui: boolean
      TanggalAssesmen: Date | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["hasilAssesmen"]>
    composites: {}
  }

  type HasilAssesmenGetPayload<S extends boolean | null | undefined | HasilAssesmenDefaultArgs> = $Result.GetResult<Prisma.$HasilAssesmenPayload, S>

  type HasilAssesmenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HasilAssesmenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HasilAssesmenCountAggregateInputType | true
    }

  export interface HasilAssesmenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HasilAssesmen'], meta: { name: 'HasilAssesmen' } }
    /**
     * Find zero or one HasilAssesmen that matches the filter.
     * @param {HasilAssesmenFindUniqueArgs} args - Arguments to find a HasilAssesmen
     * @example
     * // Get one HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HasilAssesmenFindUniqueArgs>(args: SelectSubset<T, HasilAssesmenFindUniqueArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HasilAssesmen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HasilAssesmenFindUniqueOrThrowArgs} args - Arguments to find a HasilAssesmen
     * @example
     * // Get one HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HasilAssesmenFindUniqueOrThrowArgs>(args: SelectSubset<T, HasilAssesmenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HasilAssesmen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenFindFirstArgs} args - Arguments to find a HasilAssesmen
     * @example
     * // Get one HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HasilAssesmenFindFirstArgs>(args?: SelectSubset<T, HasilAssesmenFindFirstArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HasilAssesmen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenFindFirstOrThrowArgs} args - Arguments to find a HasilAssesmen
     * @example
     * // Get one HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HasilAssesmenFindFirstOrThrowArgs>(args?: SelectSubset<T, HasilAssesmenFindFirstOrThrowArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HasilAssesmen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.findMany()
     * 
     * // Get first 10 HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.findMany({ take: 10 })
     * 
     * // Only select the `HasilAssesmenId`
     * const hasilAssesmenWithHasilAssesmenIdOnly = await prisma.hasilAssesmen.findMany({ select: { HasilAssesmenId: true } })
     * 
     */
    findMany<T extends HasilAssesmenFindManyArgs>(args?: SelectSubset<T, HasilAssesmenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HasilAssesmen.
     * @param {HasilAssesmenCreateArgs} args - Arguments to create a HasilAssesmen.
     * @example
     * // Create one HasilAssesmen
     * const HasilAssesmen = await prisma.hasilAssesmen.create({
     *   data: {
     *     // ... data to create a HasilAssesmen
     *   }
     * })
     * 
     */
    create<T extends HasilAssesmenCreateArgs>(args: SelectSubset<T, HasilAssesmenCreateArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HasilAssesmen.
     * @param {HasilAssesmenCreateManyArgs} args - Arguments to create many HasilAssesmen.
     * @example
     * // Create many HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HasilAssesmenCreateManyArgs>(args?: SelectSubset<T, HasilAssesmenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HasilAssesmen and returns the data saved in the database.
     * @param {HasilAssesmenCreateManyAndReturnArgs} args - Arguments to create many HasilAssesmen.
     * @example
     * // Create many HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HasilAssesmen and only return the `HasilAssesmenId`
     * const hasilAssesmenWithHasilAssesmenIdOnly = await prisma.hasilAssesmen.createManyAndReturn({
     *   select: { HasilAssesmenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HasilAssesmenCreateManyAndReturnArgs>(args?: SelectSubset<T, HasilAssesmenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HasilAssesmen.
     * @param {HasilAssesmenDeleteArgs} args - Arguments to delete one HasilAssesmen.
     * @example
     * // Delete one HasilAssesmen
     * const HasilAssesmen = await prisma.hasilAssesmen.delete({
     *   where: {
     *     // ... filter to delete one HasilAssesmen
     *   }
     * })
     * 
     */
    delete<T extends HasilAssesmenDeleteArgs>(args: SelectSubset<T, HasilAssesmenDeleteArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HasilAssesmen.
     * @param {HasilAssesmenUpdateArgs} args - Arguments to update one HasilAssesmen.
     * @example
     * // Update one HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HasilAssesmenUpdateArgs>(args: SelectSubset<T, HasilAssesmenUpdateArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HasilAssesmen.
     * @param {HasilAssesmenDeleteManyArgs} args - Arguments to filter HasilAssesmen to delete.
     * @example
     * // Delete a few HasilAssesmen
     * const { count } = await prisma.hasilAssesmen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HasilAssesmenDeleteManyArgs>(args?: SelectSubset<T, HasilAssesmenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HasilAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HasilAssesmenUpdateManyArgs>(args: SelectSubset<T, HasilAssesmenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HasilAssesmen and returns the data updated in the database.
     * @param {HasilAssesmenUpdateManyAndReturnArgs} args - Arguments to update many HasilAssesmen.
     * @example
     * // Update many HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HasilAssesmen and only return the `HasilAssesmenId`
     * const hasilAssesmenWithHasilAssesmenIdOnly = await prisma.hasilAssesmen.updateManyAndReturn({
     *   select: { HasilAssesmenId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HasilAssesmenUpdateManyAndReturnArgs>(args: SelectSubset<T, HasilAssesmenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HasilAssesmen.
     * @param {HasilAssesmenUpsertArgs} args - Arguments to update or create a HasilAssesmen.
     * @example
     * // Update or create a HasilAssesmen
     * const hasilAssesmen = await prisma.hasilAssesmen.upsert({
     *   create: {
     *     // ... data to create a HasilAssesmen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HasilAssesmen we want to update
     *   }
     * })
     */
    upsert<T extends HasilAssesmenUpsertArgs>(args: SelectSubset<T, HasilAssesmenUpsertArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HasilAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenCountArgs} args - Arguments to filter HasilAssesmen to count.
     * @example
     * // Count the number of HasilAssesmen
     * const count = await prisma.hasilAssesmen.count({
     *   where: {
     *     // ... the filter for the HasilAssesmen we want to count
     *   }
     * })
    **/
    count<T extends HasilAssesmenCountArgs>(
      args?: Subset<T, HasilAssesmenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HasilAssesmenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HasilAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HasilAssesmenAggregateArgs>(args: Subset<T, HasilAssesmenAggregateArgs>): Prisma.PrismaPromise<GetHasilAssesmenAggregateType<T>>

    /**
     * Group by HasilAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HasilAssesmenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HasilAssesmenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HasilAssesmenGroupByArgs['orderBy'] }
        : { orderBy?: HasilAssesmenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HasilAssesmenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHasilAssesmenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HasilAssesmen model
   */
  readonly fields: HasilAssesmenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HasilAssesmen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HasilAssesmenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    EvaluasiDiri<T extends EvaluasiDiriDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluasiDiriDefaultArgs<ExtArgs>>): Prisma__EvaluasiDiriClient<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    SkorAssesmen<T extends HasilAssesmen$SkorAssesmenArgs<ExtArgs> = {}>(args?: Subset<T, HasilAssesmen$SkorAssesmenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HasilAssesmen model
   */
  interface HasilAssesmenFieldRefs {
    readonly HasilAssesmenId: FieldRef<"HasilAssesmen", 'String'>
    readonly EvaluasiDiriId: FieldRef<"HasilAssesmen", 'String'>
    readonly Valid: FieldRef<"HasilAssesmen", 'Boolean'>
    readonly Autentik: FieldRef<"HasilAssesmen", 'Boolean'>
    readonly Terkini: FieldRef<"HasilAssesmen", 'Boolean'>
    readonly Memadai: FieldRef<"HasilAssesmen", 'Boolean'>
    readonly Assesmen: FieldRef<"HasilAssesmen", 'String'>
    readonly Nilai: FieldRef<"HasilAssesmen", 'Float'>
    readonly Diakui: FieldRef<"HasilAssesmen", 'Boolean'>
    readonly TanggalAssesmen: FieldRef<"HasilAssesmen", 'DateTime'>
    readonly CreatedAt: FieldRef<"HasilAssesmen", 'DateTime'>
    readonly UpdatedAt: FieldRef<"HasilAssesmen", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HasilAssesmen findUnique
   */
  export type HasilAssesmenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which HasilAssesmen to fetch.
     */
    where: HasilAssesmenWhereUniqueInput
  }

  /**
   * HasilAssesmen findUniqueOrThrow
   */
  export type HasilAssesmenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which HasilAssesmen to fetch.
     */
    where: HasilAssesmenWhereUniqueInput
  }

  /**
   * HasilAssesmen findFirst
   */
  export type HasilAssesmenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which HasilAssesmen to fetch.
     */
    where?: HasilAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HasilAssesmen to fetch.
     */
    orderBy?: HasilAssesmenOrderByWithRelationInput | HasilAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HasilAssesmen.
     */
    cursor?: HasilAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HasilAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HasilAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HasilAssesmen.
     */
    distinct?: HasilAssesmenScalarFieldEnum | HasilAssesmenScalarFieldEnum[]
  }

  /**
   * HasilAssesmen findFirstOrThrow
   */
  export type HasilAssesmenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which HasilAssesmen to fetch.
     */
    where?: HasilAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HasilAssesmen to fetch.
     */
    orderBy?: HasilAssesmenOrderByWithRelationInput | HasilAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HasilAssesmen.
     */
    cursor?: HasilAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HasilAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HasilAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HasilAssesmen.
     */
    distinct?: HasilAssesmenScalarFieldEnum | HasilAssesmenScalarFieldEnum[]
  }

  /**
   * HasilAssesmen findMany
   */
  export type HasilAssesmenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which HasilAssesmen to fetch.
     */
    where?: HasilAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HasilAssesmen to fetch.
     */
    orderBy?: HasilAssesmenOrderByWithRelationInput | HasilAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HasilAssesmen.
     */
    cursor?: HasilAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HasilAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HasilAssesmen.
     */
    skip?: number
    distinct?: HasilAssesmenScalarFieldEnum | HasilAssesmenScalarFieldEnum[]
  }

  /**
   * HasilAssesmen create
   */
  export type HasilAssesmenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * The data needed to create a HasilAssesmen.
     */
    data: XOR<HasilAssesmenCreateInput, HasilAssesmenUncheckedCreateInput>
  }

  /**
   * HasilAssesmen createMany
   */
  export type HasilAssesmenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HasilAssesmen.
     */
    data: HasilAssesmenCreateManyInput | HasilAssesmenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HasilAssesmen createManyAndReturn
   */
  export type HasilAssesmenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * The data used to create many HasilAssesmen.
     */
    data: HasilAssesmenCreateManyInput | HasilAssesmenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HasilAssesmen update
   */
  export type HasilAssesmenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * The data needed to update a HasilAssesmen.
     */
    data: XOR<HasilAssesmenUpdateInput, HasilAssesmenUncheckedUpdateInput>
    /**
     * Choose, which HasilAssesmen to update.
     */
    where: HasilAssesmenWhereUniqueInput
  }

  /**
   * HasilAssesmen updateMany
   */
  export type HasilAssesmenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HasilAssesmen.
     */
    data: XOR<HasilAssesmenUpdateManyMutationInput, HasilAssesmenUncheckedUpdateManyInput>
    /**
     * Filter which HasilAssesmen to update
     */
    where?: HasilAssesmenWhereInput
    /**
     * Limit how many HasilAssesmen to update.
     */
    limit?: number
  }

  /**
   * HasilAssesmen updateManyAndReturn
   */
  export type HasilAssesmenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * The data used to update HasilAssesmen.
     */
    data: XOR<HasilAssesmenUpdateManyMutationInput, HasilAssesmenUncheckedUpdateManyInput>
    /**
     * Filter which HasilAssesmen to update
     */
    where?: HasilAssesmenWhereInput
    /**
     * Limit how many HasilAssesmen to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HasilAssesmen upsert
   */
  export type HasilAssesmenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * The filter to search for the HasilAssesmen to update in case it exists.
     */
    where: HasilAssesmenWhereUniqueInput
    /**
     * In case the HasilAssesmen found by the `where` argument doesn't exist, create a new HasilAssesmen with this data.
     */
    create: XOR<HasilAssesmenCreateInput, HasilAssesmenUncheckedCreateInput>
    /**
     * In case the HasilAssesmen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HasilAssesmenUpdateInput, HasilAssesmenUncheckedUpdateInput>
  }

  /**
   * HasilAssesmen delete
   */
  export type HasilAssesmenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
    /**
     * Filter which HasilAssesmen to delete.
     */
    where: HasilAssesmenWhereUniqueInput
  }

  /**
   * HasilAssesmen deleteMany
   */
  export type HasilAssesmenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HasilAssesmen to delete
     */
    where?: HasilAssesmenWhereInput
    /**
     * Limit how many HasilAssesmen to delete.
     */
    limit?: number
  }

  /**
   * HasilAssesmen.SkorAssesmen
   */
  export type HasilAssesmen$SkorAssesmenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    where?: SkorAssesmenWhereInput
    orderBy?: SkorAssesmenOrderByWithRelationInput | SkorAssesmenOrderByWithRelationInput[]
    cursor?: SkorAssesmenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkorAssesmenScalarFieldEnum | SkorAssesmenScalarFieldEnum[]
  }

  /**
   * HasilAssesmen without action
   */
  export type HasilAssesmenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HasilAssesmen
     */
    select?: HasilAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HasilAssesmen
     */
    omit?: HasilAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HasilAssesmenInclude<ExtArgs> | null
  }


  /**
   * Model InformasiKependudukan
   */

  export type AggregateInformasiKependudukan = {
    _count: InformasiKependudukanCountAggregateOutputType | null
    _min: InformasiKependudukanMinAggregateOutputType | null
    _max: InformasiKependudukanMaxAggregateOutputType | null
  }

  export type InformasiKependudukanMinAggregateOutputType = {
    InformasiKependudukanId: string | null
    PendaftaranId: string | null
    NoKk: string | null
    NoNik: string | null
    Suku: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type InformasiKependudukanMaxAggregateOutputType = {
    InformasiKependudukanId: string | null
    PendaftaranId: string | null
    NoKk: string | null
    NoNik: string | null
    Suku: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type InformasiKependudukanCountAggregateOutputType = {
    InformasiKependudukanId: number
    PendaftaranId: number
    NoKk: number
    NoNik: number
    Suku: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type InformasiKependudukanMinAggregateInputType = {
    InformasiKependudukanId?: true
    PendaftaranId?: true
    NoKk?: true
    NoNik?: true
    Suku?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type InformasiKependudukanMaxAggregateInputType = {
    InformasiKependudukanId?: true
    PendaftaranId?: true
    NoKk?: true
    NoNik?: true
    Suku?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type InformasiKependudukanCountAggregateInputType = {
    InformasiKependudukanId?: true
    PendaftaranId?: true
    NoKk?: true
    NoNik?: true
    Suku?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type InformasiKependudukanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InformasiKependudukan to aggregate.
     */
    where?: InformasiKependudukanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InformasiKependudukans to fetch.
     */
    orderBy?: InformasiKependudukanOrderByWithRelationInput | InformasiKependudukanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InformasiKependudukanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InformasiKependudukans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InformasiKependudukans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InformasiKependudukans
    **/
    _count?: true | InformasiKependudukanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InformasiKependudukanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InformasiKependudukanMaxAggregateInputType
  }

  export type GetInformasiKependudukanAggregateType<T extends InformasiKependudukanAggregateArgs> = {
        [P in keyof T & keyof AggregateInformasiKependudukan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInformasiKependudukan[P]>
      : GetScalarType<T[P], AggregateInformasiKependudukan[P]>
  }




  export type InformasiKependudukanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InformasiKependudukanWhereInput
    orderBy?: InformasiKependudukanOrderByWithAggregationInput | InformasiKependudukanOrderByWithAggregationInput[]
    by: InformasiKependudukanScalarFieldEnum[] | InformasiKependudukanScalarFieldEnum
    having?: InformasiKependudukanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InformasiKependudukanCountAggregateInputType | true
    _min?: InformasiKependudukanMinAggregateInputType
    _max?: InformasiKependudukanMaxAggregateInputType
  }

  export type InformasiKependudukanGroupByOutputType = {
    InformasiKependudukanId: string
    PendaftaranId: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: InformasiKependudukanCountAggregateOutputType | null
    _min: InformasiKependudukanMinAggregateOutputType | null
    _max: InformasiKependudukanMaxAggregateOutputType | null
  }

  type GetInformasiKependudukanGroupByPayload<T extends InformasiKependudukanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InformasiKependudukanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InformasiKependudukanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InformasiKependudukanGroupByOutputType[P]>
            : GetScalarType<T[P], InformasiKependudukanGroupByOutputType[P]>
        }
      >
    >


  export type InformasiKependudukanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    InformasiKependudukanId?: boolean
    PendaftaranId?: boolean
    NoKk?: boolean
    NoNik?: boolean
    Suku?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["informasiKependudukan"]>

  export type InformasiKependudukanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    InformasiKependudukanId?: boolean
    PendaftaranId?: boolean
    NoKk?: boolean
    NoNik?: boolean
    Suku?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["informasiKependudukan"]>

  export type InformasiKependudukanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    InformasiKependudukanId?: boolean
    PendaftaranId?: boolean
    NoKk?: boolean
    NoNik?: boolean
    Suku?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["informasiKependudukan"]>

  export type InformasiKependudukanSelectScalar = {
    InformasiKependudukanId?: boolean
    PendaftaranId?: boolean
    NoKk?: boolean
    NoNik?: boolean
    Suku?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type InformasiKependudukanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"InformasiKependudukanId" | "PendaftaranId" | "NoKk" | "NoNik" | "Suku" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["informasiKependudukan"]>
  export type InformasiKependudukanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type InformasiKependudukanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type InformasiKependudukanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $InformasiKependudukanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InformasiKependudukan"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      InformasiKependudukanId: string
      PendaftaranId: string
      NoKk: string
      NoNik: string
      Suku: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["informasiKependudukan"]>
    composites: {}
  }

  type InformasiKependudukanGetPayload<S extends boolean | null | undefined | InformasiKependudukanDefaultArgs> = $Result.GetResult<Prisma.$InformasiKependudukanPayload, S>

  type InformasiKependudukanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InformasiKependudukanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InformasiKependudukanCountAggregateInputType | true
    }

  export interface InformasiKependudukanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InformasiKependudukan'], meta: { name: 'InformasiKependudukan' } }
    /**
     * Find zero or one InformasiKependudukan that matches the filter.
     * @param {InformasiKependudukanFindUniqueArgs} args - Arguments to find a InformasiKependudukan
     * @example
     * // Get one InformasiKependudukan
     * const informasiKependudukan = await prisma.informasiKependudukan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InformasiKependudukanFindUniqueArgs>(args: SelectSubset<T, InformasiKependudukanFindUniqueArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InformasiKependudukan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InformasiKependudukanFindUniqueOrThrowArgs} args - Arguments to find a InformasiKependudukan
     * @example
     * // Get one InformasiKependudukan
     * const informasiKependudukan = await prisma.informasiKependudukan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InformasiKependudukanFindUniqueOrThrowArgs>(args: SelectSubset<T, InformasiKependudukanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InformasiKependudukan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanFindFirstArgs} args - Arguments to find a InformasiKependudukan
     * @example
     * // Get one InformasiKependudukan
     * const informasiKependudukan = await prisma.informasiKependudukan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InformasiKependudukanFindFirstArgs>(args?: SelectSubset<T, InformasiKependudukanFindFirstArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InformasiKependudukan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanFindFirstOrThrowArgs} args - Arguments to find a InformasiKependudukan
     * @example
     * // Get one InformasiKependudukan
     * const informasiKependudukan = await prisma.informasiKependudukan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InformasiKependudukanFindFirstOrThrowArgs>(args?: SelectSubset<T, InformasiKependudukanFindFirstOrThrowArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InformasiKependudukans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InformasiKependudukans
     * const informasiKependudukans = await prisma.informasiKependudukan.findMany()
     * 
     * // Get first 10 InformasiKependudukans
     * const informasiKependudukans = await prisma.informasiKependudukan.findMany({ take: 10 })
     * 
     * // Only select the `InformasiKependudukanId`
     * const informasiKependudukanWithInformasiKependudukanIdOnly = await prisma.informasiKependudukan.findMany({ select: { InformasiKependudukanId: true } })
     * 
     */
    findMany<T extends InformasiKependudukanFindManyArgs>(args?: SelectSubset<T, InformasiKependudukanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InformasiKependudukan.
     * @param {InformasiKependudukanCreateArgs} args - Arguments to create a InformasiKependudukan.
     * @example
     * // Create one InformasiKependudukan
     * const InformasiKependudukan = await prisma.informasiKependudukan.create({
     *   data: {
     *     // ... data to create a InformasiKependudukan
     *   }
     * })
     * 
     */
    create<T extends InformasiKependudukanCreateArgs>(args: SelectSubset<T, InformasiKependudukanCreateArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InformasiKependudukans.
     * @param {InformasiKependudukanCreateManyArgs} args - Arguments to create many InformasiKependudukans.
     * @example
     * // Create many InformasiKependudukans
     * const informasiKependudukan = await prisma.informasiKependudukan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InformasiKependudukanCreateManyArgs>(args?: SelectSubset<T, InformasiKependudukanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InformasiKependudukans and returns the data saved in the database.
     * @param {InformasiKependudukanCreateManyAndReturnArgs} args - Arguments to create many InformasiKependudukans.
     * @example
     * // Create many InformasiKependudukans
     * const informasiKependudukan = await prisma.informasiKependudukan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InformasiKependudukans and only return the `InformasiKependudukanId`
     * const informasiKependudukanWithInformasiKependudukanIdOnly = await prisma.informasiKependudukan.createManyAndReturn({
     *   select: { InformasiKependudukanId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InformasiKependudukanCreateManyAndReturnArgs>(args?: SelectSubset<T, InformasiKependudukanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InformasiKependudukan.
     * @param {InformasiKependudukanDeleteArgs} args - Arguments to delete one InformasiKependudukan.
     * @example
     * // Delete one InformasiKependudukan
     * const InformasiKependudukan = await prisma.informasiKependudukan.delete({
     *   where: {
     *     // ... filter to delete one InformasiKependudukan
     *   }
     * })
     * 
     */
    delete<T extends InformasiKependudukanDeleteArgs>(args: SelectSubset<T, InformasiKependudukanDeleteArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InformasiKependudukan.
     * @param {InformasiKependudukanUpdateArgs} args - Arguments to update one InformasiKependudukan.
     * @example
     * // Update one InformasiKependudukan
     * const informasiKependudukan = await prisma.informasiKependudukan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InformasiKependudukanUpdateArgs>(args: SelectSubset<T, InformasiKependudukanUpdateArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InformasiKependudukans.
     * @param {InformasiKependudukanDeleteManyArgs} args - Arguments to filter InformasiKependudukans to delete.
     * @example
     * // Delete a few InformasiKependudukans
     * const { count } = await prisma.informasiKependudukan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InformasiKependudukanDeleteManyArgs>(args?: SelectSubset<T, InformasiKependudukanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InformasiKependudukans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InformasiKependudukans
     * const informasiKependudukan = await prisma.informasiKependudukan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InformasiKependudukanUpdateManyArgs>(args: SelectSubset<T, InformasiKependudukanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InformasiKependudukans and returns the data updated in the database.
     * @param {InformasiKependudukanUpdateManyAndReturnArgs} args - Arguments to update many InformasiKependudukans.
     * @example
     * // Update many InformasiKependudukans
     * const informasiKependudukan = await prisma.informasiKependudukan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InformasiKependudukans and only return the `InformasiKependudukanId`
     * const informasiKependudukanWithInformasiKependudukanIdOnly = await prisma.informasiKependudukan.updateManyAndReturn({
     *   select: { InformasiKependudukanId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InformasiKependudukanUpdateManyAndReturnArgs>(args: SelectSubset<T, InformasiKependudukanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InformasiKependudukan.
     * @param {InformasiKependudukanUpsertArgs} args - Arguments to update or create a InformasiKependudukan.
     * @example
     * // Update or create a InformasiKependudukan
     * const informasiKependudukan = await prisma.informasiKependudukan.upsert({
     *   create: {
     *     // ... data to create a InformasiKependudukan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InformasiKependudukan we want to update
     *   }
     * })
     */
    upsert<T extends InformasiKependudukanUpsertArgs>(args: SelectSubset<T, InformasiKependudukanUpsertArgs<ExtArgs>>): Prisma__InformasiKependudukanClient<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InformasiKependudukans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanCountArgs} args - Arguments to filter InformasiKependudukans to count.
     * @example
     * // Count the number of InformasiKependudukans
     * const count = await prisma.informasiKependudukan.count({
     *   where: {
     *     // ... the filter for the InformasiKependudukans we want to count
     *   }
     * })
    **/
    count<T extends InformasiKependudukanCountArgs>(
      args?: Subset<T, InformasiKependudukanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InformasiKependudukanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InformasiKependudukan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InformasiKependudukanAggregateArgs>(args: Subset<T, InformasiKependudukanAggregateArgs>): Prisma.PrismaPromise<GetInformasiKependudukanAggregateType<T>>

    /**
     * Group by InformasiKependudukan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InformasiKependudukanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InformasiKependudukanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InformasiKependudukanGroupByArgs['orderBy'] }
        : { orderBy?: InformasiKependudukanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InformasiKependudukanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInformasiKependudukanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InformasiKependudukan model
   */
  readonly fields: InformasiKependudukanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InformasiKependudukan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InformasiKependudukanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InformasiKependudukan model
   */
  interface InformasiKependudukanFieldRefs {
    readonly InformasiKependudukanId: FieldRef<"InformasiKependudukan", 'String'>
    readonly PendaftaranId: FieldRef<"InformasiKependudukan", 'String'>
    readonly NoKk: FieldRef<"InformasiKependudukan", 'String'>
    readonly NoNik: FieldRef<"InformasiKependudukan", 'String'>
    readonly Suku: FieldRef<"InformasiKependudukan", 'String'>
    readonly CreatedAt: FieldRef<"InformasiKependudukan", 'DateTime'>
    readonly UpdatedAt: FieldRef<"InformasiKependudukan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InformasiKependudukan findUnique
   */
  export type InformasiKependudukanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * Filter, which InformasiKependudukan to fetch.
     */
    where: InformasiKependudukanWhereUniqueInput
  }

  /**
   * InformasiKependudukan findUniqueOrThrow
   */
  export type InformasiKependudukanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * Filter, which InformasiKependudukan to fetch.
     */
    where: InformasiKependudukanWhereUniqueInput
  }

  /**
   * InformasiKependudukan findFirst
   */
  export type InformasiKependudukanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * Filter, which InformasiKependudukan to fetch.
     */
    where?: InformasiKependudukanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InformasiKependudukans to fetch.
     */
    orderBy?: InformasiKependudukanOrderByWithRelationInput | InformasiKependudukanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InformasiKependudukans.
     */
    cursor?: InformasiKependudukanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InformasiKependudukans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InformasiKependudukans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InformasiKependudukans.
     */
    distinct?: InformasiKependudukanScalarFieldEnum | InformasiKependudukanScalarFieldEnum[]
  }

  /**
   * InformasiKependudukan findFirstOrThrow
   */
  export type InformasiKependudukanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * Filter, which InformasiKependudukan to fetch.
     */
    where?: InformasiKependudukanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InformasiKependudukans to fetch.
     */
    orderBy?: InformasiKependudukanOrderByWithRelationInput | InformasiKependudukanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InformasiKependudukans.
     */
    cursor?: InformasiKependudukanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InformasiKependudukans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InformasiKependudukans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InformasiKependudukans.
     */
    distinct?: InformasiKependudukanScalarFieldEnum | InformasiKependudukanScalarFieldEnum[]
  }

  /**
   * InformasiKependudukan findMany
   */
  export type InformasiKependudukanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * Filter, which InformasiKependudukans to fetch.
     */
    where?: InformasiKependudukanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InformasiKependudukans to fetch.
     */
    orderBy?: InformasiKependudukanOrderByWithRelationInput | InformasiKependudukanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InformasiKependudukans.
     */
    cursor?: InformasiKependudukanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InformasiKependudukans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InformasiKependudukans.
     */
    skip?: number
    distinct?: InformasiKependudukanScalarFieldEnum | InformasiKependudukanScalarFieldEnum[]
  }

  /**
   * InformasiKependudukan create
   */
  export type InformasiKependudukanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * The data needed to create a InformasiKependudukan.
     */
    data: XOR<InformasiKependudukanCreateInput, InformasiKependudukanUncheckedCreateInput>
  }

  /**
   * InformasiKependudukan createMany
   */
  export type InformasiKependudukanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InformasiKependudukans.
     */
    data: InformasiKependudukanCreateManyInput | InformasiKependudukanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InformasiKependudukan createManyAndReturn
   */
  export type InformasiKependudukanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * The data used to create many InformasiKependudukans.
     */
    data: InformasiKependudukanCreateManyInput | InformasiKependudukanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InformasiKependudukan update
   */
  export type InformasiKependudukanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * The data needed to update a InformasiKependudukan.
     */
    data: XOR<InformasiKependudukanUpdateInput, InformasiKependudukanUncheckedUpdateInput>
    /**
     * Choose, which InformasiKependudukan to update.
     */
    where: InformasiKependudukanWhereUniqueInput
  }

  /**
   * InformasiKependudukan updateMany
   */
  export type InformasiKependudukanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InformasiKependudukans.
     */
    data: XOR<InformasiKependudukanUpdateManyMutationInput, InformasiKependudukanUncheckedUpdateManyInput>
    /**
     * Filter which InformasiKependudukans to update
     */
    where?: InformasiKependudukanWhereInput
    /**
     * Limit how many InformasiKependudukans to update.
     */
    limit?: number
  }

  /**
   * InformasiKependudukan updateManyAndReturn
   */
  export type InformasiKependudukanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * The data used to update InformasiKependudukans.
     */
    data: XOR<InformasiKependudukanUpdateManyMutationInput, InformasiKependudukanUncheckedUpdateManyInput>
    /**
     * Filter which InformasiKependudukans to update
     */
    where?: InformasiKependudukanWhereInput
    /**
     * Limit how many InformasiKependudukans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InformasiKependudukan upsert
   */
  export type InformasiKependudukanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * The filter to search for the InformasiKependudukan to update in case it exists.
     */
    where: InformasiKependudukanWhereUniqueInput
    /**
     * In case the InformasiKependudukan found by the `where` argument doesn't exist, create a new InformasiKependudukan with this data.
     */
    create: XOR<InformasiKependudukanCreateInput, InformasiKependudukanUncheckedCreateInput>
    /**
     * In case the InformasiKependudukan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InformasiKependudukanUpdateInput, InformasiKependudukanUncheckedUpdateInput>
  }

  /**
   * InformasiKependudukan delete
   */
  export type InformasiKependudukanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    /**
     * Filter which InformasiKependudukan to delete.
     */
    where: InformasiKependudukanWhereUniqueInput
  }

  /**
   * InformasiKependudukan deleteMany
   */
  export type InformasiKependudukanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InformasiKependudukans to delete
     */
    where?: InformasiKependudukanWhereInput
    /**
     * Limit how many InformasiKependudukans to delete.
     */
    limit?: number
  }

  /**
   * InformasiKependudukan without action
   */
  export type InformasiKependudukanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
  }


  /**
   * Model InstitusiLama
   */

  export type AggregateInstitusiLama = {
    _count: InstitusiLamaCountAggregateOutputType | null
    _avg: InstitusiLamaAvgAggregateOutputType | null
    _sum: InstitusiLamaSumAggregateOutputType | null
    _min: InstitusiLamaMinAggregateOutputType | null
    _max: InstitusiLamaMaxAggregateOutputType | null
  }

  export type InstitusiLamaAvgAggregateOutputType = {
    TahunLulus: number | null
    NilaiLulusan: number | null
  }

  export type InstitusiLamaSumAggregateOutputType = {
    TahunLulus: number | null
    NilaiLulusan: number | null
  }

  export type InstitusiLamaMinAggregateOutputType = {
    InstitusiLamaId: string | null
    PendaftaranId: string | null
    AlamatId: string | null
    Jenjang: $Enums.Jenjang | null
    JenisInstitusi: string | null
    NamaInstitusi: string | null
    Jurusan: string | null
    Nisn: string | null
    Npsn: string | null
    TahunLulus: number | null
    NilaiLulusan: number | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type InstitusiLamaMaxAggregateOutputType = {
    InstitusiLamaId: string | null
    PendaftaranId: string | null
    AlamatId: string | null
    Jenjang: $Enums.Jenjang | null
    JenisInstitusi: string | null
    NamaInstitusi: string | null
    Jurusan: string | null
    Nisn: string | null
    Npsn: string | null
    TahunLulus: number | null
    NilaiLulusan: number | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type InstitusiLamaCountAggregateOutputType = {
    InstitusiLamaId: number
    PendaftaranId: number
    AlamatId: number
    Jenjang: number
    JenisInstitusi: number
    NamaInstitusi: number
    Jurusan: number
    Nisn: number
    Npsn: number
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type InstitusiLamaAvgAggregateInputType = {
    TahunLulus?: true
    NilaiLulusan?: true
  }

  export type InstitusiLamaSumAggregateInputType = {
    TahunLulus?: true
    NilaiLulusan?: true
  }

  export type InstitusiLamaMinAggregateInputType = {
    InstitusiLamaId?: true
    PendaftaranId?: true
    AlamatId?: true
    Jenjang?: true
    JenisInstitusi?: true
    NamaInstitusi?: true
    Jurusan?: true
    Nisn?: true
    Npsn?: true
    TahunLulus?: true
    NilaiLulusan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type InstitusiLamaMaxAggregateInputType = {
    InstitusiLamaId?: true
    PendaftaranId?: true
    AlamatId?: true
    Jenjang?: true
    JenisInstitusi?: true
    NamaInstitusi?: true
    Jurusan?: true
    Nisn?: true
    Npsn?: true
    TahunLulus?: true
    NilaiLulusan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type InstitusiLamaCountAggregateInputType = {
    InstitusiLamaId?: true
    PendaftaranId?: true
    AlamatId?: true
    Jenjang?: true
    JenisInstitusi?: true
    NamaInstitusi?: true
    Jurusan?: true
    Nisn?: true
    Npsn?: true
    TahunLulus?: true
    NilaiLulusan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type InstitusiLamaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InstitusiLama to aggregate.
     */
    where?: InstitusiLamaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InstitusiLamas to fetch.
     */
    orderBy?: InstitusiLamaOrderByWithRelationInput | InstitusiLamaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InstitusiLamaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InstitusiLamas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InstitusiLamas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned InstitusiLamas
    **/
    _count?: true | InstitusiLamaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InstitusiLamaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InstitusiLamaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstitusiLamaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstitusiLamaMaxAggregateInputType
  }

  export type GetInstitusiLamaAggregateType<T extends InstitusiLamaAggregateArgs> = {
        [P in keyof T & keyof AggregateInstitusiLama]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstitusiLama[P]>
      : GetScalarType<T[P], AggregateInstitusiLama[P]>
  }




  export type InstitusiLamaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InstitusiLamaWhereInput
    orderBy?: InstitusiLamaOrderByWithAggregationInput | InstitusiLamaOrderByWithAggregationInput[]
    by: InstitusiLamaScalarFieldEnum[] | InstitusiLamaScalarFieldEnum
    having?: InstitusiLamaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstitusiLamaCountAggregateInputType | true
    _avg?: InstitusiLamaAvgAggregateInputType
    _sum?: InstitusiLamaSumAggregateInputType
    _min?: InstitusiLamaMinAggregateInputType
    _max?: InstitusiLamaMaxAggregateInputType
  }

  export type InstitusiLamaGroupByOutputType = {
    InstitusiLamaId: string
    PendaftaranId: string
    AlamatId: string
    Jenjang: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: InstitusiLamaCountAggregateOutputType | null
    _avg: InstitusiLamaAvgAggregateOutputType | null
    _sum: InstitusiLamaSumAggregateOutputType | null
    _min: InstitusiLamaMinAggregateOutputType | null
    _max: InstitusiLamaMaxAggregateOutputType | null
  }

  type GetInstitusiLamaGroupByPayload<T extends InstitusiLamaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstitusiLamaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstitusiLamaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstitusiLamaGroupByOutputType[P]>
            : GetScalarType<T[P], InstitusiLamaGroupByOutputType[P]>
        }
      >
    >


  export type InstitusiLamaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    InstitusiLamaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    Jenjang?: boolean
    JenisInstitusi?: boolean
    NamaInstitusi?: boolean
    Jurusan?: boolean
    Nisn?: boolean
    Npsn?: boolean
    TahunLulus?: boolean
    NilaiLulusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["institusiLama"]>

  export type InstitusiLamaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    InstitusiLamaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    Jenjang?: boolean
    JenisInstitusi?: boolean
    NamaInstitusi?: boolean
    Jurusan?: boolean
    Nisn?: boolean
    Npsn?: boolean
    TahunLulus?: boolean
    NilaiLulusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["institusiLama"]>

  export type InstitusiLamaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    InstitusiLamaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    Jenjang?: boolean
    JenisInstitusi?: boolean
    NamaInstitusi?: boolean
    Jurusan?: boolean
    Nisn?: boolean
    Npsn?: boolean
    TahunLulus?: boolean
    NilaiLulusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["institusiLama"]>

  export type InstitusiLamaSelectScalar = {
    InstitusiLamaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    Jenjang?: boolean
    JenisInstitusi?: boolean
    NamaInstitusi?: boolean
    Jurusan?: boolean
    Nisn?: boolean
    Npsn?: boolean
    TahunLulus?: boolean
    NilaiLulusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type InstitusiLamaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"InstitusiLamaId" | "PendaftaranId" | "AlamatId" | "Jenjang" | "JenisInstitusi" | "NamaInstitusi" | "Jurusan" | "Nisn" | "Npsn" | "TahunLulus" | "NilaiLulusan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["institusiLama"]>
  export type InstitusiLamaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }
  export type InstitusiLamaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }
  export type InstitusiLamaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }

  export type $InstitusiLamaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "InstitusiLama"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
      Alamat: Prisma.$AlamatPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      InstitusiLamaId: string
      PendaftaranId: string
      AlamatId: string
      Jenjang: $Enums.Jenjang
      JenisInstitusi: string
      NamaInstitusi: string
      Jurusan: string
      Nisn: string
      Npsn: string
      TahunLulus: number
      NilaiLulusan: number
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["institusiLama"]>
    composites: {}
  }

  type InstitusiLamaGetPayload<S extends boolean | null | undefined | InstitusiLamaDefaultArgs> = $Result.GetResult<Prisma.$InstitusiLamaPayload, S>

  type InstitusiLamaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InstitusiLamaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InstitusiLamaCountAggregateInputType | true
    }

  export interface InstitusiLamaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['InstitusiLama'], meta: { name: 'InstitusiLama' } }
    /**
     * Find zero or one InstitusiLama that matches the filter.
     * @param {InstitusiLamaFindUniqueArgs} args - Arguments to find a InstitusiLama
     * @example
     * // Get one InstitusiLama
     * const institusiLama = await prisma.institusiLama.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InstitusiLamaFindUniqueArgs>(args: SelectSubset<T, InstitusiLamaFindUniqueArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one InstitusiLama that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InstitusiLamaFindUniqueOrThrowArgs} args - Arguments to find a InstitusiLama
     * @example
     * // Get one InstitusiLama
     * const institusiLama = await prisma.institusiLama.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InstitusiLamaFindUniqueOrThrowArgs>(args: SelectSubset<T, InstitusiLamaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InstitusiLama that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaFindFirstArgs} args - Arguments to find a InstitusiLama
     * @example
     * // Get one InstitusiLama
     * const institusiLama = await prisma.institusiLama.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InstitusiLamaFindFirstArgs>(args?: SelectSubset<T, InstitusiLamaFindFirstArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first InstitusiLama that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaFindFirstOrThrowArgs} args - Arguments to find a InstitusiLama
     * @example
     * // Get one InstitusiLama
     * const institusiLama = await prisma.institusiLama.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InstitusiLamaFindFirstOrThrowArgs>(args?: SelectSubset<T, InstitusiLamaFindFirstOrThrowArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more InstitusiLamas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all InstitusiLamas
     * const institusiLamas = await prisma.institusiLama.findMany()
     * 
     * // Get first 10 InstitusiLamas
     * const institusiLamas = await prisma.institusiLama.findMany({ take: 10 })
     * 
     * // Only select the `InstitusiLamaId`
     * const institusiLamaWithInstitusiLamaIdOnly = await prisma.institusiLama.findMany({ select: { InstitusiLamaId: true } })
     * 
     */
    findMany<T extends InstitusiLamaFindManyArgs>(args?: SelectSubset<T, InstitusiLamaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a InstitusiLama.
     * @param {InstitusiLamaCreateArgs} args - Arguments to create a InstitusiLama.
     * @example
     * // Create one InstitusiLama
     * const InstitusiLama = await prisma.institusiLama.create({
     *   data: {
     *     // ... data to create a InstitusiLama
     *   }
     * })
     * 
     */
    create<T extends InstitusiLamaCreateArgs>(args: SelectSubset<T, InstitusiLamaCreateArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many InstitusiLamas.
     * @param {InstitusiLamaCreateManyArgs} args - Arguments to create many InstitusiLamas.
     * @example
     * // Create many InstitusiLamas
     * const institusiLama = await prisma.institusiLama.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InstitusiLamaCreateManyArgs>(args?: SelectSubset<T, InstitusiLamaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many InstitusiLamas and returns the data saved in the database.
     * @param {InstitusiLamaCreateManyAndReturnArgs} args - Arguments to create many InstitusiLamas.
     * @example
     * // Create many InstitusiLamas
     * const institusiLama = await prisma.institusiLama.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many InstitusiLamas and only return the `InstitusiLamaId`
     * const institusiLamaWithInstitusiLamaIdOnly = await prisma.institusiLama.createManyAndReturn({
     *   select: { InstitusiLamaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InstitusiLamaCreateManyAndReturnArgs>(args?: SelectSubset<T, InstitusiLamaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a InstitusiLama.
     * @param {InstitusiLamaDeleteArgs} args - Arguments to delete one InstitusiLama.
     * @example
     * // Delete one InstitusiLama
     * const InstitusiLama = await prisma.institusiLama.delete({
     *   where: {
     *     // ... filter to delete one InstitusiLama
     *   }
     * })
     * 
     */
    delete<T extends InstitusiLamaDeleteArgs>(args: SelectSubset<T, InstitusiLamaDeleteArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one InstitusiLama.
     * @param {InstitusiLamaUpdateArgs} args - Arguments to update one InstitusiLama.
     * @example
     * // Update one InstitusiLama
     * const institusiLama = await prisma.institusiLama.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InstitusiLamaUpdateArgs>(args: SelectSubset<T, InstitusiLamaUpdateArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more InstitusiLamas.
     * @param {InstitusiLamaDeleteManyArgs} args - Arguments to filter InstitusiLamas to delete.
     * @example
     * // Delete a few InstitusiLamas
     * const { count } = await prisma.institusiLama.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InstitusiLamaDeleteManyArgs>(args?: SelectSubset<T, InstitusiLamaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InstitusiLamas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many InstitusiLamas
     * const institusiLama = await prisma.institusiLama.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InstitusiLamaUpdateManyArgs>(args: SelectSubset<T, InstitusiLamaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more InstitusiLamas and returns the data updated in the database.
     * @param {InstitusiLamaUpdateManyAndReturnArgs} args - Arguments to update many InstitusiLamas.
     * @example
     * // Update many InstitusiLamas
     * const institusiLama = await prisma.institusiLama.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more InstitusiLamas and only return the `InstitusiLamaId`
     * const institusiLamaWithInstitusiLamaIdOnly = await prisma.institusiLama.updateManyAndReturn({
     *   select: { InstitusiLamaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InstitusiLamaUpdateManyAndReturnArgs>(args: SelectSubset<T, InstitusiLamaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one InstitusiLama.
     * @param {InstitusiLamaUpsertArgs} args - Arguments to update or create a InstitusiLama.
     * @example
     * // Update or create a InstitusiLama
     * const institusiLama = await prisma.institusiLama.upsert({
     *   create: {
     *     // ... data to create a InstitusiLama
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the InstitusiLama we want to update
     *   }
     * })
     */
    upsert<T extends InstitusiLamaUpsertArgs>(args: SelectSubset<T, InstitusiLamaUpsertArgs<ExtArgs>>): Prisma__InstitusiLamaClient<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of InstitusiLamas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaCountArgs} args - Arguments to filter InstitusiLamas to count.
     * @example
     * // Count the number of InstitusiLamas
     * const count = await prisma.institusiLama.count({
     *   where: {
     *     // ... the filter for the InstitusiLamas we want to count
     *   }
     * })
    **/
    count<T extends InstitusiLamaCountArgs>(
      args?: Subset<T, InstitusiLamaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstitusiLamaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a InstitusiLama.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstitusiLamaAggregateArgs>(args: Subset<T, InstitusiLamaAggregateArgs>): Prisma.PrismaPromise<GetInstitusiLamaAggregateType<T>>

    /**
     * Group by InstitusiLama.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstitusiLamaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InstitusiLamaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InstitusiLamaGroupByArgs['orderBy'] }
        : { orderBy?: InstitusiLamaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InstitusiLamaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstitusiLamaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the InstitusiLama model
   */
  readonly fields: InstitusiLamaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for InstitusiLama.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InstitusiLamaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Alamat<T extends AlamatDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlamatDefaultArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the InstitusiLama model
   */
  interface InstitusiLamaFieldRefs {
    readonly InstitusiLamaId: FieldRef<"InstitusiLama", 'String'>
    readonly PendaftaranId: FieldRef<"InstitusiLama", 'String'>
    readonly AlamatId: FieldRef<"InstitusiLama", 'String'>
    readonly Jenjang: FieldRef<"InstitusiLama", 'Jenjang'>
    readonly JenisInstitusi: FieldRef<"InstitusiLama", 'String'>
    readonly NamaInstitusi: FieldRef<"InstitusiLama", 'String'>
    readonly Jurusan: FieldRef<"InstitusiLama", 'String'>
    readonly Nisn: FieldRef<"InstitusiLama", 'String'>
    readonly Npsn: FieldRef<"InstitusiLama", 'String'>
    readonly TahunLulus: FieldRef<"InstitusiLama", 'Int'>
    readonly NilaiLulusan: FieldRef<"InstitusiLama", 'Float'>
    readonly CreatedAt: FieldRef<"InstitusiLama", 'DateTime'>
    readonly UpdatedAt: FieldRef<"InstitusiLama", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * InstitusiLama findUnique
   */
  export type InstitusiLamaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * Filter, which InstitusiLama to fetch.
     */
    where: InstitusiLamaWhereUniqueInput
  }

  /**
   * InstitusiLama findUniqueOrThrow
   */
  export type InstitusiLamaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * Filter, which InstitusiLama to fetch.
     */
    where: InstitusiLamaWhereUniqueInput
  }

  /**
   * InstitusiLama findFirst
   */
  export type InstitusiLamaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * Filter, which InstitusiLama to fetch.
     */
    where?: InstitusiLamaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InstitusiLamas to fetch.
     */
    orderBy?: InstitusiLamaOrderByWithRelationInput | InstitusiLamaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InstitusiLamas.
     */
    cursor?: InstitusiLamaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InstitusiLamas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InstitusiLamas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InstitusiLamas.
     */
    distinct?: InstitusiLamaScalarFieldEnum | InstitusiLamaScalarFieldEnum[]
  }

  /**
   * InstitusiLama findFirstOrThrow
   */
  export type InstitusiLamaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * Filter, which InstitusiLama to fetch.
     */
    where?: InstitusiLamaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InstitusiLamas to fetch.
     */
    orderBy?: InstitusiLamaOrderByWithRelationInput | InstitusiLamaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for InstitusiLamas.
     */
    cursor?: InstitusiLamaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InstitusiLamas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InstitusiLamas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of InstitusiLamas.
     */
    distinct?: InstitusiLamaScalarFieldEnum | InstitusiLamaScalarFieldEnum[]
  }

  /**
   * InstitusiLama findMany
   */
  export type InstitusiLamaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * Filter, which InstitusiLamas to fetch.
     */
    where?: InstitusiLamaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of InstitusiLamas to fetch.
     */
    orderBy?: InstitusiLamaOrderByWithRelationInput | InstitusiLamaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing InstitusiLamas.
     */
    cursor?: InstitusiLamaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` InstitusiLamas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` InstitusiLamas.
     */
    skip?: number
    distinct?: InstitusiLamaScalarFieldEnum | InstitusiLamaScalarFieldEnum[]
  }

  /**
   * InstitusiLama create
   */
  export type InstitusiLamaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * The data needed to create a InstitusiLama.
     */
    data: XOR<InstitusiLamaCreateInput, InstitusiLamaUncheckedCreateInput>
  }

  /**
   * InstitusiLama createMany
   */
  export type InstitusiLamaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many InstitusiLamas.
     */
    data: InstitusiLamaCreateManyInput | InstitusiLamaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * InstitusiLama createManyAndReturn
   */
  export type InstitusiLamaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * The data used to create many InstitusiLamas.
     */
    data: InstitusiLamaCreateManyInput | InstitusiLamaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * InstitusiLama update
   */
  export type InstitusiLamaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * The data needed to update a InstitusiLama.
     */
    data: XOR<InstitusiLamaUpdateInput, InstitusiLamaUncheckedUpdateInput>
    /**
     * Choose, which InstitusiLama to update.
     */
    where: InstitusiLamaWhereUniqueInput
  }

  /**
   * InstitusiLama updateMany
   */
  export type InstitusiLamaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update InstitusiLamas.
     */
    data: XOR<InstitusiLamaUpdateManyMutationInput, InstitusiLamaUncheckedUpdateManyInput>
    /**
     * Filter which InstitusiLamas to update
     */
    where?: InstitusiLamaWhereInput
    /**
     * Limit how many InstitusiLamas to update.
     */
    limit?: number
  }

  /**
   * InstitusiLama updateManyAndReturn
   */
  export type InstitusiLamaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * The data used to update InstitusiLamas.
     */
    data: XOR<InstitusiLamaUpdateManyMutationInput, InstitusiLamaUncheckedUpdateManyInput>
    /**
     * Filter which InstitusiLamas to update
     */
    where?: InstitusiLamaWhereInput
    /**
     * Limit how many InstitusiLamas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * InstitusiLama upsert
   */
  export type InstitusiLamaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * The filter to search for the InstitusiLama to update in case it exists.
     */
    where: InstitusiLamaWhereUniqueInput
    /**
     * In case the InstitusiLama found by the `where` argument doesn't exist, create a new InstitusiLama with this data.
     */
    create: XOR<InstitusiLamaCreateInput, InstitusiLamaUncheckedCreateInput>
    /**
     * In case the InstitusiLama was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InstitusiLamaUpdateInput, InstitusiLamaUncheckedUpdateInput>
  }

  /**
   * InstitusiLama delete
   */
  export type InstitusiLamaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    /**
     * Filter which InstitusiLama to delete.
     */
    where: InstitusiLamaWhereUniqueInput
  }

  /**
   * InstitusiLama deleteMany
   */
  export type InstitusiLamaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which InstitusiLamas to delete
     */
    where?: InstitusiLamaWhereInput
    /**
     * Limit how many InstitusiLamas to delete.
     */
    limit?: number
  }

  /**
   * InstitusiLama without action
   */
  export type InstitusiLamaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
  }


  /**
   * Model JenisDokumen
   */

  export type AggregateJenisDokumen = {
    _count: JenisDokumenCountAggregateOutputType | null
    _avg: JenisDokumenAvgAggregateOutputType | null
    _sum: JenisDokumenSumAggregateOutputType | null
    _min: JenisDokumenMinAggregateOutputType | null
    _max: JenisDokumenMaxAggregateOutputType | null
  }

  export type JenisDokumenAvgAggregateOutputType = {
    NomorDokumen: number | null
  }

  export type JenisDokumenSumAggregateOutputType = {
    NomorDokumen: number | null
  }

  export type JenisDokumenMinAggregateOutputType = {
    JenisDokumenId: string | null
    Jenis: string | null
    NomorDokumen: number | null
    Keterangan: string | null
  }

  export type JenisDokumenMaxAggregateOutputType = {
    JenisDokumenId: string | null
    Jenis: string | null
    NomorDokumen: number | null
    Keterangan: string | null
  }

  export type JenisDokumenCountAggregateOutputType = {
    JenisDokumenId: number
    Jenis: number
    NomorDokumen: number
    Keterangan: number
    _all: number
  }


  export type JenisDokumenAvgAggregateInputType = {
    NomorDokumen?: true
  }

  export type JenisDokumenSumAggregateInputType = {
    NomorDokumen?: true
  }

  export type JenisDokumenMinAggregateInputType = {
    JenisDokumenId?: true
    Jenis?: true
    NomorDokumen?: true
    Keterangan?: true
  }

  export type JenisDokumenMaxAggregateInputType = {
    JenisDokumenId?: true
    Jenis?: true
    NomorDokumen?: true
    Keterangan?: true
  }

  export type JenisDokumenCountAggregateInputType = {
    JenisDokumenId?: true
    Jenis?: true
    NomorDokumen?: true
    Keterangan?: true
    _all?: true
  }

  export type JenisDokumenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JenisDokumen to aggregate.
     */
    where?: JenisDokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisDokumen to fetch.
     */
    orderBy?: JenisDokumenOrderByWithRelationInput | JenisDokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JenisDokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisDokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisDokumen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JenisDokumen
    **/
    _count?: true | JenisDokumenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JenisDokumenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JenisDokumenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JenisDokumenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JenisDokumenMaxAggregateInputType
  }

  export type GetJenisDokumenAggregateType<T extends JenisDokumenAggregateArgs> = {
        [P in keyof T & keyof AggregateJenisDokumen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJenisDokumen[P]>
      : GetScalarType<T[P], AggregateJenisDokumen[P]>
  }




  export type JenisDokumenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JenisDokumenWhereInput
    orderBy?: JenisDokumenOrderByWithAggregationInput | JenisDokumenOrderByWithAggregationInput[]
    by: JenisDokumenScalarFieldEnum[] | JenisDokumenScalarFieldEnum
    having?: JenisDokumenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JenisDokumenCountAggregateInputType | true
    _avg?: JenisDokumenAvgAggregateInputType
    _sum?: JenisDokumenSumAggregateInputType
    _min?: JenisDokumenMinAggregateInputType
    _max?: JenisDokumenMaxAggregateInputType
  }

  export type JenisDokumenGroupByOutputType = {
    JenisDokumenId: string
    Jenis: string
    NomorDokumen: number
    Keterangan: string | null
    _count: JenisDokumenCountAggregateOutputType | null
    _avg: JenisDokumenAvgAggregateOutputType | null
    _sum: JenisDokumenSumAggregateOutputType | null
    _min: JenisDokumenMinAggregateOutputType | null
    _max: JenisDokumenMaxAggregateOutputType | null
  }

  type GetJenisDokumenGroupByPayload<T extends JenisDokumenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JenisDokumenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JenisDokumenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JenisDokumenGroupByOutputType[P]>
            : GetScalarType<T[P], JenisDokumenGroupByOutputType[P]>
        }
      >
    >


  export type JenisDokumenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    JenisDokumenId?: boolean
    Jenis?: boolean
    NomorDokumen?: boolean
    Keterangan?: boolean
    BuktiForm?: boolean | JenisDokumen$BuktiFormArgs<ExtArgs>
    _count?: boolean | JenisDokumenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jenisDokumen"]>

  export type JenisDokumenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    JenisDokumenId?: boolean
    Jenis?: boolean
    NomorDokumen?: boolean
    Keterangan?: boolean
  }, ExtArgs["result"]["jenisDokumen"]>

  export type JenisDokumenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    JenisDokumenId?: boolean
    Jenis?: boolean
    NomorDokumen?: boolean
    Keterangan?: boolean
  }, ExtArgs["result"]["jenisDokumen"]>

  export type JenisDokumenSelectScalar = {
    JenisDokumenId?: boolean
    Jenis?: boolean
    NomorDokumen?: boolean
    Keterangan?: boolean
  }

  export type JenisDokumenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"JenisDokumenId" | "Jenis" | "NomorDokumen" | "Keterangan", ExtArgs["result"]["jenisDokumen"]>
  export type JenisDokumenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    BuktiForm?: boolean | JenisDokumen$BuktiFormArgs<ExtArgs>
    _count?: boolean | JenisDokumenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JenisDokumenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type JenisDokumenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $JenisDokumenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JenisDokumen"
    objects: {
      BuktiForm: Prisma.$BuktiFormPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      JenisDokumenId: string
      Jenis: string
      NomorDokumen: number
      Keterangan: string | null
    }, ExtArgs["result"]["jenisDokumen"]>
    composites: {}
  }

  type JenisDokumenGetPayload<S extends boolean | null | undefined | JenisDokumenDefaultArgs> = $Result.GetResult<Prisma.$JenisDokumenPayload, S>

  type JenisDokumenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JenisDokumenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JenisDokumenCountAggregateInputType | true
    }

  export interface JenisDokumenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JenisDokumen'], meta: { name: 'JenisDokumen' } }
    /**
     * Find zero or one JenisDokumen that matches the filter.
     * @param {JenisDokumenFindUniqueArgs} args - Arguments to find a JenisDokumen
     * @example
     * // Get one JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JenisDokumenFindUniqueArgs>(args: SelectSubset<T, JenisDokumenFindUniqueArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one JenisDokumen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JenisDokumenFindUniqueOrThrowArgs} args - Arguments to find a JenisDokumen
     * @example
     * // Get one JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JenisDokumenFindUniqueOrThrowArgs>(args: SelectSubset<T, JenisDokumenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JenisDokumen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenFindFirstArgs} args - Arguments to find a JenisDokumen
     * @example
     * // Get one JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JenisDokumenFindFirstArgs>(args?: SelectSubset<T, JenisDokumenFindFirstArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JenisDokumen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenFindFirstOrThrowArgs} args - Arguments to find a JenisDokumen
     * @example
     * // Get one JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JenisDokumenFindFirstOrThrowArgs>(args?: SelectSubset<T, JenisDokumenFindFirstOrThrowArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more JenisDokumen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.findMany()
     * 
     * // Get first 10 JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.findMany({ take: 10 })
     * 
     * // Only select the `JenisDokumenId`
     * const jenisDokumenWithJenisDokumenIdOnly = await prisma.jenisDokumen.findMany({ select: { JenisDokumenId: true } })
     * 
     */
    findMany<T extends JenisDokumenFindManyArgs>(args?: SelectSubset<T, JenisDokumenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a JenisDokumen.
     * @param {JenisDokumenCreateArgs} args - Arguments to create a JenisDokumen.
     * @example
     * // Create one JenisDokumen
     * const JenisDokumen = await prisma.jenisDokumen.create({
     *   data: {
     *     // ... data to create a JenisDokumen
     *   }
     * })
     * 
     */
    create<T extends JenisDokumenCreateArgs>(args: SelectSubset<T, JenisDokumenCreateArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many JenisDokumen.
     * @param {JenisDokumenCreateManyArgs} args - Arguments to create many JenisDokumen.
     * @example
     * // Create many JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JenisDokumenCreateManyArgs>(args?: SelectSubset<T, JenisDokumenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JenisDokumen and returns the data saved in the database.
     * @param {JenisDokumenCreateManyAndReturnArgs} args - Arguments to create many JenisDokumen.
     * @example
     * // Create many JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JenisDokumen and only return the `JenisDokumenId`
     * const jenisDokumenWithJenisDokumenIdOnly = await prisma.jenisDokumen.createManyAndReturn({
     *   select: { JenisDokumenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JenisDokumenCreateManyAndReturnArgs>(args?: SelectSubset<T, JenisDokumenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a JenisDokumen.
     * @param {JenisDokumenDeleteArgs} args - Arguments to delete one JenisDokumen.
     * @example
     * // Delete one JenisDokumen
     * const JenisDokumen = await prisma.jenisDokumen.delete({
     *   where: {
     *     // ... filter to delete one JenisDokumen
     *   }
     * })
     * 
     */
    delete<T extends JenisDokumenDeleteArgs>(args: SelectSubset<T, JenisDokumenDeleteArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one JenisDokumen.
     * @param {JenisDokumenUpdateArgs} args - Arguments to update one JenisDokumen.
     * @example
     * // Update one JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JenisDokumenUpdateArgs>(args: SelectSubset<T, JenisDokumenUpdateArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more JenisDokumen.
     * @param {JenisDokumenDeleteManyArgs} args - Arguments to filter JenisDokumen to delete.
     * @example
     * // Delete a few JenisDokumen
     * const { count } = await prisma.jenisDokumen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JenisDokumenDeleteManyArgs>(args?: SelectSubset<T, JenisDokumenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JenisDokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JenisDokumenUpdateManyArgs>(args: SelectSubset<T, JenisDokumenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JenisDokumen and returns the data updated in the database.
     * @param {JenisDokumenUpdateManyAndReturnArgs} args - Arguments to update many JenisDokumen.
     * @example
     * // Update many JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more JenisDokumen and only return the `JenisDokumenId`
     * const jenisDokumenWithJenisDokumenIdOnly = await prisma.jenisDokumen.updateManyAndReturn({
     *   select: { JenisDokumenId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JenisDokumenUpdateManyAndReturnArgs>(args: SelectSubset<T, JenisDokumenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one JenisDokumen.
     * @param {JenisDokumenUpsertArgs} args - Arguments to update or create a JenisDokumen.
     * @example
     * // Update or create a JenisDokumen
     * const jenisDokumen = await prisma.jenisDokumen.upsert({
     *   create: {
     *     // ... data to create a JenisDokumen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JenisDokumen we want to update
     *   }
     * })
     */
    upsert<T extends JenisDokumenUpsertArgs>(args: SelectSubset<T, JenisDokumenUpsertArgs<ExtArgs>>): Prisma__JenisDokumenClient<$Result.GetResult<Prisma.$JenisDokumenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of JenisDokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenCountArgs} args - Arguments to filter JenisDokumen to count.
     * @example
     * // Count the number of JenisDokumen
     * const count = await prisma.jenisDokumen.count({
     *   where: {
     *     // ... the filter for the JenisDokumen we want to count
     *   }
     * })
    **/
    count<T extends JenisDokumenCountArgs>(
      args?: Subset<T, JenisDokumenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JenisDokumenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JenisDokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JenisDokumenAggregateArgs>(args: Subset<T, JenisDokumenAggregateArgs>): Prisma.PrismaPromise<GetJenisDokumenAggregateType<T>>

    /**
     * Group by JenisDokumen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisDokumenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JenisDokumenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JenisDokumenGroupByArgs['orderBy'] }
        : { orderBy?: JenisDokumenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JenisDokumenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJenisDokumenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JenisDokumen model
   */
  readonly fields: JenisDokumenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JenisDokumen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JenisDokumenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    BuktiForm<T extends JenisDokumen$BuktiFormArgs<ExtArgs> = {}>(args?: Subset<T, JenisDokumen$BuktiFormArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JenisDokumen model
   */
  interface JenisDokumenFieldRefs {
    readonly JenisDokumenId: FieldRef<"JenisDokumen", 'String'>
    readonly Jenis: FieldRef<"JenisDokumen", 'String'>
    readonly NomorDokumen: FieldRef<"JenisDokumen", 'Int'>
    readonly Keterangan: FieldRef<"JenisDokumen", 'String'>
  }
    

  // Custom InputTypes
  /**
   * JenisDokumen findUnique
   */
  export type JenisDokumenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * Filter, which JenisDokumen to fetch.
     */
    where: JenisDokumenWhereUniqueInput
  }

  /**
   * JenisDokumen findUniqueOrThrow
   */
  export type JenisDokumenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * Filter, which JenisDokumen to fetch.
     */
    where: JenisDokumenWhereUniqueInput
  }

  /**
   * JenisDokumen findFirst
   */
  export type JenisDokumenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * Filter, which JenisDokumen to fetch.
     */
    where?: JenisDokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisDokumen to fetch.
     */
    orderBy?: JenisDokumenOrderByWithRelationInput | JenisDokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JenisDokumen.
     */
    cursor?: JenisDokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisDokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisDokumen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JenisDokumen.
     */
    distinct?: JenisDokumenScalarFieldEnum | JenisDokumenScalarFieldEnum[]
  }

  /**
   * JenisDokumen findFirstOrThrow
   */
  export type JenisDokumenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * Filter, which JenisDokumen to fetch.
     */
    where?: JenisDokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisDokumen to fetch.
     */
    orderBy?: JenisDokumenOrderByWithRelationInput | JenisDokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JenisDokumen.
     */
    cursor?: JenisDokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisDokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisDokumen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JenisDokumen.
     */
    distinct?: JenisDokumenScalarFieldEnum | JenisDokumenScalarFieldEnum[]
  }

  /**
   * JenisDokumen findMany
   */
  export type JenisDokumenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * Filter, which JenisDokumen to fetch.
     */
    where?: JenisDokumenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisDokumen to fetch.
     */
    orderBy?: JenisDokumenOrderByWithRelationInput | JenisDokumenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JenisDokumen.
     */
    cursor?: JenisDokumenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisDokumen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisDokumen.
     */
    skip?: number
    distinct?: JenisDokumenScalarFieldEnum | JenisDokumenScalarFieldEnum[]
  }

  /**
   * JenisDokumen create
   */
  export type JenisDokumenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * The data needed to create a JenisDokumen.
     */
    data: XOR<JenisDokumenCreateInput, JenisDokumenUncheckedCreateInput>
  }

  /**
   * JenisDokumen createMany
   */
  export type JenisDokumenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JenisDokumen.
     */
    data: JenisDokumenCreateManyInput | JenisDokumenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JenisDokumen createManyAndReturn
   */
  export type JenisDokumenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * The data used to create many JenisDokumen.
     */
    data: JenisDokumenCreateManyInput | JenisDokumenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JenisDokumen update
   */
  export type JenisDokumenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * The data needed to update a JenisDokumen.
     */
    data: XOR<JenisDokumenUpdateInput, JenisDokumenUncheckedUpdateInput>
    /**
     * Choose, which JenisDokumen to update.
     */
    where: JenisDokumenWhereUniqueInput
  }

  /**
   * JenisDokumen updateMany
   */
  export type JenisDokumenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JenisDokumen.
     */
    data: XOR<JenisDokumenUpdateManyMutationInput, JenisDokumenUncheckedUpdateManyInput>
    /**
     * Filter which JenisDokumen to update
     */
    where?: JenisDokumenWhereInput
    /**
     * Limit how many JenisDokumen to update.
     */
    limit?: number
  }

  /**
   * JenisDokumen updateManyAndReturn
   */
  export type JenisDokumenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * The data used to update JenisDokumen.
     */
    data: XOR<JenisDokumenUpdateManyMutationInput, JenisDokumenUncheckedUpdateManyInput>
    /**
     * Filter which JenisDokumen to update
     */
    where?: JenisDokumenWhereInput
    /**
     * Limit how many JenisDokumen to update.
     */
    limit?: number
  }

  /**
   * JenisDokumen upsert
   */
  export type JenisDokumenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * The filter to search for the JenisDokumen to update in case it exists.
     */
    where: JenisDokumenWhereUniqueInput
    /**
     * In case the JenisDokumen found by the `where` argument doesn't exist, create a new JenisDokumen with this data.
     */
    create: XOR<JenisDokumenCreateInput, JenisDokumenUncheckedCreateInput>
    /**
     * In case the JenisDokumen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JenisDokumenUpdateInput, JenisDokumenUncheckedUpdateInput>
  }

  /**
   * JenisDokumen delete
   */
  export type JenisDokumenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
    /**
     * Filter which JenisDokumen to delete.
     */
    where: JenisDokumenWhereUniqueInput
  }

  /**
   * JenisDokumen deleteMany
   */
  export type JenisDokumenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JenisDokumen to delete
     */
    where?: JenisDokumenWhereInput
    /**
     * Limit how many JenisDokumen to delete.
     */
    limit?: number
  }

  /**
   * JenisDokumen.BuktiForm
   */
  export type JenisDokumen$BuktiFormArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    where?: BuktiFormWhereInput
    orderBy?: BuktiFormOrderByWithRelationInput | BuktiFormOrderByWithRelationInput[]
    cursor?: BuktiFormWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BuktiFormScalarFieldEnum | BuktiFormScalarFieldEnum[]
  }

  /**
   * JenisDokumen without action
   */
  export type JenisDokumenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisDokumen
     */
    select?: JenisDokumenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JenisDokumen
     */
    omit?: JenisDokumenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisDokumenInclude<ExtArgs> | null
  }


  /**
   * Model Kabupaten
   */

  export type AggregateKabupaten = {
    _count: KabupatenCountAggregateOutputType | null
    _min: KabupatenMinAggregateOutputType | null
    _max: KabupatenMaxAggregateOutputType | null
  }

  export type KabupatenMinAggregateOutputType = {
    KabupatenId: string | null
    ProvinsiId: string | null
    Nama: string | null
  }

  export type KabupatenMaxAggregateOutputType = {
    KabupatenId: string | null
    ProvinsiId: string | null
    Nama: string | null
  }

  export type KabupatenCountAggregateOutputType = {
    KabupatenId: number
    ProvinsiId: number
    Nama: number
    _all: number
  }


  export type KabupatenMinAggregateInputType = {
    KabupatenId?: true
    ProvinsiId?: true
    Nama?: true
  }

  export type KabupatenMaxAggregateInputType = {
    KabupatenId?: true
    ProvinsiId?: true
    Nama?: true
  }

  export type KabupatenCountAggregateInputType = {
    KabupatenId?: true
    ProvinsiId?: true
    Nama?: true
    _all?: true
  }

  export type KabupatenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kabupaten to aggregate.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kabupatens
    **/
    _count?: true | KabupatenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KabupatenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KabupatenMaxAggregateInputType
  }

  export type GetKabupatenAggregateType<T extends KabupatenAggregateArgs> = {
        [P in keyof T & keyof AggregateKabupaten]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKabupaten[P]>
      : GetScalarType<T[P], AggregateKabupaten[P]>
  }




  export type KabupatenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KabupatenWhereInput
    orderBy?: KabupatenOrderByWithAggregationInput | KabupatenOrderByWithAggregationInput[]
    by: KabupatenScalarFieldEnum[] | KabupatenScalarFieldEnum
    having?: KabupatenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KabupatenCountAggregateInputType | true
    _min?: KabupatenMinAggregateInputType
    _max?: KabupatenMaxAggregateInputType
  }

  export type KabupatenGroupByOutputType = {
    KabupatenId: string
    ProvinsiId: string
    Nama: string
    _count: KabupatenCountAggregateOutputType | null
    _min: KabupatenMinAggregateOutputType | null
    _max: KabupatenMaxAggregateOutputType | null
  }

  type GetKabupatenGroupByPayload<T extends KabupatenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KabupatenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KabupatenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KabupatenGroupByOutputType[P]>
            : GetScalarType<T[P], KabupatenGroupByOutputType[P]>
        }
      >
    >


  export type KabupatenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KabupatenId?: boolean
    ProvinsiId?: boolean
    Nama?: boolean
    Provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    Kecamatan?: boolean | Kabupaten$KecamatanArgs<ExtArgs>
    _count?: boolean | KabupatenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kabupaten"]>

  export type KabupatenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KabupatenId?: boolean
    ProvinsiId?: boolean
    Nama?: boolean
    Provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kabupaten"]>

  export type KabupatenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KabupatenId?: boolean
    ProvinsiId?: boolean
    Nama?: boolean
    Provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kabupaten"]>

  export type KabupatenSelectScalar = {
    KabupatenId?: boolean
    ProvinsiId?: boolean
    Nama?: boolean
  }

  export type KabupatenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"KabupatenId" | "ProvinsiId" | "Nama", ExtArgs["result"]["kabupaten"]>
  export type KabupatenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
    Kecamatan?: boolean | Kabupaten$KecamatanArgs<ExtArgs>
    _count?: boolean | KabupatenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type KabupatenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }
  export type KabupatenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Provinsi?: boolean | ProvinsiDefaultArgs<ExtArgs>
  }

  export type $KabupatenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kabupaten"
    objects: {
      Provinsi: Prisma.$ProvinsiPayload<ExtArgs>
      Kecamatan: Prisma.$KecamatanPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      KabupatenId: string
      ProvinsiId: string
      Nama: string
    }, ExtArgs["result"]["kabupaten"]>
    composites: {}
  }

  type KabupatenGetPayload<S extends boolean | null | undefined | KabupatenDefaultArgs> = $Result.GetResult<Prisma.$KabupatenPayload, S>

  type KabupatenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<KabupatenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KabupatenCountAggregateInputType | true
    }

  export interface KabupatenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kabupaten'], meta: { name: 'Kabupaten' } }
    /**
     * Find zero or one Kabupaten that matches the filter.
     * @param {KabupatenFindUniqueArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KabupatenFindUniqueArgs>(args: SelectSubset<T, KabupatenFindUniqueArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Kabupaten that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {KabupatenFindUniqueOrThrowArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KabupatenFindUniqueOrThrowArgs>(args: SelectSubset<T, KabupatenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kabupaten that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenFindFirstArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KabupatenFindFirstArgs>(args?: SelectSubset<T, KabupatenFindFirstArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kabupaten that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenFindFirstOrThrowArgs} args - Arguments to find a Kabupaten
     * @example
     * // Get one Kabupaten
     * const kabupaten = await prisma.kabupaten.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KabupatenFindFirstOrThrowArgs>(args?: SelectSubset<T, KabupatenFindFirstOrThrowArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Kabupatens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kabupatens
     * const kabupatens = await prisma.kabupaten.findMany()
     * 
     * // Get first 10 Kabupatens
     * const kabupatens = await prisma.kabupaten.findMany({ take: 10 })
     * 
     * // Only select the `KabupatenId`
     * const kabupatenWithKabupatenIdOnly = await prisma.kabupaten.findMany({ select: { KabupatenId: true } })
     * 
     */
    findMany<T extends KabupatenFindManyArgs>(args?: SelectSubset<T, KabupatenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Kabupaten.
     * @param {KabupatenCreateArgs} args - Arguments to create a Kabupaten.
     * @example
     * // Create one Kabupaten
     * const Kabupaten = await prisma.kabupaten.create({
     *   data: {
     *     // ... data to create a Kabupaten
     *   }
     * })
     * 
     */
    create<T extends KabupatenCreateArgs>(args: SelectSubset<T, KabupatenCreateArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Kabupatens.
     * @param {KabupatenCreateManyArgs} args - Arguments to create many Kabupatens.
     * @example
     * // Create many Kabupatens
     * const kabupaten = await prisma.kabupaten.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KabupatenCreateManyArgs>(args?: SelectSubset<T, KabupatenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Kabupatens and returns the data saved in the database.
     * @param {KabupatenCreateManyAndReturnArgs} args - Arguments to create many Kabupatens.
     * @example
     * // Create many Kabupatens
     * const kabupaten = await prisma.kabupaten.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Kabupatens and only return the `KabupatenId`
     * const kabupatenWithKabupatenIdOnly = await prisma.kabupaten.createManyAndReturn({
     *   select: { KabupatenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends KabupatenCreateManyAndReturnArgs>(args?: SelectSubset<T, KabupatenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Kabupaten.
     * @param {KabupatenDeleteArgs} args - Arguments to delete one Kabupaten.
     * @example
     * // Delete one Kabupaten
     * const Kabupaten = await prisma.kabupaten.delete({
     *   where: {
     *     // ... filter to delete one Kabupaten
     *   }
     * })
     * 
     */
    delete<T extends KabupatenDeleteArgs>(args: SelectSubset<T, KabupatenDeleteArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Kabupaten.
     * @param {KabupatenUpdateArgs} args - Arguments to update one Kabupaten.
     * @example
     * // Update one Kabupaten
     * const kabupaten = await prisma.kabupaten.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KabupatenUpdateArgs>(args: SelectSubset<T, KabupatenUpdateArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Kabupatens.
     * @param {KabupatenDeleteManyArgs} args - Arguments to filter Kabupatens to delete.
     * @example
     * // Delete a few Kabupatens
     * const { count } = await prisma.kabupaten.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KabupatenDeleteManyArgs>(args?: SelectSubset<T, KabupatenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kabupatens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kabupatens
     * const kabupaten = await prisma.kabupaten.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KabupatenUpdateManyArgs>(args: SelectSubset<T, KabupatenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kabupatens and returns the data updated in the database.
     * @param {KabupatenUpdateManyAndReturnArgs} args - Arguments to update many Kabupatens.
     * @example
     * // Update many Kabupatens
     * const kabupaten = await prisma.kabupaten.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Kabupatens and only return the `KabupatenId`
     * const kabupatenWithKabupatenIdOnly = await prisma.kabupaten.updateManyAndReturn({
     *   select: { KabupatenId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends KabupatenUpdateManyAndReturnArgs>(args: SelectSubset<T, KabupatenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Kabupaten.
     * @param {KabupatenUpsertArgs} args - Arguments to update or create a Kabupaten.
     * @example
     * // Update or create a Kabupaten
     * const kabupaten = await prisma.kabupaten.upsert({
     *   create: {
     *     // ... data to create a Kabupaten
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kabupaten we want to update
     *   }
     * })
     */
    upsert<T extends KabupatenUpsertArgs>(args: SelectSubset<T, KabupatenUpsertArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Kabupatens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenCountArgs} args - Arguments to filter Kabupatens to count.
     * @example
     * // Count the number of Kabupatens
     * const count = await prisma.kabupaten.count({
     *   where: {
     *     // ... the filter for the Kabupatens we want to count
     *   }
     * })
    **/
    count<T extends KabupatenCountArgs>(
      args?: Subset<T, KabupatenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KabupatenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kabupaten.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KabupatenAggregateArgs>(args: Subset<T, KabupatenAggregateArgs>): Prisma.PrismaPromise<GetKabupatenAggregateType<T>>

    /**
     * Group by Kabupaten.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KabupatenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KabupatenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KabupatenGroupByArgs['orderBy'] }
        : { orderBy?: KabupatenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KabupatenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKabupatenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kabupaten model
   */
  readonly fields: KabupatenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kabupaten.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KabupatenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Provinsi<T extends ProvinsiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProvinsiDefaultArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Kecamatan<T extends Kabupaten$KecamatanArgs<ExtArgs> = {}>(args?: Subset<T, Kabupaten$KecamatanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kabupaten model
   */
  interface KabupatenFieldRefs {
    readonly KabupatenId: FieldRef<"Kabupaten", 'String'>
    readonly ProvinsiId: FieldRef<"Kabupaten", 'String'>
    readonly Nama: FieldRef<"Kabupaten", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Kabupaten findUnique
   */
  export type KabupatenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten findUniqueOrThrow
   */
  export type KabupatenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten findFirst
   */
  export type KabupatenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kabupatens.
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kabupatens.
     */
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Kabupaten findFirstOrThrow
   */
  export type KabupatenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupaten to fetch.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kabupatens.
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kabupatens.
     */
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Kabupaten findMany
   */
  export type KabupatenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter, which Kabupatens to fetch.
     */
    where?: KabupatenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kabupatens to fetch.
     */
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kabupatens.
     */
    cursor?: KabupatenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kabupatens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kabupatens.
     */
    skip?: number
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Kabupaten create
   */
  export type KabupatenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * The data needed to create a Kabupaten.
     */
    data: XOR<KabupatenCreateInput, KabupatenUncheckedCreateInput>
  }

  /**
   * Kabupaten createMany
   */
  export type KabupatenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kabupatens.
     */
    data: KabupatenCreateManyInput | KabupatenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kabupaten createManyAndReturn
   */
  export type KabupatenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * The data used to create many Kabupatens.
     */
    data: KabupatenCreateManyInput | KabupatenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kabupaten update
   */
  export type KabupatenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * The data needed to update a Kabupaten.
     */
    data: XOR<KabupatenUpdateInput, KabupatenUncheckedUpdateInput>
    /**
     * Choose, which Kabupaten to update.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten updateMany
   */
  export type KabupatenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kabupatens.
     */
    data: XOR<KabupatenUpdateManyMutationInput, KabupatenUncheckedUpdateManyInput>
    /**
     * Filter which Kabupatens to update
     */
    where?: KabupatenWhereInput
    /**
     * Limit how many Kabupatens to update.
     */
    limit?: number
  }

  /**
   * Kabupaten updateManyAndReturn
   */
  export type KabupatenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * The data used to update Kabupatens.
     */
    data: XOR<KabupatenUpdateManyMutationInput, KabupatenUncheckedUpdateManyInput>
    /**
     * Filter which Kabupatens to update
     */
    where?: KabupatenWhereInput
    /**
     * Limit how many Kabupatens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kabupaten upsert
   */
  export type KabupatenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * The filter to search for the Kabupaten to update in case it exists.
     */
    where: KabupatenWhereUniqueInput
    /**
     * In case the Kabupaten found by the `where` argument doesn't exist, create a new Kabupaten with this data.
     */
    create: XOR<KabupatenCreateInput, KabupatenUncheckedCreateInput>
    /**
     * In case the Kabupaten was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KabupatenUpdateInput, KabupatenUncheckedUpdateInput>
  }

  /**
   * Kabupaten delete
   */
  export type KabupatenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    /**
     * Filter which Kabupaten to delete.
     */
    where: KabupatenWhereUniqueInput
  }

  /**
   * Kabupaten deleteMany
   */
  export type KabupatenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kabupatens to delete
     */
    where?: KabupatenWhereInput
    /**
     * Limit how many Kabupatens to delete.
     */
    limit?: number
  }

  /**
   * Kabupaten.Kecamatan
   */
  export type Kabupaten$KecamatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    where?: KecamatanWhereInput
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    cursor?: KecamatanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kabupaten without action
   */
  export type KabupatenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
  }


  /**
   * Model Kecamatan
   */

  export type AggregateKecamatan = {
    _count: KecamatanCountAggregateOutputType | null
    _min: KecamatanMinAggregateOutputType | null
    _max: KecamatanMaxAggregateOutputType | null
  }

  export type KecamatanMinAggregateOutputType = {
    KecamatanId: string | null
    KabupatenId: string | null
    Nama: string | null
  }

  export type KecamatanMaxAggregateOutputType = {
    KecamatanId: string | null
    KabupatenId: string | null
    Nama: string | null
  }

  export type KecamatanCountAggregateOutputType = {
    KecamatanId: number
    KabupatenId: number
    Nama: number
    _all: number
  }


  export type KecamatanMinAggregateInputType = {
    KecamatanId?: true
    KabupatenId?: true
    Nama?: true
  }

  export type KecamatanMaxAggregateInputType = {
    KecamatanId?: true
    KabupatenId?: true
    Nama?: true
  }

  export type KecamatanCountAggregateInputType = {
    KecamatanId?: true
    KabupatenId?: true
    Nama?: true
    _all?: true
  }

  export type KecamatanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kecamatan to aggregate.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Kecamatans
    **/
    _count?: true | KecamatanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KecamatanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KecamatanMaxAggregateInputType
  }

  export type GetKecamatanAggregateType<T extends KecamatanAggregateArgs> = {
        [P in keyof T & keyof AggregateKecamatan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKecamatan[P]>
      : GetScalarType<T[P], AggregateKecamatan[P]>
  }




  export type KecamatanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KecamatanWhereInput
    orderBy?: KecamatanOrderByWithAggregationInput | KecamatanOrderByWithAggregationInput[]
    by: KecamatanScalarFieldEnum[] | KecamatanScalarFieldEnum
    having?: KecamatanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KecamatanCountAggregateInputType | true
    _min?: KecamatanMinAggregateInputType
    _max?: KecamatanMaxAggregateInputType
  }

  export type KecamatanGroupByOutputType = {
    KecamatanId: string
    KabupatenId: string
    Nama: string
    _count: KecamatanCountAggregateOutputType | null
    _min: KecamatanMinAggregateOutputType | null
    _max: KecamatanMaxAggregateOutputType | null
  }

  type GetKecamatanGroupByPayload<T extends KecamatanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KecamatanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KecamatanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KecamatanGroupByOutputType[P]>
            : GetScalarType<T[P], KecamatanGroupByOutputType[P]>
        }
      >
    >


  export type KecamatanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KecamatanId?: boolean
    KabupatenId?: boolean
    Nama?: boolean
    Kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    Desa?: boolean | Kecamatan$DesaArgs<ExtArgs>
    _count?: boolean | KecamatanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kecamatan"]>

  export type KecamatanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KecamatanId?: boolean
    KabupatenId?: boolean
    Nama?: boolean
    Kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kecamatan"]>

  export type KecamatanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KecamatanId?: boolean
    KabupatenId?: boolean
    Nama?: boolean
    Kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kecamatan"]>

  export type KecamatanSelectScalar = {
    KecamatanId?: boolean
    KabupatenId?: boolean
    Nama?: boolean
  }

  export type KecamatanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"KecamatanId" | "KabupatenId" | "Nama", ExtArgs["result"]["kecamatan"]>
  export type KecamatanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
    Desa?: boolean | Kecamatan$DesaArgs<ExtArgs>
    _count?: boolean | KecamatanCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type KecamatanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }
  export type KecamatanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Kabupaten?: boolean | KabupatenDefaultArgs<ExtArgs>
  }

  export type $KecamatanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Kecamatan"
    objects: {
      Kabupaten: Prisma.$KabupatenPayload<ExtArgs>
      Desa: Prisma.$DesaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      KecamatanId: string
      KabupatenId: string
      Nama: string
    }, ExtArgs["result"]["kecamatan"]>
    composites: {}
  }

  type KecamatanGetPayload<S extends boolean | null | undefined | KecamatanDefaultArgs> = $Result.GetResult<Prisma.$KecamatanPayload, S>

  type KecamatanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<KecamatanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: KecamatanCountAggregateInputType | true
    }

  export interface KecamatanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Kecamatan'], meta: { name: 'Kecamatan' } }
    /**
     * Find zero or one Kecamatan that matches the filter.
     * @param {KecamatanFindUniqueArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KecamatanFindUniqueArgs>(args: SelectSubset<T, KecamatanFindUniqueArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Kecamatan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {KecamatanFindUniqueOrThrowArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KecamatanFindUniqueOrThrowArgs>(args: SelectSubset<T, KecamatanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kecamatan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanFindFirstArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KecamatanFindFirstArgs>(args?: SelectSubset<T, KecamatanFindFirstArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Kecamatan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanFindFirstOrThrowArgs} args - Arguments to find a Kecamatan
     * @example
     * // Get one Kecamatan
     * const kecamatan = await prisma.kecamatan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KecamatanFindFirstOrThrowArgs>(args?: SelectSubset<T, KecamatanFindFirstOrThrowArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Kecamatans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Kecamatans
     * const kecamatans = await prisma.kecamatan.findMany()
     * 
     * // Get first 10 Kecamatans
     * const kecamatans = await prisma.kecamatan.findMany({ take: 10 })
     * 
     * // Only select the `KecamatanId`
     * const kecamatanWithKecamatanIdOnly = await prisma.kecamatan.findMany({ select: { KecamatanId: true } })
     * 
     */
    findMany<T extends KecamatanFindManyArgs>(args?: SelectSubset<T, KecamatanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Kecamatan.
     * @param {KecamatanCreateArgs} args - Arguments to create a Kecamatan.
     * @example
     * // Create one Kecamatan
     * const Kecamatan = await prisma.kecamatan.create({
     *   data: {
     *     // ... data to create a Kecamatan
     *   }
     * })
     * 
     */
    create<T extends KecamatanCreateArgs>(args: SelectSubset<T, KecamatanCreateArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Kecamatans.
     * @param {KecamatanCreateManyArgs} args - Arguments to create many Kecamatans.
     * @example
     * // Create many Kecamatans
     * const kecamatan = await prisma.kecamatan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KecamatanCreateManyArgs>(args?: SelectSubset<T, KecamatanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Kecamatans and returns the data saved in the database.
     * @param {KecamatanCreateManyAndReturnArgs} args - Arguments to create many Kecamatans.
     * @example
     * // Create many Kecamatans
     * const kecamatan = await prisma.kecamatan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Kecamatans and only return the `KecamatanId`
     * const kecamatanWithKecamatanIdOnly = await prisma.kecamatan.createManyAndReturn({
     *   select: { KecamatanId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends KecamatanCreateManyAndReturnArgs>(args?: SelectSubset<T, KecamatanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Kecamatan.
     * @param {KecamatanDeleteArgs} args - Arguments to delete one Kecamatan.
     * @example
     * // Delete one Kecamatan
     * const Kecamatan = await prisma.kecamatan.delete({
     *   where: {
     *     // ... filter to delete one Kecamatan
     *   }
     * })
     * 
     */
    delete<T extends KecamatanDeleteArgs>(args: SelectSubset<T, KecamatanDeleteArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Kecamatan.
     * @param {KecamatanUpdateArgs} args - Arguments to update one Kecamatan.
     * @example
     * // Update one Kecamatan
     * const kecamatan = await prisma.kecamatan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KecamatanUpdateArgs>(args: SelectSubset<T, KecamatanUpdateArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Kecamatans.
     * @param {KecamatanDeleteManyArgs} args - Arguments to filter Kecamatans to delete.
     * @example
     * // Delete a few Kecamatans
     * const { count } = await prisma.kecamatan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KecamatanDeleteManyArgs>(args?: SelectSubset<T, KecamatanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kecamatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Kecamatans
     * const kecamatan = await prisma.kecamatan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KecamatanUpdateManyArgs>(args: SelectSubset<T, KecamatanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Kecamatans and returns the data updated in the database.
     * @param {KecamatanUpdateManyAndReturnArgs} args - Arguments to update many Kecamatans.
     * @example
     * // Update many Kecamatans
     * const kecamatan = await prisma.kecamatan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Kecamatans and only return the `KecamatanId`
     * const kecamatanWithKecamatanIdOnly = await prisma.kecamatan.updateManyAndReturn({
     *   select: { KecamatanId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends KecamatanUpdateManyAndReturnArgs>(args: SelectSubset<T, KecamatanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Kecamatan.
     * @param {KecamatanUpsertArgs} args - Arguments to update or create a Kecamatan.
     * @example
     * // Update or create a Kecamatan
     * const kecamatan = await prisma.kecamatan.upsert({
     *   create: {
     *     // ... data to create a Kecamatan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Kecamatan we want to update
     *   }
     * })
     */
    upsert<T extends KecamatanUpsertArgs>(args: SelectSubset<T, KecamatanUpsertArgs<ExtArgs>>): Prisma__KecamatanClient<$Result.GetResult<Prisma.$KecamatanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Kecamatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanCountArgs} args - Arguments to filter Kecamatans to count.
     * @example
     * // Count the number of Kecamatans
     * const count = await prisma.kecamatan.count({
     *   where: {
     *     // ... the filter for the Kecamatans we want to count
     *   }
     * })
    **/
    count<T extends KecamatanCountArgs>(
      args?: Subset<T, KecamatanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KecamatanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Kecamatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KecamatanAggregateArgs>(args: Subset<T, KecamatanAggregateArgs>): Prisma.PrismaPromise<GetKecamatanAggregateType<T>>

    /**
     * Group by Kecamatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KecamatanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KecamatanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KecamatanGroupByArgs['orderBy'] }
        : { orderBy?: KecamatanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KecamatanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKecamatanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Kecamatan model
   */
  readonly fields: KecamatanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Kecamatan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KecamatanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Kabupaten<T extends KabupatenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, KabupatenDefaultArgs<ExtArgs>>): Prisma__KabupatenClient<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Desa<T extends Kecamatan$DesaArgs<ExtArgs> = {}>(args?: Subset<T, Kecamatan$DesaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DesaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Kecamatan model
   */
  interface KecamatanFieldRefs {
    readonly KecamatanId: FieldRef<"Kecamatan", 'String'>
    readonly KabupatenId: FieldRef<"Kecamatan", 'String'>
    readonly Nama: FieldRef<"Kecamatan", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Kecamatan findUnique
   */
  export type KecamatanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan findUniqueOrThrow
   */
  export type KecamatanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan findFirst
   */
  export type KecamatanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kecamatans.
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kecamatans.
     */
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kecamatan findFirstOrThrow
   */
  export type KecamatanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatan to fetch.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Kecamatans.
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Kecamatans.
     */
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kecamatan findMany
   */
  export type KecamatanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter, which Kecamatans to fetch.
     */
    where?: KecamatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Kecamatans to fetch.
     */
    orderBy?: KecamatanOrderByWithRelationInput | KecamatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Kecamatans.
     */
    cursor?: KecamatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Kecamatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Kecamatans.
     */
    skip?: number
    distinct?: KecamatanScalarFieldEnum | KecamatanScalarFieldEnum[]
  }

  /**
   * Kecamatan create
   */
  export type KecamatanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * The data needed to create a Kecamatan.
     */
    data: XOR<KecamatanCreateInput, KecamatanUncheckedCreateInput>
  }

  /**
   * Kecamatan createMany
   */
  export type KecamatanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Kecamatans.
     */
    data: KecamatanCreateManyInput | KecamatanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Kecamatan createManyAndReturn
   */
  export type KecamatanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * The data used to create many Kecamatans.
     */
    data: KecamatanCreateManyInput | KecamatanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kecamatan update
   */
  export type KecamatanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * The data needed to update a Kecamatan.
     */
    data: XOR<KecamatanUpdateInput, KecamatanUncheckedUpdateInput>
    /**
     * Choose, which Kecamatan to update.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan updateMany
   */
  export type KecamatanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Kecamatans.
     */
    data: XOR<KecamatanUpdateManyMutationInput, KecamatanUncheckedUpdateManyInput>
    /**
     * Filter which Kecamatans to update
     */
    where?: KecamatanWhereInput
    /**
     * Limit how many Kecamatans to update.
     */
    limit?: number
  }

  /**
   * Kecamatan updateManyAndReturn
   */
  export type KecamatanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * The data used to update Kecamatans.
     */
    data: XOR<KecamatanUpdateManyMutationInput, KecamatanUncheckedUpdateManyInput>
    /**
     * Filter which Kecamatans to update
     */
    where?: KecamatanWhereInput
    /**
     * Limit how many Kecamatans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Kecamatan upsert
   */
  export type KecamatanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * The filter to search for the Kecamatan to update in case it exists.
     */
    where: KecamatanWhereUniqueInput
    /**
     * In case the Kecamatan found by the `where` argument doesn't exist, create a new Kecamatan with this data.
     */
    create: XOR<KecamatanCreateInput, KecamatanUncheckedCreateInput>
    /**
     * In case the Kecamatan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KecamatanUpdateInput, KecamatanUncheckedUpdateInput>
  }

  /**
   * Kecamatan delete
   */
  export type KecamatanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
    /**
     * Filter which Kecamatan to delete.
     */
    where: KecamatanWhereUniqueInput
  }

  /**
   * Kecamatan deleteMany
   */
  export type KecamatanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Kecamatans to delete
     */
    where?: KecamatanWhereInput
    /**
     * Limit how many Kecamatans to delete.
     */
    limit?: number
  }

  /**
   * Kecamatan.Desa
   */
  export type Kecamatan$DesaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Desa
     */
    select?: DesaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Desa
     */
    omit?: DesaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DesaInclude<ExtArgs> | null
    where?: DesaWhereInput
    orderBy?: DesaOrderByWithRelationInput | DesaOrderByWithRelationInput[]
    cursor?: DesaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DesaScalarFieldEnum | DesaScalarFieldEnum[]
  }

  /**
   * Kecamatan without action
   */
  export type KecamatanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kecamatan
     */
    select?: KecamatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kecamatan
     */
    omit?: KecamatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KecamatanInclude<ExtArgs> | null
  }


  /**
   * Model Mahasiswa
   */

  export type AggregateMahasiswa = {
    _count: MahasiswaCountAggregateOutputType | null
    _min: MahasiswaMinAggregateOutputType | null
    _max: MahasiswaMaxAggregateOutputType | null
  }

  export type MahasiswaMinAggregateOutputType = {
    MahasiswaId: string | null
    UserId: string | null
    StatusPerkawinan: $Enums.StatusPerkawinan | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaMaxAggregateOutputType = {
    MahasiswaId: string | null
    UserId: string | null
    StatusPerkawinan: $Enums.StatusPerkawinan | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaCountAggregateOutputType = {
    MahasiswaId: number
    UserId: number
    StatusPerkawinan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaMinAggregateInputType = {
    MahasiswaId?: true
    UserId?: true
    StatusPerkawinan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaMaxAggregateInputType = {
    MahasiswaId?: true
    UserId?: true
    StatusPerkawinan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaCountAggregateInputType = {
    MahasiswaId?: true
    UserId?: true
    StatusPerkawinan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mahasiswa to aggregate.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mahasiswas
    **/
    _count?: true | MahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaMaxAggregateInputType
  }

  export type GetMahasiswaAggregateType<T extends MahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswa[P]>
      : GetScalarType<T[P], AggregateMahasiswa[P]>
  }




  export type MahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaWhereInput
    orderBy?: MahasiswaOrderByWithAggregationInput | MahasiswaOrderByWithAggregationInput[]
    by: MahasiswaScalarFieldEnum[] | MahasiswaScalarFieldEnum
    having?: MahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaCountAggregateInputType | true
    _min?: MahasiswaMinAggregateInputType
    _max?: MahasiswaMaxAggregateInputType
  }

  export type MahasiswaGroupByOutputType = {
    MahasiswaId: string
    UserId: string
    StatusPerkawinan: $Enums.StatusPerkawinan
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaCountAggregateOutputType | null
    _min: MahasiswaMinAggregateOutputType | null
    _max: MahasiswaMaxAggregateOutputType | null
  }

  type GetMahasiswaGroupByPayload<T extends MahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaId?: boolean
    UserId?: boolean
    StatusPerkawinan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | Mahasiswa$PendaftaranArgs<ExtArgs>
    _count?: boolean | MahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswa"]>

  export type MahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaId?: boolean
    UserId?: boolean
    StatusPerkawinan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswa"]>

  export type MahasiswaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaId?: boolean
    UserId?: boolean
    StatusPerkawinan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswa"]>

  export type MahasiswaSelectScalar = {
    MahasiswaId?: boolean
    UserId?: boolean
    StatusPerkawinan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaId" | "UserId" | "StatusPerkawinan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswa"]>
  export type MahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | Mahasiswa$PendaftaranArgs<ExtArgs>
    _count?: boolean | MahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MahasiswaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mahasiswa"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaId: string
      UserId: string
      StatusPerkawinan: $Enums.StatusPerkawinan
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswa"]>
    composites: {}
  }

  type MahasiswaGetPayload<S extends boolean | null | undefined | MahasiswaDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaPayload, S>

  type MahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaCountAggregateInputType | true
    }

  export interface MahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mahasiswa'], meta: { name: 'Mahasiswa' } }
    /**
     * Find zero or one Mahasiswa that matches the filter.
     * @param {MahasiswaFindUniqueArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaFindUniqueArgs>(args: SelectSubset<T, MahasiswaFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mahasiswa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaFindUniqueOrThrowArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaFindFirstArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaFindFirstArgs>(args?: SelectSubset<T, MahasiswaFindFirstArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaFindFirstOrThrowArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mahasiswas
     * const mahasiswas = await prisma.mahasiswa.findMany()
     * 
     * // Get first 10 Mahasiswas
     * const mahasiswas = await prisma.mahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaId`
     * const mahasiswaWithMahasiswaIdOnly = await prisma.mahasiswa.findMany({ select: { MahasiswaId: true } })
     * 
     */
    findMany<T extends MahasiswaFindManyArgs>(args?: SelectSubset<T, MahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mahasiswa.
     * @param {MahasiswaCreateArgs} args - Arguments to create a Mahasiswa.
     * @example
     * // Create one Mahasiswa
     * const Mahasiswa = await prisma.mahasiswa.create({
     *   data: {
     *     // ... data to create a Mahasiswa
     *   }
     * })
     * 
     */
    create<T extends MahasiswaCreateArgs>(args: SelectSubset<T, MahasiswaCreateArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mahasiswas.
     * @param {MahasiswaCreateManyArgs} args - Arguments to create many Mahasiswas.
     * @example
     * // Create many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaCreateManyArgs>(args?: SelectSubset<T, MahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mahasiswas and returns the data saved in the database.
     * @param {MahasiswaCreateManyAndReturnArgs} args - Arguments to create many Mahasiswas.
     * @example
     * // Create many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mahasiswas and only return the `MahasiswaId`
     * const mahasiswaWithMahasiswaIdOnly = await prisma.mahasiswa.createManyAndReturn({
     *   select: { MahasiswaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mahasiswa.
     * @param {MahasiswaDeleteArgs} args - Arguments to delete one Mahasiswa.
     * @example
     * // Delete one Mahasiswa
     * const Mahasiswa = await prisma.mahasiswa.delete({
     *   where: {
     *     // ... filter to delete one Mahasiswa
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaDeleteArgs>(args: SelectSubset<T, MahasiswaDeleteArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mahasiswa.
     * @param {MahasiswaUpdateArgs} args - Arguments to update one Mahasiswa.
     * @example
     * // Update one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaUpdateArgs>(args: SelectSubset<T, MahasiswaUpdateArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mahasiswas.
     * @param {MahasiswaDeleteManyArgs} args - Arguments to filter Mahasiswas to delete.
     * @example
     * // Delete a few Mahasiswas
     * const { count } = await prisma.mahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaDeleteManyArgs>(args?: SelectSubset<T, MahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaUpdateManyArgs>(args: SelectSubset<T, MahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mahasiswas and returns the data updated in the database.
     * @param {MahasiswaUpdateManyAndReturnArgs} args - Arguments to update many Mahasiswas.
     * @example
     * // Update many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mahasiswas and only return the `MahasiswaId`
     * const mahasiswaWithMahasiswaIdOnly = await prisma.mahasiswa.updateManyAndReturn({
     *   select: { MahasiswaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mahasiswa.
     * @param {MahasiswaUpsertArgs} args - Arguments to update or create a Mahasiswa.
     * @example
     * // Update or create a Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.upsert({
     *   create: {
     *     // ... data to create a Mahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaUpsertArgs>(args: SelectSubset<T, MahasiswaUpsertArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaCountArgs} args - Arguments to filter Mahasiswas to count.
     * @example
     * // Count the number of Mahasiswas
     * const count = await prisma.mahasiswa.count({
     *   where: {
     *     // ... the filter for the Mahasiswas we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaCountArgs>(
      args?: Subset<T, MahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaAggregateArgs>(args: Subset<T, MahasiswaAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaAggregateType<T>>

    /**
     * Group by Mahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mahasiswa model
   */
  readonly fields: MahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Pendaftaran<T extends Mahasiswa$PendaftaranArgs<ExtArgs> = {}>(args?: Subset<T, Mahasiswa$PendaftaranArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mahasiswa model
   */
  interface MahasiswaFieldRefs {
    readonly MahasiswaId: FieldRef<"Mahasiswa", 'String'>
    readonly UserId: FieldRef<"Mahasiswa", 'String'>
    readonly StatusPerkawinan: FieldRef<"Mahasiswa", 'StatusPerkawinan'>
    readonly CreatedAt: FieldRef<"Mahasiswa", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Mahasiswa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Mahasiswa findUnique
   */
  export type MahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa findUniqueOrThrow
   */
  export type MahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa findFirst
   */
  export type MahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mahasiswas.
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mahasiswas.
     */
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa findFirstOrThrow
   */
  export type MahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mahasiswas.
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mahasiswas.
     */
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa findMany
   */
  export type MahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswas to fetch.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mahasiswas.
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa create
   */
  export type MahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a Mahasiswa.
     */
    data: XOR<MahasiswaCreateInput, MahasiswaUncheckedCreateInput>
  }

  /**
   * Mahasiswa createMany
   */
  export type MahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mahasiswas.
     */
    data: MahasiswaCreateManyInput | MahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mahasiswa createManyAndReturn
   */
  export type MahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * The data used to create many Mahasiswas.
     */
    data: MahasiswaCreateManyInput | MahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mahasiswa update
   */
  export type MahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a Mahasiswa.
     */
    data: XOR<MahasiswaUpdateInput, MahasiswaUncheckedUpdateInput>
    /**
     * Choose, which Mahasiswa to update.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa updateMany
   */
  export type MahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mahasiswas.
     */
    data: XOR<MahasiswaUpdateManyMutationInput, MahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which Mahasiswas to update
     */
    where?: MahasiswaWhereInput
    /**
     * Limit how many Mahasiswas to update.
     */
    limit?: number
  }

  /**
   * Mahasiswa updateManyAndReturn
   */
  export type MahasiswaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * The data used to update Mahasiswas.
     */
    data: XOR<MahasiswaUpdateManyMutationInput, MahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which Mahasiswas to update
     */
    where?: MahasiswaWhereInput
    /**
     * Limit how many Mahasiswas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mahasiswa upsert
   */
  export type MahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the Mahasiswa to update in case it exists.
     */
    where: MahasiswaWhereUniqueInput
    /**
     * In case the Mahasiswa found by the `where` argument doesn't exist, create a new Mahasiswa with this data.
     */
    create: XOR<MahasiswaCreateInput, MahasiswaUncheckedCreateInput>
    /**
     * In case the Mahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaUpdateInput, MahasiswaUncheckedUpdateInput>
  }

  /**
   * Mahasiswa delete
   */
  export type MahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter which Mahasiswa to delete.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa deleteMany
   */
  export type MahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mahasiswas to delete
     */
    where?: MahasiswaWhereInput
    /**
     * Limit how many Mahasiswas to delete.
     */
    limit?: number
  }

  /**
   * Mahasiswa.Pendaftaran
   */
  export type Mahasiswa$PendaftaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    where?: PendaftaranWhereInput
    orderBy?: PendaftaranOrderByWithRelationInput | PendaftaranOrderByWithRelationInput[]
    cursor?: PendaftaranWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PendaftaranScalarFieldEnum | PendaftaranScalarFieldEnum[]
  }

  /**
   * Mahasiswa without action
   */
  export type MahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model MahasiswaKonferensi
   */

  export type AggregateMahasiswaKonferensi = {
    _count: MahasiswaKonferensiCountAggregateOutputType | null
    _avg: MahasiswaKonferensiAvgAggregateOutputType | null
    _sum: MahasiswaKonferensiSumAggregateOutputType | null
    _min: MahasiswaKonferensiMinAggregateOutputType | null
    _max: MahasiswaKonferensiMaxAggregateOutputType | null
  }

  export type MahasiswaKonferensiAvgAggregateOutputType = {
    Tahun: number | null
  }

  export type MahasiswaKonferensiSumAggregateOutputType = {
    Tahun: number | null
  }

  export type MahasiswaKonferensiMinAggregateOutputType = {
    MahasiswaKonferensiId: string | null
    PendaftaranId: string | null
    Tahun: number | null
    JudulSeminar: string | null
    Penyelenggara: string | null
    StatusKeikutsertaan: $Enums.StatusKeikutsertaan | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaKonferensiMaxAggregateOutputType = {
    MahasiswaKonferensiId: string | null
    PendaftaranId: string | null
    Tahun: number | null
    JudulSeminar: string | null
    Penyelenggara: string | null
    StatusKeikutsertaan: $Enums.StatusKeikutsertaan | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaKonferensiCountAggregateOutputType = {
    MahasiswaKonferensiId: number
    PendaftaranId: number
    Tahun: number
    JudulSeminar: number
    Penyelenggara: number
    StatusKeikutsertaan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaKonferensiAvgAggregateInputType = {
    Tahun?: true
  }

  export type MahasiswaKonferensiSumAggregateInputType = {
    Tahun?: true
  }

  export type MahasiswaKonferensiMinAggregateInputType = {
    MahasiswaKonferensiId?: true
    PendaftaranId?: true
    Tahun?: true
    JudulSeminar?: true
    Penyelenggara?: true
    StatusKeikutsertaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaKonferensiMaxAggregateInputType = {
    MahasiswaKonferensiId?: true
    PendaftaranId?: true
    Tahun?: true
    JudulSeminar?: true
    Penyelenggara?: true
    StatusKeikutsertaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaKonferensiCountAggregateInputType = {
    MahasiswaKonferensiId?: true
    PendaftaranId?: true
    Tahun?: true
    JudulSeminar?: true
    Penyelenggara?: true
    StatusKeikutsertaan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaKonferensiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaKonferensi to aggregate.
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaKonferensis to fetch.
     */
    orderBy?: MahasiswaKonferensiOrderByWithRelationInput | MahasiswaKonferensiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaKonferensiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaKonferensis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaKonferensis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MahasiswaKonferensis
    **/
    _count?: true | MahasiswaKonferensiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MahasiswaKonferensiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MahasiswaKonferensiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaKonferensiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaKonferensiMaxAggregateInputType
  }

  export type GetMahasiswaKonferensiAggregateType<T extends MahasiswaKonferensiAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswaKonferensi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswaKonferensi[P]>
      : GetScalarType<T[P], AggregateMahasiswaKonferensi[P]>
  }




  export type MahasiswaKonferensiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaKonferensiWhereInput
    orderBy?: MahasiswaKonferensiOrderByWithAggregationInput | MahasiswaKonferensiOrderByWithAggregationInput[]
    by: MahasiswaKonferensiScalarFieldEnum[] | MahasiswaKonferensiScalarFieldEnum
    having?: MahasiswaKonferensiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaKonferensiCountAggregateInputType | true
    _avg?: MahasiswaKonferensiAvgAggregateInputType
    _sum?: MahasiswaKonferensiSumAggregateInputType
    _min?: MahasiswaKonferensiMinAggregateInputType
    _max?: MahasiswaKonferensiMaxAggregateInputType
  }

  export type MahasiswaKonferensiGroupByOutputType = {
    MahasiswaKonferensiId: string
    PendaftaranId: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan: $Enums.StatusKeikutsertaan
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaKonferensiCountAggregateOutputType | null
    _avg: MahasiswaKonferensiAvgAggregateOutputType | null
    _sum: MahasiswaKonferensiSumAggregateOutputType | null
    _min: MahasiswaKonferensiMinAggregateOutputType | null
    _max: MahasiswaKonferensiMaxAggregateOutputType | null
  }

  type GetMahasiswaKonferensiGroupByPayload<T extends MahasiswaKonferensiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaKonferensiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaKonferensiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaKonferensiGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaKonferensiGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaKonferensiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaKonferensiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    JudulSeminar?: boolean
    Penyelenggara?: boolean
    StatusKeikutsertaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaKonferensi"]>

  export type MahasiswaKonferensiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaKonferensiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    JudulSeminar?: boolean
    Penyelenggara?: boolean
    StatusKeikutsertaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaKonferensi"]>

  export type MahasiswaKonferensiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaKonferensiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    JudulSeminar?: boolean
    Penyelenggara?: boolean
    StatusKeikutsertaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaKonferensi"]>

  export type MahasiswaKonferensiSelectScalar = {
    MahasiswaKonferensiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    JudulSeminar?: boolean
    Penyelenggara?: boolean
    StatusKeikutsertaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaKonferensiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaKonferensiId" | "PendaftaranId" | "Tahun" | "JudulSeminar" | "Penyelenggara" | "StatusKeikutsertaan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswaKonferensi"]>
  export type MahasiswaKonferensiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaKonferensiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaKonferensiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $MahasiswaKonferensiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MahasiswaKonferensi"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaKonferensiId: string
      PendaftaranId: string
      Tahun: number
      JudulSeminar: string
      Penyelenggara: string
      StatusKeikutsertaan: $Enums.StatusKeikutsertaan
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswaKonferensi"]>
    composites: {}
  }

  type MahasiswaKonferensiGetPayload<S extends boolean | null | undefined | MahasiswaKonferensiDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaKonferensiPayload, S>

  type MahasiswaKonferensiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaKonferensiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaKonferensiCountAggregateInputType | true
    }

  export interface MahasiswaKonferensiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MahasiswaKonferensi'], meta: { name: 'MahasiswaKonferensi' } }
    /**
     * Find zero or one MahasiswaKonferensi that matches the filter.
     * @param {MahasiswaKonferensiFindUniqueArgs} args - Arguments to find a MahasiswaKonferensi
     * @example
     * // Get one MahasiswaKonferensi
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaKonferensiFindUniqueArgs>(args: SelectSubset<T, MahasiswaKonferensiFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MahasiswaKonferensi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaKonferensiFindUniqueOrThrowArgs} args - Arguments to find a MahasiswaKonferensi
     * @example
     * // Get one MahasiswaKonferensi
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaKonferensiFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaKonferensiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaKonferensi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiFindFirstArgs} args - Arguments to find a MahasiswaKonferensi
     * @example
     * // Get one MahasiswaKonferensi
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaKonferensiFindFirstArgs>(args?: SelectSubset<T, MahasiswaKonferensiFindFirstArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaKonferensi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiFindFirstOrThrowArgs} args - Arguments to find a MahasiswaKonferensi
     * @example
     * // Get one MahasiswaKonferensi
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaKonferensiFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaKonferensiFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MahasiswaKonferensis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MahasiswaKonferensis
     * const mahasiswaKonferensis = await prisma.mahasiswaKonferensi.findMany()
     * 
     * // Get first 10 MahasiswaKonferensis
     * const mahasiswaKonferensis = await prisma.mahasiswaKonferensi.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaKonferensiId`
     * const mahasiswaKonferensiWithMahasiswaKonferensiIdOnly = await prisma.mahasiswaKonferensi.findMany({ select: { MahasiswaKonferensiId: true } })
     * 
     */
    findMany<T extends MahasiswaKonferensiFindManyArgs>(args?: SelectSubset<T, MahasiswaKonferensiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MahasiswaKonferensi.
     * @param {MahasiswaKonferensiCreateArgs} args - Arguments to create a MahasiswaKonferensi.
     * @example
     * // Create one MahasiswaKonferensi
     * const MahasiswaKonferensi = await prisma.mahasiswaKonferensi.create({
     *   data: {
     *     // ... data to create a MahasiswaKonferensi
     *   }
     * })
     * 
     */
    create<T extends MahasiswaKonferensiCreateArgs>(args: SelectSubset<T, MahasiswaKonferensiCreateArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MahasiswaKonferensis.
     * @param {MahasiswaKonferensiCreateManyArgs} args - Arguments to create many MahasiswaKonferensis.
     * @example
     * // Create many MahasiswaKonferensis
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaKonferensiCreateManyArgs>(args?: SelectSubset<T, MahasiswaKonferensiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MahasiswaKonferensis and returns the data saved in the database.
     * @param {MahasiswaKonferensiCreateManyAndReturnArgs} args - Arguments to create many MahasiswaKonferensis.
     * @example
     * // Create many MahasiswaKonferensis
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MahasiswaKonferensis and only return the `MahasiswaKonferensiId`
     * const mahasiswaKonferensiWithMahasiswaKonferensiIdOnly = await prisma.mahasiswaKonferensi.createManyAndReturn({
     *   select: { MahasiswaKonferensiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaKonferensiCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaKonferensiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MahasiswaKonferensi.
     * @param {MahasiswaKonferensiDeleteArgs} args - Arguments to delete one MahasiswaKonferensi.
     * @example
     * // Delete one MahasiswaKonferensi
     * const MahasiswaKonferensi = await prisma.mahasiswaKonferensi.delete({
     *   where: {
     *     // ... filter to delete one MahasiswaKonferensi
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaKonferensiDeleteArgs>(args: SelectSubset<T, MahasiswaKonferensiDeleteArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MahasiswaKonferensi.
     * @param {MahasiswaKonferensiUpdateArgs} args - Arguments to update one MahasiswaKonferensi.
     * @example
     * // Update one MahasiswaKonferensi
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaKonferensiUpdateArgs>(args: SelectSubset<T, MahasiswaKonferensiUpdateArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MahasiswaKonferensis.
     * @param {MahasiswaKonferensiDeleteManyArgs} args - Arguments to filter MahasiswaKonferensis to delete.
     * @example
     * // Delete a few MahasiswaKonferensis
     * const { count } = await prisma.mahasiswaKonferensi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaKonferensiDeleteManyArgs>(args?: SelectSubset<T, MahasiswaKonferensiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaKonferensis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MahasiswaKonferensis
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaKonferensiUpdateManyArgs>(args: SelectSubset<T, MahasiswaKonferensiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaKonferensis and returns the data updated in the database.
     * @param {MahasiswaKonferensiUpdateManyAndReturnArgs} args - Arguments to update many MahasiswaKonferensis.
     * @example
     * // Update many MahasiswaKonferensis
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MahasiswaKonferensis and only return the `MahasiswaKonferensiId`
     * const mahasiswaKonferensiWithMahasiswaKonferensiIdOnly = await prisma.mahasiswaKonferensi.updateManyAndReturn({
     *   select: { MahasiswaKonferensiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaKonferensiUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaKonferensiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MahasiswaKonferensi.
     * @param {MahasiswaKonferensiUpsertArgs} args - Arguments to update or create a MahasiswaKonferensi.
     * @example
     * // Update or create a MahasiswaKonferensi
     * const mahasiswaKonferensi = await prisma.mahasiswaKonferensi.upsert({
     *   create: {
     *     // ... data to create a MahasiswaKonferensi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MahasiswaKonferensi we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaKonferensiUpsertArgs>(args: SelectSubset<T, MahasiswaKonferensiUpsertArgs<ExtArgs>>): Prisma__MahasiswaKonferensiClient<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MahasiswaKonferensis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiCountArgs} args - Arguments to filter MahasiswaKonferensis to count.
     * @example
     * // Count the number of MahasiswaKonferensis
     * const count = await prisma.mahasiswaKonferensi.count({
     *   where: {
     *     // ... the filter for the MahasiswaKonferensis we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaKonferensiCountArgs>(
      args?: Subset<T, MahasiswaKonferensiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaKonferensiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MahasiswaKonferensi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaKonferensiAggregateArgs>(args: Subset<T, MahasiswaKonferensiAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaKonferensiAggregateType<T>>

    /**
     * Group by MahasiswaKonferensi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaKonferensiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaKonferensiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaKonferensiGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaKonferensiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaKonferensiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaKonferensiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MahasiswaKonferensi model
   */
  readonly fields: MahasiswaKonferensiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MahasiswaKonferensi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaKonferensiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MahasiswaKonferensi model
   */
  interface MahasiswaKonferensiFieldRefs {
    readonly MahasiswaKonferensiId: FieldRef<"MahasiswaKonferensi", 'String'>
    readonly PendaftaranId: FieldRef<"MahasiswaKonferensi", 'String'>
    readonly Tahun: FieldRef<"MahasiswaKonferensi", 'Int'>
    readonly JudulSeminar: FieldRef<"MahasiswaKonferensi", 'String'>
    readonly Penyelenggara: FieldRef<"MahasiswaKonferensi", 'String'>
    readonly StatusKeikutsertaan: FieldRef<"MahasiswaKonferensi", 'StatusKeikutsertaan'>
    readonly CreatedAt: FieldRef<"MahasiswaKonferensi", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MahasiswaKonferensi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MahasiswaKonferensi findUnique
   */
  export type MahasiswaKonferensiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaKonferensi to fetch.
     */
    where: MahasiswaKonferensiWhereUniqueInput
  }

  /**
   * MahasiswaKonferensi findUniqueOrThrow
   */
  export type MahasiswaKonferensiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaKonferensi to fetch.
     */
    where: MahasiswaKonferensiWhereUniqueInput
  }

  /**
   * MahasiswaKonferensi findFirst
   */
  export type MahasiswaKonferensiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaKonferensi to fetch.
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaKonferensis to fetch.
     */
    orderBy?: MahasiswaKonferensiOrderByWithRelationInput | MahasiswaKonferensiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaKonferensis.
     */
    cursor?: MahasiswaKonferensiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaKonferensis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaKonferensis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaKonferensis.
     */
    distinct?: MahasiswaKonferensiScalarFieldEnum | MahasiswaKonferensiScalarFieldEnum[]
  }

  /**
   * MahasiswaKonferensi findFirstOrThrow
   */
  export type MahasiswaKonferensiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaKonferensi to fetch.
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaKonferensis to fetch.
     */
    orderBy?: MahasiswaKonferensiOrderByWithRelationInput | MahasiswaKonferensiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaKonferensis.
     */
    cursor?: MahasiswaKonferensiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaKonferensis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaKonferensis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaKonferensis.
     */
    distinct?: MahasiswaKonferensiScalarFieldEnum | MahasiswaKonferensiScalarFieldEnum[]
  }

  /**
   * MahasiswaKonferensi findMany
   */
  export type MahasiswaKonferensiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaKonferensis to fetch.
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaKonferensis to fetch.
     */
    orderBy?: MahasiswaKonferensiOrderByWithRelationInput | MahasiswaKonferensiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MahasiswaKonferensis.
     */
    cursor?: MahasiswaKonferensiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaKonferensis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaKonferensis.
     */
    skip?: number
    distinct?: MahasiswaKonferensiScalarFieldEnum | MahasiswaKonferensiScalarFieldEnum[]
  }

  /**
   * MahasiswaKonferensi create
   */
  export type MahasiswaKonferensiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * The data needed to create a MahasiswaKonferensi.
     */
    data: XOR<MahasiswaKonferensiCreateInput, MahasiswaKonferensiUncheckedCreateInput>
  }

  /**
   * MahasiswaKonferensi createMany
   */
  export type MahasiswaKonferensiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MahasiswaKonferensis.
     */
    data: MahasiswaKonferensiCreateManyInput | MahasiswaKonferensiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MahasiswaKonferensi createManyAndReturn
   */
  export type MahasiswaKonferensiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * The data used to create many MahasiswaKonferensis.
     */
    data: MahasiswaKonferensiCreateManyInput | MahasiswaKonferensiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaKonferensi update
   */
  export type MahasiswaKonferensiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * The data needed to update a MahasiswaKonferensi.
     */
    data: XOR<MahasiswaKonferensiUpdateInput, MahasiswaKonferensiUncheckedUpdateInput>
    /**
     * Choose, which MahasiswaKonferensi to update.
     */
    where: MahasiswaKonferensiWhereUniqueInput
  }

  /**
   * MahasiswaKonferensi updateMany
   */
  export type MahasiswaKonferensiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MahasiswaKonferensis.
     */
    data: XOR<MahasiswaKonferensiUpdateManyMutationInput, MahasiswaKonferensiUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaKonferensis to update
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * Limit how many MahasiswaKonferensis to update.
     */
    limit?: number
  }

  /**
   * MahasiswaKonferensi updateManyAndReturn
   */
  export type MahasiswaKonferensiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * The data used to update MahasiswaKonferensis.
     */
    data: XOR<MahasiswaKonferensiUpdateManyMutationInput, MahasiswaKonferensiUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaKonferensis to update
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * Limit how many MahasiswaKonferensis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaKonferensi upsert
   */
  export type MahasiswaKonferensiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * The filter to search for the MahasiswaKonferensi to update in case it exists.
     */
    where: MahasiswaKonferensiWhereUniqueInput
    /**
     * In case the MahasiswaKonferensi found by the `where` argument doesn't exist, create a new MahasiswaKonferensi with this data.
     */
    create: XOR<MahasiswaKonferensiCreateInput, MahasiswaKonferensiUncheckedCreateInput>
    /**
     * In case the MahasiswaKonferensi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaKonferensiUpdateInput, MahasiswaKonferensiUncheckedUpdateInput>
  }

  /**
   * MahasiswaKonferensi delete
   */
  export type MahasiswaKonferensiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    /**
     * Filter which MahasiswaKonferensi to delete.
     */
    where: MahasiswaKonferensiWhereUniqueInput
  }

  /**
   * MahasiswaKonferensi deleteMany
   */
  export type MahasiswaKonferensiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaKonferensis to delete
     */
    where?: MahasiswaKonferensiWhereInput
    /**
     * Limit how many MahasiswaKonferensis to delete.
     */
    limit?: number
  }

  /**
   * MahasiswaKonferensi without action
   */
  export type MahasiswaKonferensiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
  }


  /**
   * Model MahasiswaOrganisasiProfesi
   */

  export type AggregateMahasiswaOrganisasiProfesi = {
    _count: MahasiswaOrganisasiProfesiCountAggregateOutputType | null
    _avg: MahasiswaOrganisasiProfesiAvgAggregateOutputType | null
    _sum: MahasiswaOrganisasiProfesiSumAggregateOutputType | null
    _min: MahasiswaOrganisasiProfesiMinAggregateOutputType | null
    _max: MahasiswaOrganisasiProfesiMaxAggregateOutputType | null
  }

  export type MahasiswaOrganisasiProfesiAvgAggregateOutputType = {
    Tahun: number | null
  }

  export type MahasiswaOrganisasiProfesiSumAggregateOutputType = {
    Tahun: number | null
  }

  export type MahasiswaOrganisasiProfesiMinAggregateOutputType = {
    MahasiswaOrganisasiProfesiId: string | null
    PendaftaranId: string | null
    Tahun: number | null
    NamaOrganisasi: string | null
    JenjangAnggotaJabatan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaOrganisasiProfesiMaxAggregateOutputType = {
    MahasiswaOrganisasiProfesiId: string | null
    PendaftaranId: string | null
    Tahun: number | null
    NamaOrganisasi: string | null
    JenjangAnggotaJabatan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaOrganisasiProfesiCountAggregateOutputType = {
    MahasiswaOrganisasiProfesiId: number
    PendaftaranId: number
    Tahun: number
    NamaOrganisasi: number
    JenjangAnggotaJabatan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaOrganisasiProfesiAvgAggregateInputType = {
    Tahun?: true
  }

  export type MahasiswaOrganisasiProfesiSumAggregateInputType = {
    Tahun?: true
  }

  export type MahasiswaOrganisasiProfesiMinAggregateInputType = {
    MahasiswaOrganisasiProfesiId?: true
    PendaftaranId?: true
    Tahun?: true
    NamaOrganisasi?: true
    JenjangAnggotaJabatan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaOrganisasiProfesiMaxAggregateInputType = {
    MahasiswaOrganisasiProfesiId?: true
    PendaftaranId?: true
    Tahun?: true
    NamaOrganisasi?: true
    JenjangAnggotaJabatan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaOrganisasiProfesiCountAggregateInputType = {
    MahasiswaOrganisasiProfesiId?: true
    PendaftaranId?: true
    Tahun?: true
    NamaOrganisasi?: true
    JenjangAnggotaJabatan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaOrganisasiProfesiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaOrganisasiProfesi to aggregate.
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaOrganisasiProfesis to fetch.
     */
    orderBy?: MahasiswaOrganisasiProfesiOrderByWithRelationInput | MahasiswaOrganisasiProfesiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaOrganisasiProfesiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaOrganisasiProfesis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaOrganisasiProfesis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MahasiswaOrganisasiProfesis
    **/
    _count?: true | MahasiswaOrganisasiProfesiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MahasiswaOrganisasiProfesiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MahasiswaOrganisasiProfesiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaOrganisasiProfesiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaOrganisasiProfesiMaxAggregateInputType
  }

  export type GetMahasiswaOrganisasiProfesiAggregateType<T extends MahasiswaOrganisasiProfesiAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswaOrganisasiProfesi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswaOrganisasiProfesi[P]>
      : GetScalarType<T[P], AggregateMahasiswaOrganisasiProfesi[P]>
  }




  export type MahasiswaOrganisasiProfesiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaOrganisasiProfesiWhereInput
    orderBy?: MahasiswaOrganisasiProfesiOrderByWithAggregationInput | MahasiswaOrganisasiProfesiOrderByWithAggregationInput[]
    by: MahasiswaOrganisasiProfesiScalarFieldEnum[] | MahasiswaOrganisasiProfesiScalarFieldEnum
    having?: MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaOrganisasiProfesiCountAggregateInputType | true
    _avg?: MahasiswaOrganisasiProfesiAvgAggregateInputType
    _sum?: MahasiswaOrganisasiProfesiSumAggregateInputType
    _min?: MahasiswaOrganisasiProfesiMinAggregateInputType
    _max?: MahasiswaOrganisasiProfesiMaxAggregateInputType
  }

  export type MahasiswaOrganisasiProfesiGroupByOutputType = {
    MahasiswaOrganisasiProfesiId: string
    PendaftaranId: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaOrganisasiProfesiCountAggregateOutputType | null
    _avg: MahasiswaOrganisasiProfesiAvgAggregateOutputType | null
    _sum: MahasiswaOrganisasiProfesiSumAggregateOutputType | null
    _min: MahasiswaOrganisasiProfesiMinAggregateOutputType | null
    _max: MahasiswaOrganisasiProfesiMaxAggregateOutputType | null
  }

  type GetMahasiswaOrganisasiProfesiGroupByPayload<T extends MahasiswaOrganisasiProfesiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaOrganisasiProfesiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaOrganisasiProfesiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaOrganisasiProfesiGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaOrganisasiProfesiGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaOrganisasiProfesiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaOrganisasiProfesiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    NamaOrganisasi?: boolean
    JenjangAnggotaJabatan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaOrganisasiProfesi"]>

  export type MahasiswaOrganisasiProfesiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaOrganisasiProfesiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    NamaOrganisasi?: boolean
    JenjangAnggotaJabatan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaOrganisasiProfesi"]>

  export type MahasiswaOrganisasiProfesiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaOrganisasiProfesiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    NamaOrganisasi?: boolean
    JenjangAnggotaJabatan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaOrganisasiProfesi"]>

  export type MahasiswaOrganisasiProfesiSelectScalar = {
    MahasiswaOrganisasiProfesiId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    NamaOrganisasi?: boolean
    JenjangAnggotaJabatan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaOrganisasiProfesiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaOrganisasiProfesiId" | "PendaftaranId" | "Tahun" | "NamaOrganisasi" | "JenjangAnggotaJabatan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswaOrganisasiProfesi"]>
  export type MahasiswaOrganisasiProfesiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaOrganisasiProfesiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaOrganisasiProfesiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $MahasiswaOrganisasiProfesiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MahasiswaOrganisasiProfesi"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaOrganisasiProfesiId: string
      PendaftaranId: string
      Tahun: number
      NamaOrganisasi: string
      JenjangAnggotaJabatan: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswaOrganisasiProfesi"]>
    composites: {}
  }

  type MahasiswaOrganisasiProfesiGetPayload<S extends boolean | null | undefined | MahasiswaOrganisasiProfesiDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload, S>

  type MahasiswaOrganisasiProfesiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaOrganisasiProfesiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaOrganisasiProfesiCountAggregateInputType | true
    }

  export interface MahasiswaOrganisasiProfesiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MahasiswaOrganisasiProfesi'], meta: { name: 'MahasiswaOrganisasiProfesi' } }
    /**
     * Find zero or one MahasiswaOrganisasiProfesi that matches the filter.
     * @param {MahasiswaOrganisasiProfesiFindUniqueArgs} args - Arguments to find a MahasiswaOrganisasiProfesi
     * @example
     * // Get one MahasiswaOrganisasiProfesi
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaOrganisasiProfesiFindUniqueArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MahasiswaOrganisasiProfesi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaOrganisasiProfesiFindUniqueOrThrowArgs} args - Arguments to find a MahasiswaOrganisasiProfesi
     * @example
     * // Get one MahasiswaOrganisasiProfesi
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaOrganisasiProfesiFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaOrganisasiProfesi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiFindFirstArgs} args - Arguments to find a MahasiswaOrganisasiProfesi
     * @example
     * // Get one MahasiswaOrganisasiProfesi
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaOrganisasiProfesiFindFirstArgs>(args?: SelectSubset<T, MahasiswaOrganisasiProfesiFindFirstArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaOrganisasiProfesi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiFindFirstOrThrowArgs} args - Arguments to find a MahasiswaOrganisasiProfesi
     * @example
     * // Get one MahasiswaOrganisasiProfesi
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaOrganisasiProfesiFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaOrganisasiProfesiFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MahasiswaOrganisasiProfesis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MahasiswaOrganisasiProfesis
     * const mahasiswaOrganisasiProfesis = await prisma.mahasiswaOrganisasiProfesi.findMany()
     * 
     * // Get first 10 MahasiswaOrganisasiProfesis
     * const mahasiswaOrganisasiProfesis = await prisma.mahasiswaOrganisasiProfesi.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaOrganisasiProfesiId`
     * const mahasiswaOrganisasiProfesiWithMahasiswaOrganisasiProfesiIdOnly = await prisma.mahasiswaOrganisasiProfesi.findMany({ select: { MahasiswaOrganisasiProfesiId: true } })
     * 
     */
    findMany<T extends MahasiswaOrganisasiProfesiFindManyArgs>(args?: SelectSubset<T, MahasiswaOrganisasiProfesiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MahasiswaOrganisasiProfesi.
     * @param {MahasiswaOrganisasiProfesiCreateArgs} args - Arguments to create a MahasiswaOrganisasiProfesi.
     * @example
     * // Create one MahasiswaOrganisasiProfesi
     * const MahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.create({
     *   data: {
     *     // ... data to create a MahasiswaOrganisasiProfesi
     *   }
     * })
     * 
     */
    create<T extends MahasiswaOrganisasiProfesiCreateArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiCreateArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MahasiswaOrganisasiProfesis.
     * @param {MahasiswaOrganisasiProfesiCreateManyArgs} args - Arguments to create many MahasiswaOrganisasiProfesis.
     * @example
     * // Create many MahasiswaOrganisasiProfesis
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaOrganisasiProfesiCreateManyArgs>(args?: SelectSubset<T, MahasiswaOrganisasiProfesiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MahasiswaOrganisasiProfesis and returns the data saved in the database.
     * @param {MahasiswaOrganisasiProfesiCreateManyAndReturnArgs} args - Arguments to create many MahasiswaOrganisasiProfesis.
     * @example
     * // Create many MahasiswaOrganisasiProfesis
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MahasiswaOrganisasiProfesis and only return the `MahasiswaOrganisasiProfesiId`
     * const mahasiswaOrganisasiProfesiWithMahasiswaOrganisasiProfesiIdOnly = await prisma.mahasiswaOrganisasiProfesi.createManyAndReturn({
     *   select: { MahasiswaOrganisasiProfesiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaOrganisasiProfesiCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaOrganisasiProfesiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MahasiswaOrganisasiProfesi.
     * @param {MahasiswaOrganisasiProfesiDeleteArgs} args - Arguments to delete one MahasiswaOrganisasiProfesi.
     * @example
     * // Delete one MahasiswaOrganisasiProfesi
     * const MahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.delete({
     *   where: {
     *     // ... filter to delete one MahasiswaOrganisasiProfesi
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaOrganisasiProfesiDeleteArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiDeleteArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MahasiswaOrganisasiProfesi.
     * @param {MahasiswaOrganisasiProfesiUpdateArgs} args - Arguments to update one MahasiswaOrganisasiProfesi.
     * @example
     * // Update one MahasiswaOrganisasiProfesi
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaOrganisasiProfesiUpdateArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiUpdateArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MahasiswaOrganisasiProfesis.
     * @param {MahasiswaOrganisasiProfesiDeleteManyArgs} args - Arguments to filter MahasiswaOrganisasiProfesis to delete.
     * @example
     * // Delete a few MahasiswaOrganisasiProfesis
     * const { count } = await prisma.mahasiswaOrganisasiProfesi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaOrganisasiProfesiDeleteManyArgs>(args?: SelectSubset<T, MahasiswaOrganisasiProfesiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaOrganisasiProfesis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MahasiswaOrganisasiProfesis
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaOrganisasiProfesiUpdateManyArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaOrganisasiProfesis and returns the data updated in the database.
     * @param {MahasiswaOrganisasiProfesiUpdateManyAndReturnArgs} args - Arguments to update many MahasiswaOrganisasiProfesis.
     * @example
     * // Update many MahasiswaOrganisasiProfesis
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MahasiswaOrganisasiProfesis and only return the `MahasiswaOrganisasiProfesiId`
     * const mahasiswaOrganisasiProfesiWithMahasiswaOrganisasiProfesiIdOnly = await prisma.mahasiswaOrganisasiProfesi.updateManyAndReturn({
     *   select: { MahasiswaOrganisasiProfesiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaOrganisasiProfesiUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MahasiswaOrganisasiProfesi.
     * @param {MahasiswaOrganisasiProfesiUpsertArgs} args - Arguments to update or create a MahasiswaOrganisasiProfesi.
     * @example
     * // Update or create a MahasiswaOrganisasiProfesi
     * const mahasiswaOrganisasiProfesi = await prisma.mahasiswaOrganisasiProfesi.upsert({
     *   create: {
     *     // ... data to create a MahasiswaOrganisasiProfesi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MahasiswaOrganisasiProfesi we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaOrganisasiProfesiUpsertArgs>(args: SelectSubset<T, MahasiswaOrganisasiProfesiUpsertArgs<ExtArgs>>): Prisma__MahasiswaOrganisasiProfesiClient<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MahasiswaOrganisasiProfesis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiCountArgs} args - Arguments to filter MahasiswaOrganisasiProfesis to count.
     * @example
     * // Count the number of MahasiswaOrganisasiProfesis
     * const count = await prisma.mahasiswaOrganisasiProfesi.count({
     *   where: {
     *     // ... the filter for the MahasiswaOrganisasiProfesis we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaOrganisasiProfesiCountArgs>(
      args?: Subset<T, MahasiswaOrganisasiProfesiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaOrganisasiProfesiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MahasiswaOrganisasiProfesi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaOrganisasiProfesiAggregateArgs>(args: Subset<T, MahasiswaOrganisasiProfesiAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaOrganisasiProfesiAggregateType<T>>

    /**
     * Group by MahasiswaOrganisasiProfesi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaOrganisasiProfesiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaOrganisasiProfesiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaOrganisasiProfesiGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaOrganisasiProfesiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaOrganisasiProfesiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaOrganisasiProfesiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MahasiswaOrganisasiProfesi model
   */
  readonly fields: MahasiswaOrganisasiProfesiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MahasiswaOrganisasiProfesi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaOrganisasiProfesiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MahasiswaOrganisasiProfesi model
   */
  interface MahasiswaOrganisasiProfesiFieldRefs {
    readonly MahasiswaOrganisasiProfesiId: FieldRef<"MahasiswaOrganisasiProfesi", 'String'>
    readonly PendaftaranId: FieldRef<"MahasiswaOrganisasiProfesi", 'String'>
    readonly Tahun: FieldRef<"MahasiswaOrganisasiProfesi", 'Int'>
    readonly NamaOrganisasi: FieldRef<"MahasiswaOrganisasiProfesi", 'String'>
    readonly JenjangAnggotaJabatan: FieldRef<"MahasiswaOrganisasiProfesi", 'String'>
    readonly CreatedAt: FieldRef<"MahasiswaOrganisasiProfesi", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MahasiswaOrganisasiProfesi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MahasiswaOrganisasiProfesi findUnique
   */
  export type MahasiswaOrganisasiProfesiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaOrganisasiProfesi to fetch.
     */
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
  }

  /**
   * MahasiswaOrganisasiProfesi findUniqueOrThrow
   */
  export type MahasiswaOrganisasiProfesiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaOrganisasiProfesi to fetch.
     */
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
  }

  /**
   * MahasiswaOrganisasiProfesi findFirst
   */
  export type MahasiswaOrganisasiProfesiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaOrganisasiProfesi to fetch.
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaOrganisasiProfesis to fetch.
     */
    orderBy?: MahasiswaOrganisasiProfesiOrderByWithRelationInput | MahasiswaOrganisasiProfesiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaOrganisasiProfesis.
     */
    cursor?: MahasiswaOrganisasiProfesiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaOrganisasiProfesis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaOrganisasiProfesis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaOrganisasiProfesis.
     */
    distinct?: MahasiswaOrganisasiProfesiScalarFieldEnum | MahasiswaOrganisasiProfesiScalarFieldEnum[]
  }

  /**
   * MahasiswaOrganisasiProfesi findFirstOrThrow
   */
  export type MahasiswaOrganisasiProfesiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaOrganisasiProfesi to fetch.
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaOrganisasiProfesis to fetch.
     */
    orderBy?: MahasiswaOrganisasiProfesiOrderByWithRelationInput | MahasiswaOrganisasiProfesiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaOrganisasiProfesis.
     */
    cursor?: MahasiswaOrganisasiProfesiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaOrganisasiProfesis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaOrganisasiProfesis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaOrganisasiProfesis.
     */
    distinct?: MahasiswaOrganisasiProfesiScalarFieldEnum | MahasiswaOrganisasiProfesiScalarFieldEnum[]
  }

  /**
   * MahasiswaOrganisasiProfesi findMany
   */
  export type MahasiswaOrganisasiProfesiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaOrganisasiProfesis to fetch.
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaOrganisasiProfesis to fetch.
     */
    orderBy?: MahasiswaOrganisasiProfesiOrderByWithRelationInput | MahasiswaOrganisasiProfesiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MahasiswaOrganisasiProfesis.
     */
    cursor?: MahasiswaOrganisasiProfesiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaOrganisasiProfesis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaOrganisasiProfesis.
     */
    skip?: number
    distinct?: MahasiswaOrganisasiProfesiScalarFieldEnum | MahasiswaOrganisasiProfesiScalarFieldEnum[]
  }

  /**
   * MahasiswaOrganisasiProfesi create
   */
  export type MahasiswaOrganisasiProfesiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * The data needed to create a MahasiswaOrganisasiProfesi.
     */
    data: XOR<MahasiswaOrganisasiProfesiCreateInput, MahasiswaOrganisasiProfesiUncheckedCreateInput>
  }

  /**
   * MahasiswaOrganisasiProfesi createMany
   */
  export type MahasiswaOrganisasiProfesiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MahasiswaOrganisasiProfesis.
     */
    data: MahasiswaOrganisasiProfesiCreateManyInput | MahasiswaOrganisasiProfesiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MahasiswaOrganisasiProfesi createManyAndReturn
   */
  export type MahasiswaOrganisasiProfesiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * The data used to create many MahasiswaOrganisasiProfesis.
     */
    data: MahasiswaOrganisasiProfesiCreateManyInput | MahasiswaOrganisasiProfesiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaOrganisasiProfesi update
   */
  export type MahasiswaOrganisasiProfesiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * The data needed to update a MahasiswaOrganisasiProfesi.
     */
    data: XOR<MahasiswaOrganisasiProfesiUpdateInput, MahasiswaOrganisasiProfesiUncheckedUpdateInput>
    /**
     * Choose, which MahasiswaOrganisasiProfesi to update.
     */
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
  }

  /**
   * MahasiswaOrganisasiProfesi updateMany
   */
  export type MahasiswaOrganisasiProfesiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MahasiswaOrganisasiProfesis.
     */
    data: XOR<MahasiswaOrganisasiProfesiUpdateManyMutationInput, MahasiswaOrganisasiProfesiUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaOrganisasiProfesis to update
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * Limit how many MahasiswaOrganisasiProfesis to update.
     */
    limit?: number
  }

  /**
   * MahasiswaOrganisasiProfesi updateManyAndReturn
   */
  export type MahasiswaOrganisasiProfesiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * The data used to update MahasiswaOrganisasiProfesis.
     */
    data: XOR<MahasiswaOrganisasiProfesiUpdateManyMutationInput, MahasiswaOrganisasiProfesiUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaOrganisasiProfesis to update
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * Limit how many MahasiswaOrganisasiProfesis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaOrganisasiProfesi upsert
   */
  export type MahasiswaOrganisasiProfesiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * The filter to search for the MahasiswaOrganisasiProfesi to update in case it exists.
     */
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
    /**
     * In case the MahasiswaOrganisasiProfesi found by the `where` argument doesn't exist, create a new MahasiswaOrganisasiProfesi with this data.
     */
    create: XOR<MahasiswaOrganisasiProfesiCreateInput, MahasiswaOrganisasiProfesiUncheckedCreateInput>
    /**
     * In case the MahasiswaOrganisasiProfesi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaOrganisasiProfesiUpdateInput, MahasiswaOrganisasiProfesiUncheckedUpdateInput>
  }

  /**
   * MahasiswaOrganisasiProfesi delete
   */
  export type MahasiswaOrganisasiProfesiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    /**
     * Filter which MahasiswaOrganisasiProfesi to delete.
     */
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
  }

  /**
   * MahasiswaOrganisasiProfesi deleteMany
   */
  export type MahasiswaOrganisasiProfesiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaOrganisasiProfesis to delete
     */
    where?: MahasiswaOrganisasiProfesiWhereInput
    /**
     * Limit how many MahasiswaOrganisasiProfesis to delete.
     */
    limit?: number
  }

  /**
   * MahasiswaOrganisasiProfesi without action
   */
  export type MahasiswaOrganisasiProfesiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
  }


  /**
   * Model MahasiswaPelatihanProfessional
   */

  export type AggregateMahasiswaPelatihanProfessional = {
    _count: MahasiswaPelatihanProfessionalCountAggregateOutputType | null
    _min: MahasiswaPelatihanProfessionalMinAggregateOutputType | null
    _max: MahasiswaPelatihanProfessionalMaxAggregateOutputType | null
  }

  export type MahasiswaPelatihanProfessionalMinAggregateOutputType = {
    MahasiswaPelatihanProfessionalId: string | null
    PendaftaranId: string | null
    NamaPelatihan: string | null
    Penyelenggara: string | null
    Mulai: Date | null
    Selesai: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaPelatihanProfessionalMaxAggregateOutputType = {
    MahasiswaPelatihanProfessionalId: string | null
    PendaftaranId: string | null
    NamaPelatihan: string | null
    Penyelenggara: string | null
    Mulai: Date | null
    Selesai: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaPelatihanProfessionalCountAggregateOutputType = {
    MahasiswaPelatihanProfessionalId: number
    PendaftaranId: number
    NamaPelatihan: number
    Penyelenggara: number
    Mulai: number
    Selesai: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaPelatihanProfessionalMinAggregateInputType = {
    MahasiswaPelatihanProfessionalId?: true
    PendaftaranId?: true
    NamaPelatihan?: true
    Penyelenggara?: true
    Mulai?: true
    Selesai?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaPelatihanProfessionalMaxAggregateInputType = {
    MahasiswaPelatihanProfessionalId?: true
    PendaftaranId?: true
    NamaPelatihan?: true
    Penyelenggara?: true
    Mulai?: true
    Selesai?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaPelatihanProfessionalCountAggregateInputType = {
    MahasiswaPelatihanProfessionalId?: true
    PendaftaranId?: true
    NamaPelatihan?: true
    Penyelenggara?: true
    Mulai?: true
    Selesai?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaPelatihanProfessionalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaPelatihanProfessional to aggregate.
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPelatihanProfessionals to fetch.
     */
    orderBy?: MahasiswaPelatihanProfessionalOrderByWithRelationInput | MahasiswaPelatihanProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaPelatihanProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPelatihanProfessionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPelatihanProfessionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MahasiswaPelatihanProfessionals
    **/
    _count?: true | MahasiswaPelatihanProfessionalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaPelatihanProfessionalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaPelatihanProfessionalMaxAggregateInputType
  }

  export type GetMahasiswaPelatihanProfessionalAggregateType<T extends MahasiswaPelatihanProfessionalAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswaPelatihanProfessional]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswaPelatihanProfessional[P]>
      : GetScalarType<T[P], AggregateMahasiswaPelatihanProfessional[P]>
  }




  export type MahasiswaPelatihanProfessionalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaPelatihanProfessionalWhereInput
    orderBy?: MahasiswaPelatihanProfessionalOrderByWithAggregationInput | MahasiswaPelatihanProfessionalOrderByWithAggregationInput[]
    by: MahasiswaPelatihanProfessionalScalarFieldEnum[] | MahasiswaPelatihanProfessionalScalarFieldEnum
    having?: MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaPelatihanProfessionalCountAggregateInputType | true
    _min?: MahasiswaPelatihanProfessionalMinAggregateInputType
    _max?: MahasiswaPelatihanProfessionalMaxAggregateInputType
  }

  export type MahasiswaPelatihanProfessionalGroupByOutputType = {
    MahasiswaPelatihanProfessionalId: string
    PendaftaranId: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date
    Selesai: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaPelatihanProfessionalCountAggregateOutputType | null
    _min: MahasiswaPelatihanProfessionalMinAggregateOutputType | null
    _max: MahasiswaPelatihanProfessionalMaxAggregateOutputType | null
  }

  type GetMahasiswaPelatihanProfessionalGroupByPayload<T extends MahasiswaPelatihanProfessionalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaPelatihanProfessionalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaPelatihanProfessionalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaPelatihanProfessionalGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaPelatihanProfessionalGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaPelatihanProfessionalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPelatihanProfessionalId?: boolean
    PendaftaranId?: boolean
    NamaPelatihan?: boolean
    Penyelenggara?: boolean
    Mulai?: boolean
    Selesai?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPelatihanProfessional"]>

  export type MahasiswaPelatihanProfessionalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPelatihanProfessionalId?: boolean
    PendaftaranId?: boolean
    NamaPelatihan?: boolean
    Penyelenggara?: boolean
    Mulai?: boolean
    Selesai?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPelatihanProfessional"]>

  export type MahasiswaPelatihanProfessionalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPelatihanProfessionalId?: boolean
    PendaftaranId?: boolean
    NamaPelatihan?: boolean
    Penyelenggara?: boolean
    Mulai?: boolean
    Selesai?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPelatihanProfessional"]>

  export type MahasiswaPelatihanProfessionalSelectScalar = {
    MahasiswaPelatihanProfessionalId?: boolean
    PendaftaranId?: boolean
    NamaPelatihan?: boolean
    Penyelenggara?: boolean
    Mulai?: boolean
    Selesai?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaPelatihanProfessionalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaPelatihanProfessionalId" | "PendaftaranId" | "NamaPelatihan" | "Penyelenggara" | "Mulai" | "Selesai" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswaPelatihanProfessional"]>
  export type MahasiswaPelatihanProfessionalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaPelatihanProfessionalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaPelatihanProfessionalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $MahasiswaPelatihanProfessionalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MahasiswaPelatihanProfessional"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaPelatihanProfessionalId: string
      PendaftaranId: string
      NamaPelatihan: string
      Penyelenggara: string
      Mulai: Date
      Selesai: Date | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswaPelatihanProfessional"]>
    composites: {}
  }

  type MahasiswaPelatihanProfessionalGetPayload<S extends boolean | null | undefined | MahasiswaPelatihanProfessionalDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload, S>

  type MahasiswaPelatihanProfessionalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaPelatihanProfessionalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaPelatihanProfessionalCountAggregateInputType | true
    }

  export interface MahasiswaPelatihanProfessionalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MahasiswaPelatihanProfessional'], meta: { name: 'MahasiswaPelatihanProfessional' } }
    /**
     * Find zero or one MahasiswaPelatihanProfessional that matches the filter.
     * @param {MahasiswaPelatihanProfessionalFindUniqueArgs} args - Arguments to find a MahasiswaPelatihanProfessional
     * @example
     * // Get one MahasiswaPelatihanProfessional
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaPelatihanProfessionalFindUniqueArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MahasiswaPelatihanProfessional that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaPelatihanProfessionalFindUniqueOrThrowArgs} args - Arguments to find a MahasiswaPelatihanProfessional
     * @example
     * // Get one MahasiswaPelatihanProfessional
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaPelatihanProfessionalFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaPelatihanProfessional that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalFindFirstArgs} args - Arguments to find a MahasiswaPelatihanProfessional
     * @example
     * // Get one MahasiswaPelatihanProfessional
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaPelatihanProfessionalFindFirstArgs>(args?: SelectSubset<T, MahasiswaPelatihanProfessionalFindFirstArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaPelatihanProfessional that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalFindFirstOrThrowArgs} args - Arguments to find a MahasiswaPelatihanProfessional
     * @example
     * // Get one MahasiswaPelatihanProfessional
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaPelatihanProfessionalFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaPelatihanProfessionalFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MahasiswaPelatihanProfessionals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MahasiswaPelatihanProfessionals
     * const mahasiswaPelatihanProfessionals = await prisma.mahasiswaPelatihanProfessional.findMany()
     * 
     * // Get first 10 MahasiswaPelatihanProfessionals
     * const mahasiswaPelatihanProfessionals = await prisma.mahasiswaPelatihanProfessional.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaPelatihanProfessionalId`
     * const mahasiswaPelatihanProfessionalWithMahasiswaPelatihanProfessionalIdOnly = await prisma.mahasiswaPelatihanProfessional.findMany({ select: { MahasiswaPelatihanProfessionalId: true } })
     * 
     */
    findMany<T extends MahasiswaPelatihanProfessionalFindManyArgs>(args?: SelectSubset<T, MahasiswaPelatihanProfessionalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MahasiswaPelatihanProfessional.
     * @param {MahasiswaPelatihanProfessionalCreateArgs} args - Arguments to create a MahasiswaPelatihanProfessional.
     * @example
     * // Create one MahasiswaPelatihanProfessional
     * const MahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.create({
     *   data: {
     *     // ... data to create a MahasiswaPelatihanProfessional
     *   }
     * })
     * 
     */
    create<T extends MahasiswaPelatihanProfessionalCreateArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalCreateArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MahasiswaPelatihanProfessionals.
     * @param {MahasiswaPelatihanProfessionalCreateManyArgs} args - Arguments to create many MahasiswaPelatihanProfessionals.
     * @example
     * // Create many MahasiswaPelatihanProfessionals
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaPelatihanProfessionalCreateManyArgs>(args?: SelectSubset<T, MahasiswaPelatihanProfessionalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MahasiswaPelatihanProfessionals and returns the data saved in the database.
     * @param {MahasiswaPelatihanProfessionalCreateManyAndReturnArgs} args - Arguments to create many MahasiswaPelatihanProfessionals.
     * @example
     * // Create many MahasiswaPelatihanProfessionals
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MahasiswaPelatihanProfessionals and only return the `MahasiswaPelatihanProfessionalId`
     * const mahasiswaPelatihanProfessionalWithMahasiswaPelatihanProfessionalIdOnly = await prisma.mahasiswaPelatihanProfessional.createManyAndReturn({
     *   select: { MahasiswaPelatihanProfessionalId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaPelatihanProfessionalCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaPelatihanProfessionalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MahasiswaPelatihanProfessional.
     * @param {MahasiswaPelatihanProfessionalDeleteArgs} args - Arguments to delete one MahasiswaPelatihanProfessional.
     * @example
     * // Delete one MahasiswaPelatihanProfessional
     * const MahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.delete({
     *   where: {
     *     // ... filter to delete one MahasiswaPelatihanProfessional
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaPelatihanProfessionalDeleteArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalDeleteArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MahasiswaPelatihanProfessional.
     * @param {MahasiswaPelatihanProfessionalUpdateArgs} args - Arguments to update one MahasiswaPelatihanProfessional.
     * @example
     * // Update one MahasiswaPelatihanProfessional
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaPelatihanProfessionalUpdateArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalUpdateArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MahasiswaPelatihanProfessionals.
     * @param {MahasiswaPelatihanProfessionalDeleteManyArgs} args - Arguments to filter MahasiswaPelatihanProfessionals to delete.
     * @example
     * // Delete a few MahasiswaPelatihanProfessionals
     * const { count } = await prisma.mahasiswaPelatihanProfessional.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaPelatihanProfessionalDeleteManyArgs>(args?: SelectSubset<T, MahasiswaPelatihanProfessionalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaPelatihanProfessionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MahasiswaPelatihanProfessionals
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaPelatihanProfessionalUpdateManyArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaPelatihanProfessionals and returns the data updated in the database.
     * @param {MahasiswaPelatihanProfessionalUpdateManyAndReturnArgs} args - Arguments to update many MahasiswaPelatihanProfessionals.
     * @example
     * // Update many MahasiswaPelatihanProfessionals
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MahasiswaPelatihanProfessionals and only return the `MahasiswaPelatihanProfessionalId`
     * const mahasiswaPelatihanProfessionalWithMahasiswaPelatihanProfessionalIdOnly = await prisma.mahasiswaPelatihanProfessional.updateManyAndReturn({
     *   select: { MahasiswaPelatihanProfessionalId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaPelatihanProfessionalUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MahasiswaPelatihanProfessional.
     * @param {MahasiswaPelatihanProfessionalUpsertArgs} args - Arguments to update or create a MahasiswaPelatihanProfessional.
     * @example
     * // Update or create a MahasiswaPelatihanProfessional
     * const mahasiswaPelatihanProfessional = await prisma.mahasiswaPelatihanProfessional.upsert({
     *   create: {
     *     // ... data to create a MahasiswaPelatihanProfessional
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MahasiswaPelatihanProfessional we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaPelatihanProfessionalUpsertArgs>(args: SelectSubset<T, MahasiswaPelatihanProfessionalUpsertArgs<ExtArgs>>): Prisma__MahasiswaPelatihanProfessionalClient<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MahasiswaPelatihanProfessionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalCountArgs} args - Arguments to filter MahasiswaPelatihanProfessionals to count.
     * @example
     * // Count the number of MahasiswaPelatihanProfessionals
     * const count = await prisma.mahasiswaPelatihanProfessional.count({
     *   where: {
     *     // ... the filter for the MahasiswaPelatihanProfessionals we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaPelatihanProfessionalCountArgs>(
      args?: Subset<T, MahasiswaPelatihanProfessionalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaPelatihanProfessionalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MahasiswaPelatihanProfessional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaPelatihanProfessionalAggregateArgs>(args: Subset<T, MahasiswaPelatihanProfessionalAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaPelatihanProfessionalAggregateType<T>>

    /**
     * Group by MahasiswaPelatihanProfessional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPelatihanProfessionalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaPelatihanProfessionalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaPelatihanProfessionalGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaPelatihanProfessionalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaPelatihanProfessionalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaPelatihanProfessionalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MahasiswaPelatihanProfessional model
   */
  readonly fields: MahasiswaPelatihanProfessionalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MahasiswaPelatihanProfessional.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaPelatihanProfessionalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MahasiswaPelatihanProfessional model
   */
  interface MahasiswaPelatihanProfessionalFieldRefs {
    readonly MahasiswaPelatihanProfessionalId: FieldRef<"MahasiswaPelatihanProfessional", 'String'>
    readonly PendaftaranId: FieldRef<"MahasiswaPelatihanProfessional", 'String'>
    readonly NamaPelatihan: FieldRef<"MahasiswaPelatihanProfessional", 'String'>
    readonly Penyelenggara: FieldRef<"MahasiswaPelatihanProfessional", 'String'>
    readonly Mulai: FieldRef<"MahasiswaPelatihanProfessional", 'DateTime'>
    readonly Selesai: FieldRef<"MahasiswaPelatihanProfessional", 'DateTime'>
    readonly CreatedAt: FieldRef<"MahasiswaPelatihanProfessional", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MahasiswaPelatihanProfessional", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MahasiswaPelatihanProfessional findUnique
   */
  export type MahasiswaPelatihanProfessionalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPelatihanProfessional to fetch.
     */
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
  }

  /**
   * MahasiswaPelatihanProfessional findUniqueOrThrow
   */
  export type MahasiswaPelatihanProfessionalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPelatihanProfessional to fetch.
     */
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
  }

  /**
   * MahasiswaPelatihanProfessional findFirst
   */
  export type MahasiswaPelatihanProfessionalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPelatihanProfessional to fetch.
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPelatihanProfessionals to fetch.
     */
    orderBy?: MahasiswaPelatihanProfessionalOrderByWithRelationInput | MahasiswaPelatihanProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaPelatihanProfessionals.
     */
    cursor?: MahasiswaPelatihanProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPelatihanProfessionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPelatihanProfessionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaPelatihanProfessionals.
     */
    distinct?: MahasiswaPelatihanProfessionalScalarFieldEnum | MahasiswaPelatihanProfessionalScalarFieldEnum[]
  }

  /**
   * MahasiswaPelatihanProfessional findFirstOrThrow
   */
  export type MahasiswaPelatihanProfessionalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPelatihanProfessional to fetch.
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPelatihanProfessionals to fetch.
     */
    orderBy?: MahasiswaPelatihanProfessionalOrderByWithRelationInput | MahasiswaPelatihanProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaPelatihanProfessionals.
     */
    cursor?: MahasiswaPelatihanProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPelatihanProfessionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPelatihanProfessionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaPelatihanProfessionals.
     */
    distinct?: MahasiswaPelatihanProfessionalScalarFieldEnum | MahasiswaPelatihanProfessionalScalarFieldEnum[]
  }

  /**
   * MahasiswaPelatihanProfessional findMany
   */
  export type MahasiswaPelatihanProfessionalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPelatihanProfessionals to fetch.
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPelatihanProfessionals to fetch.
     */
    orderBy?: MahasiswaPelatihanProfessionalOrderByWithRelationInput | MahasiswaPelatihanProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MahasiswaPelatihanProfessionals.
     */
    cursor?: MahasiswaPelatihanProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPelatihanProfessionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPelatihanProfessionals.
     */
    skip?: number
    distinct?: MahasiswaPelatihanProfessionalScalarFieldEnum | MahasiswaPelatihanProfessionalScalarFieldEnum[]
  }

  /**
   * MahasiswaPelatihanProfessional create
   */
  export type MahasiswaPelatihanProfessionalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * The data needed to create a MahasiswaPelatihanProfessional.
     */
    data: XOR<MahasiswaPelatihanProfessionalCreateInput, MahasiswaPelatihanProfessionalUncheckedCreateInput>
  }

  /**
   * MahasiswaPelatihanProfessional createMany
   */
  export type MahasiswaPelatihanProfessionalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MahasiswaPelatihanProfessionals.
     */
    data: MahasiswaPelatihanProfessionalCreateManyInput | MahasiswaPelatihanProfessionalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MahasiswaPelatihanProfessional createManyAndReturn
   */
  export type MahasiswaPelatihanProfessionalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * The data used to create many MahasiswaPelatihanProfessionals.
     */
    data: MahasiswaPelatihanProfessionalCreateManyInput | MahasiswaPelatihanProfessionalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaPelatihanProfessional update
   */
  export type MahasiswaPelatihanProfessionalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * The data needed to update a MahasiswaPelatihanProfessional.
     */
    data: XOR<MahasiswaPelatihanProfessionalUpdateInput, MahasiswaPelatihanProfessionalUncheckedUpdateInput>
    /**
     * Choose, which MahasiswaPelatihanProfessional to update.
     */
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
  }

  /**
   * MahasiswaPelatihanProfessional updateMany
   */
  export type MahasiswaPelatihanProfessionalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MahasiswaPelatihanProfessionals.
     */
    data: XOR<MahasiswaPelatihanProfessionalUpdateManyMutationInput, MahasiswaPelatihanProfessionalUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaPelatihanProfessionals to update
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * Limit how many MahasiswaPelatihanProfessionals to update.
     */
    limit?: number
  }

  /**
   * MahasiswaPelatihanProfessional updateManyAndReturn
   */
  export type MahasiswaPelatihanProfessionalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * The data used to update MahasiswaPelatihanProfessionals.
     */
    data: XOR<MahasiswaPelatihanProfessionalUpdateManyMutationInput, MahasiswaPelatihanProfessionalUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaPelatihanProfessionals to update
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * Limit how many MahasiswaPelatihanProfessionals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaPelatihanProfessional upsert
   */
  export type MahasiswaPelatihanProfessionalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * The filter to search for the MahasiswaPelatihanProfessional to update in case it exists.
     */
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
    /**
     * In case the MahasiswaPelatihanProfessional found by the `where` argument doesn't exist, create a new MahasiswaPelatihanProfessional with this data.
     */
    create: XOR<MahasiswaPelatihanProfessionalCreateInput, MahasiswaPelatihanProfessionalUncheckedCreateInput>
    /**
     * In case the MahasiswaPelatihanProfessional was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaPelatihanProfessionalUpdateInput, MahasiswaPelatihanProfessionalUncheckedUpdateInput>
  }

  /**
   * MahasiswaPelatihanProfessional delete
   */
  export type MahasiswaPelatihanProfessionalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    /**
     * Filter which MahasiswaPelatihanProfessional to delete.
     */
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
  }

  /**
   * MahasiswaPelatihanProfessional deleteMany
   */
  export type MahasiswaPelatihanProfessionalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaPelatihanProfessionals to delete
     */
    where?: MahasiswaPelatihanProfessionalWhereInput
    /**
     * Limit how many MahasiswaPelatihanProfessionals to delete.
     */
    limit?: number
  }

  /**
   * MahasiswaPelatihanProfessional without action
   */
  export type MahasiswaPelatihanProfessionalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
  }


  /**
   * Model MahasiswaPendidikan
   */

  export type AggregateMahasiswaPendidikan = {
    _count: MahasiswaPendidikanCountAggregateOutputType | null
    _avg: MahasiswaPendidikanAvgAggregateOutputType | null
    _sum: MahasiswaPendidikanSumAggregateOutputType | null
    _min: MahasiswaPendidikanMinAggregateOutputType | null
    _max: MahasiswaPendidikanMaxAggregateOutputType | null
  }

  export type MahasiswaPendidikanAvgAggregateOutputType = {
    TahunLulus: number | null
  }

  export type MahasiswaPendidikanSumAggregateOutputType = {
    TahunLulus: number | null
  }

  export type MahasiswaPendidikanMinAggregateOutputType = {
    MahasiswaPendidikanId: string | null
    PendaftaranId: string | null
    NamaSekolah: string | null
    TahunLulus: number | null
    Jurusan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaPendidikanMaxAggregateOutputType = {
    MahasiswaPendidikanId: string | null
    PendaftaranId: string | null
    NamaSekolah: string | null
    TahunLulus: number | null
    Jurusan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaPendidikanCountAggregateOutputType = {
    MahasiswaPendidikanId: number
    PendaftaranId: number
    NamaSekolah: number
    TahunLulus: number
    Jurusan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaPendidikanAvgAggregateInputType = {
    TahunLulus?: true
  }

  export type MahasiswaPendidikanSumAggregateInputType = {
    TahunLulus?: true
  }

  export type MahasiswaPendidikanMinAggregateInputType = {
    MahasiswaPendidikanId?: true
    PendaftaranId?: true
    NamaSekolah?: true
    TahunLulus?: true
    Jurusan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaPendidikanMaxAggregateInputType = {
    MahasiswaPendidikanId?: true
    PendaftaranId?: true
    NamaSekolah?: true
    TahunLulus?: true
    Jurusan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaPendidikanCountAggregateInputType = {
    MahasiswaPendidikanId?: true
    PendaftaranId?: true
    NamaSekolah?: true
    TahunLulus?: true
    Jurusan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaPendidikanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaPendidikan to aggregate.
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPendidikans to fetch.
     */
    orderBy?: MahasiswaPendidikanOrderByWithRelationInput | MahasiswaPendidikanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaPendidikanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPendidikans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPendidikans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MahasiswaPendidikans
    **/
    _count?: true | MahasiswaPendidikanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MahasiswaPendidikanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MahasiswaPendidikanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaPendidikanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaPendidikanMaxAggregateInputType
  }

  export type GetMahasiswaPendidikanAggregateType<T extends MahasiswaPendidikanAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswaPendidikan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswaPendidikan[P]>
      : GetScalarType<T[P], AggregateMahasiswaPendidikan[P]>
  }




  export type MahasiswaPendidikanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaPendidikanWhereInput
    orderBy?: MahasiswaPendidikanOrderByWithAggregationInput | MahasiswaPendidikanOrderByWithAggregationInput[]
    by: MahasiswaPendidikanScalarFieldEnum[] | MahasiswaPendidikanScalarFieldEnum
    having?: MahasiswaPendidikanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaPendidikanCountAggregateInputType | true
    _avg?: MahasiswaPendidikanAvgAggregateInputType
    _sum?: MahasiswaPendidikanSumAggregateInputType
    _min?: MahasiswaPendidikanMinAggregateInputType
    _max?: MahasiswaPendidikanMaxAggregateInputType
  }

  export type MahasiswaPendidikanGroupByOutputType = {
    MahasiswaPendidikanId: string
    PendaftaranId: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaPendidikanCountAggregateOutputType | null
    _avg: MahasiswaPendidikanAvgAggregateOutputType | null
    _sum: MahasiswaPendidikanSumAggregateOutputType | null
    _min: MahasiswaPendidikanMinAggregateOutputType | null
    _max: MahasiswaPendidikanMaxAggregateOutputType | null
  }

  type GetMahasiswaPendidikanGroupByPayload<T extends MahasiswaPendidikanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaPendidikanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaPendidikanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaPendidikanGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaPendidikanGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaPendidikanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPendidikanId?: boolean
    PendaftaranId?: boolean
    NamaSekolah?: boolean
    TahunLulus?: boolean
    Jurusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPendidikan"]>

  export type MahasiswaPendidikanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPendidikanId?: boolean
    PendaftaranId?: boolean
    NamaSekolah?: boolean
    TahunLulus?: boolean
    Jurusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPendidikan"]>

  export type MahasiswaPendidikanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPendidikanId?: boolean
    PendaftaranId?: boolean
    NamaSekolah?: boolean
    TahunLulus?: boolean
    Jurusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPendidikan"]>

  export type MahasiswaPendidikanSelectScalar = {
    MahasiswaPendidikanId?: boolean
    PendaftaranId?: boolean
    NamaSekolah?: boolean
    TahunLulus?: boolean
    Jurusan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaPendidikanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaPendidikanId" | "PendaftaranId" | "NamaSekolah" | "TahunLulus" | "Jurusan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswaPendidikan"]>
  export type MahasiswaPendidikanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaPendidikanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaPendidikanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $MahasiswaPendidikanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MahasiswaPendidikan"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaPendidikanId: string
      PendaftaranId: string
      NamaSekolah: string
      TahunLulus: number
      Jurusan: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswaPendidikan"]>
    composites: {}
  }

  type MahasiswaPendidikanGetPayload<S extends boolean | null | undefined | MahasiswaPendidikanDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaPendidikanPayload, S>

  type MahasiswaPendidikanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaPendidikanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaPendidikanCountAggregateInputType | true
    }

  export interface MahasiswaPendidikanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MahasiswaPendidikan'], meta: { name: 'MahasiswaPendidikan' } }
    /**
     * Find zero or one MahasiswaPendidikan that matches the filter.
     * @param {MahasiswaPendidikanFindUniqueArgs} args - Arguments to find a MahasiswaPendidikan
     * @example
     * // Get one MahasiswaPendidikan
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaPendidikanFindUniqueArgs>(args: SelectSubset<T, MahasiswaPendidikanFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MahasiswaPendidikan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaPendidikanFindUniqueOrThrowArgs} args - Arguments to find a MahasiswaPendidikan
     * @example
     * // Get one MahasiswaPendidikan
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaPendidikanFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaPendidikanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaPendidikan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanFindFirstArgs} args - Arguments to find a MahasiswaPendidikan
     * @example
     * // Get one MahasiswaPendidikan
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaPendidikanFindFirstArgs>(args?: SelectSubset<T, MahasiswaPendidikanFindFirstArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaPendidikan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanFindFirstOrThrowArgs} args - Arguments to find a MahasiswaPendidikan
     * @example
     * // Get one MahasiswaPendidikan
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaPendidikanFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaPendidikanFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MahasiswaPendidikans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MahasiswaPendidikans
     * const mahasiswaPendidikans = await prisma.mahasiswaPendidikan.findMany()
     * 
     * // Get first 10 MahasiswaPendidikans
     * const mahasiswaPendidikans = await prisma.mahasiswaPendidikan.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaPendidikanId`
     * const mahasiswaPendidikanWithMahasiswaPendidikanIdOnly = await prisma.mahasiswaPendidikan.findMany({ select: { MahasiswaPendidikanId: true } })
     * 
     */
    findMany<T extends MahasiswaPendidikanFindManyArgs>(args?: SelectSubset<T, MahasiswaPendidikanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MahasiswaPendidikan.
     * @param {MahasiswaPendidikanCreateArgs} args - Arguments to create a MahasiswaPendidikan.
     * @example
     * // Create one MahasiswaPendidikan
     * const MahasiswaPendidikan = await prisma.mahasiswaPendidikan.create({
     *   data: {
     *     // ... data to create a MahasiswaPendidikan
     *   }
     * })
     * 
     */
    create<T extends MahasiswaPendidikanCreateArgs>(args: SelectSubset<T, MahasiswaPendidikanCreateArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MahasiswaPendidikans.
     * @param {MahasiswaPendidikanCreateManyArgs} args - Arguments to create many MahasiswaPendidikans.
     * @example
     * // Create many MahasiswaPendidikans
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaPendidikanCreateManyArgs>(args?: SelectSubset<T, MahasiswaPendidikanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MahasiswaPendidikans and returns the data saved in the database.
     * @param {MahasiswaPendidikanCreateManyAndReturnArgs} args - Arguments to create many MahasiswaPendidikans.
     * @example
     * // Create many MahasiswaPendidikans
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MahasiswaPendidikans and only return the `MahasiswaPendidikanId`
     * const mahasiswaPendidikanWithMahasiswaPendidikanIdOnly = await prisma.mahasiswaPendidikan.createManyAndReturn({
     *   select: { MahasiswaPendidikanId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaPendidikanCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaPendidikanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MahasiswaPendidikan.
     * @param {MahasiswaPendidikanDeleteArgs} args - Arguments to delete one MahasiswaPendidikan.
     * @example
     * // Delete one MahasiswaPendidikan
     * const MahasiswaPendidikan = await prisma.mahasiswaPendidikan.delete({
     *   where: {
     *     // ... filter to delete one MahasiswaPendidikan
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaPendidikanDeleteArgs>(args: SelectSubset<T, MahasiswaPendidikanDeleteArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MahasiswaPendidikan.
     * @param {MahasiswaPendidikanUpdateArgs} args - Arguments to update one MahasiswaPendidikan.
     * @example
     * // Update one MahasiswaPendidikan
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaPendidikanUpdateArgs>(args: SelectSubset<T, MahasiswaPendidikanUpdateArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MahasiswaPendidikans.
     * @param {MahasiswaPendidikanDeleteManyArgs} args - Arguments to filter MahasiswaPendidikans to delete.
     * @example
     * // Delete a few MahasiswaPendidikans
     * const { count } = await prisma.mahasiswaPendidikan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaPendidikanDeleteManyArgs>(args?: SelectSubset<T, MahasiswaPendidikanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaPendidikans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MahasiswaPendidikans
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaPendidikanUpdateManyArgs>(args: SelectSubset<T, MahasiswaPendidikanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaPendidikans and returns the data updated in the database.
     * @param {MahasiswaPendidikanUpdateManyAndReturnArgs} args - Arguments to update many MahasiswaPendidikans.
     * @example
     * // Update many MahasiswaPendidikans
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MahasiswaPendidikans and only return the `MahasiswaPendidikanId`
     * const mahasiswaPendidikanWithMahasiswaPendidikanIdOnly = await prisma.mahasiswaPendidikan.updateManyAndReturn({
     *   select: { MahasiswaPendidikanId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaPendidikanUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaPendidikanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MahasiswaPendidikan.
     * @param {MahasiswaPendidikanUpsertArgs} args - Arguments to update or create a MahasiswaPendidikan.
     * @example
     * // Update or create a MahasiswaPendidikan
     * const mahasiswaPendidikan = await prisma.mahasiswaPendidikan.upsert({
     *   create: {
     *     // ... data to create a MahasiswaPendidikan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MahasiswaPendidikan we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaPendidikanUpsertArgs>(args: SelectSubset<T, MahasiswaPendidikanUpsertArgs<ExtArgs>>): Prisma__MahasiswaPendidikanClient<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MahasiswaPendidikans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanCountArgs} args - Arguments to filter MahasiswaPendidikans to count.
     * @example
     * // Count the number of MahasiswaPendidikans
     * const count = await prisma.mahasiswaPendidikan.count({
     *   where: {
     *     // ... the filter for the MahasiswaPendidikans we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaPendidikanCountArgs>(
      args?: Subset<T, MahasiswaPendidikanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaPendidikanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MahasiswaPendidikan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaPendidikanAggregateArgs>(args: Subset<T, MahasiswaPendidikanAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaPendidikanAggregateType<T>>

    /**
     * Group by MahasiswaPendidikan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPendidikanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaPendidikanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaPendidikanGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaPendidikanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaPendidikanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaPendidikanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MahasiswaPendidikan model
   */
  readonly fields: MahasiswaPendidikanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MahasiswaPendidikan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaPendidikanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MahasiswaPendidikan model
   */
  interface MahasiswaPendidikanFieldRefs {
    readonly MahasiswaPendidikanId: FieldRef<"MahasiswaPendidikan", 'String'>
    readonly PendaftaranId: FieldRef<"MahasiswaPendidikan", 'String'>
    readonly NamaSekolah: FieldRef<"MahasiswaPendidikan", 'String'>
    readonly TahunLulus: FieldRef<"MahasiswaPendidikan", 'Int'>
    readonly Jurusan: FieldRef<"MahasiswaPendidikan", 'String'>
    readonly CreatedAt: FieldRef<"MahasiswaPendidikan", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MahasiswaPendidikan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MahasiswaPendidikan findUnique
   */
  export type MahasiswaPendidikanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPendidikan to fetch.
     */
    where: MahasiswaPendidikanWhereUniqueInput
  }

  /**
   * MahasiswaPendidikan findUniqueOrThrow
   */
  export type MahasiswaPendidikanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPendidikan to fetch.
     */
    where: MahasiswaPendidikanWhereUniqueInput
  }

  /**
   * MahasiswaPendidikan findFirst
   */
  export type MahasiswaPendidikanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPendidikan to fetch.
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPendidikans to fetch.
     */
    orderBy?: MahasiswaPendidikanOrderByWithRelationInput | MahasiswaPendidikanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaPendidikans.
     */
    cursor?: MahasiswaPendidikanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPendidikans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPendidikans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaPendidikans.
     */
    distinct?: MahasiswaPendidikanScalarFieldEnum | MahasiswaPendidikanScalarFieldEnum[]
  }

  /**
   * MahasiswaPendidikan findFirstOrThrow
   */
  export type MahasiswaPendidikanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPendidikan to fetch.
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPendidikans to fetch.
     */
    orderBy?: MahasiswaPendidikanOrderByWithRelationInput | MahasiswaPendidikanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaPendidikans.
     */
    cursor?: MahasiswaPendidikanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPendidikans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPendidikans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaPendidikans.
     */
    distinct?: MahasiswaPendidikanScalarFieldEnum | MahasiswaPendidikanScalarFieldEnum[]
  }

  /**
   * MahasiswaPendidikan findMany
   */
  export type MahasiswaPendidikanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPendidikans to fetch.
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPendidikans to fetch.
     */
    orderBy?: MahasiswaPendidikanOrderByWithRelationInput | MahasiswaPendidikanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MahasiswaPendidikans.
     */
    cursor?: MahasiswaPendidikanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPendidikans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPendidikans.
     */
    skip?: number
    distinct?: MahasiswaPendidikanScalarFieldEnum | MahasiswaPendidikanScalarFieldEnum[]
  }

  /**
   * MahasiswaPendidikan create
   */
  export type MahasiswaPendidikanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * The data needed to create a MahasiswaPendidikan.
     */
    data: XOR<MahasiswaPendidikanCreateInput, MahasiswaPendidikanUncheckedCreateInput>
  }

  /**
   * MahasiswaPendidikan createMany
   */
  export type MahasiswaPendidikanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MahasiswaPendidikans.
     */
    data: MahasiswaPendidikanCreateManyInput | MahasiswaPendidikanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MahasiswaPendidikan createManyAndReturn
   */
  export type MahasiswaPendidikanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * The data used to create many MahasiswaPendidikans.
     */
    data: MahasiswaPendidikanCreateManyInput | MahasiswaPendidikanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaPendidikan update
   */
  export type MahasiswaPendidikanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * The data needed to update a MahasiswaPendidikan.
     */
    data: XOR<MahasiswaPendidikanUpdateInput, MahasiswaPendidikanUncheckedUpdateInput>
    /**
     * Choose, which MahasiswaPendidikan to update.
     */
    where: MahasiswaPendidikanWhereUniqueInput
  }

  /**
   * MahasiswaPendidikan updateMany
   */
  export type MahasiswaPendidikanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MahasiswaPendidikans.
     */
    data: XOR<MahasiswaPendidikanUpdateManyMutationInput, MahasiswaPendidikanUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaPendidikans to update
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * Limit how many MahasiswaPendidikans to update.
     */
    limit?: number
  }

  /**
   * MahasiswaPendidikan updateManyAndReturn
   */
  export type MahasiswaPendidikanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * The data used to update MahasiswaPendidikans.
     */
    data: XOR<MahasiswaPendidikanUpdateManyMutationInput, MahasiswaPendidikanUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaPendidikans to update
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * Limit how many MahasiswaPendidikans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaPendidikan upsert
   */
  export type MahasiswaPendidikanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * The filter to search for the MahasiswaPendidikan to update in case it exists.
     */
    where: MahasiswaPendidikanWhereUniqueInput
    /**
     * In case the MahasiswaPendidikan found by the `where` argument doesn't exist, create a new MahasiswaPendidikan with this data.
     */
    create: XOR<MahasiswaPendidikanCreateInput, MahasiswaPendidikanUncheckedCreateInput>
    /**
     * In case the MahasiswaPendidikan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaPendidikanUpdateInput, MahasiswaPendidikanUncheckedUpdateInput>
  }

  /**
   * MahasiswaPendidikan delete
   */
  export type MahasiswaPendidikanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    /**
     * Filter which MahasiswaPendidikan to delete.
     */
    where: MahasiswaPendidikanWhereUniqueInput
  }

  /**
   * MahasiswaPendidikan deleteMany
   */
  export type MahasiswaPendidikanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaPendidikans to delete
     */
    where?: MahasiswaPendidikanWhereInput
    /**
     * Limit how many MahasiswaPendidikans to delete.
     */
    limit?: number
  }

  /**
   * MahasiswaPendidikan without action
   */
  export type MahasiswaPendidikanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
  }


  /**
   * Model MahasiswaPiagam
   */

  export type AggregateMahasiswaPiagam = {
    _count: MahasiswaPiagamCountAggregateOutputType | null
    _avg: MahasiswaPiagamAvgAggregateOutputType | null
    _sum: MahasiswaPiagamSumAggregateOutputType | null
    _min: MahasiswaPiagamMinAggregateOutputType | null
    _max: MahasiswaPiagamMaxAggregateOutputType | null
  }

  export type MahasiswaPiagamAvgAggregateOutputType = {
    Tahun: number | null
  }

  export type MahasiswaPiagamSumAggregateOutputType = {
    Tahun: number | null
  }

  export type MahasiswaPiagamMinAggregateOutputType = {
    MahasiswaPiagamId: string | null
    PendaftaranId: string | null
    Tahun: number | null
    BentukPenghargaan: string | null
    PemberiPenghargaan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaPiagamMaxAggregateOutputType = {
    MahasiswaPiagamId: string | null
    PendaftaranId: string | null
    Tahun: number | null
    BentukPenghargaan: string | null
    PemberiPenghargaan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaPiagamCountAggregateOutputType = {
    MahasiswaPiagamId: number
    PendaftaranId: number
    Tahun: number
    BentukPenghargaan: number
    PemberiPenghargaan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaPiagamAvgAggregateInputType = {
    Tahun?: true
  }

  export type MahasiswaPiagamSumAggregateInputType = {
    Tahun?: true
  }

  export type MahasiswaPiagamMinAggregateInputType = {
    MahasiswaPiagamId?: true
    PendaftaranId?: true
    Tahun?: true
    BentukPenghargaan?: true
    PemberiPenghargaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaPiagamMaxAggregateInputType = {
    MahasiswaPiagamId?: true
    PendaftaranId?: true
    Tahun?: true
    BentukPenghargaan?: true
    PemberiPenghargaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaPiagamCountAggregateInputType = {
    MahasiswaPiagamId?: true
    PendaftaranId?: true
    Tahun?: true
    BentukPenghargaan?: true
    PemberiPenghargaan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaPiagamAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaPiagam to aggregate.
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPiagams to fetch.
     */
    orderBy?: MahasiswaPiagamOrderByWithRelationInput | MahasiswaPiagamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaPiagamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPiagams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPiagams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MahasiswaPiagams
    **/
    _count?: true | MahasiswaPiagamCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MahasiswaPiagamAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MahasiswaPiagamSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaPiagamMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaPiagamMaxAggregateInputType
  }

  export type GetMahasiswaPiagamAggregateType<T extends MahasiswaPiagamAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswaPiagam]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswaPiagam[P]>
      : GetScalarType<T[P], AggregateMahasiswaPiagam[P]>
  }




  export type MahasiswaPiagamGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaPiagamWhereInput
    orderBy?: MahasiswaPiagamOrderByWithAggregationInput | MahasiswaPiagamOrderByWithAggregationInput[]
    by: MahasiswaPiagamScalarFieldEnum[] | MahasiswaPiagamScalarFieldEnum
    having?: MahasiswaPiagamScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaPiagamCountAggregateInputType | true
    _avg?: MahasiswaPiagamAvgAggregateInputType
    _sum?: MahasiswaPiagamSumAggregateInputType
    _min?: MahasiswaPiagamMinAggregateInputType
    _max?: MahasiswaPiagamMaxAggregateInputType
  }

  export type MahasiswaPiagamGroupByOutputType = {
    MahasiswaPiagamId: string
    PendaftaranId: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaPiagamCountAggregateOutputType | null
    _avg: MahasiswaPiagamAvgAggregateOutputType | null
    _sum: MahasiswaPiagamSumAggregateOutputType | null
    _min: MahasiswaPiagamMinAggregateOutputType | null
    _max: MahasiswaPiagamMaxAggregateOutputType | null
  }

  type GetMahasiswaPiagamGroupByPayload<T extends MahasiswaPiagamGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaPiagamGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaPiagamGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaPiagamGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaPiagamGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaPiagamSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPiagamId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    BentukPenghargaan?: boolean
    PemberiPenghargaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPiagam"]>

  export type MahasiswaPiagamSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPiagamId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    BentukPenghargaan?: boolean
    PemberiPenghargaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPiagam"]>

  export type MahasiswaPiagamSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaPiagamId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    BentukPenghargaan?: boolean
    PemberiPenghargaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaPiagam"]>

  export type MahasiswaPiagamSelectScalar = {
    MahasiswaPiagamId?: boolean
    PendaftaranId?: boolean
    Tahun?: boolean
    BentukPenghargaan?: boolean
    PemberiPenghargaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaPiagamOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaPiagamId" | "PendaftaranId" | "Tahun" | "BentukPenghargaan" | "PemberiPenghargaan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswaPiagam"]>
  export type MahasiswaPiagamInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaPiagamIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaPiagamIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $MahasiswaPiagamPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MahasiswaPiagam"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaPiagamId: string
      PendaftaranId: string
      Tahun: number
      BentukPenghargaan: string
      PemberiPenghargaan: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswaPiagam"]>
    composites: {}
  }

  type MahasiswaPiagamGetPayload<S extends boolean | null | undefined | MahasiswaPiagamDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaPiagamPayload, S>

  type MahasiswaPiagamCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaPiagamFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaPiagamCountAggregateInputType | true
    }

  export interface MahasiswaPiagamDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MahasiswaPiagam'], meta: { name: 'MahasiswaPiagam' } }
    /**
     * Find zero or one MahasiswaPiagam that matches the filter.
     * @param {MahasiswaPiagamFindUniqueArgs} args - Arguments to find a MahasiswaPiagam
     * @example
     * // Get one MahasiswaPiagam
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaPiagamFindUniqueArgs>(args: SelectSubset<T, MahasiswaPiagamFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MahasiswaPiagam that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaPiagamFindUniqueOrThrowArgs} args - Arguments to find a MahasiswaPiagam
     * @example
     * // Get one MahasiswaPiagam
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaPiagamFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaPiagamFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaPiagam that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamFindFirstArgs} args - Arguments to find a MahasiswaPiagam
     * @example
     * // Get one MahasiswaPiagam
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaPiagamFindFirstArgs>(args?: SelectSubset<T, MahasiswaPiagamFindFirstArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaPiagam that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamFindFirstOrThrowArgs} args - Arguments to find a MahasiswaPiagam
     * @example
     * // Get one MahasiswaPiagam
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaPiagamFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaPiagamFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MahasiswaPiagams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MahasiswaPiagams
     * const mahasiswaPiagams = await prisma.mahasiswaPiagam.findMany()
     * 
     * // Get first 10 MahasiswaPiagams
     * const mahasiswaPiagams = await prisma.mahasiswaPiagam.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaPiagamId`
     * const mahasiswaPiagamWithMahasiswaPiagamIdOnly = await prisma.mahasiswaPiagam.findMany({ select: { MahasiswaPiagamId: true } })
     * 
     */
    findMany<T extends MahasiswaPiagamFindManyArgs>(args?: SelectSubset<T, MahasiswaPiagamFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MahasiswaPiagam.
     * @param {MahasiswaPiagamCreateArgs} args - Arguments to create a MahasiswaPiagam.
     * @example
     * // Create one MahasiswaPiagam
     * const MahasiswaPiagam = await prisma.mahasiswaPiagam.create({
     *   data: {
     *     // ... data to create a MahasiswaPiagam
     *   }
     * })
     * 
     */
    create<T extends MahasiswaPiagamCreateArgs>(args: SelectSubset<T, MahasiswaPiagamCreateArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MahasiswaPiagams.
     * @param {MahasiswaPiagamCreateManyArgs} args - Arguments to create many MahasiswaPiagams.
     * @example
     * // Create many MahasiswaPiagams
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaPiagamCreateManyArgs>(args?: SelectSubset<T, MahasiswaPiagamCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MahasiswaPiagams and returns the data saved in the database.
     * @param {MahasiswaPiagamCreateManyAndReturnArgs} args - Arguments to create many MahasiswaPiagams.
     * @example
     * // Create many MahasiswaPiagams
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MahasiswaPiagams and only return the `MahasiswaPiagamId`
     * const mahasiswaPiagamWithMahasiswaPiagamIdOnly = await prisma.mahasiswaPiagam.createManyAndReturn({
     *   select: { MahasiswaPiagamId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaPiagamCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaPiagamCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MahasiswaPiagam.
     * @param {MahasiswaPiagamDeleteArgs} args - Arguments to delete one MahasiswaPiagam.
     * @example
     * // Delete one MahasiswaPiagam
     * const MahasiswaPiagam = await prisma.mahasiswaPiagam.delete({
     *   where: {
     *     // ... filter to delete one MahasiswaPiagam
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaPiagamDeleteArgs>(args: SelectSubset<T, MahasiswaPiagamDeleteArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MahasiswaPiagam.
     * @param {MahasiswaPiagamUpdateArgs} args - Arguments to update one MahasiswaPiagam.
     * @example
     * // Update one MahasiswaPiagam
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaPiagamUpdateArgs>(args: SelectSubset<T, MahasiswaPiagamUpdateArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MahasiswaPiagams.
     * @param {MahasiswaPiagamDeleteManyArgs} args - Arguments to filter MahasiswaPiagams to delete.
     * @example
     * // Delete a few MahasiswaPiagams
     * const { count } = await prisma.mahasiswaPiagam.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaPiagamDeleteManyArgs>(args?: SelectSubset<T, MahasiswaPiagamDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaPiagams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MahasiswaPiagams
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaPiagamUpdateManyArgs>(args: SelectSubset<T, MahasiswaPiagamUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaPiagams and returns the data updated in the database.
     * @param {MahasiswaPiagamUpdateManyAndReturnArgs} args - Arguments to update many MahasiswaPiagams.
     * @example
     * // Update many MahasiswaPiagams
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MahasiswaPiagams and only return the `MahasiswaPiagamId`
     * const mahasiswaPiagamWithMahasiswaPiagamIdOnly = await prisma.mahasiswaPiagam.updateManyAndReturn({
     *   select: { MahasiswaPiagamId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaPiagamUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaPiagamUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MahasiswaPiagam.
     * @param {MahasiswaPiagamUpsertArgs} args - Arguments to update or create a MahasiswaPiagam.
     * @example
     * // Update or create a MahasiswaPiagam
     * const mahasiswaPiagam = await prisma.mahasiswaPiagam.upsert({
     *   create: {
     *     // ... data to create a MahasiswaPiagam
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MahasiswaPiagam we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaPiagamUpsertArgs>(args: SelectSubset<T, MahasiswaPiagamUpsertArgs<ExtArgs>>): Prisma__MahasiswaPiagamClient<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MahasiswaPiagams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamCountArgs} args - Arguments to filter MahasiswaPiagams to count.
     * @example
     * // Count the number of MahasiswaPiagams
     * const count = await prisma.mahasiswaPiagam.count({
     *   where: {
     *     // ... the filter for the MahasiswaPiagams we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaPiagamCountArgs>(
      args?: Subset<T, MahasiswaPiagamCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaPiagamCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MahasiswaPiagam.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaPiagamAggregateArgs>(args: Subset<T, MahasiswaPiagamAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaPiagamAggregateType<T>>

    /**
     * Group by MahasiswaPiagam.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaPiagamGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaPiagamGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaPiagamGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaPiagamGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaPiagamGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaPiagamGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MahasiswaPiagam model
   */
  readonly fields: MahasiswaPiagamFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MahasiswaPiagam.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaPiagamClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MahasiswaPiagam model
   */
  interface MahasiswaPiagamFieldRefs {
    readonly MahasiswaPiagamId: FieldRef<"MahasiswaPiagam", 'String'>
    readonly PendaftaranId: FieldRef<"MahasiswaPiagam", 'String'>
    readonly Tahun: FieldRef<"MahasiswaPiagam", 'Int'>
    readonly BentukPenghargaan: FieldRef<"MahasiswaPiagam", 'String'>
    readonly PemberiPenghargaan: FieldRef<"MahasiswaPiagam", 'String'>
    readonly CreatedAt: FieldRef<"MahasiswaPiagam", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MahasiswaPiagam", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MahasiswaPiagam findUnique
   */
  export type MahasiswaPiagamFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPiagam to fetch.
     */
    where: MahasiswaPiagamWhereUniqueInput
  }

  /**
   * MahasiswaPiagam findUniqueOrThrow
   */
  export type MahasiswaPiagamFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPiagam to fetch.
     */
    where: MahasiswaPiagamWhereUniqueInput
  }

  /**
   * MahasiswaPiagam findFirst
   */
  export type MahasiswaPiagamFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPiagam to fetch.
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPiagams to fetch.
     */
    orderBy?: MahasiswaPiagamOrderByWithRelationInput | MahasiswaPiagamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaPiagams.
     */
    cursor?: MahasiswaPiagamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPiagams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPiagams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaPiagams.
     */
    distinct?: MahasiswaPiagamScalarFieldEnum | MahasiswaPiagamScalarFieldEnum[]
  }

  /**
   * MahasiswaPiagam findFirstOrThrow
   */
  export type MahasiswaPiagamFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPiagam to fetch.
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPiagams to fetch.
     */
    orderBy?: MahasiswaPiagamOrderByWithRelationInput | MahasiswaPiagamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaPiagams.
     */
    cursor?: MahasiswaPiagamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPiagams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPiagams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaPiagams.
     */
    distinct?: MahasiswaPiagamScalarFieldEnum | MahasiswaPiagamScalarFieldEnum[]
  }

  /**
   * MahasiswaPiagam findMany
   */
  export type MahasiswaPiagamFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaPiagams to fetch.
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaPiagams to fetch.
     */
    orderBy?: MahasiswaPiagamOrderByWithRelationInput | MahasiswaPiagamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MahasiswaPiagams.
     */
    cursor?: MahasiswaPiagamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaPiagams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaPiagams.
     */
    skip?: number
    distinct?: MahasiswaPiagamScalarFieldEnum | MahasiswaPiagamScalarFieldEnum[]
  }

  /**
   * MahasiswaPiagam create
   */
  export type MahasiswaPiagamCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * The data needed to create a MahasiswaPiagam.
     */
    data: XOR<MahasiswaPiagamCreateInput, MahasiswaPiagamUncheckedCreateInput>
  }

  /**
   * MahasiswaPiagam createMany
   */
  export type MahasiswaPiagamCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MahasiswaPiagams.
     */
    data: MahasiswaPiagamCreateManyInput | MahasiswaPiagamCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MahasiswaPiagam createManyAndReturn
   */
  export type MahasiswaPiagamCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * The data used to create many MahasiswaPiagams.
     */
    data: MahasiswaPiagamCreateManyInput | MahasiswaPiagamCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaPiagam update
   */
  export type MahasiswaPiagamUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * The data needed to update a MahasiswaPiagam.
     */
    data: XOR<MahasiswaPiagamUpdateInput, MahasiswaPiagamUncheckedUpdateInput>
    /**
     * Choose, which MahasiswaPiagam to update.
     */
    where: MahasiswaPiagamWhereUniqueInput
  }

  /**
   * MahasiswaPiagam updateMany
   */
  export type MahasiswaPiagamUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MahasiswaPiagams.
     */
    data: XOR<MahasiswaPiagamUpdateManyMutationInput, MahasiswaPiagamUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaPiagams to update
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * Limit how many MahasiswaPiagams to update.
     */
    limit?: number
  }

  /**
   * MahasiswaPiagam updateManyAndReturn
   */
  export type MahasiswaPiagamUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * The data used to update MahasiswaPiagams.
     */
    data: XOR<MahasiswaPiagamUpdateManyMutationInput, MahasiswaPiagamUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaPiagams to update
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * Limit how many MahasiswaPiagams to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaPiagam upsert
   */
  export type MahasiswaPiagamUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * The filter to search for the MahasiswaPiagam to update in case it exists.
     */
    where: MahasiswaPiagamWhereUniqueInput
    /**
     * In case the MahasiswaPiagam found by the `where` argument doesn't exist, create a new MahasiswaPiagam with this data.
     */
    create: XOR<MahasiswaPiagamCreateInput, MahasiswaPiagamUncheckedCreateInput>
    /**
     * In case the MahasiswaPiagam was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaPiagamUpdateInput, MahasiswaPiagamUncheckedUpdateInput>
  }

  /**
   * MahasiswaPiagam delete
   */
  export type MahasiswaPiagamDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    /**
     * Filter which MahasiswaPiagam to delete.
     */
    where: MahasiswaPiagamWhereUniqueInput
  }

  /**
   * MahasiswaPiagam deleteMany
   */
  export type MahasiswaPiagamDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaPiagams to delete
     */
    where?: MahasiswaPiagamWhereInput
    /**
     * Limit how many MahasiswaPiagams to delete.
     */
    limit?: number
  }

  /**
   * MahasiswaPiagam without action
   */
  export type MahasiswaPiagamDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
  }


  /**
   * Model MahasiswaRiwayatPekerjaan
   */

  export type AggregateMahasiswaRiwayatPekerjaan = {
    _count: MahasiswaRiwayatPekerjaanCountAggregateOutputType | null
    _min: MahasiswaRiwayatPekerjaanMinAggregateOutputType | null
    _max: MahasiswaRiwayatPekerjaanMaxAggregateOutputType | null
  }

  export type MahasiswaRiwayatPekerjaanMinAggregateOutputType = {
    MahasiswaRiwayatPekerjaanId: string | null
    PendaftaranId: string | null
    Nama: string | null
    PosisiJabatan: string | null
    Alamat: string | null
    UraianTugas: string | null
    MulaiBekerja: Date | null
    SelesaiBekerja: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaRiwayatPekerjaanMaxAggregateOutputType = {
    MahasiswaRiwayatPekerjaanId: string | null
    PendaftaranId: string | null
    Nama: string | null
    PosisiJabatan: string | null
    Alamat: string | null
    UraianTugas: string | null
    MulaiBekerja: Date | null
    SelesaiBekerja: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MahasiswaRiwayatPekerjaanCountAggregateOutputType = {
    MahasiswaRiwayatPekerjaanId: number
    PendaftaranId: number
    Nama: number
    PosisiJabatan: number
    Alamat: number
    UraianTugas: number
    MulaiBekerja: number
    SelesaiBekerja: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MahasiswaRiwayatPekerjaanMinAggregateInputType = {
    MahasiswaRiwayatPekerjaanId?: true
    PendaftaranId?: true
    Nama?: true
    PosisiJabatan?: true
    Alamat?: true
    UraianTugas?: true
    MulaiBekerja?: true
    SelesaiBekerja?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaRiwayatPekerjaanMaxAggregateInputType = {
    MahasiswaRiwayatPekerjaanId?: true
    PendaftaranId?: true
    Nama?: true
    PosisiJabatan?: true
    Alamat?: true
    UraianTugas?: true
    MulaiBekerja?: true
    SelesaiBekerja?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MahasiswaRiwayatPekerjaanCountAggregateInputType = {
    MahasiswaRiwayatPekerjaanId?: true
    PendaftaranId?: true
    Nama?: true
    PosisiJabatan?: true
    Alamat?: true
    UraianTugas?: true
    MulaiBekerja?: true
    SelesaiBekerja?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MahasiswaRiwayatPekerjaanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaRiwayatPekerjaan to aggregate.
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaRiwayatPekerjaans to fetch.
     */
    orderBy?: MahasiswaRiwayatPekerjaanOrderByWithRelationInput | MahasiswaRiwayatPekerjaanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaRiwayatPekerjaanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaRiwayatPekerjaans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaRiwayatPekerjaans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MahasiswaRiwayatPekerjaans
    **/
    _count?: true | MahasiswaRiwayatPekerjaanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaRiwayatPekerjaanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaRiwayatPekerjaanMaxAggregateInputType
  }

  export type GetMahasiswaRiwayatPekerjaanAggregateType<T extends MahasiswaRiwayatPekerjaanAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswaRiwayatPekerjaan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswaRiwayatPekerjaan[P]>
      : GetScalarType<T[P], AggregateMahasiswaRiwayatPekerjaan[P]>
  }




  export type MahasiswaRiwayatPekerjaanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaRiwayatPekerjaanWhereInput
    orderBy?: MahasiswaRiwayatPekerjaanOrderByWithAggregationInput | MahasiswaRiwayatPekerjaanOrderByWithAggregationInput[]
    by: MahasiswaRiwayatPekerjaanScalarFieldEnum[] | MahasiswaRiwayatPekerjaanScalarFieldEnum
    having?: MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaRiwayatPekerjaanCountAggregateInputType | true
    _min?: MahasiswaRiwayatPekerjaanMinAggregateInputType
    _max?: MahasiswaRiwayatPekerjaanMaxAggregateInputType
  }

  export type MahasiswaRiwayatPekerjaanGroupByOutputType = {
    MahasiswaRiwayatPekerjaanId: string
    PendaftaranId: string
    Nama: string
    PosisiJabatan: string
    Alamat: string | null
    UraianTugas: string | null
    MulaiBekerja: Date
    SelesaiBekerja: Date | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MahasiswaRiwayatPekerjaanCountAggregateOutputType | null
    _min: MahasiswaRiwayatPekerjaanMinAggregateOutputType | null
    _max: MahasiswaRiwayatPekerjaanMaxAggregateOutputType | null
  }

  type GetMahasiswaRiwayatPekerjaanGroupByPayload<T extends MahasiswaRiwayatPekerjaanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaRiwayatPekerjaanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaRiwayatPekerjaanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaRiwayatPekerjaanGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaRiwayatPekerjaanGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaRiwayatPekerjaanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaRiwayatPekerjaanId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    PosisiJabatan?: boolean
    Alamat?: boolean
    UraianTugas?: boolean
    MulaiBekerja?: boolean
    SelesaiBekerja?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaRiwayatPekerjaan"]>

  export type MahasiswaRiwayatPekerjaanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaRiwayatPekerjaanId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    PosisiJabatan?: boolean
    Alamat?: boolean
    UraianTugas?: boolean
    MulaiBekerja?: boolean
    SelesaiBekerja?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaRiwayatPekerjaan"]>

  export type MahasiswaRiwayatPekerjaanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MahasiswaRiwayatPekerjaanId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    PosisiJabatan?: boolean
    Alamat?: boolean
    UraianTugas?: boolean
    MulaiBekerja?: boolean
    SelesaiBekerja?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswaRiwayatPekerjaan"]>

  export type MahasiswaRiwayatPekerjaanSelectScalar = {
    MahasiswaRiwayatPekerjaanId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    PosisiJabatan?: boolean
    Alamat?: boolean
    UraianTugas?: boolean
    MulaiBekerja?: boolean
    SelesaiBekerja?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MahasiswaRiwayatPekerjaanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MahasiswaRiwayatPekerjaanId" | "PendaftaranId" | "Nama" | "PosisiJabatan" | "Alamat" | "UraianTugas" | "MulaiBekerja" | "SelesaiBekerja" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mahasiswaRiwayatPekerjaan"]>
  export type MahasiswaRiwayatPekerjaanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaRiwayatPekerjaanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type MahasiswaRiwayatPekerjaanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $MahasiswaRiwayatPekerjaanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MahasiswaRiwayatPekerjaan"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      MahasiswaRiwayatPekerjaanId: string
      PendaftaranId: string
      Nama: string
      PosisiJabatan: string
      Alamat: string | null
      UraianTugas: string | null
      MulaiBekerja: Date
      SelesaiBekerja: Date | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mahasiswaRiwayatPekerjaan"]>
    composites: {}
  }

  type MahasiswaRiwayatPekerjaanGetPayload<S extends boolean | null | undefined | MahasiswaRiwayatPekerjaanDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload, S>

  type MahasiswaRiwayatPekerjaanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MahasiswaRiwayatPekerjaanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MahasiswaRiwayatPekerjaanCountAggregateInputType | true
    }

  export interface MahasiswaRiwayatPekerjaanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MahasiswaRiwayatPekerjaan'], meta: { name: 'MahasiswaRiwayatPekerjaan' } }
    /**
     * Find zero or one MahasiswaRiwayatPekerjaan that matches the filter.
     * @param {MahasiswaRiwayatPekerjaanFindUniqueArgs} args - Arguments to find a MahasiswaRiwayatPekerjaan
     * @example
     * // Get one MahasiswaRiwayatPekerjaan
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaRiwayatPekerjaanFindUniqueArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MahasiswaRiwayatPekerjaan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MahasiswaRiwayatPekerjaanFindUniqueOrThrowArgs} args - Arguments to find a MahasiswaRiwayatPekerjaan
     * @example
     * // Get one MahasiswaRiwayatPekerjaan
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaRiwayatPekerjaanFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaRiwayatPekerjaan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanFindFirstArgs} args - Arguments to find a MahasiswaRiwayatPekerjaan
     * @example
     * // Get one MahasiswaRiwayatPekerjaan
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaRiwayatPekerjaanFindFirstArgs>(args?: SelectSubset<T, MahasiswaRiwayatPekerjaanFindFirstArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MahasiswaRiwayatPekerjaan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanFindFirstOrThrowArgs} args - Arguments to find a MahasiswaRiwayatPekerjaan
     * @example
     * // Get one MahasiswaRiwayatPekerjaan
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaRiwayatPekerjaanFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaRiwayatPekerjaanFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MahasiswaRiwayatPekerjaans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MahasiswaRiwayatPekerjaans
     * const mahasiswaRiwayatPekerjaans = await prisma.mahasiswaRiwayatPekerjaan.findMany()
     * 
     * // Get first 10 MahasiswaRiwayatPekerjaans
     * const mahasiswaRiwayatPekerjaans = await prisma.mahasiswaRiwayatPekerjaan.findMany({ take: 10 })
     * 
     * // Only select the `MahasiswaRiwayatPekerjaanId`
     * const mahasiswaRiwayatPekerjaanWithMahasiswaRiwayatPekerjaanIdOnly = await prisma.mahasiswaRiwayatPekerjaan.findMany({ select: { MahasiswaRiwayatPekerjaanId: true } })
     * 
     */
    findMany<T extends MahasiswaRiwayatPekerjaanFindManyArgs>(args?: SelectSubset<T, MahasiswaRiwayatPekerjaanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MahasiswaRiwayatPekerjaan.
     * @param {MahasiswaRiwayatPekerjaanCreateArgs} args - Arguments to create a MahasiswaRiwayatPekerjaan.
     * @example
     * // Create one MahasiswaRiwayatPekerjaan
     * const MahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.create({
     *   data: {
     *     // ... data to create a MahasiswaRiwayatPekerjaan
     *   }
     * })
     * 
     */
    create<T extends MahasiswaRiwayatPekerjaanCreateArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanCreateArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MahasiswaRiwayatPekerjaans.
     * @param {MahasiswaRiwayatPekerjaanCreateManyArgs} args - Arguments to create many MahasiswaRiwayatPekerjaans.
     * @example
     * // Create many MahasiswaRiwayatPekerjaans
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaRiwayatPekerjaanCreateManyArgs>(args?: SelectSubset<T, MahasiswaRiwayatPekerjaanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MahasiswaRiwayatPekerjaans and returns the data saved in the database.
     * @param {MahasiswaRiwayatPekerjaanCreateManyAndReturnArgs} args - Arguments to create many MahasiswaRiwayatPekerjaans.
     * @example
     * // Create many MahasiswaRiwayatPekerjaans
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MahasiswaRiwayatPekerjaans and only return the `MahasiswaRiwayatPekerjaanId`
     * const mahasiswaRiwayatPekerjaanWithMahasiswaRiwayatPekerjaanIdOnly = await prisma.mahasiswaRiwayatPekerjaan.createManyAndReturn({
     *   select: { MahasiswaRiwayatPekerjaanId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaRiwayatPekerjaanCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaRiwayatPekerjaanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MahasiswaRiwayatPekerjaan.
     * @param {MahasiswaRiwayatPekerjaanDeleteArgs} args - Arguments to delete one MahasiswaRiwayatPekerjaan.
     * @example
     * // Delete one MahasiswaRiwayatPekerjaan
     * const MahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.delete({
     *   where: {
     *     // ... filter to delete one MahasiswaRiwayatPekerjaan
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaRiwayatPekerjaanDeleteArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanDeleteArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MahasiswaRiwayatPekerjaan.
     * @param {MahasiswaRiwayatPekerjaanUpdateArgs} args - Arguments to update one MahasiswaRiwayatPekerjaan.
     * @example
     * // Update one MahasiswaRiwayatPekerjaan
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaRiwayatPekerjaanUpdateArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanUpdateArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MahasiswaRiwayatPekerjaans.
     * @param {MahasiswaRiwayatPekerjaanDeleteManyArgs} args - Arguments to filter MahasiswaRiwayatPekerjaans to delete.
     * @example
     * // Delete a few MahasiswaRiwayatPekerjaans
     * const { count } = await prisma.mahasiswaRiwayatPekerjaan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaRiwayatPekerjaanDeleteManyArgs>(args?: SelectSubset<T, MahasiswaRiwayatPekerjaanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaRiwayatPekerjaans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MahasiswaRiwayatPekerjaans
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaRiwayatPekerjaanUpdateManyArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MahasiswaRiwayatPekerjaans and returns the data updated in the database.
     * @param {MahasiswaRiwayatPekerjaanUpdateManyAndReturnArgs} args - Arguments to update many MahasiswaRiwayatPekerjaans.
     * @example
     * // Update many MahasiswaRiwayatPekerjaans
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MahasiswaRiwayatPekerjaans and only return the `MahasiswaRiwayatPekerjaanId`
     * const mahasiswaRiwayatPekerjaanWithMahasiswaRiwayatPekerjaanIdOnly = await prisma.mahasiswaRiwayatPekerjaan.updateManyAndReturn({
     *   select: { MahasiswaRiwayatPekerjaanId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MahasiswaRiwayatPekerjaanUpdateManyAndReturnArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MahasiswaRiwayatPekerjaan.
     * @param {MahasiswaRiwayatPekerjaanUpsertArgs} args - Arguments to update or create a MahasiswaRiwayatPekerjaan.
     * @example
     * // Update or create a MahasiswaRiwayatPekerjaan
     * const mahasiswaRiwayatPekerjaan = await prisma.mahasiswaRiwayatPekerjaan.upsert({
     *   create: {
     *     // ... data to create a MahasiswaRiwayatPekerjaan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MahasiswaRiwayatPekerjaan we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaRiwayatPekerjaanUpsertArgs>(args: SelectSubset<T, MahasiswaRiwayatPekerjaanUpsertArgs<ExtArgs>>): Prisma__MahasiswaRiwayatPekerjaanClient<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MahasiswaRiwayatPekerjaans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanCountArgs} args - Arguments to filter MahasiswaRiwayatPekerjaans to count.
     * @example
     * // Count the number of MahasiswaRiwayatPekerjaans
     * const count = await prisma.mahasiswaRiwayatPekerjaan.count({
     *   where: {
     *     // ... the filter for the MahasiswaRiwayatPekerjaans we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaRiwayatPekerjaanCountArgs>(
      args?: Subset<T, MahasiswaRiwayatPekerjaanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaRiwayatPekerjaanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MahasiswaRiwayatPekerjaan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaRiwayatPekerjaanAggregateArgs>(args: Subset<T, MahasiswaRiwayatPekerjaanAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaRiwayatPekerjaanAggregateType<T>>

    /**
     * Group by MahasiswaRiwayatPekerjaan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaRiwayatPekerjaanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaRiwayatPekerjaanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaRiwayatPekerjaanGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaRiwayatPekerjaanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaRiwayatPekerjaanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaRiwayatPekerjaanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MahasiswaRiwayatPekerjaan model
   */
  readonly fields: MahasiswaRiwayatPekerjaanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MahasiswaRiwayatPekerjaan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaRiwayatPekerjaanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MahasiswaRiwayatPekerjaan model
   */
  interface MahasiswaRiwayatPekerjaanFieldRefs {
    readonly MahasiswaRiwayatPekerjaanId: FieldRef<"MahasiswaRiwayatPekerjaan", 'String'>
    readonly PendaftaranId: FieldRef<"MahasiswaRiwayatPekerjaan", 'String'>
    readonly Nama: FieldRef<"MahasiswaRiwayatPekerjaan", 'String'>
    readonly PosisiJabatan: FieldRef<"MahasiswaRiwayatPekerjaan", 'String'>
    readonly Alamat: FieldRef<"MahasiswaRiwayatPekerjaan", 'String'>
    readonly UraianTugas: FieldRef<"MahasiswaRiwayatPekerjaan", 'String'>
    readonly MulaiBekerja: FieldRef<"MahasiswaRiwayatPekerjaan", 'DateTime'>
    readonly SelesaiBekerja: FieldRef<"MahasiswaRiwayatPekerjaan", 'DateTime'>
    readonly CreatedAt: FieldRef<"MahasiswaRiwayatPekerjaan", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MahasiswaRiwayatPekerjaan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MahasiswaRiwayatPekerjaan findUnique
   */
  export type MahasiswaRiwayatPekerjaanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaRiwayatPekerjaan to fetch.
     */
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
  }

  /**
   * MahasiswaRiwayatPekerjaan findUniqueOrThrow
   */
  export type MahasiswaRiwayatPekerjaanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaRiwayatPekerjaan to fetch.
     */
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
  }

  /**
   * MahasiswaRiwayatPekerjaan findFirst
   */
  export type MahasiswaRiwayatPekerjaanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaRiwayatPekerjaan to fetch.
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaRiwayatPekerjaans to fetch.
     */
    orderBy?: MahasiswaRiwayatPekerjaanOrderByWithRelationInput | MahasiswaRiwayatPekerjaanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaRiwayatPekerjaans.
     */
    cursor?: MahasiswaRiwayatPekerjaanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaRiwayatPekerjaans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaRiwayatPekerjaans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaRiwayatPekerjaans.
     */
    distinct?: MahasiswaRiwayatPekerjaanScalarFieldEnum | MahasiswaRiwayatPekerjaanScalarFieldEnum[]
  }

  /**
   * MahasiswaRiwayatPekerjaan findFirstOrThrow
   */
  export type MahasiswaRiwayatPekerjaanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaRiwayatPekerjaan to fetch.
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaRiwayatPekerjaans to fetch.
     */
    orderBy?: MahasiswaRiwayatPekerjaanOrderByWithRelationInput | MahasiswaRiwayatPekerjaanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MahasiswaRiwayatPekerjaans.
     */
    cursor?: MahasiswaRiwayatPekerjaanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaRiwayatPekerjaans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaRiwayatPekerjaans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MahasiswaRiwayatPekerjaans.
     */
    distinct?: MahasiswaRiwayatPekerjaanScalarFieldEnum | MahasiswaRiwayatPekerjaanScalarFieldEnum[]
  }

  /**
   * MahasiswaRiwayatPekerjaan findMany
   */
  export type MahasiswaRiwayatPekerjaanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * Filter, which MahasiswaRiwayatPekerjaans to fetch.
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MahasiswaRiwayatPekerjaans to fetch.
     */
    orderBy?: MahasiswaRiwayatPekerjaanOrderByWithRelationInput | MahasiswaRiwayatPekerjaanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MahasiswaRiwayatPekerjaans.
     */
    cursor?: MahasiswaRiwayatPekerjaanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MahasiswaRiwayatPekerjaans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MahasiswaRiwayatPekerjaans.
     */
    skip?: number
    distinct?: MahasiswaRiwayatPekerjaanScalarFieldEnum | MahasiswaRiwayatPekerjaanScalarFieldEnum[]
  }

  /**
   * MahasiswaRiwayatPekerjaan create
   */
  export type MahasiswaRiwayatPekerjaanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * The data needed to create a MahasiswaRiwayatPekerjaan.
     */
    data: XOR<MahasiswaRiwayatPekerjaanCreateInput, MahasiswaRiwayatPekerjaanUncheckedCreateInput>
  }

  /**
   * MahasiswaRiwayatPekerjaan createMany
   */
  export type MahasiswaRiwayatPekerjaanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MahasiswaRiwayatPekerjaans.
     */
    data: MahasiswaRiwayatPekerjaanCreateManyInput | MahasiswaRiwayatPekerjaanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MahasiswaRiwayatPekerjaan createManyAndReturn
   */
  export type MahasiswaRiwayatPekerjaanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * The data used to create many MahasiswaRiwayatPekerjaans.
     */
    data: MahasiswaRiwayatPekerjaanCreateManyInput | MahasiswaRiwayatPekerjaanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaRiwayatPekerjaan update
   */
  export type MahasiswaRiwayatPekerjaanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * The data needed to update a MahasiswaRiwayatPekerjaan.
     */
    data: XOR<MahasiswaRiwayatPekerjaanUpdateInput, MahasiswaRiwayatPekerjaanUncheckedUpdateInput>
    /**
     * Choose, which MahasiswaRiwayatPekerjaan to update.
     */
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
  }

  /**
   * MahasiswaRiwayatPekerjaan updateMany
   */
  export type MahasiswaRiwayatPekerjaanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MahasiswaRiwayatPekerjaans.
     */
    data: XOR<MahasiswaRiwayatPekerjaanUpdateManyMutationInput, MahasiswaRiwayatPekerjaanUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaRiwayatPekerjaans to update
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * Limit how many MahasiswaRiwayatPekerjaans to update.
     */
    limit?: number
  }

  /**
   * MahasiswaRiwayatPekerjaan updateManyAndReturn
   */
  export type MahasiswaRiwayatPekerjaanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * The data used to update MahasiswaRiwayatPekerjaans.
     */
    data: XOR<MahasiswaRiwayatPekerjaanUpdateManyMutationInput, MahasiswaRiwayatPekerjaanUncheckedUpdateManyInput>
    /**
     * Filter which MahasiswaRiwayatPekerjaans to update
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * Limit how many MahasiswaRiwayatPekerjaans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MahasiswaRiwayatPekerjaan upsert
   */
  export type MahasiswaRiwayatPekerjaanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * The filter to search for the MahasiswaRiwayatPekerjaan to update in case it exists.
     */
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
    /**
     * In case the MahasiswaRiwayatPekerjaan found by the `where` argument doesn't exist, create a new MahasiswaRiwayatPekerjaan with this data.
     */
    create: XOR<MahasiswaRiwayatPekerjaanCreateInput, MahasiswaRiwayatPekerjaanUncheckedCreateInput>
    /**
     * In case the MahasiswaRiwayatPekerjaan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaRiwayatPekerjaanUpdateInput, MahasiswaRiwayatPekerjaanUncheckedUpdateInput>
  }

  /**
   * MahasiswaRiwayatPekerjaan delete
   */
  export type MahasiswaRiwayatPekerjaanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    /**
     * Filter which MahasiswaRiwayatPekerjaan to delete.
     */
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
  }

  /**
   * MahasiswaRiwayatPekerjaan deleteMany
   */
  export type MahasiswaRiwayatPekerjaanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MahasiswaRiwayatPekerjaans to delete
     */
    where?: MahasiswaRiwayatPekerjaanWhereInput
    /**
     * Limit how many MahasiswaRiwayatPekerjaans to delete.
     */
    limit?: number
  }

  /**
   * MahasiswaRiwayatPekerjaan without action
   */
  export type MahasiswaRiwayatPekerjaanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
  }


  /**
   * Model MataKuliah
   */

  export type AggregateMataKuliah = {
    _count: MataKuliahCountAggregateOutputType | null
    _avg: MataKuliahAvgAggregateOutputType | null
    _sum: MataKuliahSumAggregateOutputType | null
    _min: MataKuliahMinAggregateOutputType | null
    _max: MataKuliahMaxAggregateOutputType | null
  }

  export type MataKuliahAvgAggregateOutputType = {
    Sks: number | null
  }

  export type MataKuliahSumAggregateOutputType = {
    Sks: number | null
  }

  export type MataKuliahMinAggregateOutputType = {
    MataKuliahId: string | null
    ProgramStudiId: string | null
    Kode: string | null
    Nama: string | null
    Sks: number | null
    Semester: string | null
    Silabus: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type MataKuliahMaxAggregateOutputType = {
    MataKuliahId: string | null
    ProgramStudiId: string | null
    Kode: string | null
    Nama: string | null
    Sks: number | null
    Semester: string | null
    Silabus: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type MataKuliahCountAggregateOutputType = {
    MataKuliahId: number
    ProgramStudiId: number
    Kode: number
    Nama: number
    Sks: number
    Semester: number
    Silabus: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type MataKuliahAvgAggregateInputType = {
    Sks?: true
  }

  export type MataKuliahSumAggregateInputType = {
    Sks?: true
  }

  export type MataKuliahMinAggregateInputType = {
    MataKuliahId?: true
    ProgramStudiId?: true
    Kode?: true
    Nama?: true
    Sks?: true
    Semester?: true
    Silabus?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type MataKuliahMaxAggregateInputType = {
    MataKuliahId?: true
    ProgramStudiId?: true
    Kode?: true
    Nama?: true
    Sks?: true
    Semester?: true
    Silabus?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type MataKuliahCountAggregateInputType = {
    MataKuliahId?: true
    ProgramStudiId?: true
    Kode?: true
    Nama?: true
    Sks?: true
    Semester?: true
    Silabus?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type MataKuliahAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliah to aggregate.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MataKuliahs
    **/
    _count?: true | MataKuliahCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MataKuliahAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MataKuliahSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MataKuliahMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MataKuliahMaxAggregateInputType
  }

  export type GetMataKuliahAggregateType<T extends MataKuliahAggregateArgs> = {
        [P in keyof T & keyof AggregateMataKuliah]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMataKuliah[P]>
      : GetScalarType<T[P], AggregateMataKuliah[P]>
  }




  export type MataKuliahGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahWhereInput
    orderBy?: MataKuliahOrderByWithAggregationInput | MataKuliahOrderByWithAggregationInput[]
    by: MataKuliahScalarFieldEnum[] | MataKuliahScalarFieldEnum
    having?: MataKuliahScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MataKuliahCountAggregateInputType | true
    _avg?: MataKuliahAvgAggregateInputType
    _sum?: MataKuliahSumAggregateInputType
    _min?: MataKuliahMinAggregateInputType
    _max?: MataKuliahMaxAggregateInputType
  }

  export type MataKuliahGroupByOutputType = {
    MataKuliahId: string
    ProgramStudiId: string
    Kode: string
    Nama: string
    Sks: number
    Semester: string | null
    Silabus: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: MataKuliahCountAggregateOutputType | null
    _avg: MataKuliahAvgAggregateOutputType | null
    _sum: MataKuliahSumAggregateOutputType | null
    _min: MataKuliahMinAggregateOutputType | null
    _max: MataKuliahMaxAggregateOutputType | null
  }

  type GetMataKuliahGroupByPayload<T extends MataKuliahGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MataKuliahGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MataKuliahGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MataKuliahGroupByOutputType[P]>
            : GetScalarType<T[P], MataKuliahGroupByOutputType[P]>
        }
      >
    >


  export type MataKuliahSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MataKuliahId?: boolean
    ProgramStudiId?: boolean
    Kode?: boolean
    Nama?: boolean
    Sks?: boolean
    Semester?: boolean
    Silabus?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | MataKuliah$CapaianPembelajaranArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliah$MataKuliahMahasiswaArgs<ExtArgs>
    _count?: boolean | MataKuliahCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliah"]>

  export type MataKuliahSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MataKuliahId?: boolean
    ProgramStudiId?: boolean
    Kode?: boolean
    Nama?: boolean
    Sks?: boolean
    Semester?: boolean
    Silabus?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliah"]>

  export type MataKuliahSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MataKuliahId?: boolean
    ProgramStudiId?: boolean
    Kode?: boolean
    Nama?: boolean
    Sks?: boolean
    Semester?: boolean
    Silabus?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliah"]>

  export type MataKuliahSelectScalar = {
    MataKuliahId?: boolean
    ProgramStudiId?: boolean
    Kode?: boolean
    Nama?: boolean
    Sks?: boolean
    Semester?: boolean
    Silabus?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type MataKuliahOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MataKuliahId" | "ProgramStudiId" | "Kode" | "Nama" | "Sks" | "Semester" | "Silabus" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["mataKuliah"]>
  export type MataKuliahInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
    CapaianPembelajaran?: boolean | MataKuliah$CapaianPembelajaranArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliah$MataKuliahMahasiswaArgs<ExtArgs>
    _count?: boolean | MataKuliahCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MataKuliahIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }
  export type MataKuliahIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProgramStudi?: boolean | ProgramStudiDefaultArgs<ExtArgs>
  }

  export type $MataKuliahPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MataKuliah"
    objects: {
      ProgramStudi: Prisma.$ProgramStudiPayload<ExtArgs>
      CapaianPembelajaran: Prisma.$CapaianPembelajaranPayload<ExtArgs>[]
      MataKuliahMahasiswa: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      MataKuliahId: string
      ProgramStudiId: string
      Kode: string
      Nama: string
      Sks: number
      Semester: string | null
      Silabus: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["mataKuliah"]>
    composites: {}
  }

  type MataKuliahGetPayload<S extends boolean | null | undefined | MataKuliahDefaultArgs> = $Result.GetResult<Prisma.$MataKuliahPayload, S>

  type MataKuliahCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MataKuliahFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MataKuliahCountAggregateInputType | true
    }

  export interface MataKuliahDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MataKuliah'], meta: { name: 'MataKuliah' } }
    /**
     * Find zero or one MataKuliah that matches the filter.
     * @param {MataKuliahFindUniqueArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MataKuliahFindUniqueArgs>(args: SelectSubset<T, MataKuliahFindUniqueArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MataKuliah that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MataKuliahFindUniqueOrThrowArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MataKuliahFindUniqueOrThrowArgs>(args: SelectSubset<T, MataKuliahFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MataKuliah that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahFindFirstArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MataKuliahFindFirstArgs>(args?: SelectSubset<T, MataKuliahFindFirstArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MataKuliah that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahFindFirstOrThrowArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MataKuliahFindFirstOrThrowArgs>(args?: SelectSubset<T, MataKuliahFindFirstOrThrowArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MataKuliahs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MataKuliahs
     * const mataKuliahs = await prisma.mataKuliah.findMany()
     * 
     * // Get first 10 MataKuliahs
     * const mataKuliahs = await prisma.mataKuliah.findMany({ take: 10 })
     * 
     * // Only select the `MataKuliahId`
     * const mataKuliahWithMataKuliahIdOnly = await prisma.mataKuliah.findMany({ select: { MataKuliahId: true } })
     * 
     */
    findMany<T extends MataKuliahFindManyArgs>(args?: SelectSubset<T, MataKuliahFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MataKuliah.
     * @param {MataKuliahCreateArgs} args - Arguments to create a MataKuliah.
     * @example
     * // Create one MataKuliah
     * const MataKuliah = await prisma.mataKuliah.create({
     *   data: {
     *     // ... data to create a MataKuliah
     *   }
     * })
     * 
     */
    create<T extends MataKuliahCreateArgs>(args: SelectSubset<T, MataKuliahCreateArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MataKuliahs.
     * @param {MataKuliahCreateManyArgs} args - Arguments to create many MataKuliahs.
     * @example
     * // Create many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MataKuliahCreateManyArgs>(args?: SelectSubset<T, MataKuliahCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MataKuliahs and returns the data saved in the database.
     * @param {MataKuliahCreateManyAndReturnArgs} args - Arguments to create many MataKuliahs.
     * @example
     * // Create many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MataKuliahs and only return the `MataKuliahId`
     * const mataKuliahWithMataKuliahIdOnly = await prisma.mataKuliah.createManyAndReturn({
     *   select: { MataKuliahId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MataKuliahCreateManyAndReturnArgs>(args?: SelectSubset<T, MataKuliahCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MataKuliah.
     * @param {MataKuliahDeleteArgs} args - Arguments to delete one MataKuliah.
     * @example
     * // Delete one MataKuliah
     * const MataKuliah = await prisma.mataKuliah.delete({
     *   where: {
     *     // ... filter to delete one MataKuliah
     *   }
     * })
     * 
     */
    delete<T extends MataKuliahDeleteArgs>(args: SelectSubset<T, MataKuliahDeleteArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MataKuliah.
     * @param {MataKuliahUpdateArgs} args - Arguments to update one MataKuliah.
     * @example
     * // Update one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MataKuliahUpdateArgs>(args: SelectSubset<T, MataKuliahUpdateArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MataKuliahs.
     * @param {MataKuliahDeleteManyArgs} args - Arguments to filter MataKuliahs to delete.
     * @example
     * // Delete a few MataKuliahs
     * const { count } = await prisma.mataKuliah.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MataKuliahDeleteManyArgs>(args?: SelectSubset<T, MataKuliahDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MataKuliahs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MataKuliahUpdateManyArgs>(args: SelectSubset<T, MataKuliahUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MataKuliahs and returns the data updated in the database.
     * @param {MataKuliahUpdateManyAndReturnArgs} args - Arguments to update many MataKuliahs.
     * @example
     * // Update many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MataKuliahs and only return the `MataKuliahId`
     * const mataKuliahWithMataKuliahIdOnly = await prisma.mataKuliah.updateManyAndReturn({
     *   select: { MataKuliahId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MataKuliahUpdateManyAndReturnArgs>(args: SelectSubset<T, MataKuliahUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MataKuliah.
     * @param {MataKuliahUpsertArgs} args - Arguments to update or create a MataKuliah.
     * @example
     * // Update or create a MataKuliah
     * const mataKuliah = await prisma.mataKuliah.upsert({
     *   create: {
     *     // ... data to create a MataKuliah
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MataKuliah we want to update
     *   }
     * })
     */
    upsert<T extends MataKuliahUpsertArgs>(args: SelectSubset<T, MataKuliahUpsertArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MataKuliahs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahCountArgs} args - Arguments to filter MataKuliahs to count.
     * @example
     * // Count the number of MataKuliahs
     * const count = await prisma.mataKuliah.count({
     *   where: {
     *     // ... the filter for the MataKuliahs we want to count
     *   }
     * })
    **/
    count<T extends MataKuliahCountArgs>(
      args?: Subset<T, MataKuliahCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MataKuliahCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MataKuliah.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MataKuliahAggregateArgs>(args: Subset<T, MataKuliahAggregateArgs>): Prisma.PrismaPromise<GetMataKuliahAggregateType<T>>

    /**
     * Group by MataKuliah.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MataKuliahGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MataKuliahGroupByArgs['orderBy'] }
        : { orderBy?: MataKuliahGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MataKuliahGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMataKuliahGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MataKuliah model
   */
  readonly fields: MataKuliahFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MataKuliah.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MataKuliahClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ProgramStudi<T extends ProgramStudiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramStudiDefaultArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    CapaianPembelajaran<T extends MataKuliah$CapaianPembelajaranArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliah$CapaianPembelajaranArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapaianPembelajaranPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MataKuliahMahasiswa<T extends MataKuliah$MataKuliahMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliah$MataKuliahMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MataKuliah model
   */
  interface MataKuliahFieldRefs {
    readonly MataKuliahId: FieldRef<"MataKuliah", 'String'>
    readonly ProgramStudiId: FieldRef<"MataKuliah", 'String'>
    readonly Kode: FieldRef<"MataKuliah", 'String'>
    readonly Nama: FieldRef<"MataKuliah", 'String'>
    readonly Sks: FieldRef<"MataKuliah", 'Int'>
    readonly Semester: FieldRef<"MataKuliah", 'String'>
    readonly Silabus: FieldRef<"MataKuliah", 'String'>
    readonly CreatedAt: FieldRef<"MataKuliah", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MataKuliah", 'DateTime'>
    readonly DeletedAt: FieldRef<"MataKuliah", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MataKuliah findUnique
   */
  export type MataKuliahFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah findUniqueOrThrow
   */
  export type MataKuliahFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah findFirst
   */
  export type MataKuliahFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahs.
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahs.
     */
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * MataKuliah findFirstOrThrow
   */
  export type MataKuliahFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahs.
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahs.
     */
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * MataKuliah findMany
   */
  export type MataKuliahFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahs to fetch.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MataKuliahs.
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * MataKuliah create
   */
  export type MataKuliahCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * The data needed to create a MataKuliah.
     */
    data: XOR<MataKuliahCreateInput, MataKuliahUncheckedCreateInput>
  }

  /**
   * MataKuliah createMany
   */
  export type MataKuliahCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MataKuliahs.
     */
    data: MataKuliahCreateManyInput | MataKuliahCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MataKuliah createManyAndReturn
   */
  export type MataKuliahCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * The data used to create many MataKuliahs.
     */
    data: MataKuliahCreateManyInput | MataKuliahCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MataKuliah update
   */
  export type MataKuliahUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * The data needed to update a MataKuliah.
     */
    data: XOR<MataKuliahUpdateInput, MataKuliahUncheckedUpdateInput>
    /**
     * Choose, which MataKuliah to update.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah updateMany
   */
  export type MataKuliahUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MataKuliahs.
     */
    data: XOR<MataKuliahUpdateManyMutationInput, MataKuliahUncheckedUpdateManyInput>
    /**
     * Filter which MataKuliahs to update
     */
    where?: MataKuliahWhereInput
    /**
     * Limit how many MataKuliahs to update.
     */
    limit?: number
  }

  /**
   * MataKuliah updateManyAndReturn
   */
  export type MataKuliahUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * The data used to update MataKuliahs.
     */
    data: XOR<MataKuliahUpdateManyMutationInput, MataKuliahUncheckedUpdateManyInput>
    /**
     * Filter which MataKuliahs to update
     */
    where?: MataKuliahWhereInput
    /**
     * Limit how many MataKuliahs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MataKuliah upsert
   */
  export type MataKuliahUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * The filter to search for the MataKuliah to update in case it exists.
     */
    where: MataKuliahWhereUniqueInput
    /**
     * In case the MataKuliah found by the `where` argument doesn't exist, create a new MataKuliah with this data.
     */
    create: XOR<MataKuliahCreateInput, MataKuliahUncheckedCreateInput>
    /**
     * In case the MataKuliah was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MataKuliahUpdateInput, MataKuliahUncheckedUpdateInput>
  }

  /**
   * MataKuliah delete
   */
  export type MataKuliahDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter which MataKuliah to delete.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah deleteMany
   */
  export type MataKuliahDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliahs to delete
     */
    where?: MataKuliahWhereInput
    /**
     * Limit how many MataKuliahs to delete.
     */
    limit?: number
  }

  /**
   * MataKuliah.CapaianPembelajaran
   */
  export type MataKuliah$CapaianPembelajaranArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapaianPembelajaran
     */
    select?: CapaianPembelajaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapaianPembelajaran
     */
    omit?: CapaianPembelajaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapaianPembelajaranInclude<ExtArgs> | null
    where?: CapaianPembelajaranWhereInput
    orderBy?: CapaianPembelajaranOrderByWithRelationInput | CapaianPembelajaranOrderByWithRelationInput[]
    cursor?: CapaianPembelajaranWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CapaianPembelajaranScalarFieldEnum | CapaianPembelajaranScalarFieldEnum[]
  }

  /**
   * MataKuliah.MataKuliahMahasiswa
   */
  export type MataKuliah$MataKuliahMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    where?: MataKuliahMahasiswaWhereInput
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliah without action
   */
  export type MataKuliahDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
  }


  /**
   * Model MataKuliahMahasiswa
   */

  export type AggregateMataKuliahMahasiswa = {
    _count: MataKuliahMahasiswaCountAggregateOutputType | null
    _min: MataKuliahMahasiswaMinAggregateOutputType | null
    _max: MataKuliahMahasiswaMaxAggregateOutputType | null
  }

  export type MataKuliahMahasiswaMinAggregateOutputType = {
    MataKuliahMahasiswaId: string | null
    PendaftaranId: string | null
    MataKuliahId: string | null
    Rpl: boolean | null
    Keterangan: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MataKuliahMahasiswaMaxAggregateOutputType = {
    MataKuliahMahasiswaId: string | null
    PendaftaranId: string | null
    MataKuliahId: string | null
    Rpl: boolean | null
    Keterangan: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type MataKuliahMahasiswaCountAggregateOutputType = {
    MataKuliahMahasiswaId: number
    PendaftaranId: number
    MataKuliahId: number
    Rpl: number
    Keterangan: number
    StatusMataKuliahMahasiswa: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type MataKuliahMahasiswaMinAggregateInputType = {
    MataKuliahMahasiswaId?: true
    PendaftaranId?: true
    MataKuliahId?: true
    Rpl?: true
    Keterangan?: true
    StatusMataKuliahMahasiswa?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MataKuliahMahasiswaMaxAggregateInputType = {
    MataKuliahMahasiswaId?: true
    PendaftaranId?: true
    MataKuliahId?: true
    Rpl?: true
    Keterangan?: true
    StatusMataKuliahMahasiswa?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type MataKuliahMahasiswaCountAggregateInputType = {
    MataKuliahMahasiswaId?: true
    PendaftaranId?: true
    MataKuliahId?: true
    Rpl?: true
    Keterangan?: true
    StatusMataKuliahMahasiswa?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type MataKuliahMahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliahMahasiswa to aggregate.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MataKuliahMahasiswas
    **/
    _count?: true | MataKuliahMahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MataKuliahMahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MataKuliahMahasiswaMaxAggregateInputType
  }

  export type GetMataKuliahMahasiswaAggregateType<T extends MataKuliahMahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregateMataKuliahMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMataKuliahMahasiswa[P]>
      : GetScalarType<T[P], AggregateMataKuliahMahasiswa[P]>
  }




  export type MataKuliahMahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahMahasiswaWhereInput
    orderBy?: MataKuliahMahasiswaOrderByWithAggregationInput | MataKuliahMahasiswaOrderByWithAggregationInput[]
    by: MataKuliahMahasiswaScalarFieldEnum[] | MataKuliahMahasiswaScalarFieldEnum
    having?: MataKuliahMahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MataKuliahMahasiswaCountAggregateInputType | true
    _min?: MataKuliahMahasiswaMinAggregateInputType
    _max?: MataKuliahMahasiswaMaxAggregateInputType
  }

  export type MataKuliahMahasiswaGroupByOutputType = {
    MataKuliahMahasiswaId: string
    PendaftaranId: string
    MataKuliahId: string
    Rpl: boolean
    Keterangan: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: MataKuliahMahasiswaCountAggregateOutputType | null
    _min: MataKuliahMahasiswaMinAggregateOutputType | null
    _max: MataKuliahMahasiswaMaxAggregateOutputType | null
  }

  type GetMataKuliahMahasiswaGroupByPayload<T extends MataKuliahMahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MataKuliahMahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MataKuliahMahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MataKuliahMahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], MataKuliahMahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type MataKuliahMahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MataKuliahMahasiswaId?: boolean
    PendaftaranId?: boolean
    MataKuliahId?: boolean
    Rpl?: boolean
    Keterangan?: boolean
    StatusMataKuliahMahasiswa?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | MataKuliahMahasiswa$EvaluasiDiriArgs<ExtArgs>
    SanggahanAssesmenMk?: boolean | MataKuliahMahasiswa$SanggahanAssesmenMkArgs<ExtArgs>
    _count?: boolean | MataKuliahMahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliahMahasiswa"]>

  export type MataKuliahMahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MataKuliahMahasiswaId?: boolean
    PendaftaranId?: boolean
    MataKuliahId?: boolean
    Rpl?: boolean
    Keterangan?: boolean
    StatusMataKuliahMahasiswa?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliahMahasiswa"]>

  export type MataKuliahMahasiswaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    MataKuliahMahasiswaId?: boolean
    PendaftaranId?: boolean
    MataKuliahId?: boolean
    Rpl?: boolean
    Keterangan?: boolean
    StatusMataKuliahMahasiswa?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliahMahasiswa"]>

  export type MataKuliahMahasiswaSelectScalar = {
    MataKuliahMahasiswaId?: boolean
    PendaftaranId?: boolean
    MataKuliahId?: boolean
    Rpl?: boolean
    Keterangan?: boolean
    StatusMataKuliahMahasiswa?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type MataKuliahMahasiswaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"MataKuliahMahasiswaId" | "PendaftaranId" | "MataKuliahId" | "Rpl" | "Keterangan" | "StatusMataKuliahMahasiswa" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["mataKuliahMahasiswa"]>
  export type MataKuliahMahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
    EvaluasiDiri?: boolean | MataKuliahMahasiswa$EvaluasiDiriArgs<ExtArgs>
    SanggahanAssesmenMk?: boolean | MataKuliahMahasiswa$SanggahanAssesmenMkArgs<ExtArgs>
    _count?: boolean | MataKuliahMahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MataKuliahMahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }
  export type MataKuliahMahasiswaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    MataKuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }

  export type $MataKuliahMahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MataKuliahMahasiswa"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
      MataKuliah: Prisma.$MataKuliahPayload<ExtArgs>
      EvaluasiDiri: Prisma.$EvaluasiDiriPayload<ExtArgs>[]
      SanggahanAssesmenMk: Prisma.$SanggahanAssesmenMkPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      MataKuliahMahasiswaId: string
      PendaftaranId: string
      MataKuliahId: string
      Rpl: boolean
      Keterangan: $Enums.KeteranganMataKuliah | null
      StatusMataKuliahMahasiswa: $Enums.StatusMataKuliahMahasiswa | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["mataKuliahMahasiswa"]>
    composites: {}
  }

  type MataKuliahMahasiswaGetPayload<S extends boolean | null | undefined | MataKuliahMahasiswaDefaultArgs> = $Result.GetResult<Prisma.$MataKuliahMahasiswaPayload, S>

  type MataKuliahMahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MataKuliahMahasiswaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MataKuliahMahasiswaCountAggregateInputType | true
    }

  export interface MataKuliahMahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MataKuliahMahasiswa'], meta: { name: 'MataKuliahMahasiswa' } }
    /**
     * Find zero or one MataKuliahMahasiswa that matches the filter.
     * @param {MataKuliahMahasiswaFindUniqueArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MataKuliahMahasiswaFindUniqueArgs>(args: SelectSubset<T, MataKuliahMahasiswaFindUniqueArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MataKuliahMahasiswa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MataKuliahMahasiswaFindUniqueOrThrowArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MataKuliahMahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, MataKuliahMahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MataKuliahMahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaFindFirstArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MataKuliahMahasiswaFindFirstArgs>(args?: SelectSubset<T, MataKuliahMahasiswaFindFirstArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MataKuliahMahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaFindFirstOrThrowArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MataKuliahMahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, MataKuliahMahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MataKuliahMahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MataKuliahMahasiswas
     * const mataKuliahMahasiswas = await prisma.mataKuliahMahasiswa.findMany()
     * 
     * // Get first 10 MataKuliahMahasiswas
     * const mataKuliahMahasiswas = await prisma.mataKuliahMahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `MataKuliahMahasiswaId`
     * const mataKuliahMahasiswaWithMataKuliahMahasiswaIdOnly = await prisma.mataKuliahMahasiswa.findMany({ select: { MataKuliahMahasiswaId: true } })
     * 
     */
    findMany<T extends MataKuliahMahasiswaFindManyArgs>(args?: SelectSubset<T, MataKuliahMahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaCreateArgs} args - Arguments to create a MataKuliahMahasiswa.
     * @example
     * // Create one MataKuliahMahasiswa
     * const MataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.create({
     *   data: {
     *     // ... data to create a MataKuliahMahasiswa
     *   }
     * })
     * 
     */
    create<T extends MataKuliahMahasiswaCreateArgs>(args: SelectSubset<T, MataKuliahMahasiswaCreateArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MataKuliahMahasiswas.
     * @param {MataKuliahMahasiswaCreateManyArgs} args - Arguments to create many MataKuliahMahasiswas.
     * @example
     * // Create many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MataKuliahMahasiswaCreateManyArgs>(args?: SelectSubset<T, MataKuliahMahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MataKuliahMahasiswas and returns the data saved in the database.
     * @param {MataKuliahMahasiswaCreateManyAndReturnArgs} args - Arguments to create many MataKuliahMahasiswas.
     * @example
     * // Create many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MataKuliahMahasiswas and only return the `MataKuliahMahasiswaId`
     * const mataKuliahMahasiswaWithMataKuliahMahasiswaIdOnly = await prisma.mataKuliahMahasiswa.createManyAndReturn({
     *   select: { MataKuliahMahasiswaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MataKuliahMahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, MataKuliahMahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaDeleteArgs} args - Arguments to delete one MataKuliahMahasiswa.
     * @example
     * // Delete one MataKuliahMahasiswa
     * const MataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.delete({
     *   where: {
     *     // ... filter to delete one MataKuliahMahasiswa
     *   }
     * })
     * 
     */
    delete<T extends MataKuliahMahasiswaDeleteArgs>(args: SelectSubset<T, MataKuliahMahasiswaDeleteArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaUpdateArgs} args - Arguments to update one MataKuliahMahasiswa.
     * @example
     * // Update one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MataKuliahMahasiswaUpdateArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpdateArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MataKuliahMahasiswas.
     * @param {MataKuliahMahasiswaDeleteManyArgs} args - Arguments to filter MataKuliahMahasiswas to delete.
     * @example
     * // Delete a few MataKuliahMahasiswas
     * const { count } = await prisma.mataKuliahMahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MataKuliahMahasiswaDeleteManyArgs>(args?: SelectSubset<T, MataKuliahMahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MataKuliahMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MataKuliahMahasiswaUpdateManyArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MataKuliahMahasiswas and returns the data updated in the database.
     * @param {MataKuliahMahasiswaUpdateManyAndReturnArgs} args - Arguments to update many MataKuliahMahasiswas.
     * @example
     * // Update many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MataKuliahMahasiswas and only return the `MataKuliahMahasiswaId`
     * const mataKuliahMahasiswaWithMataKuliahMahasiswaIdOnly = await prisma.mataKuliahMahasiswa.updateManyAndReturn({
     *   select: { MataKuliahMahasiswaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MataKuliahMahasiswaUpdateManyAndReturnArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaUpsertArgs} args - Arguments to update or create a MataKuliahMahasiswa.
     * @example
     * // Update or create a MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.upsert({
     *   create: {
     *     // ... data to create a MataKuliahMahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MataKuliahMahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends MataKuliahMahasiswaUpsertArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpsertArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MataKuliahMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaCountArgs} args - Arguments to filter MataKuliahMahasiswas to count.
     * @example
     * // Count the number of MataKuliahMahasiswas
     * const count = await prisma.mataKuliahMahasiswa.count({
     *   where: {
     *     // ... the filter for the MataKuliahMahasiswas we want to count
     *   }
     * })
    **/
    count<T extends MataKuliahMahasiswaCountArgs>(
      args?: Subset<T, MataKuliahMahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MataKuliahMahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MataKuliahMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MataKuliahMahasiswaAggregateArgs>(args: Subset<T, MataKuliahMahasiswaAggregateArgs>): Prisma.PrismaPromise<GetMataKuliahMahasiswaAggregateType<T>>

    /**
     * Group by MataKuliahMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MataKuliahMahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MataKuliahMahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: MataKuliahMahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MataKuliahMahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMataKuliahMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MataKuliahMahasiswa model
   */
  readonly fields: MataKuliahMahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MataKuliahMahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MataKuliahMahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    MataKuliah<T extends MataKuliahDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahDefaultArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EvaluasiDiri<T extends MataKuliahMahasiswa$EvaluasiDiriArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahMahasiswa$EvaluasiDiriArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluasiDiriPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SanggahanAssesmenMk<T extends MataKuliahMahasiswa$SanggahanAssesmenMkArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahMahasiswa$SanggahanAssesmenMkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MataKuliahMahasiswa model
   */
  interface MataKuliahMahasiswaFieldRefs {
    readonly MataKuliahMahasiswaId: FieldRef<"MataKuliahMahasiswa", 'String'>
    readonly PendaftaranId: FieldRef<"MataKuliahMahasiswa", 'String'>
    readonly MataKuliahId: FieldRef<"MataKuliahMahasiswa", 'String'>
    readonly Rpl: FieldRef<"MataKuliahMahasiswa", 'Boolean'>
    readonly Keterangan: FieldRef<"MataKuliahMahasiswa", 'KeteranganMataKuliah'>
    readonly StatusMataKuliahMahasiswa: FieldRef<"MataKuliahMahasiswa", 'StatusMataKuliahMahasiswa'>
    readonly CreatedAt: FieldRef<"MataKuliahMahasiswa", 'DateTime'>
    readonly UpdatedAt: FieldRef<"MataKuliahMahasiswa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MataKuliahMahasiswa findUnique
   */
  export type MataKuliahMahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa findUniqueOrThrow
   */
  export type MataKuliahMahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa findFirst
   */
  export type MataKuliahMahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahMahasiswas.
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahMahasiswas.
     */
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa findFirstOrThrow
   */
  export type MataKuliahMahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahMahasiswas.
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahMahasiswas.
     */
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa findMany
   */
  export type MataKuliahMahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswas to fetch.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MataKuliahMahasiswas.
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa create
   */
  export type MataKuliahMahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a MataKuliahMahasiswa.
     */
    data: XOR<MataKuliahMahasiswaCreateInput, MataKuliahMahasiswaUncheckedCreateInput>
  }

  /**
   * MataKuliahMahasiswa createMany
   */
  export type MataKuliahMahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MataKuliahMahasiswas.
     */
    data: MataKuliahMahasiswaCreateManyInput | MataKuliahMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MataKuliahMahasiswa createManyAndReturn
   */
  export type MataKuliahMahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to create many MataKuliahMahasiswas.
     */
    data: MataKuliahMahasiswaCreateManyInput | MataKuliahMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MataKuliahMahasiswa update
   */
  export type MataKuliahMahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a MataKuliahMahasiswa.
     */
    data: XOR<MataKuliahMahasiswaUpdateInput, MataKuliahMahasiswaUncheckedUpdateInput>
    /**
     * Choose, which MataKuliahMahasiswa to update.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa updateMany
   */
  export type MataKuliahMahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MataKuliahMahasiswas.
     */
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which MataKuliahMahasiswas to update
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * Limit how many MataKuliahMahasiswas to update.
     */
    limit?: number
  }

  /**
   * MataKuliahMahasiswa updateManyAndReturn
   */
  export type MataKuliahMahasiswaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to update MataKuliahMahasiswas.
     */
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which MataKuliahMahasiswas to update
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * Limit how many MataKuliahMahasiswas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MataKuliahMahasiswa upsert
   */
  export type MataKuliahMahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the MataKuliahMahasiswa to update in case it exists.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
    /**
     * In case the MataKuliahMahasiswa found by the `where` argument doesn't exist, create a new MataKuliahMahasiswa with this data.
     */
    create: XOR<MataKuliahMahasiswaCreateInput, MataKuliahMahasiswaUncheckedCreateInput>
    /**
     * In case the MataKuliahMahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MataKuliahMahasiswaUpdateInput, MataKuliahMahasiswaUncheckedUpdateInput>
  }

  /**
   * MataKuliahMahasiswa delete
   */
  export type MataKuliahMahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter which MataKuliahMahasiswa to delete.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa deleteMany
   */
  export type MataKuliahMahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliahMahasiswas to delete
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * Limit how many MataKuliahMahasiswas to delete.
     */
    limit?: number
  }

  /**
   * MataKuliahMahasiswa.EvaluasiDiri
   */
  export type MataKuliahMahasiswa$EvaluasiDiriArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluasiDiri
     */
    select?: EvaluasiDiriSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluasiDiri
     */
    omit?: EvaluasiDiriOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluasiDiriInclude<ExtArgs> | null
    where?: EvaluasiDiriWhereInput
    orderBy?: EvaluasiDiriOrderByWithRelationInput | EvaluasiDiriOrderByWithRelationInput[]
    cursor?: EvaluasiDiriWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluasiDiriScalarFieldEnum | EvaluasiDiriScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa.SanggahanAssesmenMk
   */
  export type MataKuliahMahasiswa$SanggahanAssesmenMkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    where?: SanggahanAssesmenMkWhereInput
    orderBy?: SanggahanAssesmenMkOrderByWithRelationInput | SanggahanAssesmenMkOrderByWithRelationInput[]
    cursor?: SanggahanAssesmenMkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SanggahanAssesmenMkScalarFieldEnum | SanggahanAssesmenMkScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa without action
   */
  export type MataKuliahMahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model UserHasPermissions
   */

  export type AggregateUserHasPermissions = {
    _count: UserHasPermissionsCountAggregateOutputType | null
    _min: UserHasPermissionsMinAggregateOutputType | null
    _max: UserHasPermissionsMaxAggregateOutputType | null
  }

  export type UserHasPermissionsMinAggregateOutputType = {
    PermissionId: string | null
    UserId: string | null
  }

  export type UserHasPermissionsMaxAggregateOutputType = {
    PermissionId: string | null
    UserId: string | null
  }

  export type UserHasPermissionsCountAggregateOutputType = {
    PermissionId: number
    UserId: number
    _all: number
  }


  export type UserHasPermissionsMinAggregateInputType = {
    PermissionId?: true
    UserId?: true
  }

  export type UserHasPermissionsMaxAggregateInputType = {
    PermissionId?: true
    UserId?: true
  }

  export type UserHasPermissionsCountAggregateInputType = {
    PermissionId?: true
    UserId?: true
    _all?: true
  }

  export type UserHasPermissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHasPermissions to aggregate.
     */
    where?: UserHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasPermissions to fetch.
     */
    orderBy?: UserHasPermissionsOrderByWithRelationInput | UserHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserHasPermissions
    **/
    _count?: true | UserHasPermissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserHasPermissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserHasPermissionsMaxAggregateInputType
  }

  export type GetUserHasPermissionsAggregateType<T extends UserHasPermissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUserHasPermissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserHasPermissions[P]>
      : GetScalarType<T[P], AggregateUserHasPermissions[P]>
  }




  export type UserHasPermissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHasPermissionsWhereInput
    orderBy?: UserHasPermissionsOrderByWithAggregationInput | UserHasPermissionsOrderByWithAggregationInput[]
    by: UserHasPermissionsScalarFieldEnum[] | UserHasPermissionsScalarFieldEnum
    having?: UserHasPermissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserHasPermissionsCountAggregateInputType | true
    _min?: UserHasPermissionsMinAggregateInputType
    _max?: UserHasPermissionsMaxAggregateInputType
  }

  export type UserHasPermissionsGroupByOutputType = {
    PermissionId: string
    UserId: string
    _count: UserHasPermissionsCountAggregateOutputType | null
    _min: UserHasPermissionsMinAggregateOutputType | null
    _max: UserHasPermissionsMaxAggregateOutputType | null
  }

  type GetUserHasPermissionsGroupByPayload<T extends UserHasPermissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserHasPermissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserHasPermissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserHasPermissionsGroupByOutputType[P]>
            : GetScalarType<T[P], UserHasPermissionsGroupByOutputType[P]>
        }
      >
    >


  export type UserHasPermissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    UserId?: boolean
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHasPermissions"]>

  export type UserHasPermissionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    UserId?: boolean
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHasPermissions"]>

  export type UserHasPermissionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    UserId?: boolean
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHasPermissions"]>

  export type UserHasPermissionsSelectScalar = {
    PermissionId?: boolean
    UserId?: boolean
  }

  export type UserHasPermissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"PermissionId" | "UserId", ExtArgs["result"]["userHasPermissions"]>
  export type UserHasPermissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHasPermissionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHasPermissionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserHasPermissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserHasPermissions"
    objects: {
      Permission: Prisma.$PermissionPayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      PermissionId: string
      UserId: string
    }, ExtArgs["result"]["userHasPermissions"]>
    composites: {}
  }

  type UserHasPermissionsGetPayload<S extends boolean | null | undefined | UserHasPermissionsDefaultArgs> = $Result.GetResult<Prisma.$UserHasPermissionsPayload, S>

  type UserHasPermissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserHasPermissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserHasPermissionsCountAggregateInputType | true
    }

  export interface UserHasPermissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserHasPermissions'], meta: { name: 'UserHasPermissions' } }
    /**
     * Find zero or one UserHasPermissions that matches the filter.
     * @param {UserHasPermissionsFindUniqueArgs} args - Arguments to find a UserHasPermissions
     * @example
     * // Get one UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserHasPermissionsFindUniqueArgs>(args: SelectSubset<T, UserHasPermissionsFindUniqueArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserHasPermissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserHasPermissionsFindUniqueOrThrowArgs} args - Arguments to find a UserHasPermissions
     * @example
     * // Get one UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserHasPermissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, UserHasPermissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserHasPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsFindFirstArgs} args - Arguments to find a UserHasPermissions
     * @example
     * // Get one UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserHasPermissionsFindFirstArgs>(args?: SelectSubset<T, UserHasPermissionsFindFirstArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserHasPermissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsFindFirstOrThrowArgs} args - Arguments to find a UserHasPermissions
     * @example
     * // Get one UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserHasPermissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, UserHasPermissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserHasPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.findMany()
     * 
     * // Get first 10 UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.findMany({ take: 10 })
     * 
     * // Only select the `PermissionId`
     * const userHasPermissionsWithPermissionIdOnly = await prisma.userHasPermissions.findMany({ select: { PermissionId: true } })
     * 
     */
    findMany<T extends UserHasPermissionsFindManyArgs>(args?: SelectSubset<T, UserHasPermissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserHasPermissions.
     * @param {UserHasPermissionsCreateArgs} args - Arguments to create a UserHasPermissions.
     * @example
     * // Create one UserHasPermissions
     * const UserHasPermissions = await prisma.userHasPermissions.create({
     *   data: {
     *     // ... data to create a UserHasPermissions
     *   }
     * })
     * 
     */
    create<T extends UserHasPermissionsCreateArgs>(args: SelectSubset<T, UserHasPermissionsCreateArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserHasPermissions.
     * @param {UserHasPermissionsCreateManyArgs} args - Arguments to create many UserHasPermissions.
     * @example
     * // Create many UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserHasPermissionsCreateManyArgs>(args?: SelectSubset<T, UserHasPermissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserHasPermissions and returns the data saved in the database.
     * @param {UserHasPermissionsCreateManyAndReturnArgs} args - Arguments to create many UserHasPermissions.
     * @example
     * // Create many UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserHasPermissions and only return the `PermissionId`
     * const userHasPermissionsWithPermissionIdOnly = await prisma.userHasPermissions.createManyAndReturn({
     *   select: { PermissionId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserHasPermissionsCreateManyAndReturnArgs>(args?: SelectSubset<T, UserHasPermissionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserHasPermissions.
     * @param {UserHasPermissionsDeleteArgs} args - Arguments to delete one UserHasPermissions.
     * @example
     * // Delete one UserHasPermissions
     * const UserHasPermissions = await prisma.userHasPermissions.delete({
     *   where: {
     *     // ... filter to delete one UserHasPermissions
     *   }
     * })
     * 
     */
    delete<T extends UserHasPermissionsDeleteArgs>(args: SelectSubset<T, UserHasPermissionsDeleteArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserHasPermissions.
     * @param {UserHasPermissionsUpdateArgs} args - Arguments to update one UserHasPermissions.
     * @example
     * // Update one UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserHasPermissionsUpdateArgs>(args: SelectSubset<T, UserHasPermissionsUpdateArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserHasPermissions.
     * @param {UserHasPermissionsDeleteManyArgs} args - Arguments to filter UserHasPermissions to delete.
     * @example
     * // Delete a few UserHasPermissions
     * const { count } = await prisma.userHasPermissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserHasPermissionsDeleteManyArgs>(args?: SelectSubset<T, UserHasPermissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserHasPermissionsUpdateManyArgs>(args: SelectSubset<T, UserHasPermissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHasPermissions and returns the data updated in the database.
     * @param {UserHasPermissionsUpdateManyAndReturnArgs} args - Arguments to update many UserHasPermissions.
     * @example
     * // Update many UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserHasPermissions and only return the `PermissionId`
     * const userHasPermissionsWithPermissionIdOnly = await prisma.userHasPermissions.updateManyAndReturn({
     *   select: { PermissionId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserHasPermissionsUpdateManyAndReturnArgs>(args: SelectSubset<T, UserHasPermissionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserHasPermissions.
     * @param {UserHasPermissionsUpsertArgs} args - Arguments to update or create a UserHasPermissions.
     * @example
     * // Update or create a UserHasPermissions
     * const userHasPermissions = await prisma.userHasPermissions.upsert({
     *   create: {
     *     // ... data to create a UserHasPermissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserHasPermissions we want to update
     *   }
     * })
     */
    upsert<T extends UserHasPermissionsUpsertArgs>(args: SelectSubset<T, UserHasPermissionsUpsertArgs<ExtArgs>>): Prisma__UserHasPermissionsClient<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsCountArgs} args - Arguments to filter UserHasPermissions to count.
     * @example
     * // Count the number of UserHasPermissions
     * const count = await prisma.userHasPermissions.count({
     *   where: {
     *     // ... the filter for the UserHasPermissions we want to count
     *   }
     * })
    **/
    count<T extends UserHasPermissionsCountArgs>(
      args?: Subset<T, UserHasPermissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserHasPermissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserHasPermissionsAggregateArgs>(args: Subset<T, UserHasPermissionsAggregateArgs>): Prisma.PrismaPromise<GetUserHasPermissionsAggregateType<T>>

    /**
     * Group by UserHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasPermissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserHasPermissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserHasPermissionsGroupByArgs['orderBy'] }
        : { orderBy?: UserHasPermissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserHasPermissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserHasPermissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserHasPermissions model
   */
  readonly fields: UserHasPermissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserHasPermissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserHasPermissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Permission<T extends PermissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissionDefaultArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserHasPermissions model
   */
  interface UserHasPermissionsFieldRefs {
    readonly PermissionId: FieldRef<"UserHasPermissions", 'String'>
    readonly UserId: FieldRef<"UserHasPermissions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserHasPermissions findUnique
   */
  export type UserHasPermissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which UserHasPermissions to fetch.
     */
    where: UserHasPermissionsWhereUniqueInput
  }

  /**
   * UserHasPermissions findUniqueOrThrow
   */
  export type UserHasPermissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which UserHasPermissions to fetch.
     */
    where: UserHasPermissionsWhereUniqueInput
  }

  /**
   * UserHasPermissions findFirst
   */
  export type UserHasPermissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which UserHasPermissions to fetch.
     */
    where?: UserHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasPermissions to fetch.
     */
    orderBy?: UserHasPermissionsOrderByWithRelationInput | UserHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHasPermissions.
     */
    cursor?: UserHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHasPermissions.
     */
    distinct?: UserHasPermissionsScalarFieldEnum | UserHasPermissionsScalarFieldEnum[]
  }

  /**
   * UserHasPermissions findFirstOrThrow
   */
  export type UserHasPermissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which UserHasPermissions to fetch.
     */
    where?: UserHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasPermissions to fetch.
     */
    orderBy?: UserHasPermissionsOrderByWithRelationInput | UserHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHasPermissions.
     */
    cursor?: UserHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHasPermissions.
     */
    distinct?: UserHasPermissionsScalarFieldEnum | UserHasPermissionsScalarFieldEnum[]
  }

  /**
   * UserHasPermissions findMany
   */
  export type UserHasPermissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which UserHasPermissions to fetch.
     */
    where?: UserHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasPermissions to fetch.
     */
    orderBy?: UserHasPermissionsOrderByWithRelationInput | UserHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserHasPermissions.
     */
    cursor?: UserHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasPermissions.
     */
    skip?: number
    distinct?: UserHasPermissionsScalarFieldEnum | UserHasPermissionsScalarFieldEnum[]
  }

  /**
   * UserHasPermissions create
   */
  export type UserHasPermissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a UserHasPermissions.
     */
    data: XOR<UserHasPermissionsCreateInput, UserHasPermissionsUncheckedCreateInput>
  }

  /**
   * UserHasPermissions createMany
   */
  export type UserHasPermissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserHasPermissions.
     */
    data: UserHasPermissionsCreateManyInput | UserHasPermissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserHasPermissions createManyAndReturn
   */
  export type UserHasPermissionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * The data used to create many UserHasPermissions.
     */
    data: UserHasPermissionsCreateManyInput | UserHasPermissionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHasPermissions update
   */
  export type UserHasPermissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a UserHasPermissions.
     */
    data: XOR<UserHasPermissionsUpdateInput, UserHasPermissionsUncheckedUpdateInput>
    /**
     * Choose, which UserHasPermissions to update.
     */
    where: UserHasPermissionsWhereUniqueInput
  }

  /**
   * UserHasPermissions updateMany
   */
  export type UserHasPermissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserHasPermissions.
     */
    data: XOR<UserHasPermissionsUpdateManyMutationInput, UserHasPermissionsUncheckedUpdateManyInput>
    /**
     * Filter which UserHasPermissions to update
     */
    where?: UserHasPermissionsWhereInput
    /**
     * Limit how many UserHasPermissions to update.
     */
    limit?: number
  }

  /**
   * UserHasPermissions updateManyAndReturn
   */
  export type UserHasPermissionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * The data used to update UserHasPermissions.
     */
    data: XOR<UserHasPermissionsUpdateManyMutationInput, UserHasPermissionsUncheckedUpdateManyInput>
    /**
     * Filter which UserHasPermissions to update
     */
    where?: UserHasPermissionsWhereInput
    /**
     * Limit how many UserHasPermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHasPermissions upsert
   */
  export type UserHasPermissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the UserHasPermissions to update in case it exists.
     */
    where: UserHasPermissionsWhereUniqueInput
    /**
     * In case the UserHasPermissions found by the `where` argument doesn't exist, create a new UserHasPermissions with this data.
     */
    create: XOR<UserHasPermissionsCreateInput, UserHasPermissionsUncheckedCreateInput>
    /**
     * In case the UserHasPermissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserHasPermissionsUpdateInput, UserHasPermissionsUncheckedUpdateInput>
  }

  /**
   * UserHasPermissions delete
   */
  export type UserHasPermissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter which UserHasPermissions to delete.
     */
    where: UserHasPermissionsWhereUniqueInput
  }

  /**
   * UserHasPermissions deleteMany
   */
  export type UserHasPermissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHasPermissions to delete
     */
    where?: UserHasPermissionsWhereInput
    /**
     * Limit how many UserHasPermissions to delete.
     */
    limit?: number
  }

  /**
   * UserHasPermissions without action
   */
  export type UserHasPermissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
  }


  /**
   * Model UserHasRoles
   */

  export type AggregateUserHasRoles = {
    _count: UserHasRolesCountAggregateOutputType | null
    _min: UserHasRolesMinAggregateOutputType | null
    _max: UserHasRolesMaxAggregateOutputType | null
  }

  export type UserHasRolesMinAggregateOutputType = {
    RoleId: string | null
    UserId: string | null
  }

  export type UserHasRolesMaxAggregateOutputType = {
    RoleId: string | null
    UserId: string | null
  }

  export type UserHasRolesCountAggregateOutputType = {
    RoleId: number
    UserId: number
    _all: number
  }


  export type UserHasRolesMinAggregateInputType = {
    RoleId?: true
    UserId?: true
  }

  export type UserHasRolesMaxAggregateInputType = {
    RoleId?: true
    UserId?: true
  }

  export type UserHasRolesCountAggregateInputType = {
    RoleId?: true
    UserId?: true
    _all?: true
  }

  export type UserHasRolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHasRoles to aggregate.
     */
    where?: UserHasRolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasRoles to fetch.
     */
    orderBy?: UserHasRolesOrderByWithRelationInput | UserHasRolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserHasRolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserHasRoles
    **/
    _count?: true | UserHasRolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserHasRolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserHasRolesMaxAggregateInputType
  }

  export type GetUserHasRolesAggregateType<T extends UserHasRolesAggregateArgs> = {
        [P in keyof T & keyof AggregateUserHasRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserHasRoles[P]>
      : GetScalarType<T[P], AggregateUserHasRoles[P]>
  }




  export type UserHasRolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserHasRolesWhereInput
    orderBy?: UserHasRolesOrderByWithAggregationInput | UserHasRolesOrderByWithAggregationInput[]
    by: UserHasRolesScalarFieldEnum[] | UserHasRolesScalarFieldEnum
    having?: UserHasRolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserHasRolesCountAggregateInputType | true
    _min?: UserHasRolesMinAggregateInputType
    _max?: UserHasRolesMaxAggregateInputType
  }

  export type UserHasRolesGroupByOutputType = {
    RoleId: string
    UserId: string
    _count: UserHasRolesCountAggregateOutputType | null
    _min: UserHasRolesMinAggregateOutputType | null
    _max: UserHasRolesMaxAggregateOutputType | null
  }

  type GetUserHasRolesGroupByPayload<T extends UserHasRolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserHasRolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserHasRolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserHasRolesGroupByOutputType[P]>
            : GetScalarType<T[P], UserHasRolesGroupByOutputType[P]>
        }
      >
    >


  export type UserHasRolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    RoleId?: boolean
    UserId?: boolean
    Role?: boolean | RoleDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHasRoles"]>

  export type UserHasRolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    RoleId?: boolean
    UserId?: boolean
    Role?: boolean | RoleDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHasRoles"]>

  export type UserHasRolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    RoleId?: boolean
    UserId?: boolean
    Role?: boolean | RoleDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userHasRoles"]>

  export type UserHasRolesSelectScalar = {
    RoleId?: boolean
    UserId?: boolean
  }

  export type UserHasRolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"RoleId" | "UserId", ExtArgs["result"]["userHasRoles"]>
  export type UserHasRolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Role?: boolean | RoleDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHasRolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Role?: boolean | RoleDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserHasRolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Role?: boolean | RoleDefaultArgs<ExtArgs>
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserHasRolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserHasRoles"
    objects: {
      Role: Prisma.$RolePayload<ExtArgs>
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      RoleId: string
      UserId: string
    }, ExtArgs["result"]["userHasRoles"]>
    composites: {}
  }

  type UserHasRolesGetPayload<S extends boolean | null | undefined | UserHasRolesDefaultArgs> = $Result.GetResult<Prisma.$UserHasRolesPayload, S>

  type UserHasRolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserHasRolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserHasRolesCountAggregateInputType | true
    }

  export interface UserHasRolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserHasRoles'], meta: { name: 'UserHasRoles' } }
    /**
     * Find zero or one UserHasRoles that matches the filter.
     * @param {UserHasRolesFindUniqueArgs} args - Arguments to find a UserHasRoles
     * @example
     * // Get one UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserHasRolesFindUniqueArgs>(args: SelectSubset<T, UserHasRolesFindUniqueArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserHasRoles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserHasRolesFindUniqueOrThrowArgs} args - Arguments to find a UserHasRoles
     * @example
     * // Get one UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserHasRolesFindUniqueOrThrowArgs>(args: SelectSubset<T, UserHasRolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserHasRoles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesFindFirstArgs} args - Arguments to find a UserHasRoles
     * @example
     * // Get one UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserHasRolesFindFirstArgs>(args?: SelectSubset<T, UserHasRolesFindFirstArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserHasRoles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesFindFirstOrThrowArgs} args - Arguments to find a UserHasRoles
     * @example
     * // Get one UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserHasRolesFindFirstOrThrowArgs>(args?: SelectSubset<T, UserHasRolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserHasRoles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.findMany()
     * 
     * // Get first 10 UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.findMany({ take: 10 })
     * 
     * // Only select the `RoleId`
     * const userHasRolesWithRoleIdOnly = await prisma.userHasRoles.findMany({ select: { RoleId: true } })
     * 
     */
    findMany<T extends UserHasRolesFindManyArgs>(args?: SelectSubset<T, UserHasRolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserHasRoles.
     * @param {UserHasRolesCreateArgs} args - Arguments to create a UserHasRoles.
     * @example
     * // Create one UserHasRoles
     * const UserHasRoles = await prisma.userHasRoles.create({
     *   data: {
     *     // ... data to create a UserHasRoles
     *   }
     * })
     * 
     */
    create<T extends UserHasRolesCreateArgs>(args: SelectSubset<T, UserHasRolesCreateArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserHasRoles.
     * @param {UserHasRolesCreateManyArgs} args - Arguments to create many UserHasRoles.
     * @example
     * // Create many UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserHasRolesCreateManyArgs>(args?: SelectSubset<T, UserHasRolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserHasRoles and returns the data saved in the database.
     * @param {UserHasRolesCreateManyAndReturnArgs} args - Arguments to create many UserHasRoles.
     * @example
     * // Create many UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserHasRoles and only return the `RoleId`
     * const userHasRolesWithRoleIdOnly = await prisma.userHasRoles.createManyAndReturn({
     *   select: { RoleId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserHasRolesCreateManyAndReturnArgs>(args?: SelectSubset<T, UserHasRolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserHasRoles.
     * @param {UserHasRolesDeleteArgs} args - Arguments to delete one UserHasRoles.
     * @example
     * // Delete one UserHasRoles
     * const UserHasRoles = await prisma.userHasRoles.delete({
     *   where: {
     *     // ... filter to delete one UserHasRoles
     *   }
     * })
     * 
     */
    delete<T extends UserHasRolesDeleteArgs>(args: SelectSubset<T, UserHasRolesDeleteArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserHasRoles.
     * @param {UserHasRolesUpdateArgs} args - Arguments to update one UserHasRoles.
     * @example
     * // Update one UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserHasRolesUpdateArgs>(args: SelectSubset<T, UserHasRolesUpdateArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserHasRoles.
     * @param {UserHasRolesDeleteManyArgs} args - Arguments to filter UserHasRoles to delete.
     * @example
     * // Delete a few UserHasRoles
     * const { count } = await prisma.userHasRoles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserHasRolesDeleteManyArgs>(args?: SelectSubset<T, UserHasRolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHasRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserHasRolesUpdateManyArgs>(args: SelectSubset<T, UserHasRolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserHasRoles and returns the data updated in the database.
     * @param {UserHasRolesUpdateManyAndReturnArgs} args - Arguments to update many UserHasRoles.
     * @example
     * // Update many UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserHasRoles and only return the `RoleId`
     * const userHasRolesWithRoleIdOnly = await prisma.userHasRoles.updateManyAndReturn({
     *   select: { RoleId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserHasRolesUpdateManyAndReturnArgs>(args: SelectSubset<T, UserHasRolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserHasRoles.
     * @param {UserHasRolesUpsertArgs} args - Arguments to update or create a UserHasRoles.
     * @example
     * // Update or create a UserHasRoles
     * const userHasRoles = await prisma.userHasRoles.upsert({
     *   create: {
     *     // ... data to create a UserHasRoles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserHasRoles we want to update
     *   }
     * })
     */
    upsert<T extends UserHasRolesUpsertArgs>(args: SelectSubset<T, UserHasRolesUpsertArgs<ExtArgs>>): Prisma__UserHasRolesClient<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserHasRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesCountArgs} args - Arguments to filter UserHasRoles to count.
     * @example
     * // Count the number of UserHasRoles
     * const count = await prisma.userHasRoles.count({
     *   where: {
     *     // ... the filter for the UserHasRoles we want to count
     *   }
     * })
    **/
    count<T extends UserHasRolesCountArgs>(
      args?: Subset<T, UserHasRolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserHasRolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserHasRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserHasRolesAggregateArgs>(args: Subset<T, UserHasRolesAggregateArgs>): Prisma.PrismaPromise<GetUserHasRolesAggregateType<T>>

    /**
     * Group by UserHasRoles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserHasRolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserHasRolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserHasRolesGroupByArgs['orderBy'] }
        : { orderBy?: UserHasRolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserHasRolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserHasRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserHasRoles model
   */
  readonly fields: UserHasRolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserHasRoles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserHasRolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserHasRoles model
   */
  interface UserHasRolesFieldRefs {
    readonly RoleId: FieldRef<"UserHasRoles", 'String'>
    readonly UserId: FieldRef<"UserHasRoles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserHasRoles findUnique
   */
  export type UserHasRolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * Filter, which UserHasRoles to fetch.
     */
    where: UserHasRolesWhereUniqueInput
  }

  /**
   * UserHasRoles findUniqueOrThrow
   */
  export type UserHasRolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * Filter, which UserHasRoles to fetch.
     */
    where: UserHasRolesWhereUniqueInput
  }

  /**
   * UserHasRoles findFirst
   */
  export type UserHasRolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * Filter, which UserHasRoles to fetch.
     */
    where?: UserHasRolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasRoles to fetch.
     */
    orderBy?: UserHasRolesOrderByWithRelationInput | UserHasRolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHasRoles.
     */
    cursor?: UserHasRolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHasRoles.
     */
    distinct?: UserHasRolesScalarFieldEnum | UserHasRolesScalarFieldEnum[]
  }

  /**
   * UserHasRoles findFirstOrThrow
   */
  export type UserHasRolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * Filter, which UserHasRoles to fetch.
     */
    where?: UserHasRolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasRoles to fetch.
     */
    orderBy?: UserHasRolesOrderByWithRelationInput | UserHasRolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserHasRoles.
     */
    cursor?: UserHasRolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasRoles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserHasRoles.
     */
    distinct?: UserHasRolesScalarFieldEnum | UserHasRolesScalarFieldEnum[]
  }

  /**
   * UserHasRoles findMany
   */
  export type UserHasRolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * Filter, which UserHasRoles to fetch.
     */
    where?: UserHasRolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserHasRoles to fetch.
     */
    orderBy?: UserHasRolesOrderByWithRelationInput | UserHasRolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserHasRoles.
     */
    cursor?: UserHasRolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserHasRoles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserHasRoles.
     */
    skip?: number
    distinct?: UserHasRolesScalarFieldEnum | UserHasRolesScalarFieldEnum[]
  }

  /**
   * UserHasRoles create
   */
  export type UserHasRolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * The data needed to create a UserHasRoles.
     */
    data: XOR<UserHasRolesCreateInput, UserHasRolesUncheckedCreateInput>
  }

  /**
   * UserHasRoles createMany
   */
  export type UserHasRolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserHasRoles.
     */
    data: UserHasRolesCreateManyInput | UserHasRolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserHasRoles createManyAndReturn
   */
  export type UserHasRolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * The data used to create many UserHasRoles.
     */
    data: UserHasRolesCreateManyInput | UserHasRolesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHasRoles update
   */
  export type UserHasRolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * The data needed to update a UserHasRoles.
     */
    data: XOR<UserHasRolesUpdateInput, UserHasRolesUncheckedUpdateInput>
    /**
     * Choose, which UserHasRoles to update.
     */
    where: UserHasRolesWhereUniqueInput
  }

  /**
   * UserHasRoles updateMany
   */
  export type UserHasRolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserHasRoles.
     */
    data: XOR<UserHasRolesUpdateManyMutationInput, UserHasRolesUncheckedUpdateManyInput>
    /**
     * Filter which UserHasRoles to update
     */
    where?: UserHasRolesWhereInput
    /**
     * Limit how many UserHasRoles to update.
     */
    limit?: number
  }

  /**
   * UserHasRoles updateManyAndReturn
   */
  export type UserHasRolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * The data used to update UserHasRoles.
     */
    data: XOR<UserHasRolesUpdateManyMutationInput, UserHasRolesUncheckedUpdateManyInput>
    /**
     * Filter which UserHasRoles to update
     */
    where?: UserHasRolesWhereInput
    /**
     * Limit how many UserHasRoles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserHasRoles upsert
   */
  export type UserHasRolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * The filter to search for the UserHasRoles to update in case it exists.
     */
    where: UserHasRolesWhereUniqueInput
    /**
     * In case the UserHasRoles found by the `where` argument doesn't exist, create a new UserHasRoles with this data.
     */
    create: XOR<UserHasRolesCreateInput, UserHasRolesUncheckedCreateInput>
    /**
     * In case the UserHasRoles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserHasRolesUpdateInput, UserHasRolesUncheckedUpdateInput>
  }

  /**
   * UserHasRoles delete
   */
  export type UserHasRolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    /**
     * Filter which UserHasRoles to delete.
     */
    where: UserHasRolesWhereUniqueInput
  }

  /**
   * UserHasRoles deleteMany
   */
  export type UserHasRolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserHasRoles to delete
     */
    where?: UserHasRolesWhereInput
    /**
     * Limit how many UserHasRoles to delete.
     */
    limit?: number
  }

  /**
   * UserHasRoles without action
   */
  export type UserHasRolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
  }


  /**
   * Model OrangTua
   */

  export type AggregateOrangTua = {
    _count: OrangTuaCountAggregateOutputType | null
    _avg: OrangTuaAvgAggregateOutputType | null
    _sum: OrangTuaSumAggregateOutputType | null
    _min: OrangTuaMinAggregateOutputType | null
    _max: OrangTuaMaxAggregateOutputType | null
  }

  export type OrangTuaAvgAggregateOutputType = {
    Penghasilan: number | null
  }

  export type OrangTuaSumAggregateOutputType = {
    Penghasilan: number | null
  }

  export type OrangTuaMinAggregateOutputType = {
    OrangTuaId: string | null
    PendaftaranId: string | null
    Nama: string | null
    Pekerjaan: string | null
    JenisOrtu: $Enums.JenisOrtu | null
    Penghasilan: number | null
    Email: string | null
    NomorHp: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type OrangTuaMaxAggregateOutputType = {
    OrangTuaId: string | null
    PendaftaranId: string | null
    Nama: string | null
    Pekerjaan: string | null
    JenisOrtu: $Enums.JenisOrtu | null
    Penghasilan: number | null
    Email: string | null
    NomorHp: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type OrangTuaCountAggregateOutputType = {
    OrangTuaId: number
    PendaftaranId: number
    Nama: number
    Pekerjaan: number
    JenisOrtu: number
    Penghasilan: number
    Email: number
    NomorHp: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type OrangTuaAvgAggregateInputType = {
    Penghasilan?: true
  }

  export type OrangTuaSumAggregateInputType = {
    Penghasilan?: true
  }

  export type OrangTuaMinAggregateInputType = {
    OrangTuaId?: true
    PendaftaranId?: true
    Nama?: true
    Pekerjaan?: true
    JenisOrtu?: true
    Penghasilan?: true
    Email?: true
    NomorHp?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type OrangTuaMaxAggregateInputType = {
    OrangTuaId?: true
    PendaftaranId?: true
    Nama?: true
    Pekerjaan?: true
    JenisOrtu?: true
    Penghasilan?: true
    Email?: true
    NomorHp?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type OrangTuaCountAggregateInputType = {
    OrangTuaId?: true
    PendaftaranId?: true
    Nama?: true
    Pekerjaan?: true
    JenisOrtu?: true
    Penghasilan?: true
    Email?: true
    NomorHp?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type OrangTuaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrangTua to aggregate.
     */
    where?: OrangTuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrangTuas to fetch.
     */
    orderBy?: OrangTuaOrderByWithRelationInput | OrangTuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrangTuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrangTuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrangTuas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrangTuas
    **/
    _count?: true | OrangTuaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrangTuaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrangTuaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrangTuaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrangTuaMaxAggregateInputType
  }

  export type GetOrangTuaAggregateType<T extends OrangTuaAggregateArgs> = {
        [P in keyof T & keyof AggregateOrangTua]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrangTua[P]>
      : GetScalarType<T[P], AggregateOrangTua[P]>
  }




  export type OrangTuaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrangTuaWhereInput
    orderBy?: OrangTuaOrderByWithAggregationInput | OrangTuaOrderByWithAggregationInput[]
    by: OrangTuaScalarFieldEnum[] | OrangTuaScalarFieldEnum
    having?: OrangTuaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrangTuaCountAggregateInputType | true
    _avg?: OrangTuaAvgAggregateInputType
    _sum?: OrangTuaSumAggregateInputType
    _min?: OrangTuaMinAggregateInputType
    _max?: OrangTuaMaxAggregateInputType
  }

  export type OrangTuaGroupByOutputType = {
    OrangTuaId: string
    PendaftaranId: string
    Nama: string
    Pekerjaan: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: OrangTuaCountAggregateOutputType | null
    _avg: OrangTuaAvgAggregateOutputType | null
    _sum: OrangTuaSumAggregateOutputType | null
    _min: OrangTuaMinAggregateOutputType | null
    _max: OrangTuaMaxAggregateOutputType | null
  }

  type GetOrangTuaGroupByPayload<T extends OrangTuaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrangTuaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrangTuaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrangTuaGroupByOutputType[P]>
            : GetScalarType<T[P], OrangTuaGroupByOutputType[P]>
        }
      >
    >


  export type OrangTuaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    OrangTuaId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    Pekerjaan?: boolean
    JenisOrtu?: boolean
    Penghasilan?: boolean
    Email?: boolean
    NomorHp?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orangTua"]>

  export type OrangTuaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    OrangTuaId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    Pekerjaan?: boolean
    JenisOrtu?: boolean
    Penghasilan?: boolean
    Email?: boolean
    NomorHp?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orangTua"]>

  export type OrangTuaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    OrangTuaId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    Pekerjaan?: boolean
    JenisOrtu?: boolean
    Penghasilan?: boolean
    Email?: boolean
    NomorHp?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orangTua"]>

  export type OrangTuaSelectScalar = {
    OrangTuaId?: boolean
    PendaftaranId?: boolean
    Nama?: boolean
    Pekerjaan?: boolean
    JenisOrtu?: boolean
    Penghasilan?: boolean
    Email?: boolean
    NomorHp?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type OrangTuaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"OrangTuaId" | "PendaftaranId" | "Nama" | "Pekerjaan" | "JenisOrtu" | "Penghasilan" | "Email" | "NomorHp" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["orangTua"]>
  export type OrangTuaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type OrangTuaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type OrangTuaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $OrangTuaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrangTua"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      OrangTuaId: string
      PendaftaranId: string
      Nama: string
      Pekerjaan: string | null
      JenisOrtu: $Enums.JenisOrtu
      Penghasilan: number
      Email: string
      NomorHp: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["orangTua"]>
    composites: {}
  }

  type OrangTuaGetPayload<S extends boolean | null | undefined | OrangTuaDefaultArgs> = $Result.GetResult<Prisma.$OrangTuaPayload, S>

  type OrangTuaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrangTuaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrangTuaCountAggregateInputType | true
    }

  export interface OrangTuaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrangTua'], meta: { name: 'OrangTua' } }
    /**
     * Find zero or one OrangTua that matches the filter.
     * @param {OrangTuaFindUniqueArgs} args - Arguments to find a OrangTua
     * @example
     * // Get one OrangTua
     * const orangTua = await prisma.orangTua.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrangTuaFindUniqueArgs>(args: SelectSubset<T, OrangTuaFindUniqueArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrangTua that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrangTuaFindUniqueOrThrowArgs} args - Arguments to find a OrangTua
     * @example
     * // Get one OrangTua
     * const orangTua = await prisma.orangTua.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrangTuaFindUniqueOrThrowArgs>(args: SelectSubset<T, OrangTuaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrangTua that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaFindFirstArgs} args - Arguments to find a OrangTua
     * @example
     * // Get one OrangTua
     * const orangTua = await prisma.orangTua.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrangTuaFindFirstArgs>(args?: SelectSubset<T, OrangTuaFindFirstArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrangTua that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaFindFirstOrThrowArgs} args - Arguments to find a OrangTua
     * @example
     * // Get one OrangTua
     * const orangTua = await prisma.orangTua.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrangTuaFindFirstOrThrowArgs>(args?: SelectSubset<T, OrangTuaFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrangTuas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrangTuas
     * const orangTuas = await prisma.orangTua.findMany()
     * 
     * // Get first 10 OrangTuas
     * const orangTuas = await prisma.orangTua.findMany({ take: 10 })
     * 
     * // Only select the `OrangTuaId`
     * const orangTuaWithOrangTuaIdOnly = await prisma.orangTua.findMany({ select: { OrangTuaId: true } })
     * 
     */
    findMany<T extends OrangTuaFindManyArgs>(args?: SelectSubset<T, OrangTuaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrangTua.
     * @param {OrangTuaCreateArgs} args - Arguments to create a OrangTua.
     * @example
     * // Create one OrangTua
     * const OrangTua = await prisma.orangTua.create({
     *   data: {
     *     // ... data to create a OrangTua
     *   }
     * })
     * 
     */
    create<T extends OrangTuaCreateArgs>(args: SelectSubset<T, OrangTuaCreateArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrangTuas.
     * @param {OrangTuaCreateManyArgs} args - Arguments to create many OrangTuas.
     * @example
     * // Create many OrangTuas
     * const orangTua = await prisma.orangTua.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrangTuaCreateManyArgs>(args?: SelectSubset<T, OrangTuaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrangTuas and returns the data saved in the database.
     * @param {OrangTuaCreateManyAndReturnArgs} args - Arguments to create many OrangTuas.
     * @example
     * // Create many OrangTuas
     * const orangTua = await prisma.orangTua.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrangTuas and only return the `OrangTuaId`
     * const orangTuaWithOrangTuaIdOnly = await prisma.orangTua.createManyAndReturn({
     *   select: { OrangTuaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrangTuaCreateManyAndReturnArgs>(args?: SelectSubset<T, OrangTuaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrangTua.
     * @param {OrangTuaDeleteArgs} args - Arguments to delete one OrangTua.
     * @example
     * // Delete one OrangTua
     * const OrangTua = await prisma.orangTua.delete({
     *   where: {
     *     // ... filter to delete one OrangTua
     *   }
     * })
     * 
     */
    delete<T extends OrangTuaDeleteArgs>(args: SelectSubset<T, OrangTuaDeleteArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrangTua.
     * @param {OrangTuaUpdateArgs} args - Arguments to update one OrangTua.
     * @example
     * // Update one OrangTua
     * const orangTua = await prisma.orangTua.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrangTuaUpdateArgs>(args: SelectSubset<T, OrangTuaUpdateArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrangTuas.
     * @param {OrangTuaDeleteManyArgs} args - Arguments to filter OrangTuas to delete.
     * @example
     * // Delete a few OrangTuas
     * const { count } = await prisma.orangTua.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrangTuaDeleteManyArgs>(args?: SelectSubset<T, OrangTuaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrangTuas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrangTuas
     * const orangTua = await prisma.orangTua.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrangTuaUpdateManyArgs>(args: SelectSubset<T, OrangTuaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrangTuas and returns the data updated in the database.
     * @param {OrangTuaUpdateManyAndReturnArgs} args - Arguments to update many OrangTuas.
     * @example
     * // Update many OrangTuas
     * const orangTua = await prisma.orangTua.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrangTuas and only return the `OrangTuaId`
     * const orangTuaWithOrangTuaIdOnly = await prisma.orangTua.updateManyAndReturn({
     *   select: { OrangTuaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrangTuaUpdateManyAndReturnArgs>(args: SelectSubset<T, OrangTuaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrangTua.
     * @param {OrangTuaUpsertArgs} args - Arguments to update or create a OrangTua.
     * @example
     * // Update or create a OrangTua
     * const orangTua = await prisma.orangTua.upsert({
     *   create: {
     *     // ... data to create a OrangTua
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrangTua we want to update
     *   }
     * })
     */
    upsert<T extends OrangTuaUpsertArgs>(args: SelectSubset<T, OrangTuaUpsertArgs<ExtArgs>>): Prisma__OrangTuaClient<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrangTuas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaCountArgs} args - Arguments to filter OrangTuas to count.
     * @example
     * // Count the number of OrangTuas
     * const count = await prisma.orangTua.count({
     *   where: {
     *     // ... the filter for the OrangTuas we want to count
     *   }
     * })
    **/
    count<T extends OrangTuaCountArgs>(
      args?: Subset<T, OrangTuaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrangTuaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrangTua.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrangTuaAggregateArgs>(args: Subset<T, OrangTuaAggregateArgs>): Prisma.PrismaPromise<GetOrangTuaAggregateType<T>>

    /**
     * Group by OrangTua.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrangTuaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrangTuaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrangTuaGroupByArgs['orderBy'] }
        : { orderBy?: OrangTuaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrangTuaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrangTuaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrangTua model
   */
  readonly fields: OrangTuaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrangTua.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrangTuaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrangTua model
   */
  interface OrangTuaFieldRefs {
    readonly OrangTuaId: FieldRef<"OrangTua", 'String'>
    readonly PendaftaranId: FieldRef<"OrangTua", 'String'>
    readonly Nama: FieldRef<"OrangTua", 'String'>
    readonly Pekerjaan: FieldRef<"OrangTua", 'String'>
    readonly JenisOrtu: FieldRef<"OrangTua", 'JenisOrtu'>
    readonly Penghasilan: FieldRef<"OrangTua", 'Float'>
    readonly Email: FieldRef<"OrangTua", 'String'>
    readonly NomorHp: FieldRef<"OrangTua", 'String'>
    readonly CreatedAt: FieldRef<"OrangTua", 'DateTime'>
    readonly UpdatedAt: FieldRef<"OrangTua", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrangTua findUnique
   */
  export type OrangTuaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * Filter, which OrangTua to fetch.
     */
    where: OrangTuaWhereUniqueInput
  }

  /**
   * OrangTua findUniqueOrThrow
   */
  export type OrangTuaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * Filter, which OrangTua to fetch.
     */
    where: OrangTuaWhereUniqueInput
  }

  /**
   * OrangTua findFirst
   */
  export type OrangTuaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * Filter, which OrangTua to fetch.
     */
    where?: OrangTuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrangTuas to fetch.
     */
    orderBy?: OrangTuaOrderByWithRelationInput | OrangTuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrangTuas.
     */
    cursor?: OrangTuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrangTuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrangTuas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrangTuas.
     */
    distinct?: OrangTuaScalarFieldEnum | OrangTuaScalarFieldEnum[]
  }

  /**
   * OrangTua findFirstOrThrow
   */
  export type OrangTuaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * Filter, which OrangTua to fetch.
     */
    where?: OrangTuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrangTuas to fetch.
     */
    orderBy?: OrangTuaOrderByWithRelationInput | OrangTuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrangTuas.
     */
    cursor?: OrangTuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrangTuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrangTuas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrangTuas.
     */
    distinct?: OrangTuaScalarFieldEnum | OrangTuaScalarFieldEnum[]
  }

  /**
   * OrangTua findMany
   */
  export type OrangTuaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * Filter, which OrangTuas to fetch.
     */
    where?: OrangTuaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrangTuas to fetch.
     */
    orderBy?: OrangTuaOrderByWithRelationInput | OrangTuaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrangTuas.
     */
    cursor?: OrangTuaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrangTuas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrangTuas.
     */
    skip?: number
    distinct?: OrangTuaScalarFieldEnum | OrangTuaScalarFieldEnum[]
  }

  /**
   * OrangTua create
   */
  export type OrangTuaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * The data needed to create a OrangTua.
     */
    data: XOR<OrangTuaCreateInput, OrangTuaUncheckedCreateInput>
  }

  /**
   * OrangTua createMany
   */
  export type OrangTuaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrangTuas.
     */
    data: OrangTuaCreateManyInput | OrangTuaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrangTua createManyAndReturn
   */
  export type OrangTuaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * The data used to create many OrangTuas.
     */
    data: OrangTuaCreateManyInput | OrangTuaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrangTua update
   */
  export type OrangTuaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * The data needed to update a OrangTua.
     */
    data: XOR<OrangTuaUpdateInput, OrangTuaUncheckedUpdateInput>
    /**
     * Choose, which OrangTua to update.
     */
    where: OrangTuaWhereUniqueInput
  }

  /**
   * OrangTua updateMany
   */
  export type OrangTuaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrangTuas.
     */
    data: XOR<OrangTuaUpdateManyMutationInput, OrangTuaUncheckedUpdateManyInput>
    /**
     * Filter which OrangTuas to update
     */
    where?: OrangTuaWhereInput
    /**
     * Limit how many OrangTuas to update.
     */
    limit?: number
  }

  /**
   * OrangTua updateManyAndReturn
   */
  export type OrangTuaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * The data used to update OrangTuas.
     */
    data: XOR<OrangTuaUpdateManyMutationInput, OrangTuaUncheckedUpdateManyInput>
    /**
     * Filter which OrangTuas to update
     */
    where?: OrangTuaWhereInput
    /**
     * Limit how many OrangTuas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrangTua upsert
   */
  export type OrangTuaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * The filter to search for the OrangTua to update in case it exists.
     */
    where: OrangTuaWhereUniqueInput
    /**
     * In case the OrangTua found by the `where` argument doesn't exist, create a new OrangTua with this data.
     */
    create: XOR<OrangTuaCreateInput, OrangTuaUncheckedCreateInput>
    /**
     * In case the OrangTua was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrangTuaUpdateInput, OrangTuaUncheckedUpdateInput>
  }

  /**
   * OrangTua delete
   */
  export type OrangTuaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    /**
     * Filter which OrangTua to delete.
     */
    where: OrangTuaWhereUniqueInput
  }

  /**
   * OrangTua deleteMany
   */
  export type OrangTuaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrangTuas to delete
     */
    where?: OrangTuaWhereInput
    /**
     * Limit how many OrangTuas to delete.
     */
    limit?: number
  }

  /**
   * OrangTua without action
   */
  export type OrangTuaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
  }


  /**
   * Model PasswordResetTokens
   */

  export type AggregatePasswordResetTokens = {
    _count: PasswordResetTokensCountAggregateOutputType | null
    _min: PasswordResetTokensMinAggregateOutputType | null
    _max: PasswordResetTokensMaxAggregateOutputType | null
  }

  export type PasswordResetTokensMinAggregateOutputType = {
    Email: string | null
    Token: string | null
    CreatedAt: Date | null
  }

  export type PasswordResetTokensMaxAggregateOutputType = {
    Email: string | null
    Token: string | null
    CreatedAt: Date | null
  }

  export type PasswordResetTokensCountAggregateOutputType = {
    Email: number
    Token: number
    CreatedAt: number
    _all: number
  }


  export type PasswordResetTokensMinAggregateInputType = {
    Email?: true
    Token?: true
    CreatedAt?: true
  }

  export type PasswordResetTokensMaxAggregateInputType = {
    Email?: true
    Token?: true
    CreatedAt?: true
  }

  export type PasswordResetTokensCountAggregateInputType = {
    Email?: true
    Token?: true
    CreatedAt?: true
    _all?: true
  }

  export type PasswordResetTokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetTokens to aggregate.
     */
    where?: PasswordResetTokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokensOrderByWithRelationInput | PasswordResetTokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PasswordResetTokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PasswordResetTokens
    **/
    _count?: true | PasswordResetTokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PasswordResetTokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PasswordResetTokensMaxAggregateInputType
  }

  export type GetPasswordResetTokensAggregateType<T extends PasswordResetTokensAggregateArgs> = {
        [P in keyof T & keyof AggregatePasswordResetTokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePasswordResetTokens[P]>
      : GetScalarType<T[P], AggregatePasswordResetTokens[P]>
  }




  export type PasswordResetTokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PasswordResetTokensWhereInput
    orderBy?: PasswordResetTokensOrderByWithAggregationInput | PasswordResetTokensOrderByWithAggregationInput[]
    by: PasswordResetTokensScalarFieldEnum[] | PasswordResetTokensScalarFieldEnum
    having?: PasswordResetTokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PasswordResetTokensCountAggregateInputType | true
    _min?: PasswordResetTokensMinAggregateInputType
    _max?: PasswordResetTokensMaxAggregateInputType
  }

  export type PasswordResetTokensGroupByOutputType = {
    Email: string
    Token: string
    CreatedAt: Date | null
    _count: PasswordResetTokensCountAggregateOutputType | null
    _min: PasswordResetTokensMinAggregateOutputType | null
    _max: PasswordResetTokensMaxAggregateOutputType | null
  }

  type GetPasswordResetTokensGroupByPayload<T extends PasswordResetTokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PasswordResetTokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PasswordResetTokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PasswordResetTokensGroupByOutputType[P]>
            : GetScalarType<T[P], PasswordResetTokensGroupByOutputType[P]>
        }
      >
    >


  export type PasswordResetTokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Email?: boolean
    Token?: boolean
    CreatedAt?: boolean
  }, ExtArgs["result"]["passwordResetTokens"]>

  export type PasswordResetTokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Email?: boolean
    Token?: boolean
    CreatedAt?: boolean
  }, ExtArgs["result"]["passwordResetTokens"]>

  export type PasswordResetTokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Email?: boolean
    Token?: boolean
    CreatedAt?: boolean
  }, ExtArgs["result"]["passwordResetTokens"]>

  export type PasswordResetTokensSelectScalar = {
    Email?: boolean
    Token?: boolean
    CreatedAt?: boolean
  }

  export type PasswordResetTokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Email" | "Token" | "CreatedAt", ExtArgs["result"]["passwordResetTokens"]>

  export type $PasswordResetTokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PasswordResetTokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Email: string
      Token: string
      CreatedAt: Date | null
    }, ExtArgs["result"]["passwordResetTokens"]>
    composites: {}
  }

  type PasswordResetTokensGetPayload<S extends boolean | null | undefined | PasswordResetTokensDefaultArgs> = $Result.GetResult<Prisma.$PasswordResetTokensPayload, S>

  type PasswordResetTokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PasswordResetTokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PasswordResetTokensCountAggregateInputType | true
    }

  export interface PasswordResetTokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PasswordResetTokens'], meta: { name: 'PasswordResetTokens' } }
    /**
     * Find zero or one PasswordResetTokens that matches the filter.
     * @param {PasswordResetTokensFindUniqueArgs} args - Arguments to find a PasswordResetTokens
     * @example
     * // Get one PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PasswordResetTokensFindUniqueArgs>(args: SelectSubset<T, PasswordResetTokensFindUniqueArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PasswordResetTokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PasswordResetTokensFindUniqueOrThrowArgs} args - Arguments to find a PasswordResetTokens
     * @example
     * // Get one PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PasswordResetTokensFindUniqueOrThrowArgs>(args: SelectSubset<T, PasswordResetTokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensFindFirstArgs} args - Arguments to find a PasswordResetTokens
     * @example
     * // Get one PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PasswordResetTokensFindFirstArgs>(args?: SelectSubset<T, PasswordResetTokensFindFirstArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PasswordResetTokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensFindFirstOrThrowArgs} args - Arguments to find a PasswordResetTokens
     * @example
     * // Get one PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PasswordResetTokensFindFirstOrThrowArgs>(args?: SelectSubset<T, PasswordResetTokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PasswordResetTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.findMany()
     * 
     * // Get first 10 PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.findMany({ take: 10 })
     * 
     * // Only select the `Email`
     * const passwordResetTokensWithEmailOnly = await prisma.passwordResetTokens.findMany({ select: { Email: true } })
     * 
     */
    findMany<T extends PasswordResetTokensFindManyArgs>(args?: SelectSubset<T, PasswordResetTokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PasswordResetTokens.
     * @param {PasswordResetTokensCreateArgs} args - Arguments to create a PasswordResetTokens.
     * @example
     * // Create one PasswordResetTokens
     * const PasswordResetTokens = await prisma.passwordResetTokens.create({
     *   data: {
     *     // ... data to create a PasswordResetTokens
     *   }
     * })
     * 
     */
    create<T extends PasswordResetTokensCreateArgs>(args: SelectSubset<T, PasswordResetTokensCreateArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PasswordResetTokens.
     * @param {PasswordResetTokensCreateManyArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PasswordResetTokensCreateManyArgs>(args?: SelectSubset<T, PasswordResetTokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PasswordResetTokens and returns the data saved in the database.
     * @param {PasswordResetTokensCreateManyAndReturnArgs} args - Arguments to create many PasswordResetTokens.
     * @example
     * // Create many PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PasswordResetTokens and only return the `Email`
     * const passwordResetTokensWithEmailOnly = await prisma.passwordResetTokens.createManyAndReturn({
     *   select: { Email: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PasswordResetTokensCreateManyAndReturnArgs>(args?: SelectSubset<T, PasswordResetTokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PasswordResetTokens.
     * @param {PasswordResetTokensDeleteArgs} args - Arguments to delete one PasswordResetTokens.
     * @example
     * // Delete one PasswordResetTokens
     * const PasswordResetTokens = await prisma.passwordResetTokens.delete({
     *   where: {
     *     // ... filter to delete one PasswordResetTokens
     *   }
     * })
     * 
     */
    delete<T extends PasswordResetTokensDeleteArgs>(args: SelectSubset<T, PasswordResetTokensDeleteArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PasswordResetTokens.
     * @param {PasswordResetTokensUpdateArgs} args - Arguments to update one PasswordResetTokens.
     * @example
     * // Update one PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PasswordResetTokensUpdateArgs>(args: SelectSubset<T, PasswordResetTokensUpdateArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PasswordResetTokens.
     * @param {PasswordResetTokensDeleteManyArgs} args - Arguments to filter PasswordResetTokens to delete.
     * @example
     * // Delete a few PasswordResetTokens
     * const { count } = await prisma.passwordResetTokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PasswordResetTokensDeleteManyArgs>(args?: SelectSubset<T, PasswordResetTokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PasswordResetTokensUpdateManyArgs>(args: SelectSubset<T, PasswordResetTokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PasswordResetTokens and returns the data updated in the database.
     * @param {PasswordResetTokensUpdateManyAndReturnArgs} args - Arguments to update many PasswordResetTokens.
     * @example
     * // Update many PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PasswordResetTokens and only return the `Email`
     * const passwordResetTokensWithEmailOnly = await prisma.passwordResetTokens.updateManyAndReturn({
     *   select: { Email: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PasswordResetTokensUpdateManyAndReturnArgs>(args: SelectSubset<T, PasswordResetTokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PasswordResetTokens.
     * @param {PasswordResetTokensUpsertArgs} args - Arguments to update or create a PasswordResetTokens.
     * @example
     * // Update or create a PasswordResetTokens
     * const passwordResetTokens = await prisma.passwordResetTokens.upsert({
     *   create: {
     *     // ... data to create a PasswordResetTokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PasswordResetTokens we want to update
     *   }
     * })
     */
    upsert<T extends PasswordResetTokensUpsertArgs>(args: SelectSubset<T, PasswordResetTokensUpsertArgs<ExtArgs>>): Prisma__PasswordResetTokensClient<$Result.GetResult<Prisma.$PasswordResetTokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensCountArgs} args - Arguments to filter PasswordResetTokens to count.
     * @example
     * // Count the number of PasswordResetTokens
     * const count = await prisma.passwordResetTokens.count({
     *   where: {
     *     // ... the filter for the PasswordResetTokens we want to count
     *   }
     * })
    **/
    count<T extends PasswordResetTokensCountArgs>(
      args?: Subset<T, PasswordResetTokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PasswordResetTokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PasswordResetTokensAggregateArgs>(args: Subset<T, PasswordResetTokensAggregateArgs>): Prisma.PrismaPromise<GetPasswordResetTokensAggregateType<T>>

    /**
     * Group by PasswordResetTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PasswordResetTokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PasswordResetTokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PasswordResetTokensGroupByArgs['orderBy'] }
        : { orderBy?: PasswordResetTokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PasswordResetTokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPasswordResetTokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PasswordResetTokens model
   */
  readonly fields: PasswordResetTokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PasswordResetTokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PasswordResetTokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PasswordResetTokens model
   */
  interface PasswordResetTokensFieldRefs {
    readonly Email: FieldRef<"PasswordResetTokens", 'String'>
    readonly Token: FieldRef<"PasswordResetTokens", 'String'>
    readonly CreatedAt: FieldRef<"PasswordResetTokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PasswordResetTokens findUnique
   */
  export type PasswordResetTokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where: PasswordResetTokensWhereUniqueInput
  }

  /**
   * PasswordResetTokens findUniqueOrThrow
   */
  export type PasswordResetTokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where: PasswordResetTokensWhereUniqueInput
  }

  /**
   * PasswordResetTokens findFirst
   */
  export type PasswordResetTokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokensOrderByWithRelationInput | PasswordResetTokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokensScalarFieldEnum | PasswordResetTokensScalarFieldEnum[]
  }

  /**
   * PasswordResetTokens findFirstOrThrow
   */
  export type PasswordResetTokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokensOrderByWithRelationInput | PasswordResetTokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PasswordResetTokens.
     */
    cursor?: PasswordResetTokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PasswordResetTokens.
     */
    distinct?: PasswordResetTokensScalarFieldEnum | PasswordResetTokensScalarFieldEnum[]
  }

  /**
   * PasswordResetTokens findMany
   */
  export type PasswordResetTokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * Filter, which PasswordResetTokens to fetch.
     */
    where?: PasswordResetTokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PasswordResetTokens to fetch.
     */
    orderBy?: PasswordResetTokensOrderByWithRelationInput | PasswordResetTokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PasswordResetTokens.
     */
    cursor?: PasswordResetTokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PasswordResetTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PasswordResetTokens.
     */
    skip?: number
    distinct?: PasswordResetTokensScalarFieldEnum | PasswordResetTokensScalarFieldEnum[]
  }

  /**
   * PasswordResetTokens create
   */
  export type PasswordResetTokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * The data needed to create a PasswordResetTokens.
     */
    data: XOR<PasswordResetTokensCreateInput, PasswordResetTokensUncheckedCreateInput>
  }

  /**
   * PasswordResetTokens createMany
   */
  export type PasswordResetTokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokensCreateManyInput | PasswordResetTokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetTokens createManyAndReturn
   */
  export type PasswordResetTokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * The data used to create many PasswordResetTokens.
     */
    data: PasswordResetTokensCreateManyInput | PasswordResetTokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PasswordResetTokens update
   */
  export type PasswordResetTokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * The data needed to update a PasswordResetTokens.
     */
    data: XOR<PasswordResetTokensUpdateInput, PasswordResetTokensUncheckedUpdateInput>
    /**
     * Choose, which PasswordResetTokens to update.
     */
    where: PasswordResetTokensWhereUniqueInput
  }

  /**
   * PasswordResetTokens updateMany
   */
  export type PasswordResetTokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokensUpdateManyMutationInput, PasswordResetTokensUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokensWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetTokens updateManyAndReturn
   */
  export type PasswordResetTokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * The data used to update PasswordResetTokens.
     */
    data: XOR<PasswordResetTokensUpdateManyMutationInput, PasswordResetTokensUncheckedUpdateManyInput>
    /**
     * Filter which PasswordResetTokens to update
     */
    where?: PasswordResetTokensWhereInput
    /**
     * Limit how many PasswordResetTokens to update.
     */
    limit?: number
  }

  /**
   * PasswordResetTokens upsert
   */
  export type PasswordResetTokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * The filter to search for the PasswordResetTokens to update in case it exists.
     */
    where: PasswordResetTokensWhereUniqueInput
    /**
     * In case the PasswordResetTokens found by the `where` argument doesn't exist, create a new PasswordResetTokens with this data.
     */
    create: XOR<PasswordResetTokensCreateInput, PasswordResetTokensUncheckedCreateInput>
    /**
     * In case the PasswordResetTokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PasswordResetTokensUpdateInput, PasswordResetTokensUncheckedUpdateInput>
  }

  /**
   * PasswordResetTokens delete
   */
  export type PasswordResetTokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
    /**
     * Filter which PasswordResetTokens to delete.
     */
    where: PasswordResetTokensWhereUniqueInput
  }

  /**
   * PasswordResetTokens deleteMany
   */
  export type PasswordResetTokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PasswordResetTokens to delete
     */
    where?: PasswordResetTokensWhereInput
    /**
     * Limit how many PasswordResetTokens to delete.
     */
    limit?: number
  }

  /**
   * PasswordResetTokens without action
   */
  export type PasswordResetTokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PasswordResetTokens
     */
    select?: PasswordResetTokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PasswordResetTokens
     */
    omit?: PasswordResetTokensOmit<ExtArgs> | null
  }


  /**
   * Model PekerjaanMahasiswa
   */

  export type AggregatePekerjaanMahasiswa = {
    _count: PekerjaanMahasiswaCountAggregateOutputType | null
    _min: PekerjaanMahasiswaMinAggregateOutputType | null
    _max: PekerjaanMahasiswaMaxAggregateOutputType | null
  }

  export type PekerjaanMahasiswaMinAggregateOutputType = {
    PekerjaanMahasiswaId: string | null
    PendaftaranId: string | null
    AlamatId: string | null
    InstitusiTempatBekerja: string | null
    Jabatan: string | null
    StatusPekerjaan: $Enums.StatusPekerjaan | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PekerjaanMahasiswaMaxAggregateOutputType = {
    PekerjaanMahasiswaId: string | null
    PendaftaranId: string | null
    AlamatId: string | null
    InstitusiTempatBekerja: string | null
    Jabatan: string | null
    StatusPekerjaan: $Enums.StatusPekerjaan | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PekerjaanMahasiswaCountAggregateOutputType = {
    PekerjaanMahasiswaId: number
    PendaftaranId: number
    AlamatId: number
    InstitusiTempatBekerja: number
    Jabatan: number
    StatusPekerjaan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type PekerjaanMahasiswaMinAggregateInputType = {
    PekerjaanMahasiswaId?: true
    PendaftaranId?: true
    AlamatId?: true
    InstitusiTempatBekerja?: true
    Jabatan?: true
    StatusPekerjaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PekerjaanMahasiswaMaxAggregateInputType = {
    PekerjaanMahasiswaId?: true
    PendaftaranId?: true
    AlamatId?: true
    InstitusiTempatBekerja?: true
    Jabatan?: true
    StatusPekerjaan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PekerjaanMahasiswaCountAggregateInputType = {
    PekerjaanMahasiswaId?: true
    PendaftaranId?: true
    AlamatId?: true
    InstitusiTempatBekerja?: true
    Jabatan?: true
    StatusPekerjaan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type PekerjaanMahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PekerjaanMahasiswa to aggregate.
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PekerjaanMahasiswas to fetch.
     */
    orderBy?: PekerjaanMahasiswaOrderByWithRelationInput | PekerjaanMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PekerjaanMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PekerjaanMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PekerjaanMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PekerjaanMahasiswas
    **/
    _count?: true | PekerjaanMahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PekerjaanMahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PekerjaanMahasiswaMaxAggregateInputType
  }

  export type GetPekerjaanMahasiswaAggregateType<T extends PekerjaanMahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregatePekerjaanMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePekerjaanMahasiswa[P]>
      : GetScalarType<T[P], AggregatePekerjaanMahasiswa[P]>
  }




  export type PekerjaanMahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PekerjaanMahasiswaWhereInput
    orderBy?: PekerjaanMahasiswaOrderByWithAggregationInput | PekerjaanMahasiswaOrderByWithAggregationInput[]
    by: PekerjaanMahasiswaScalarFieldEnum[] | PekerjaanMahasiswaScalarFieldEnum
    having?: PekerjaanMahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PekerjaanMahasiswaCountAggregateInputType | true
    _min?: PekerjaanMahasiswaMinAggregateInputType
    _max?: PekerjaanMahasiswaMaxAggregateInputType
  }

  export type PekerjaanMahasiswaGroupByOutputType = {
    PekerjaanMahasiswaId: string
    PendaftaranId: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan: $Enums.StatusPekerjaan
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: PekerjaanMahasiswaCountAggregateOutputType | null
    _min: PekerjaanMahasiswaMinAggregateOutputType | null
    _max: PekerjaanMahasiswaMaxAggregateOutputType | null
  }

  type GetPekerjaanMahasiswaGroupByPayload<T extends PekerjaanMahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PekerjaanMahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PekerjaanMahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PekerjaanMahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], PekerjaanMahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type PekerjaanMahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PekerjaanMahasiswaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    InstitusiTempatBekerja?: boolean
    Jabatan?: boolean
    StatusPekerjaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pekerjaanMahasiswa"]>

  export type PekerjaanMahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PekerjaanMahasiswaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    InstitusiTempatBekerja?: boolean
    Jabatan?: boolean
    StatusPekerjaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pekerjaanMahasiswa"]>

  export type PekerjaanMahasiswaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PekerjaanMahasiswaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    InstitusiTempatBekerja?: boolean
    Jabatan?: boolean
    StatusPekerjaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pekerjaanMahasiswa"]>

  export type PekerjaanMahasiswaSelectScalar = {
    PekerjaanMahasiswaId?: boolean
    PendaftaranId?: boolean
    AlamatId?: boolean
    InstitusiTempatBekerja?: boolean
    Jabatan?: boolean
    StatusPekerjaan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type PekerjaanMahasiswaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"PekerjaanMahasiswaId" | "PendaftaranId" | "AlamatId" | "InstitusiTempatBekerja" | "Jabatan" | "StatusPekerjaan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["pekerjaanMahasiswa"]>
  export type PekerjaanMahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type PekerjaanMahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type PekerjaanMahasiswaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $PekerjaanMahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PekerjaanMahasiswa"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      PekerjaanMahasiswaId: string
      PendaftaranId: string
      AlamatId: string
      InstitusiTempatBekerja: string
      Jabatan: string
      StatusPekerjaan: $Enums.StatusPekerjaan
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["pekerjaanMahasiswa"]>
    composites: {}
  }

  type PekerjaanMahasiswaGetPayload<S extends boolean | null | undefined | PekerjaanMahasiswaDefaultArgs> = $Result.GetResult<Prisma.$PekerjaanMahasiswaPayload, S>

  type PekerjaanMahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PekerjaanMahasiswaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PekerjaanMahasiswaCountAggregateInputType | true
    }

  export interface PekerjaanMahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PekerjaanMahasiswa'], meta: { name: 'PekerjaanMahasiswa' } }
    /**
     * Find zero or one PekerjaanMahasiswa that matches the filter.
     * @param {PekerjaanMahasiswaFindUniqueArgs} args - Arguments to find a PekerjaanMahasiswa
     * @example
     * // Get one PekerjaanMahasiswa
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PekerjaanMahasiswaFindUniqueArgs>(args: SelectSubset<T, PekerjaanMahasiswaFindUniqueArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PekerjaanMahasiswa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PekerjaanMahasiswaFindUniqueOrThrowArgs} args - Arguments to find a PekerjaanMahasiswa
     * @example
     * // Get one PekerjaanMahasiswa
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PekerjaanMahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, PekerjaanMahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PekerjaanMahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaFindFirstArgs} args - Arguments to find a PekerjaanMahasiswa
     * @example
     * // Get one PekerjaanMahasiswa
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PekerjaanMahasiswaFindFirstArgs>(args?: SelectSubset<T, PekerjaanMahasiswaFindFirstArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PekerjaanMahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaFindFirstOrThrowArgs} args - Arguments to find a PekerjaanMahasiswa
     * @example
     * // Get one PekerjaanMahasiswa
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PekerjaanMahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, PekerjaanMahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PekerjaanMahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PekerjaanMahasiswas
     * const pekerjaanMahasiswas = await prisma.pekerjaanMahasiswa.findMany()
     * 
     * // Get first 10 PekerjaanMahasiswas
     * const pekerjaanMahasiswas = await prisma.pekerjaanMahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `PekerjaanMahasiswaId`
     * const pekerjaanMahasiswaWithPekerjaanMahasiswaIdOnly = await prisma.pekerjaanMahasiswa.findMany({ select: { PekerjaanMahasiswaId: true } })
     * 
     */
    findMany<T extends PekerjaanMahasiswaFindManyArgs>(args?: SelectSubset<T, PekerjaanMahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PekerjaanMahasiswa.
     * @param {PekerjaanMahasiswaCreateArgs} args - Arguments to create a PekerjaanMahasiswa.
     * @example
     * // Create one PekerjaanMahasiswa
     * const PekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.create({
     *   data: {
     *     // ... data to create a PekerjaanMahasiswa
     *   }
     * })
     * 
     */
    create<T extends PekerjaanMahasiswaCreateArgs>(args: SelectSubset<T, PekerjaanMahasiswaCreateArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PekerjaanMahasiswas.
     * @param {PekerjaanMahasiswaCreateManyArgs} args - Arguments to create many PekerjaanMahasiswas.
     * @example
     * // Create many PekerjaanMahasiswas
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PekerjaanMahasiswaCreateManyArgs>(args?: SelectSubset<T, PekerjaanMahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PekerjaanMahasiswas and returns the data saved in the database.
     * @param {PekerjaanMahasiswaCreateManyAndReturnArgs} args - Arguments to create many PekerjaanMahasiswas.
     * @example
     * // Create many PekerjaanMahasiswas
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PekerjaanMahasiswas and only return the `PekerjaanMahasiswaId`
     * const pekerjaanMahasiswaWithPekerjaanMahasiswaIdOnly = await prisma.pekerjaanMahasiswa.createManyAndReturn({
     *   select: { PekerjaanMahasiswaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PekerjaanMahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, PekerjaanMahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PekerjaanMahasiswa.
     * @param {PekerjaanMahasiswaDeleteArgs} args - Arguments to delete one PekerjaanMahasiswa.
     * @example
     * // Delete one PekerjaanMahasiswa
     * const PekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.delete({
     *   where: {
     *     // ... filter to delete one PekerjaanMahasiswa
     *   }
     * })
     * 
     */
    delete<T extends PekerjaanMahasiswaDeleteArgs>(args: SelectSubset<T, PekerjaanMahasiswaDeleteArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PekerjaanMahasiswa.
     * @param {PekerjaanMahasiswaUpdateArgs} args - Arguments to update one PekerjaanMahasiswa.
     * @example
     * // Update one PekerjaanMahasiswa
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PekerjaanMahasiswaUpdateArgs>(args: SelectSubset<T, PekerjaanMahasiswaUpdateArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PekerjaanMahasiswas.
     * @param {PekerjaanMahasiswaDeleteManyArgs} args - Arguments to filter PekerjaanMahasiswas to delete.
     * @example
     * // Delete a few PekerjaanMahasiswas
     * const { count } = await prisma.pekerjaanMahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PekerjaanMahasiswaDeleteManyArgs>(args?: SelectSubset<T, PekerjaanMahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PekerjaanMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PekerjaanMahasiswas
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PekerjaanMahasiswaUpdateManyArgs>(args: SelectSubset<T, PekerjaanMahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PekerjaanMahasiswas and returns the data updated in the database.
     * @param {PekerjaanMahasiswaUpdateManyAndReturnArgs} args - Arguments to update many PekerjaanMahasiswas.
     * @example
     * // Update many PekerjaanMahasiswas
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PekerjaanMahasiswas and only return the `PekerjaanMahasiswaId`
     * const pekerjaanMahasiswaWithPekerjaanMahasiswaIdOnly = await prisma.pekerjaanMahasiswa.updateManyAndReturn({
     *   select: { PekerjaanMahasiswaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PekerjaanMahasiswaUpdateManyAndReturnArgs>(args: SelectSubset<T, PekerjaanMahasiswaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PekerjaanMahasiswa.
     * @param {PekerjaanMahasiswaUpsertArgs} args - Arguments to update or create a PekerjaanMahasiswa.
     * @example
     * // Update or create a PekerjaanMahasiswa
     * const pekerjaanMahasiswa = await prisma.pekerjaanMahasiswa.upsert({
     *   create: {
     *     // ... data to create a PekerjaanMahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PekerjaanMahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends PekerjaanMahasiswaUpsertArgs>(args: SelectSubset<T, PekerjaanMahasiswaUpsertArgs<ExtArgs>>): Prisma__PekerjaanMahasiswaClient<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PekerjaanMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaCountArgs} args - Arguments to filter PekerjaanMahasiswas to count.
     * @example
     * // Count the number of PekerjaanMahasiswas
     * const count = await prisma.pekerjaanMahasiswa.count({
     *   where: {
     *     // ... the filter for the PekerjaanMahasiswas we want to count
     *   }
     * })
    **/
    count<T extends PekerjaanMahasiswaCountArgs>(
      args?: Subset<T, PekerjaanMahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PekerjaanMahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PekerjaanMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PekerjaanMahasiswaAggregateArgs>(args: Subset<T, PekerjaanMahasiswaAggregateArgs>): Prisma.PrismaPromise<GetPekerjaanMahasiswaAggregateType<T>>

    /**
     * Group by PekerjaanMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PekerjaanMahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PekerjaanMahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PekerjaanMahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: PekerjaanMahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PekerjaanMahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPekerjaanMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PekerjaanMahasiswa model
   */
  readonly fields: PekerjaanMahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PekerjaanMahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PekerjaanMahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PekerjaanMahasiswa model
   */
  interface PekerjaanMahasiswaFieldRefs {
    readonly PekerjaanMahasiswaId: FieldRef<"PekerjaanMahasiswa", 'String'>
    readonly PendaftaranId: FieldRef<"PekerjaanMahasiswa", 'String'>
    readonly AlamatId: FieldRef<"PekerjaanMahasiswa", 'String'>
    readonly InstitusiTempatBekerja: FieldRef<"PekerjaanMahasiswa", 'String'>
    readonly Jabatan: FieldRef<"PekerjaanMahasiswa", 'String'>
    readonly StatusPekerjaan: FieldRef<"PekerjaanMahasiswa", 'StatusPekerjaan'>
    readonly CreatedAt: FieldRef<"PekerjaanMahasiswa", 'DateTime'>
    readonly UpdatedAt: FieldRef<"PekerjaanMahasiswa", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PekerjaanMahasiswa findUnique
   */
  export type PekerjaanMahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which PekerjaanMahasiswa to fetch.
     */
    where: PekerjaanMahasiswaWhereUniqueInput
  }

  /**
   * PekerjaanMahasiswa findUniqueOrThrow
   */
  export type PekerjaanMahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which PekerjaanMahasiswa to fetch.
     */
    where: PekerjaanMahasiswaWhereUniqueInput
  }

  /**
   * PekerjaanMahasiswa findFirst
   */
  export type PekerjaanMahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which PekerjaanMahasiswa to fetch.
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PekerjaanMahasiswas to fetch.
     */
    orderBy?: PekerjaanMahasiswaOrderByWithRelationInput | PekerjaanMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PekerjaanMahasiswas.
     */
    cursor?: PekerjaanMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PekerjaanMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PekerjaanMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PekerjaanMahasiswas.
     */
    distinct?: PekerjaanMahasiswaScalarFieldEnum | PekerjaanMahasiswaScalarFieldEnum[]
  }

  /**
   * PekerjaanMahasiswa findFirstOrThrow
   */
  export type PekerjaanMahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which PekerjaanMahasiswa to fetch.
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PekerjaanMahasiswas to fetch.
     */
    orderBy?: PekerjaanMahasiswaOrderByWithRelationInput | PekerjaanMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PekerjaanMahasiswas.
     */
    cursor?: PekerjaanMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PekerjaanMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PekerjaanMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PekerjaanMahasiswas.
     */
    distinct?: PekerjaanMahasiswaScalarFieldEnum | PekerjaanMahasiswaScalarFieldEnum[]
  }

  /**
   * PekerjaanMahasiswa findMany
   */
  export type PekerjaanMahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which PekerjaanMahasiswas to fetch.
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PekerjaanMahasiswas to fetch.
     */
    orderBy?: PekerjaanMahasiswaOrderByWithRelationInput | PekerjaanMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PekerjaanMahasiswas.
     */
    cursor?: PekerjaanMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PekerjaanMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PekerjaanMahasiswas.
     */
    skip?: number
    distinct?: PekerjaanMahasiswaScalarFieldEnum | PekerjaanMahasiswaScalarFieldEnum[]
  }

  /**
   * PekerjaanMahasiswa create
   */
  export type PekerjaanMahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a PekerjaanMahasiswa.
     */
    data: XOR<PekerjaanMahasiswaCreateInput, PekerjaanMahasiswaUncheckedCreateInput>
  }

  /**
   * PekerjaanMahasiswa createMany
   */
  export type PekerjaanMahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PekerjaanMahasiswas.
     */
    data: PekerjaanMahasiswaCreateManyInput | PekerjaanMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PekerjaanMahasiswa createManyAndReturn
   */
  export type PekerjaanMahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to create many PekerjaanMahasiswas.
     */
    data: PekerjaanMahasiswaCreateManyInput | PekerjaanMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PekerjaanMahasiswa update
   */
  export type PekerjaanMahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a PekerjaanMahasiswa.
     */
    data: XOR<PekerjaanMahasiswaUpdateInput, PekerjaanMahasiswaUncheckedUpdateInput>
    /**
     * Choose, which PekerjaanMahasiswa to update.
     */
    where: PekerjaanMahasiswaWhereUniqueInput
  }

  /**
   * PekerjaanMahasiswa updateMany
   */
  export type PekerjaanMahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PekerjaanMahasiswas.
     */
    data: XOR<PekerjaanMahasiswaUpdateManyMutationInput, PekerjaanMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which PekerjaanMahasiswas to update
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * Limit how many PekerjaanMahasiswas to update.
     */
    limit?: number
  }

  /**
   * PekerjaanMahasiswa updateManyAndReturn
   */
  export type PekerjaanMahasiswaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to update PekerjaanMahasiswas.
     */
    data: XOR<PekerjaanMahasiswaUpdateManyMutationInput, PekerjaanMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which PekerjaanMahasiswas to update
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * Limit how many PekerjaanMahasiswas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PekerjaanMahasiswa upsert
   */
  export type PekerjaanMahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the PekerjaanMahasiswa to update in case it exists.
     */
    where: PekerjaanMahasiswaWhereUniqueInput
    /**
     * In case the PekerjaanMahasiswa found by the `where` argument doesn't exist, create a new PekerjaanMahasiswa with this data.
     */
    create: XOR<PekerjaanMahasiswaCreateInput, PekerjaanMahasiswaUncheckedCreateInput>
    /**
     * In case the PekerjaanMahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PekerjaanMahasiswaUpdateInput, PekerjaanMahasiswaUncheckedUpdateInput>
  }

  /**
   * PekerjaanMahasiswa delete
   */
  export type PekerjaanMahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    /**
     * Filter which PekerjaanMahasiswa to delete.
     */
    where: PekerjaanMahasiswaWhereUniqueInput
  }

  /**
   * PekerjaanMahasiswa deleteMany
   */
  export type PekerjaanMahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PekerjaanMahasiswas to delete
     */
    where?: PekerjaanMahasiswaWhereInput
    /**
     * Limit how many PekerjaanMahasiswas to delete.
     */
    limit?: number
  }

  /**
   * PekerjaanMahasiswa without action
   */
  export type PekerjaanMahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model Pendaftaran
   */

  export type AggregatePendaftaran = {
    _count: PendaftaranCountAggregateOutputType | null
    _min: PendaftaranMinAggregateOutputType | null
    _max: PendaftaranMaxAggregateOutputType | null
  }

  export type PendaftaranMinAggregateOutputType = {
    PendaftaranId: string | null
    MahasiswaId: string | null
    KodePendaftar: string | null
    NoUjian: string | null
    Periode: string | null
    Gelombang: string | null
    SistemKuliah: $Enums.SistemKuliah | null
    JalurPendaftaran: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PendaftaranMaxAggregateOutputType = {
    PendaftaranId: string | null
    MahasiswaId: string | null
    KodePendaftar: string | null
    NoUjian: string | null
    Periode: string | null
    Gelombang: string | null
    SistemKuliah: $Enums.SistemKuliah | null
    JalurPendaftaran: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PendaftaranCountAggregateOutputType = {
    PendaftaranId: number
    MahasiswaId: number
    KodePendaftar: number
    NoUjian: number
    Periode: number
    Gelombang: number
    SistemKuliah: number
    JalurPendaftaran: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type PendaftaranMinAggregateInputType = {
    PendaftaranId?: true
    MahasiswaId?: true
    KodePendaftar?: true
    NoUjian?: true
    Periode?: true
    Gelombang?: true
    SistemKuliah?: true
    JalurPendaftaran?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PendaftaranMaxAggregateInputType = {
    PendaftaranId?: true
    MahasiswaId?: true
    KodePendaftar?: true
    NoUjian?: true
    Periode?: true
    Gelombang?: true
    SistemKuliah?: true
    JalurPendaftaran?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PendaftaranCountAggregateInputType = {
    PendaftaranId?: true
    MahasiswaId?: true
    KodePendaftar?: true
    NoUjian?: true
    Periode?: true
    Gelombang?: true
    SistemKuliah?: true
    JalurPendaftaran?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type PendaftaranAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pendaftaran to aggregate.
     */
    where?: PendaftaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pendaftarans to fetch.
     */
    orderBy?: PendaftaranOrderByWithRelationInput | PendaftaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PendaftaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pendaftarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pendaftarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pendaftarans
    **/
    _count?: true | PendaftaranCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PendaftaranMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PendaftaranMaxAggregateInputType
  }

  export type GetPendaftaranAggregateType<T extends PendaftaranAggregateArgs> = {
        [P in keyof T & keyof AggregatePendaftaran]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePendaftaran[P]>
      : GetScalarType<T[P], AggregatePendaftaran[P]>
  }




  export type PendaftaranGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PendaftaranWhereInput
    orderBy?: PendaftaranOrderByWithAggregationInput | PendaftaranOrderByWithAggregationInput[]
    by: PendaftaranScalarFieldEnum[] | PendaftaranScalarFieldEnum
    having?: PendaftaranScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PendaftaranCountAggregateInputType | true
    _min?: PendaftaranMinAggregateInputType
    _max?: PendaftaranMaxAggregateInputType
  }

  export type PendaftaranGroupByOutputType = {
    PendaftaranId: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: PendaftaranCountAggregateOutputType | null
    _min: PendaftaranMinAggregateOutputType | null
    _max: PendaftaranMaxAggregateOutputType | null
  }

  type GetPendaftaranGroupByPayload<T extends PendaftaranGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PendaftaranGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PendaftaranGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PendaftaranGroupByOutputType[P]>
            : GetScalarType<T[P], PendaftaranGroupByOutputType[P]>
        }
      >
    >


  export type PendaftaranSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PendaftaranId?: boolean
    MahasiswaId?: boolean
    KodePendaftar?: boolean
    NoUjian?: boolean
    Periode?: boolean
    Gelombang?: boolean
    SistemKuliah?: boolean
    JalurPendaftaran?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | Pendaftaran$AssesorMahasiswaArgs<ExtArgs>
    BuktiForm?: boolean | Pendaftaran$BuktiFormArgs<ExtArgs>
    DaftarUlang?: boolean | Pendaftaran$DaftarUlangArgs<ExtArgs>
    InformasiKependudukan?: boolean | Pendaftaran$InformasiKependudukanArgs<ExtArgs>
    InstitusiLama?: boolean | Pendaftaran$InstitusiLamaArgs<ExtArgs>
    MahasiswaKonferensi?: boolean | Pendaftaran$MahasiswaKonferensiArgs<ExtArgs>
    MahasiswaOrganisasiProfesi?: boolean | Pendaftaran$MahasiswaOrganisasiProfesiArgs<ExtArgs>
    MahasiswaPelatihanProfessional?: boolean | Pendaftaran$MahasiswaPelatihanProfessionalArgs<ExtArgs>
    MahasiswaPendidikan?: boolean | Pendaftaran$MahasiswaPendidikanArgs<ExtArgs>
    MahasiswaPiagam?: boolean | Pendaftaran$MahasiswaPiagamArgs<ExtArgs>
    MahasiswaRiwayatPekerjaan?: boolean | Pendaftaran$MahasiswaRiwayatPekerjaanArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | Pendaftaran$MataKuliahMahasiswaArgs<ExtArgs>
    OrangTua?: boolean | Pendaftaran$OrangTuaArgs<ExtArgs>
    PekerjaanMahasiswa?: boolean | Pendaftaran$PekerjaanMahasiswaArgs<ExtArgs>
    Pesantren?: boolean | Pendaftaran$PesantrenArgs<ExtArgs>
    SanggahanAssesmen?: boolean | Pendaftaran$SanggahanAssesmenArgs<ExtArgs>
    SkRektorMahasiswa?: boolean | Pendaftaran$SkRektorMahasiswaArgs<ExtArgs>
    _count?: boolean | PendaftaranCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pendaftaran"]>

  export type PendaftaranSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PendaftaranId?: boolean
    MahasiswaId?: boolean
    KodePendaftar?: boolean
    NoUjian?: boolean
    Periode?: boolean
    Gelombang?: boolean
    SistemKuliah?: boolean
    JalurPendaftaran?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pendaftaran"]>

  export type PendaftaranSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PendaftaranId?: boolean
    MahasiswaId?: boolean
    KodePendaftar?: boolean
    NoUjian?: boolean
    Periode?: boolean
    Gelombang?: boolean
    SistemKuliah?: boolean
    JalurPendaftaran?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pendaftaran"]>

  export type PendaftaranSelectScalar = {
    PendaftaranId?: boolean
    MahasiswaId?: boolean
    KodePendaftar?: boolean
    NoUjian?: boolean
    Periode?: boolean
    Gelombang?: boolean
    SistemKuliah?: boolean
    JalurPendaftaran?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type PendaftaranOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"PendaftaranId" | "MahasiswaId" | "KodePendaftar" | "NoUjian" | "Periode" | "Gelombang" | "SistemKuliah" | "JalurPendaftaran" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["pendaftaran"]>
  export type PendaftaranInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | Pendaftaran$AssesorMahasiswaArgs<ExtArgs>
    BuktiForm?: boolean | Pendaftaran$BuktiFormArgs<ExtArgs>
    DaftarUlang?: boolean | Pendaftaran$DaftarUlangArgs<ExtArgs>
    InformasiKependudukan?: boolean | Pendaftaran$InformasiKependudukanArgs<ExtArgs>
    InstitusiLama?: boolean | Pendaftaran$InstitusiLamaArgs<ExtArgs>
    MahasiswaKonferensi?: boolean | Pendaftaran$MahasiswaKonferensiArgs<ExtArgs>
    MahasiswaOrganisasiProfesi?: boolean | Pendaftaran$MahasiswaOrganisasiProfesiArgs<ExtArgs>
    MahasiswaPelatihanProfessional?: boolean | Pendaftaran$MahasiswaPelatihanProfessionalArgs<ExtArgs>
    MahasiswaPendidikan?: boolean | Pendaftaran$MahasiswaPendidikanArgs<ExtArgs>
    MahasiswaPiagam?: boolean | Pendaftaran$MahasiswaPiagamArgs<ExtArgs>
    MahasiswaRiwayatPekerjaan?: boolean | Pendaftaran$MahasiswaRiwayatPekerjaanArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | Pendaftaran$MataKuliahMahasiswaArgs<ExtArgs>
    OrangTua?: boolean | Pendaftaran$OrangTuaArgs<ExtArgs>
    PekerjaanMahasiswa?: boolean | Pendaftaran$PekerjaanMahasiswaArgs<ExtArgs>
    Pesantren?: boolean | Pendaftaran$PesantrenArgs<ExtArgs>
    SanggahanAssesmen?: boolean | Pendaftaran$SanggahanAssesmenArgs<ExtArgs>
    SkRektorMahasiswa?: boolean | Pendaftaran$SkRektorMahasiswaArgs<ExtArgs>
    _count?: boolean | PendaftaranCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PendaftaranIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
  }
  export type PendaftaranIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
  }

  export type $PendaftaranPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pendaftaran"
    objects: {
      Mahasiswa: Prisma.$MahasiswaPayload<ExtArgs>
      AssesorMahasiswa: Prisma.$AssesorMahasiswaPayload<ExtArgs>[]
      BuktiForm: Prisma.$BuktiFormPayload<ExtArgs>[]
      DaftarUlang: Prisma.$DaftarUlangPayload<ExtArgs>[]
      InformasiKependudukan: Prisma.$InformasiKependudukanPayload<ExtArgs>[]
      InstitusiLama: Prisma.$InstitusiLamaPayload<ExtArgs>[]
      MahasiswaKonferensi: Prisma.$MahasiswaKonferensiPayload<ExtArgs>[]
      MahasiswaOrganisasiProfesi: Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>[]
      MahasiswaPelatihanProfessional: Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>[]
      MahasiswaPendidikan: Prisma.$MahasiswaPendidikanPayload<ExtArgs>[]
      MahasiswaPiagam: Prisma.$MahasiswaPiagamPayload<ExtArgs>[]
      MahasiswaRiwayatPekerjaan: Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>[]
      MataKuliahMahasiswa: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>[]
      OrangTua: Prisma.$OrangTuaPayload<ExtArgs>[]
      PekerjaanMahasiswa: Prisma.$PekerjaanMahasiswaPayload<ExtArgs>[]
      Pesantren: Prisma.$PesantrenPayload<ExtArgs>[]
      SanggahanAssesmen: Prisma.$SanggahanAssesmenPayload<ExtArgs>[]
      SkRektorMahasiswa: Prisma.$SkRektorMahasiswaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      PendaftaranId: string
      MahasiswaId: string
      KodePendaftar: string
      NoUjian: string
      Periode: string
      Gelombang: string
      SistemKuliah: $Enums.SistemKuliah
      JalurPendaftaran: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["pendaftaran"]>
    composites: {}
  }

  type PendaftaranGetPayload<S extends boolean | null | undefined | PendaftaranDefaultArgs> = $Result.GetResult<Prisma.$PendaftaranPayload, S>

  type PendaftaranCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PendaftaranFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PendaftaranCountAggregateInputType | true
    }

  export interface PendaftaranDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pendaftaran'], meta: { name: 'Pendaftaran' } }
    /**
     * Find zero or one Pendaftaran that matches the filter.
     * @param {PendaftaranFindUniqueArgs} args - Arguments to find a Pendaftaran
     * @example
     * // Get one Pendaftaran
     * const pendaftaran = await prisma.pendaftaran.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PendaftaranFindUniqueArgs>(args: SelectSubset<T, PendaftaranFindUniqueArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pendaftaran that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PendaftaranFindUniqueOrThrowArgs} args - Arguments to find a Pendaftaran
     * @example
     * // Get one Pendaftaran
     * const pendaftaran = await prisma.pendaftaran.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PendaftaranFindUniqueOrThrowArgs>(args: SelectSubset<T, PendaftaranFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pendaftaran that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranFindFirstArgs} args - Arguments to find a Pendaftaran
     * @example
     * // Get one Pendaftaran
     * const pendaftaran = await prisma.pendaftaran.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PendaftaranFindFirstArgs>(args?: SelectSubset<T, PendaftaranFindFirstArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pendaftaran that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranFindFirstOrThrowArgs} args - Arguments to find a Pendaftaran
     * @example
     * // Get one Pendaftaran
     * const pendaftaran = await prisma.pendaftaran.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PendaftaranFindFirstOrThrowArgs>(args?: SelectSubset<T, PendaftaranFindFirstOrThrowArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pendaftarans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pendaftarans
     * const pendaftarans = await prisma.pendaftaran.findMany()
     * 
     * // Get first 10 Pendaftarans
     * const pendaftarans = await prisma.pendaftaran.findMany({ take: 10 })
     * 
     * // Only select the `PendaftaranId`
     * const pendaftaranWithPendaftaranIdOnly = await prisma.pendaftaran.findMany({ select: { PendaftaranId: true } })
     * 
     */
    findMany<T extends PendaftaranFindManyArgs>(args?: SelectSubset<T, PendaftaranFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pendaftaran.
     * @param {PendaftaranCreateArgs} args - Arguments to create a Pendaftaran.
     * @example
     * // Create one Pendaftaran
     * const Pendaftaran = await prisma.pendaftaran.create({
     *   data: {
     *     // ... data to create a Pendaftaran
     *   }
     * })
     * 
     */
    create<T extends PendaftaranCreateArgs>(args: SelectSubset<T, PendaftaranCreateArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pendaftarans.
     * @param {PendaftaranCreateManyArgs} args - Arguments to create many Pendaftarans.
     * @example
     * // Create many Pendaftarans
     * const pendaftaran = await prisma.pendaftaran.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PendaftaranCreateManyArgs>(args?: SelectSubset<T, PendaftaranCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pendaftarans and returns the data saved in the database.
     * @param {PendaftaranCreateManyAndReturnArgs} args - Arguments to create many Pendaftarans.
     * @example
     * // Create many Pendaftarans
     * const pendaftaran = await prisma.pendaftaran.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pendaftarans and only return the `PendaftaranId`
     * const pendaftaranWithPendaftaranIdOnly = await prisma.pendaftaran.createManyAndReturn({
     *   select: { PendaftaranId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PendaftaranCreateManyAndReturnArgs>(args?: SelectSubset<T, PendaftaranCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pendaftaran.
     * @param {PendaftaranDeleteArgs} args - Arguments to delete one Pendaftaran.
     * @example
     * // Delete one Pendaftaran
     * const Pendaftaran = await prisma.pendaftaran.delete({
     *   where: {
     *     // ... filter to delete one Pendaftaran
     *   }
     * })
     * 
     */
    delete<T extends PendaftaranDeleteArgs>(args: SelectSubset<T, PendaftaranDeleteArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pendaftaran.
     * @param {PendaftaranUpdateArgs} args - Arguments to update one Pendaftaran.
     * @example
     * // Update one Pendaftaran
     * const pendaftaran = await prisma.pendaftaran.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PendaftaranUpdateArgs>(args: SelectSubset<T, PendaftaranUpdateArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pendaftarans.
     * @param {PendaftaranDeleteManyArgs} args - Arguments to filter Pendaftarans to delete.
     * @example
     * // Delete a few Pendaftarans
     * const { count } = await prisma.pendaftaran.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PendaftaranDeleteManyArgs>(args?: SelectSubset<T, PendaftaranDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pendaftarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pendaftarans
     * const pendaftaran = await prisma.pendaftaran.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PendaftaranUpdateManyArgs>(args: SelectSubset<T, PendaftaranUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pendaftarans and returns the data updated in the database.
     * @param {PendaftaranUpdateManyAndReturnArgs} args - Arguments to update many Pendaftarans.
     * @example
     * // Update many Pendaftarans
     * const pendaftaran = await prisma.pendaftaran.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pendaftarans and only return the `PendaftaranId`
     * const pendaftaranWithPendaftaranIdOnly = await prisma.pendaftaran.updateManyAndReturn({
     *   select: { PendaftaranId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PendaftaranUpdateManyAndReturnArgs>(args: SelectSubset<T, PendaftaranUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pendaftaran.
     * @param {PendaftaranUpsertArgs} args - Arguments to update or create a Pendaftaran.
     * @example
     * // Update or create a Pendaftaran
     * const pendaftaran = await prisma.pendaftaran.upsert({
     *   create: {
     *     // ... data to create a Pendaftaran
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pendaftaran we want to update
     *   }
     * })
     */
    upsert<T extends PendaftaranUpsertArgs>(args: SelectSubset<T, PendaftaranUpsertArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pendaftarans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranCountArgs} args - Arguments to filter Pendaftarans to count.
     * @example
     * // Count the number of Pendaftarans
     * const count = await prisma.pendaftaran.count({
     *   where: {
     *     // ... the filter for the Pendaftarans we want to count
     *   }
     * })
    **/
    count<T extends PendaftaranCountArgs>(
      args?: Subset<T, PendaftaranCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PendaftaranCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pendaftaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PendaftaranAggregateArgs>(args: Subset<T, PendaftaranAggregateArgs>): Prisma.PrismaPromise<GetPendaftaranAggregateType<T>>

    /**
     * Group by Pendaftaran.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendaftaranGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PendaftaranGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PendaftaranGroupByArgs['orderBy'] }
        : { orderBy?: PendaftaranGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PendaftaranGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPendaftaranGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pendaftaran model
   */
  readonly fields: PendaftaranFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pendaftaran.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PendaftaranClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Mahasiswa<T extends MahasiswaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MahasiswaDefaultArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    AssesorMahasiswa<T extends Pendaftaran$AssesorMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$AssesorMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    BuktiForm<T extends Pendaftaran$BuktiFormArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$BuktiFormArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuktiFormPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    DaftarUlang<T extends Pendaftaran$DaftarUlangArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$DaftarUlangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InformasiKependudukan<T extends Pendaftaran$InformasiKependudukanArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$InformasiKependudukanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InformasiKependudukanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    InstitusiLama<T extends Pendaftaran$InstitusiLamaArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$InstitusiLamaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InstitusiLamaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MahasiswaKonferensi<T extends Pendaftaran$MahasiswaKonferensiArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MahasiswaKonferensiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaKonferensiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MahasiswaOrganisasiProfesi<T extends Pendaftaran$MahasiswaOrganisasiProfesiArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MahasiswaOrganisasiProfesiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaOrganisasiProfesiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MahasiswaPelatihanProfessional<T extends Pendaftaran$MahasiswaPelatihanProfessionalArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MahasiswaPelatihanProfessionalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPelatihanProfessionalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MahasiswaPendidikan<T extends Pendaftaran$MahasiswaPendidikanArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MahasiswaPendidikanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPendidikanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MahasiswaPiagam<T extends Pendaftaran$MahasiswaPiagamArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MahasiswaPiagamArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPiagamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MahasiswaRiwayatPekerjaan<T extends Pendaftaran$MahasiswaRiwayatPekerjaanArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MahasiswaRiwayatPekerjaanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaRiwayatPekerjaanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MataKuliahMahasiswa<T extends Pendaftaran$MataKuliahMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$MataKuliahMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    OrangTua<T extends Pendaftaran$OrangTuaArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$OrangTuaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrangTuaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PekerjaanMahasiswa<T extends Pendaftaran$PekerjaanMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$PekerjaanMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PekerjaanMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Pesantren<T extends Pendaftaran$PesantrenArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$PesantrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SanggahanAssesmen<T extends Pendaftaran$SanggahanAssesmenArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$SanggahanAssesmenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SkRektorMahasiswa<T extends Pendaftaran$SkRektorMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, Pendaftaran$SkRektorMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pendaftaran model
   */
  interface PendaftaranFieldRefs {
    readonly PendaftaranId: FieldRef<"Pendaftaran", 'String'>
    readonly MahasiswaId: FieldRef<"Pendaftaran", 'String'>
    readonly KodePendaftar: FieldRef<"Pendaftaran", 'String'>
    readonly NoUjian: FieldRef<"Pendaftaran", 'String'>
    readonly Periode: FieldRef<"Pendaftaran", 'String'>
    readonly Gelombang: FieldRef<"Pendaftaran", 'String'>
    readonly SistemKuliah: FieldRef<"Pendaftaran", 'SistemKuliah'>
    readonly JalurPendaftaran: FieldRef<"Pendaftaran", 'String'>
    readonly CreatedAt: FieldRef<"Pendaftaran", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Pendaftaran", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pendaftaran findUnique
   */
  export type PendaftaranFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * Filter, which Pendaftaran to fetch.
     */
    where: PendaftaranWhereUniqueInput
  }

  /**
   * Pendaftaran findUniqueOrThrow
   */
  export type PendaftaranFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * Filter, which Pendaftaran to fetch.
     */
    where: PendaftaranWhereUniqueInput
  }

  /**
   * Pendaftaran findFirst
   */
  export type PendaftaranFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * Filter, which Pendaftaran to fetch.
     */
    where?: PendaftaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pendaftarans to fetch.
     */
    orderBy?: PendaftaranOrderByWithRelationInput | PendaftaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pendaftarans.
     */
    cursor?: PendaftaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pendaftarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pendaftarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pendaftarans.
     */
    distinct?: PendaftaranScalarFieldEnum | PendaftaranScalarFieldEnum[]
  }

  /**
   * Pendaftaran findFirstOrThrow
   */
  export type PendaftaranFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * Filter, which Pendaftaran to fetch.
     */
    where?: PendaftaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pendaftarans to fetch.
     */
    orderBy?: PendaftaranOrderByWithRelationInput | PendaftaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pendaftarans.
     */
    cursor?: PendaftaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pendaftarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pendaftarans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pendaftarans.
     */
    distinct?: PendaftaranScalarFieldEnum | PendaftaranScalarFieldEnum[]
  }

  /**
   * Pendaftaran findMany
   */
  export type PendaftaranFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * Filter, which Pendaftarans to fetch.
     */
    where?: PendaftaranWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pendaftarans to fetch.
     */
    orderBy?: PendaftaranOrderByWithRelationInput | PendaftaranOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pendaftarans.
     */
    cursor?: PendaftaranWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pendaftarans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pendaftarans.
     */
    skip?: number
    distinct?: PendaftaranScalarFieldEnum | PendaftaranScalarFieldEnum[]
  }

  /**
   * Pendaftaran create
   */
  export type PendaftaranCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * The data needed to create a Pendaftaran.
     */
    data: XOR<PendaftaranCreateInput, PendaftaranUncheckedCreateInput>
  }

  /**
   * Pendaftaran createMany
   */
  export type PendaftaranCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pendaftarans.
     */
    data: PendaftaranCreateManyInput | PendaftaranCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pendaftaran createManyAndReturn
   */
  export type PendaftaranCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * The data used to create many Pendaftarans.
     */
    data: PendaftaranCreateManyInput | PendaftaranCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pendaftaran update
   */
  export type PendaftaranUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * The data needed to update a Pendaftaran.
     */
    data: XOR<PendaftaranUpdateInput, PendaftaranUncheckedUpdateInput>
    /**
     * Choose, which Pendaftaran to update.
     */
    where: PendaftaranWhereUniqueInput
  }

  /**
   * Pendaftaran updateMany
   */
  export type PendaftaranUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pendaftarans.
     */
    data: XOR<PendaftaranUpdateManyMutationInput, PendaftaranUncheckedUpdateManyInput>
    /**
     * Filter which Pendaftarans to update
     */
    where?: PendaftaranWhereInput
    /**
     * Limit how many Pendaftarans to update.
     */
    limit?: number
  }

  /**
   * Pendaftaran updateManyAndReturn
   */
  export type PendaftaranUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * The data used to update Pendaftarans.
     */
    data: XOR<PendaftaranUpdateManyMutationInput, PendaftaranUncheckedUpdateManyInput>
    /**
     * Filter which Pendaftarans to update
     */
    where?: PendaftaranWhereInput
    /**
     * Limit how many Pendaftarans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pendaftaran upsert
   */
  export type PendaftaranUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * The filter to search for the Pendaftaran to update in case it exists.
     */
    where: PendaftaranWhereUniqueInput
    /**
     * In case the Pendaftaran found by the `where` argument doesn't exist, create a new Pendaftaran with this data.
     */
    create: XOR<PendaftaranCreateInput, PendaftaranUncheckedCreateInput>
    /**
     * In case the Pendaftaran was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PendaftaranUpdateInput, PendaftaranUncheckedUpdateInput>
  }

  /**
   * Pendaftaran delete
   */
  export type PendaftaranDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
    /**
     * Filter which Pendaftaran to delete.
     */
    where: PendaftaranWhereUniqueInput
  }

  /**
   * Pendaftaran deleteMany
   */
  export type PendaftaranDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pendaftarans to delete
     */
    where?: PendaftaranWhereInput
    /**
     * Limit how many Pendaftarans to delete.
     */
    limit?: number
  }

  /**
   * Pendaftaran.AssesorMahasiswa
   */
  export type Pendaftaran$AssesorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssesorMahasiswa
     */
    select?: AssesorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssesorMahasiswa
     */
    omit?: AssesorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssesorMahasiswaInclude<ExtArgs> | null
    where?: AssesorMahasiswaWhereInput
    orderBy?: AssesorMahasiswaOrderByWithRelationInput | AssesorMahasiswaOrderByWithRelationInput[]
    cursor?: AssesorMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssesorMahasiswaScalarFieldEnum | AssesorMahasiswaScalarFieldEnum[]
  }

  /**
   * Pendaftaran.BuktiForm
   */
  export type Pendaftaran$BuktiFormArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuktiForm
     */
    select?: BuktiFormSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BuktiForm
     */
    omit?: BuktiFormOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuktiFormInclude<ExtArgs> | null
    where?: BuktiFormWhereInput
    orderBy?: BuktiFormOrderByWithRelationInput | BuktiFormOrderByWithRelationInput[]
    cursor?: BuktiFormWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BuktiFormScalarFieldEnum | BuktiFormScalarFieldEnum[]
  }

  /**
   * Pendaftaran.DaftarUlang
   */
  export type Pendaftaran$DaftarUlangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    where?: DaftarUlangWhereInput
    orderBy?: DaftarUlangOrderByWithRelationInput | DaftarUlangOrderByWithRelationInput[]
    cursor?: DaftarUlangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DaftarUlangScalarFieldEnum | DaftarUlangScalarFieldEnum[]
  }

  /**
   * Pendaftaran.InformasiKependudukan
   */
  export type Pendaftaran$InformasiKependudukanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InformasiKependudukan
     */
    select?: InformasiKependudukanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InformasiKependudukan
     */
    omit?: InformasiKependudukanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InformasiKependudukanInclude<ExtArgs> | null
    where?: InformasiKependudukanWhereInput
    orderBy?: InformasiKependudukanOrderByWithRelationInput | InformasiKependudukanOrderByWithRelationInput[]
    cursor?: InformasiKependudukanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InformasiKependudukanScalarFieldEnum | InformasiKependudukanScalarFieldEnum[]
  }

  /**
   * Pendaftaran.InstitusiLama
   */
  export type Pendaftaran$InstitusiLamaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InstitusiLama
     */
    select?: InstitusiLamaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the InstitusiLama
     */
    omit?: InstitusiLamaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InstitusiLamaInclude<ExtArgs> | null
    where?: InstitusiLamaWhereInput
    orderBy?: InstitusiLamaOrderByWithRelationInput | InstitusiLamaOrderByWithRelationInput[]
    cursor?: InstitusiLamaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InstitusiLamaScalarFieldEnum | InstitusiLamaScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MahasiswaKonferensi
   */
  export type Pendaftaran$MahasiswaKonferensiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaKonferensi
     */
    select?: MahasiswaKonferensiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaKonferensi
     */
    omit?: MahasiswaKonferensiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaKonferensiInclude<ExtArgs> | null
    where?: MahasiswaKonferensiWhereInput
    orderBy?: MahasiswaKonferensiOrderByWithRelationInput | MahasiswaKonferensiOrderByWithRelationInput[]
    cursor?: MahasiswaKonferensiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaKonferensiScalarFieldEnum | MahasiswaKonferensiScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MahasiswaOrganisasiProfesi
   */
  export type Pendaftaran$MahasiswaOrganisasiProfesiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaOrganisasiProfesi
     */
    select?: MahasiswaOrganisasiProfesiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaOrganisasiProfesi
     */
    omit?: MahasiswaOrganisasiProfesiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaOrganisasiProfesiInclude<ExtArgs> | null
    where?: MahasiswaOrganisasiProfesiWhereInput
    orderBy?: MahasiswaOrganisasiProfesiOrderByWithRelationInput | MahasiswaOrganisasiProfesiOrderByWithRelationInput[]
    cursor?: MahasiswaOrganisasiProfesiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaOrganisasiProfesiScalarFieldEnum | MahasiswaOrganisasiProfesiScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MahasiswaPelatihanProfessional
   */
  export type Pendaftaran$MahasiswaPelatihanProfessionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPelatihanProfessional
     */
    select?: MahasiswaPelatihanProfessionalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPelatihanProfessional
     */
    omit?: MahasiswaPelatihanProfessionalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPelatihanProfessionalInclude<ExtArgs> | null
    where?: MahasiswaPelatihanProfessionalWhereInput
    orderBy?: MahasiswaPelatihanProfessionalOrderByWithRelationInput | MahasiswaPelatihanProfessionalOrderByWithRelationInput[]
    cursor?: MahasiswaPelatihanProfessionalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaPelatihanProfessionalScalarFieldEnum | MahasiswaPelatihanProfessionalScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MahasiswaPendidikan
   */
  export type Pendaftaran$MahasiswaPendidikanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPendidikan
     */
    select?: MahasiswaPendidikanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPendidikan
     */
    omit?: MahasiswaPendidikanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPendidikanInclude<ExtArgs> | null
    where?: MahasiswaPendidikanWhereInput
    orderBy?: MahasiswaPendidikanOrderByWithRelationInput | MahasiswaPendidikanOrderByWithRelationInput[]
    cursor?: MahasiswaPendidikanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaPendidikanScalarFieldEnum | MahasiswaPendidikanScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MahasiswaPiagam
   */
  export type Pendaftaran$MahasiswaPiagamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaPiagam
     */
    select?: MahasiswaPiagamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaPiagam
     */
    omit?: MahasiswaPiagamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaPiagamInclude<ExtArgs> | null
    where?: MahasiswaPiagamWhereInput
    orderBy?: MahasiswaPiagamOrderByWithRelationInput | MahasiswaPiagamOrderByWithRelationInput[]
    cursor?: MahasiswaPiagamWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaPiagamScalarFieldEnum | MahasiswaPiagamScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MahasiswaRiwayatPekerjaan
   */
  export type Pendaftaran$MahasiswaRiwayatPekerjaanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaRiwayatPekerjaan
     */
    select?: MahasiswaRiwayatPekerjaanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MahasiswaRiwayatPekerjaan
     */
    omit?: MahasiswaRiwayatPekerjaanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaRiwayatPekerjaanInclude<ExtArgs> | null
    where?: MahasiswaRiwayatPekerjaanWhereInput
    orderBy?: MahasiswaRiwayatPekerjaanOrderByWithRelationInput | MahasiswaRiwayatPekerjaanOrderByWithRelationInput[]
    cursor?: MahasiswaRiwayatPekerjaanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaRiwayatPekerjaanScalarFieldEnum | MahasiswaRiwayatPekerjaanScalarFieldEnum[]
  }

  /**
   * Pendaftaran.MataKuliahMahasiswa
   */
  export type Pendaftaran$MataKuliahMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliahMahasiswa
     */
    omit?: MataKuliahMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    where?: MataKuliahMahasiswaWhereInput
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * Pendaftaran.OrangTua
   */
  export type Pendaftaran$OrangTuaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrangTua
     */
    select?: OrangTuaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrangTua
     */
    omit?: OrangTuaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrangTuaInclude<ExtArgs> | null
    where?: OrangTuaWhereInput
    orderBy?: OrangTuaOrderByWithRelationInput | OrangTuaOrderByWithRelationInput[]
    cursor?: OrangTuaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrangTuaScalarFieldEnum | OrangTuaScalarFieldEnum[]
  }

  /**
   * Pendaftaran.PekerjaanMahasiswa
   */
  export type Pendaftaran$PekerjaanMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PekerjaanMahasiswa
     */
    select?: PekerjaanMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PekerjaanMahasiswa
     */
    omit?: PekerjaanMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PekerjaanMahasiswaInclude<ExtArgs> | null
    where?: PekerjaanMahasiswaWhereInput
    orderBy?: PekerjaanMahasiswaOrderByWithRelationInput | PekerjaanMahasiswaOrderByWithRelationInput[]
    cursor?: PekerjaanMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PekerjaanMahasiswaScalarFieldEnum | PekerjaanMahasiswaScalarFieldEnum[]
  }

  /**
   * Pendaftaran.Pesantren
   */
  export type Pendaftaran$PesantrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    where?: PesantrenWhereInput
    orderBy?: PesantrenOrderByWithRelationInput | PesantrenOrderByWithRelationInput[]
    cursor?: PesantrenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PesantrenScalarFieldEnum | PesantrenScalarFieldEnum[]
  }

  /**
   * Pendaftaran.SanggahanAssesmen
   */
  export type Pendaftaran$SanggahanAssesmenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    where?: SanggahanAssesmenWhereInput
    orderBy?: SanggahanAssesmenOrderByWithRelationInput | SanggahanAssesmenOrderByWithRelationInput[]
    cursor?: SanggahanAssesmenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SanggahanAssesmenScalarFieldEnum | SanggahanAssesmenScalarFieldEnum[]
  }

  /**
   * Pendaftaran.SkRektorMahasiswa
   */
  export type Pendaftaran$SkRektorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    where?: SkRektorMahasiswaWhereInput
    orderBy?: SkRektorMahasiswaOrderByWithRelationInput | SkRektorMahasiswaOrderByWithRelationInput[]
    cursor?: SkRektorMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkRektorMahasiswaScalarFieldEnum | SkRektorMahasiswaScalarFieldEnum[]
  }

  /**
   * Pendaftaran without action
   */
  export type PendaftaranDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pendaftaran
     */
    select?: PendaftaranSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pendaftaran
     */
    omit?: PendaftaranOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendaftaranInclude<ExtArgs> | null
  }


  /**
   * Model Permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionMinAggregateOutputType = {
    PermissionId: string | null
    Name: string | null
    GuardName: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PermissionMaxAggregateOutputType = {
    PermissionId: string | null
    Name: string | null
    GuardName: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PermissionCountAggregateOutputType = {
    PermissionId: number
    Name: number
    GuardName: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type PermissionMinAggregateInputType = {
    PermissionId?: true
    Name?: true
    GuardName?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PermissionMaxAggregateInputType = {
    PermissionId?: true
    Name?: true
    GuardName?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PermissionCountAggregateInputType = {
    PermissionId?: true
    Name?: true
    GuardName?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permission to aggregate.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type PermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithAggregationInput | PermissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: PermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    PermissionId: string
    Name: string
    GuardName: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends PermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type PermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    Name?: boolean
    GuardName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    UserHasPermissions?: boolean | Permission$UserHasPermissionsArgs<ExtArgs>
    RoleHasPermissions?: boolean | Permission$RoleHasPermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    Name?: boolean
    GuardName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    Name?: boolean
    GuardName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectScalar = {
    PermissionId?: boolean
    Name?: boolean
    GuardName?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type PermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"PermissionId" | "Name" | "GuardName" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["permission"]>
  export type PermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserHasPermissions?: boolean | Permission$UserHasPermissionsArgs<ExtArgs>
    RoleHasPermissions?: boolean | Permission$RoleHasPermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permission"
    objects: {
      UserHasPermissions: Prisma.$UserHasPermissionsPayload<ExtArgs>[]
      RoleHasPermissions: Prisma.$RoleHasPermissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      PermissionId: string
      Name: string
      GuardName: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type PermissionGetPayload<S extends boolean | null | undefined | PermissionDefaultArgs> = $Result.GetResult<Prisma.$PermissionPayload, S>

  type PermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface PermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permission'], meta: { name: 'Permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {PermissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissionFindUniqueArgs>(args: SelectSubset<T, PermissionFindUniqueArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissionFindFirstArgs>(args?: SelectSubset<T, PermissionFindFirstArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `PermissionId`
     * const permissionWithPermissionIdOnly = await prisma.permission.findMany({ select: { PermissionId: true } })
     * 
     */
    findMany<T extends PermissionFindManyArgs>(args?: SelectSubset<T, PermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {PermissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends PermissionCreateArgs>(args: SelectSubset<T, PermissionCreateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {PermissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissionCreateManyArgs>(args?: SelectSubset<T, PermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {PermissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `PermissionId`
     * const permissionWithPermissionIdOnly = await prisma.permission.createManyAndReturn({
     *   select: { PermissionId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permission.
     * @param {PermissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends PermissionDeleteArgs>(args: SelectSubset<T, PermissionDeleteArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {PermissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissionUpdateArgs>(args: SelectSubset<T, PermissionUpdateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {PermissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissionDeleteManyArgs>(args?: SelectSubset<T, PermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissionUpdateManyArgs>(args: SelectSubset<T, PermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {PermissionUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `PermissionId`
     * const permissionWithPermissionIdOnly = await prisma.permission.updateManyAndReturn({
     *   select: { PermissionId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permission.
     * @param {PermissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends PermissionUpsertArgs>(args: SelectSubset<T, PermissionUpsertArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends PermissionCountArgs>(
      args?: Subset<T, PermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionGroupByArgs['orderBy'] }
        : { orderBy?: PermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permission model
   */
  readonly fields: PermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    UserHasPermissions<T extends Permission$UserHasPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Permission$UserHasPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoleHasPermissions<T extends Permission$RoleHasPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Permission$RoleHasPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permission model
   */
  interface PermissionFieldRefs {
    readonly PermissionId: FieldRef<"Permission", 'String'>
    readonly Name: FieldRef<"Permission", 'String'>
    readonly GuardName: FieldRef<"Permission", 'String'>
    readonly CreatedAt: FieldRef<"Permission", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Permission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Permission findUnique
   */
  export type PermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findUniqueOrThrow
   */
  export type PermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findFirst
   */
  export type PermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findFirstOrThrow
   */
  export type PermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findMany
   */
  export type PermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permissions to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission create
   */
  export type PermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Permission.
     */
    data: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
  }

  /**
   * Permission createMany
   */
  export type PermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission createManyAndReturn
   */
  export type PermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission update
   */
  export type PermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Permission.
     */
    data: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
    /**
     * Choose, which Permission to update.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission updateMany
   */
  export type PermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission updateManyAndReturn
   */
  export type PermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission upsert
   */
  export type PermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Permission to update in case it exists.
     */
    where: PermissionWhereUniqueInput
    /**
     * In case the Permission found by the `where` argument doesn't exist, create a new Permission with this data.
     */
    create: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
    /**
     * In case the Permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
  }

  /**
   * Permission delete
   */
  export type PermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter which Permission to delete.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission deleteMany
   */
  export type PermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissions to delete
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to delete.
     */
    limit?: number
  }

  /**
   * Permission.UserHasPermissions
   */
  export type Permission$UserHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    where?: UserHasPermissionsWhereInput
    orderBy?: UserHasPermissionsOrderByWithRelationInput | UserHasPermissionsOrderByWithRelationInput[]
    cursor?: UserHasPermissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHasPermissionsScalarFieldEnum | UserHasPermissionsScalarFieldEnum[]
  }

  /**
   * Permission.RoleHasPermissions
   */
  export type Permission$RoleHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    where?: RoleHasPermissionsWhereInput
    orderBy?: RoleHasPermissionsOrderByWithRelationInput | RoleHasPermissionsOrderByWithRelationInput[]
    cursor?: RoleHasPermissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleHasPermissionsScalarFieldEnum | RoleHasPermissionsScalarFieldEnum[]
  }

  /**
   * Permission without action
   */
  export type PermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
  }


  /**
   * Model Pesantren
   */

  export type AggregatePesantren = {
    _count: PesantrenCountAggregateOutputType | null
    _min: PesantrenMinAggregateOutputType | null
    _max: PesantrenMaxAggregateOutputType | null
  }

  export type PesantrenMinAggregateOutputType = {
    PesantrenId: string | null
    PendaftaranId: string | null
    NamaPesantren: string | null
    LamaPesantren: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PesantrenMaxAggregateOutputType = {
    PesantrenId: string | null
    PendaftaranId: string | null
    NamaPesantren: string | null
    LamaPesantren: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type PesantrenCountAggregateOutputType = {
    PesantrenId: number
    PendaftaranId: number
    NamaPesantren: number
    LamaPesantren: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type PesantrenMinAggregateInputType = {
    PesantrenId?: true
    PendaftaranId?: true
    NamaPesantren?: true
    LamaPesantren?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PesantrenMaxAggregateInputType = {
    PesantrenId?: true
    PendaftaranId?: true
    NamaPesantren?: true
    LamaPesantren?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type PesantrenCountAggregateInputType = {
    PesantrenId?: true
    PendaftaranId?: true
    NamaPesantren?: true
    LamaPesantren?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type PesantrenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pesantren to aggregate.
     */
    where?: PesantrenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pesantrens to fetch.
     */
    orderBy?: PesantrenOrderByWithRelationInput | PesantrenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PesantrenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pesantrens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pesantrens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pesantrens
    **/
    _count?: true | PesantrenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PesantrenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PesantrenMaxAggregateInputType
  }

  export type GetPesantrenAggregateType<T extends PesantrenAggregateArgs> = {
        [P in keyof T & keyof AggregatePesantren]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePesantren[P]>
      : GetScalarType<T[P], AggregatePesantren[P]>
  }




  export type PesantrenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PesantrenWhereInput
    orderBy?: PesantrenOrderByWithAggregationInput | PesantrenOrderByWithAggregationInput[]
    by: PesantrenScalarFieldEnum[] | PesantrenScalarFieldEnum
    having?: PesantrenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PesantrenCountAggregateInputType | true
    _min?: PesantrenMinAggregateInputType
    _max?: PesantrenMaxAggregateInputType
  }

  export type PesantrenGroupByOutputType = {
    PesantrenId: string
    PendaftaranId: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: PesantrenCountAggregateOutputType | null
    _min: PesantrenMinAggregateOutputType | null
    _max: PesantrenMaxAggregateOutputType | null
  }

  type GetPesantrenGroupByPayload<T extends PesantrenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PesantrenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PesantrenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PesantrenGroupByOutputType[P]>
            : GetScalarType<T[P], PesantrenGroupByOutputType[P]>
        }
      >
    >


  export type PesantrenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PesantrenId?: boolean
    PendaftaranId?: boolean
    NamaPesantren?: boolean
    LamaPesantren?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesantren"]>

  export type PesantrenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PesantrenId?: boolean
    PendaftaranId?: boolean
    NamaPesantren?: boolean
    LamaPesantren?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesantren"]>

  export type PesantrenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PesantrenId?: boolean
    PendaftaranId?: boolean
    NamaPesantren?: boolean
    LamaPesantren?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesantren"]>

  export type PesantrenSelectScalar = {
    PesantrenId?: boolean
    PendaftaranId?: boolean
    NamaPesantren?: boolean
    LamaPesantren?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type PesantrenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"PesantrenId" | "PendaftaranId" | "NamaPesantren" | "LamaPesantren" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["pesantren"]>
  export type PesantrenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type PesantrenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type PesantrenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $PesantrenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pesantren"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      PesantrenId: string
      PendaftaranId: string
      NamaPesantren: string
      LamaPesantren: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["pesantren"]>
    composites: {}
  }

  type PesantrenGetPayload<S extends boolean | null | undefined | PesantrenDefaultArgs> = $Result.GetResult<Prisma.$PesantrenPayload, S>

  type PesantrenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PesantrenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PesantrenCountAggregateInputType | true
    }

  export interface PesantrenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pesantren'], meta: { name: 'Pesantren' } }
    /**
     * Find zero or one Pesantren that matches the filter.
     * @param {PesantrenFindUniqueArgs} args - Arguments to find a Pesantren
     * @example
     * // Get one Pesantren
     * const pesantren = await prisma.pesantren.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PesantrenFindUniqueArgs>(args: SelectSubset<T, PesantrenFindUniqueArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pesantren that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PesantrenFindUniqueOrThrowArgs} args - Arguments to find a Pesantren
     * @example
     * // Get one Pesantren
     * const pesantren = await prisma.pesantren.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PesantrenFindUniqueOrThrowArgs>(args: SelectSubset<T, PesantrenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pesantren that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenFindFirstArgs} args - Arguments to find a Pesantren
     * @example
     * // Get one Pesantren
     * const pesantren = await prisma.pesantren.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PesantrenFindFirstArgs>(args?: SelectSubset<T, PesantrenFindFirstArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pesantren that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenFindFirstOrThrowArgs} args - Arguments to find a Pesantren
     * @example
     * // Get one Pesantren
     * const pesantren = await prisma.pesantren.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PesantrenFindFirstOrThrowArgs>(args?: SelectSubset<T, PesantrenFindFirstOrThrowArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pesantrens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pesantrens
     * const pesantrens = await prisma.pesantren.findMany()
     * 
     * // Get first 10 Pesantrens
     * const pesantrens = await prisma.pesantren.findMany({ take: 10 })
     * 
     * // Only select the `PesantrenId`
     * const pesantrenWithPesantrenIdOnly = await prisma.pesantren.findMany({ select: { PesantrenId: true } })
     * 
     */
    findMany<T extends PesantrenFindManyArgs>(args?: SelectSubset<T, PesantrenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pesantren.
     * @param {PesantrenCreateArgs} args - Arguments to create a Pesantren.
     * @example
     * // Create one Pesantren
     * const Pesantren = await prisma.pesantren.create({
     *   data: {
     *     // ... data to create a Pesantren
     *   }
     * })
     * 
     */
    create<T extends PesantrenCreateArgs>(args: SelectSubset<T, PesantrenCreateArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pesantrens.
     * @param {PesantrenCreateManyArgs} args - Arguments to create many Pesantrens.
     * @example
     * // Create many Pesantrens
     * const pesantren = await prisma.pesantren.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PesantrenCreateManyArgs>(args?: SelectSubset<T, PesantrenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pesantrens and returns the data saved in the database.
     * @param {PesantrenCreateManyAndReturnArgs} args - Arguments to create many Pesantrens.
     * @example
     * // Create many Pesantrens
     * const pesantren = await prisma.pesantren.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pesantrens and only return the `PesantrenId`
     * const pesantrenWithPesantrenIdOnly = await prisma.pesantren.createManyAndReturn({
     *   select: { PesantrenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PesantrenCreateManyAndReturnArgs>(args?: SelectSubset<T, PesantrenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pesantren.
     * @param {PesantrenDeleteArgs} args - Arguments to delete one Pesantren.
     * @example
     * // Delete one Pesantren
     * const Pesantren = await prisma.pesantren.delete({
     *   where: {
     *     // ... filter to delete one Pesantren
     *   }
     * })
     * 
     */
    delete<T extends PesantrenDeleteArgs>(args: SelectSubset<T, PesantrenDeleteArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pesantren.
     * @param {PesantrenUpdateArgs} args - Arguments to update one Pesantren.
     * @example
     * // Update one Pesantren
     * const pesantren = await prisma.pesantren.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PesantrenUpdateArgs>(args: SelectSubset<T, PesantrenUpdateArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pesantrens.
     * @param {PesantrenDeleteManyArgs} args - Arguments to filter Pesantrens to delete.
     * @example
     * // Delete a few Pesantrens
     * const { count } = await prisma.pesantren.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PesantrenDeleteManyArgs>(args?: SelectSubset<T, PesantrenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pesantrens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pesantrens
     * const pesantren = await prisma.pesantren.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PesantrenUpdateManyArgs>(args: SelectSubset<T, PesantrenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pesantrens and returns the data updated in the database.
     * @param {PesantrenUpdateManyAndReturnArgs} args - Arguments to update many Pesantrens.
     * @example
     * // Update many Pesantrens
     * const pesantren = await prisma.pesantren.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pesantrens and only return the `PesantrenId`
     * const pesantrenWithPesantrenIdOnly = await prisma.pesantren.updateManyAndReturn({
     *   select: { PesantrenId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PesantrenUpdateManyAndReturnArgs>(args: SelectSubset<T, PesantrenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pesantren.
     * @param {PesantrenUpsertArgs} args - Arguments to update or create a Pesantren.
     * @example
     * // Update or create a Pesantren
     * const pesantren = await prisma.pesantren.upsert({
     *   create: {
     *     // ... data to create a Pesantren
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pesantren we want to update
     *   }
     * })
     */
    upsert<T extends PesantrenUpsertArgs>(args: SelectSubset<T, PesantrenUpsertArgs<ExtArgs>>): Prisma__PesantrenClient<$Result.GetResult<Prisma.$PesantrenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pesantrens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenCountArgs} args - Arguments to filter Pesantrens to count.
     * @example
     * // Count the number of Pesantrens
     * const count = await prisma.pesantren.count({
     *   where: {
     *     // ... the filter for the Pesantrens we want to count
     *   }
     * })
    **/
    count<T extends PesantrenCountArgs>(
      args?: Subset<T, PesantrenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PesantrenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pesantren.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PesantrenAggregateArgs>(args: Subset<T, PesantrenAggregateArgs>): Prisma.PrismaPromise<GetPesantrenAggregateType<T>>

    /**
     * Group by Pesantren.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesantrenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PesantrenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PesantrenGroupByArgs['orderBy'] }
        : { orderBy?: PesantrenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PesantrenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPesantrenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pesantren model
   */
  readonly fields: PesantrenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pesantren.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PesantrenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pesantren model
   */
  interface PesantrenFieldRefs {
    readonly PesantrenId: FieldRef<"Pesantren", 'String'>
    readonly PendaftaranId: FieldRef<"Pesantren", 'String'>
    readonly NamaPesantren: FieldRef<"Pesantren", 'String'>
    readonly LamaPesantren: FieldRef<"Pesantren", 'String'>
    readonly CreatedAt: FieldRef<"Pesantren", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Pesantren", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pesantren findUnique
   */
  export type PesantrenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * Filter, which Pesantren to fetch.
     */
    where: PesantrenWhereUniqueInput
  }

  /**
   * Pesantren findUniqueOrThrow
   */
  export type PesantrenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * Filter, which Pesantren to fetch.
     */
    where: PesantrenWhereUniqueInput
  }

  /**
   * Pesantren findFirst
   */
  export type PesantrenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * Filter, which Pesantren to fetch.
     */
    where?: PesantrenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pesantrens to fetch.
     */
    orderBy?: PesantrenOrderByWithRelationInput | PesantrenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pesantrens.
     */
    cursor?: PesantrenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pesantrens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pesantrens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pesantrens.
     */
    distinct?: PesantrenScalarFieldEnum | PesantrenScalarFieldEnum[]
  }

  /**
   * Pesantren findFirstOrThrow
   */
  export type PesantrenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * Filter, which Pesantren to fetch.
     */
    where?: PesantrenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pesantrens to fetch.
     */
    orderBy?: PesantrenOrderByWithRelationInput | PesantrenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pesantrens.
     */
    cursor?: PesantrenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pesantrens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pesantrens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pesantrens.
     */
    distinct?: PesantrenScalarFieldEnum | PesantrenScalarFieldEnum[]
  }

  /**
   * Pesantren findMany
   */
  export type PesantrenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * Filter, which Pesantrens to fetch.
     */
    where?: PesantrenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pesantrens to fetch.
     */
    orderBy?: PesantrenOrderByWithRelationInput | PesantrenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pesantrens.
     */
    cursor?: PesantrenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pesantrens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pesantrens.
     */
    skip?: number
    distinct?: PesantrenScalarFieldEnum | PesantrenScalarFieldEnum[]
  }

  /**
   * Pesantren create
   */
  export type PesantrenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * The data needed to create a Pesantren.
     */
    data: XOR<PesantrenCreateInput, PesantrenUncheckedCreateInput>
  }

  /**
   * Pesantren createMany
   */
  export type PesantrenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pesantrens.
     */
    data: PesantrenCreateManyInput | PesantrenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pesantren createManyAndReturn
   */
  export type PesantrenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * The data used to create many Pesantrens.
     */
    data: PesantrenCreateManyInput | PesantrenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pesantren update
   */
  export type PesantrenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * The data needed to update a Pesantren.
     */
    data: XOR<PesantrenUpdateInput, PesantrenUncheckedUpdateInput>
    /**
     * Choose, which Pesantren to update.
     */
    where: PesantrenWhereUniqueInput
  }

  /**
   * Pesantren updateMany
   */
  export type PesantrenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pesantrens.
     */
    data: XOR<PesantrenUpdateManyMutationInput, PesantrenUncheckedUpdateManyInput>
    /**
     * Filter which Pesantrens to update
     */
    where?: PesantrenWhereInput
    /**
     * Limit how many Pesantrens to update.
     */
    limit?: number
  }

  /**
   * Pesantren updateManyAndReturn
   */
  export type PesantrenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * The data used to update Pesantrens.
     */
    data: XOR<PesantrenUpdateManyMutationInput, PesantrenUncheckedUpdateManyInput>
    /**
     * Filter which Pesantrens to update
     */
    where?: PesantrenWhereInput
    /**
     * Limit how many Pesantrens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pesantren upsert
   */
  export type PesantrenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * The filter to search for the Pesantren to update in case it exists.
     */
    where: PesantrenWhereUniqueInput
    /**
     * In case the Pesantren found by the `where` argument doesn't exist, create a new Pesantren with this data.
     */
    create: XOR<PesantrenCreateInput, PesantrenUncheckedCreateInput>
    /**
     * In case the Pesantren was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PesantrenUpdateInput, PesantrenUncheckedUpdateInput>
  }

  /**
   * Pesantren delete
   */
  export type PesantrenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
    /**
     * Filter which Pesantren to delete.
     */
    where: PesantrenWhereUniqueInput
  }

  /**
   * Pesantren deleteMany
   */
  export type PesantrenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pesantrens to delete
     */
    where?: PesantrenWhereInput
    /**
     * Limit how many Pesantrens to delete.
     */
    limit?: number
  }

  /**
   * Pesantren without action
   */
  export type PesantrenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pesantren
     */
    select?: PesantrenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pesantren
     */
    omit?: PesantrenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PesantrenInclude<ExtArgs> | null
  }


  /**
   * Model ProgramStudi
   */

  export type AggregateProgramStudi = {
    _count: ProgramStudiCountAggregateOutputType | null
    _min: ProgramStudiMinAggregateOutputType | null
    _max: ProgramStudiMaxAggregateOutputType | null
  }

  export type ProgramStudiMinAggregateOutputType = {
    ProgramStudiId: string | null
    UniversityId: string | null
    Nama: string | null
    Jenjang: string | null
    Akreditasi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type ProgramStudiMaxAggregateOutputType = {
    ProgramStudiId: string | null
    UniversityId: string | null
    Nama: string | null
    Jenjang: string | null
    Akreditasi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type ProgramStudiCountAggregateOutputType = {
    ProgramStudiId: number
    UniversityId: number
    Nama: number
    Jenjang: number
    Akreditasi: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type ProgramStudiMinAggregateInputType = {
    ProgramStudiId?: true
    UniversityId?: true
    Nama?: true
    Jenjang?: true
    Akreditasi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type ProgramStudiMaxAggregateInputType = {
    ProgramStudiId?: true
    UniversityId?: true
    Nama?: true
    Jenjang?: true
    Akreditasi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type ProgramStudiCountAggregateInputType = {
    ProgramStudiId?: true
    UniversityId?: true
    Nama?: true
    Jenjang?: true
    Akreditasi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type ProgramStudiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProgramStudi to aggregate.
     */
    where?: ProgramStudiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramStudis to fetch.
     */
    orderBy?: ProgramStudiOrderByWithRelationInput | ProgramStudiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProgramStudiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramStudis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramStudis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgramStudis
    **/
    _count?: true | ProgramStudiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgramStudiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgramStudiMaxAggregateInputType
  }

  export type GetProgramStudiAggregateType<T extends ProgramStudiAggregateArgs> = {
        [P in keyof T & keyof AggregateProgramStudi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgramStudi[P]>
      : GetScalarType<T[P], AggregateProgramStudi[P]>
  }




  export type ProgramStudiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramStudiWhereInput
    orderBy?: ProgramStudiOrderByWithAggregationInput | ProgramStudiOrderByWithAggregationInput[]
    by: ProgramStudiScalarFieldEnum[] | ProgramStudiScalarFieldEnum
    having?: ProgramStudiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgramStudiCountAggregateInputType | true
    _min?: ProgramStudiMinAggregateInputType
    _max?: ProgramStudiMaxAggregateInputType
  }

  export type ProgramStudiGroupByOutputType = {
    ProgramStudiId: string
    UniversityId: string
    Nama: string
    Jenjang: string | null
    Akreditasi: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: ProgramStudiCountAggregateOutputType | null
    _min: ProgramStudiMinAggregateOutputType | null
    _max: ProgramStudiMaxAggregateOutputType | null
  }

  type GetProgramStudiGroupByPayload<T extends ProgramStudiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProgramStudiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProgramStudiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProgramStudiGroupByOutputType[P]>
            : GetScalarType<T[P], ProgramStudiGroupByOutputType[P]>
        }
      >
    >


  export type ProgramStudiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ProgramStudiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Jenjang?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
    DaftarUlang?: boolean | ProgramStudi$DaftarUlangArgs<ExtArgs>
    MataKuliah?: boolean | ProgramStudi$MataKuliahArgs<ExtArgs>
    _count?: boolean | ProgramStudiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programStudi"]>

  export type ProgramStudiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ProgramStudiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Jenjang?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programStudi"]>

  export type ProgramStudiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ProgramStudiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Jenjang?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programStudi"]>

  export type ProgramStudiSelectScalar = {
    ProgramStudiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Jenjang?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type ProgramStudiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ProgramStudiId" | "UniversityId" | "Nama" | "Jenjang" | "Akreditasi" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["programStudi"]>
  export type ProgramStudiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
    DaftarUlang?: boolean | ProgramStudi$DaftarUlangArgs<ExtArgs>
    MataKuliah?: boolean | ProgramStudi$MataKuliahArgs<ExtArgs>
    _count?: boolean | ProgramStudiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProgramStudiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type ProgramStudiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $ProgramStudiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProgramStudi"
    objects: {
      University: Prisma.$UniversityPayload<ExtArgs>
      DaftarUlang: Prisma.$DaftarUlangPayload<ExtArgs>[]
      MataKuliah: Prisma.$MataKuliahPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      ProgramStudiId: string
      UniversityId: string
      Nama: string
      Jenjang: string | null
      Akreditasi: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["programStudi"]>
    composites: {}
  }

  type ProgramStudiGetPayload<S extends boolean | null | undefined | ProgramStudiDefaultArgs> = $Result.GetResult<Prisma.$ProgramStudiPayload, S>

  type ProgramStudiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProgramStudiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProgramStudiCountAggregateInputType | true
    }

  export interface ProgramStudiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramStudi'], meta: { name: 'ProgramStudi' } }
    /**
     * Find zero or one ProgramStudi that matches the filter.
     * @param {ProgramStudiFindUniqueArgs} args - Arguments to find a ProgramStudi
     * @example
     * // Get one ProgramStudi
     * const programStudi = await prisma.programStudi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProgramStudiFindUniqueArgs>(args: SelectSubset<T, ProgramStudiFindUniqueArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProgramStudi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProgramStudiFindUniqueOrThrowArgs} args - Arguments to find a ProgramStudi
     * @example
     * // Get one ProgramStudi
     * const programStudi = await prisma.programStudi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProgramStudiFindUniqueOrThrowArgs>(args: SelectSubset<T, ProgramStudiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProgramStudi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiFindFirstArgs} args - Arguments to find a ProgramStudi
     * @example
     * // Get one ProgramStudi
     * const programStudi = await prisma.programStudi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProgramStudiFindFirstArgs>(args?: SelectSubset<T, ProgramStudiFindFirstArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProgramStudi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiFindFirstOrThrowArgs} args - Arguments to find a ProgramStudi
     * @example
     * // Get one ProgramStudi
     * const programStudi = await prisma.programStudi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProgramStudiFindFirstOrThrowArgs>(args?: SelectSubset<T, ProgramStudiFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProgramStudis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgramStudis
     * const programStudis = await prisma.programStudi.findMany()
     * 
     * // Get first 10 ProgramStudis
     * const programStudis = await prisma.programStudi.findMany({ take: 10 })
     * 
     * // Only select the `ProgramStudiId`
     * const programStudiWithProgramStudiIdOnly = await prisma.programStudi.findMany({ select: { ProgramStudiId: true } })
     * 
     */
    findMany<T extends ProgramStudiFindManyArgs>(args?: SelectSubset<T, ProgramStudiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProgramStudi.
     * @param {ProgramStudiCreateArgs} args - Arguments to create a ProgramStudi.
     * @example
     * // Create one ProgramStudi
     * const ProgramStudi = await prisma.programStudi.create({
     *   data: {
     *     // ... data to create a ProgramStudi
     *   }
     * })
     * 
     */
    create<T extends ProgramStudiCreateArgs>(args: SelectSubset<T, ProgramStudiCreateArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProgramStudis.
     * @param {ProgramStudiCreateManyArgs} args - Arguments to create many ProgramStudis.
     * @example
     * // Create many ProgramStudis
     * const programStudi = await prisma.programStudi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProgramStudiCreateManyArgs>(args?: SelectSubset<T, ProgramStudiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProgramStudis and returns the data saved in the database.
     * @param {ProgramStudiCreateManyAndReturnArgs} args - Arguments to create many ProgramStudis.
     * @example
     * // Create many ProgramStudis
     * const programStudi = await prisma.programStudi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProgramStudis and only return the `ProgramStudiId`
     * const programStudiWithProgramStudiIdOnly = await prisma.programStudi.createManyAndReturn({
     *   select: { ProgramStudiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProgramStudiCreateManyAndReturnArgs>(args?: SelectSubset<T, ProgramStudiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProgramStudi.
     * @param {ProgramStudiDeleteArgs} args - Arguments to delete one ProgramStudi.
     * @example
     * // Delete one ProgramStudi
     * const ProgramStudi = await prisma.programStudi.delete({
     *   where: {
     *     // ... filter to delete one ProgramStudi
     *   }
     * })
     * 
     */
    delete<T extends ProgramStudiDeleteArgs>(args: SelectSubset<T, ProgramStudiDeleteArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProgramStudi.
     * @param {ProgramStudiUpdateArgs} args - Arguments to update one ProgramStudi.
     * @example
     * // Update one ProgramStudi
     * const programStudi = await prisma.programStudi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProgramStudiUpdateArgs>(args: SelectSubset<T, ProgramStudiUpdateArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProgramStudis.
     * @param {ProgramStudiDeleteManyArgs} args - Arguments to filter ProgramStudis to delete.
     * @example
     * // Delete a few ProgramStudis
     * const { count } = await prisma.programStudi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProgramStudiDeleteManyArgs>(args?: SelectSubset<T, ProgramStudiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgramStudis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgramStudis
     * const programStudi = await prisma.programStudi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProgramStudiUpdateManyArgs>(args: SelectSubset<T, ProgramStudiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgramStudis and returns the data updated in the database.
     * @param {ProgramStudiUpdateManyAndReturnArgs} args - Arguments to update many ProgramStudis.
     * @example
     * // Update many ProgramStudis
     * const programStudi = await prisma.programStudi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProgramStudis and only return the `ProgramStudiId`
     * const programStudiWithProgramStudiIdOnly = await prisma.programStudi.updateManyAndReturn({
     *   select: { ProgramStudiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProgramStudiUpdateManyAndReturnArgs>(args: SelectSubset<T, ProgramStudiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProgramStudi.
     * @param {ProgramStudiUpsertArgs} args - Arguments to update or create a ProgramStudi.
     * @example
     * // Update or create a ProgramStudi
     * const programStudi = await prisma.programStudi.upsert({
     *   create: {
     *     // ... data to create a ProgramStudi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgramStudi we want to update
     *   }
     * })
     */
    upsert<T extends ProgramStudiUpsertArgs>(args: SelectSubset<T, ProgramStudiUpsertArgs<ExtArgs>>): Prisma__ProgramStudiClient<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProgramStudis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiCountArgs} args - Arguments to filter ProgramStudis to count.
     * @example
     * // Count the number of ProgramStudis
     * const count = await prisma.programStudi.count({
     *   where: {
     *     // ... the filter for the ProgramStudis we want to count
     *   }
     * })
    **/
    count<T extends ProgramStudiCountArgs>(
      args?: Subset<T, ProgramStudiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgramStudiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgramStudi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgramStudiAggregateArgs>(args: Subset<T, ProgramStudiAggregateArgs>): Prisma.PrismaPromise<GetProgramStudiAggregateType<T>>

    /**
     * Group by ProgramStudi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramStudiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgramStudiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgramStudiGroupByArgs['orderBy'] }
        : { orderBy?: ProgramStudiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgramStudiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramStudiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProgramStudi model
   */
  readonly fields: ProgramStudiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgramStudi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProgramStudiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    University<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    DaftarUlang<T extends ProgramStudi$DaftarUlangArgs<ExtArgs> = {}>(args?: Subset<T, ProgramStudi$DaftarUlangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DaftarUlangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    MataKuliah<T extends ProgramStudi$MataKuliahArgs<ExtArgs> = {}>(args?: Subset<T, ProgramStudi$MataKuliahArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProgramStudi model
   */
  interface ProgramStudiFieldRefs {
    readonly ProgramStudiId: FieldRef<"ProgramStudi", 'String'>
    readonly UniversityId: FieldRef<"ProgramStudi", 'String'>
    readonly Nama: FieldRef<"ProgramStudi", 'String'>
    readonly Jenjang: FieldRef<"ProgramStudi", 'String'>
    readonly Akreditasi: FieldRef<"ProgramStudi", 'String'>
    readonly CreatedAt: FieldRef<"ProgramStudi", 'DateTime'>
    readonly UpdatedAt: FieldRef<"ProgramStudi", 'DateTime'>
    readonly DeletedAt: FieldRef<"ProgramStudi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProgramStudi findUnique
   */
  export type ProgramStudiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * Filter, which ProgramStudi to fetch.
     */
    where: ProgramStudiWhereUniqueInput
  }

  /**
   * ProgramStudi findUniqueOrThrow
   */
  export type ProgramStudiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * Filter, which ProgramStudi to fetch.
     */
    where: ProgramStudiWhereUniqueInput
  }

  /**
   * ProgramStudi findFirst
   */
  export type ProgramStudiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * Filter, which ProgramStudi to fetch.
     */
    where?: ProgramStudiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramStudis to fetch.
     */
    orderBy?: ProgramStudiOrderByWithRelationInput | ProgramStudiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgramStudis.
     */
    cursor?: ProgramStudiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramStudis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramStudis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgramStudis.
     */
    distinct?: ProgramStudiScalarFieldEnum | ProgramStudiScalarFieldEnum[]
  }

  /**
   * ProgramStudi findFirstOrThrow
   */
  export type ProgramStudiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * Filter, which ProgramStudi to fetch.
     */
    where?: ProgramStudiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramStudis to fetch.
     */
    orderBy?: ProgramStudiOrderByWithRelationInput | ProgramStudiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgramStudis.
     */
    cursor?: ProgramStudiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramStudis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramStudis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgramStudis.
     */
    distinct?: ProgramStudiScalarFieldEnum | ProgramStudiScalarFieldEnum[]
  }

  /**
   * ProgramStudi findMany
   */
  export type ProgramStudiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * Filter, which ProgramStudis to fetch.
     */
    where?: ProgramStudiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramStudis to fetch.
     */
    orderBy?: ProgramStudiOrderByWithRelationInput | ProgramStudiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgramStudis.
     */
    cursor?: ProgramStudiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramStudis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramStudis.
     */
    skip?: number
    distinct?: ProgramStudiScalarFieldEnum | ProgramStudiScalarFieldEnum[]
  }

  /**
   * ProgramStudi create
   */
  export type ProgramStudiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * The data needed to create a ProgramStudi.
     */
    data: XOR<ProgramStudiCreateInput, ProgramStudiUncheckedCreateInput>
  }

  /**
   * ProgramStudi createMany
   */
  export type ProgramStudiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProgramStudis.
     */
    data: ProgramStudiCreateManyInput | ProgramStudiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProgramStudi createManyAndReturn
   */
  export type ProgramStudiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * The data used to create many ProgramStudis.
     */
    data: ProgramStudiCreateManyInput | ProgramStudiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProgramStudi update
   */
  export type ProgramStudiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * The data needed to update a ProgramStudi.
     */
    data: XOR<ProgramStudiUpdateInput, ProgramStudiUncheckedUpdateInput>
    /**
     * Choose, which ProgramStudi to update.
     */
    where: ProgramStudiWhereUniqueInput
  }

  /**
   * ProgramStudi updateMany
   */
  export type ProgramStudiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProgramStudis.
     */
    data: XOR<ProgramStudiUpdateManyMutationInput, ProgramStudiUncheckedUpdateManyInput>
    /**
     * Filter which ProgramStudis to update
     */
    where?: ProgramStudiWhereInput
    /**
     * Limit how many ProgramStudis to update.
     */
    limit?: number
  }

  /**
   * ProgramStudi updateManyAndReturn
   */
  export type ProgramStudiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * The data used to update ProgramStudis.
     */
    data: XOR<ProgramStudiUpdateManyMutationInput, ProgramStudiUncheckedUpdateManyInput>
    /**
     * Filter which ProgramStudis to update
     */
    where?: ProgramStudiWhereInput
    /**
     * Limit how many ProgramStudis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProgramStudi upsert
   */
  export type ProgramStudiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * The filter to search for the ProgramStudi to update in case it exists.
     */
    where: ProgramStudiWhereUniqueInput
    /**
     * In case the ProgramStudi found by the `where` argument doesn't exist, create a new ProgramStudi with this data.
     */
    create: XOR<ProgramStudiCreateInput, ProgramStudiUncheckedCreateInput>
    /**
     * In case the ProgramStudi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProgramStudiUpdateInput, ProgramStudiUncheckedUpdateInput>
  }

  /**
   * ProgramStudi delete
   */
  export type ProgramStudiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    /**
     * Filter which ProgramStudi to delete.
     */
    where: ProgramStudiWhereUniqueInput
  }

  /**
   * ProgramStudi deleteMany
   */
  export type ProgramStudiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProgramStudis to delete
     */
    where?: ProgramStudiWhereInput
    /**
     * Limit how many ProgramStudis to delete.
     */
    limit?: number
  }

  /**
   * ProgramStudi.DaftarUlang
   */
  export type ProgramStudi$DaftarUlangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DaftarUlang
     */
    select?: DaftarUlangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DaftarUlang
     */
    omit?: DaftarUlangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DaftarUlangInclude<ExtArgs> | null
    where?: DaftarUlangWhereInput
    orderBy?: DaftarUlangOrderByWithRelationInput | DaftarUlangOrderByWithRelationInput[]
    cursor?: DaftarUlangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DaftarUlangScalarFieldEnum | DaftarUlangScalarFieldEnum[]
  }

  /**
   * ProgramStudi.MataKuliah
   */
  export type ProgramStudi$MataKuliahArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MataKuliah
     */
    omit?: MataKuliahOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    where?: MataKuliahWhereInput
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    cursor?: MataKuliahWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * ProgramStudi without action
   */
  export type ProgramStudiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
  }


  /**
   * Model Provinsi
   */

  export type AggregateProvinsi = {
    _count: ProvinsiCountAggregateOutputType | null
    _min: ProvinsiMinAggregateOutputType | null
    _max: ProvinsiMaxAggregateOutputType | null
  }

  export type ProvinsiMinAggregateOutputType = {
    ProvinsiId: string | null
    CountryId: string | null
    Nama: string | null
  }

  export type ProvinsiMaxAggregateOutputType = {
    ProvinsiId: string | null
    CountryId: string | null
    Nama: string | null
  }

  export type ProvinsiCountAggregateOutputType = {
    ProvinsiId: number
    CountryId: number
    Nama: number
    _all: number
  }


  export type ProvinsiMinAggregateInputType = {
    ProvinsiId?: true
    CountryId?: true
    Nama?: true
  }

  export type ProvinsiMaxAggregateInputType = {
    ProvinsiId?: true
    CountryId?: true
    Nama?: true
  }

  export type ProvinsiCountAggregateInputType = {
    ProvinsiId?: true
    CountryId?: true
    Nama?: true
    _all?: true
  }

  export type ProvinsiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provinsi to aggregate.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Provinsis
    **/
    _count?: true | ProvinsiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvinsiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvinsiMaxAggregateInputType
  }

  export type GetProvinsiAggregateType<T extends ProvinsiAggregateArgs> = {
        [P in keyof T & keyof AggregateProvinsi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvinsi[P]>
      : GetScalarType<T[P], AggregateProvinsi[P]>
  }




  export type ProvinsiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProvinsiWhereInput
    orderBy?: ProvinsiOrderByWithAggregationInput | ProvinsiOrderByWithAggregationInput[]
    by: ProvinsiScalarFieldEnum[] | ProvinsiScalarFieldEnum
    having?: ProvinsiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvinsiCountAggregateInputType | true
    _min?: ProvinsiMinAggregateInputType
    _max?: ProvinsiMaxAggregateInputType
  }

  export type ProvinsiGroupByOutputType = {
    ProvinsiId: string
    CountryId: string
    Nama: string
    _count: ProvinsiCountAggregateOutputType | null
    _min: ProvinsiMinAggregateOutputType | null
    _max: ProvinsiMaxAggregateOutputType | null
  }

  type GetProvinsiGroupByPayload<T extends ProvinsiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvinsiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvinsiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvinsiGroupByOutputType[P]>
            : GetScalarType<T[P], ProvinsiGroupByOutputType[P]>
        }
      >
    >


  export type ProvinsiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ProvinsiId?: boolean
    CountryId?: boolean
    Nama?: boolean
    Country?: boolean | CountryDefaultArgs<ExtArgs>
    Kabupaten?: boolean | Provinsi$KabupatenArgs<ExtArgs>
    _count?: boolean | ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provinsi"]>

  export type ProvinsiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ProvinsiId?: boolean
    CountryId?: boolean
    Nama?: boolean
    Country?: boolean | CountryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provinsi"]>

  export type ProvinsiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ProvinsiId?: boolean
    CountryId?: boolean
    Nama?: boolean
    Country?: boolean | CountryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provinsi"]>

  export type ProvinsiSelectScalar = {
    ProvinsiId?: boolean
    CountryId?: boolean
    Nama?: boolean
  }

  export type ProvinsiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ProvinsiId" | "CountryId" | "Nama", ExtArgs["result"]["provinsi"]>
  export type ProvinsiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Country?: boolean | CountryDefaultArgs<ExtArgs>
    Kabupaten?: boolean | Provinsi$KabupatenArgs<ExtArgs>
    _count?: boolean | ProvinsiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProvinsiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Country?: boolean | CountryDefaultArgs<ExtArgs>
  }
  export type ProvinsiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Country?: boolean | CountryDefaultArgs<ExtArgs>
  }

  export type $ProvinsiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Provinsi"
    objects: {
      Country: Prisma.$CountryPayload<ExtArgs>
      Kabupaten: Prisma.$KabupatenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      ProvinsiId: string
      CountryId: string
      Nama: string
    }, ExtArgs["result"]["provinsi"]>
    composites: {}
  }

  type ProvinsiGetPayload<S extends boolean | null | undefined | ProvinsiDefaultArgs> = $Result.GetResult<Prisma.$ProvinsiPayload, S>

  type ProvinsiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProvinsiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProvinsiCountAggregateInputType | true
    }

  export interface ProvinsiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Provinsi'], meta: { name: 'Provinsi' } }
    /**
     * Find zero or one Provinsi that matches the filter.
     * @param {ProvinsiFindUniqueArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProvinsiFindUniqueArgs>(args: SelectSubset<T, ProvinsiFindUniqueArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provinsi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProvinsiFindUniqueOrThrowArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProvinsiFindUniqueOrThrowArgs>(args: SelectSubset<T, ProvinsiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provinsi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiFindFirstArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProvinsiFindFirstArgs>(args?: SelectSubset<T, ProvinsiFindFirstArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provinsi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiFindFirstOrThrowArgs} args - Arguments to find a Provinsi
     * @example
     * // Get one Provinsi
     * const provinsi = await prisma.provinsi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProvinsiFindFirstOrThrowArgs>(args?: SelectSubset<T, ProvinsiFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provinsis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provinsis
     * const provinsis = await prisma.provinsi.findMany()
     * 
     * // Get first 10 Provinsis
     * const provinsis = await prisma.provinsi.findMany({ take: 10 })
     * 
     * // Only select the `ProvinsiId`
     * const provinsiWithProvinsiIdOnly = await prisma.provinsi.findMany({ select: { ProvinsiId: true } })
     * 
     */
    findMany<T extends ProvinsiFindManyArgs>(args?: SelectSubset<T, ProvinsiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provinsi.
     * @param {ProvinsiCreateArgs} args - Arguments to create a Provinsi.
     * @example
     * // Create one Provinsi
     * const Provinsi = await prisma.provinsi.create({
     *   data: {
     *     // ... data to create a Provinsi
     *   }
     * })
     * 
     */
    create<T extends ProvinsiCreateArgs>(args: SelectSubset<T, ProvinsiCreateArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provinsis.
     * @param {ProvinsiCreateManyArgs} args - Arguments to create many Provinsis.
     * @example
     * // Create many Provinsis
     * const provinsi = await prisma.provinsi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProvinsiCreateManyArgs>(args?: SelectSubset<T, ProvinsiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provinsis and returns the data saved in the database.
     * @param {ProvinsiCreateManyAndReturnArgs} args - Arguments to create many Provinsis.
     * @example
     * // Create many Provinsis
     * const provinsi = await prisma.provinsi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provinsis and only return the `ProvinsiId`
     * const provinsiWithProvinsiIdOnly = await prisma.provinsi.createManyAndReturn({
     *   select: { ProvinsiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProvinsiCreateManyAndReturnArgs>(args?: SelectSubset<T, ProvinsiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provinsi.
     * @param {ProvinsiDeleteArgs} args - Arguments to delete one Provinsi.
     * @example
     * // Delete one Provinsi
     * const Provinsi = await prisma.provinsi.delete({
     *   where: {
     *     // ... filter to delete one Provinsi
     *   }
     * })
     * 
     */
    delete<T extends ProvinsiDeleteArgs>(args: SelectSubset<T, ProvinsiDeleteArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provinsi.
     * @param {ProvinsiUpdateArgs} args - Arguments to update one Provinsi.
     * @example
     * // Update one Provinsi
     * const provinsi = await prisma.provinsi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProvinsiUpdateArgs>(args: SelectSubset<T, ProvinsiUpdateArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provinsis.
     * @param {ProvinsiDeleteManyArgs} args - Arguments to filter Provinsis to delete.
     * @example
     * // Delete a few Provinsis
     * const { count } = await prisma.provinsi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProvinsiDeleteManyArgs>(args?: SelectSubset<T, ProvinsiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinsis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provinsis
     * const provinsi = await prisma.provinsi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProvinsiUpdateManyArgs>(args: SelectSubset<T, ProvinsiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provinsis and returns the data updated in the database.
     * @param {ProvinsiUpdateManyAndReturnArgs} args - Arguments to update many Provinsis.
     * @example
     * // Update many Provinsis
     * const provinsi = await prisma.provinsi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provinsis and only return the `ProvinsiId`
     * const provinsiWithProvinsiIdOnly = await prisma.provinsi.updateManyAndReturn({
     *   select: { ProvinsiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProvinsiUpdateManyAndReturnArgs>(args: SelectSubset<T, ProvinsiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provinsi.
     * @param {ProvinsiUpsertArgs} args - Arguments to update or create a Provinsi.
     * @example
     * // Update or create a Provinsi
     * const provinsi = await prisma.provinsi.upsert({
     *   create: {
     *     // ... data to create a Provinsi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provinsi we want to update
     *   }
     * })
     */
    upsert<T extends ProvinsiUpsertArgs>(args: SelectSubset<T, ProvinsiUpsertArgs<ExtArgs>>): Prisma__ProvinsiClient<$Result.GetResult<Prisma.$ProvinsiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provinsis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiCountArgs} args - Arguments to filter Provinsis to count.
     * @example
     * // Count the number of Provinsis
     * const count = await prisma.provinsi.count({
     *   where: {
     *     // ... the filter for the Provinsis we want to count
     *   }
     * })
    **/
    count<T extends ProvinsiCountArgs>(
      args?: Subset<T, ProvinsiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvinsiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provinsi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvinsiAggregateArgs>(args: Subset<T, ProvinsiAggregateArgs>): Prisma.PrismaPromise<GetProvinsiAggregateType<T>>

    /**
     * Group by Provinsi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvinsiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProvinsiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProvinsiGroupByArgs['orderBy'] }
        : { orderBy?: ProvinsiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProvinsiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvinsiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Provinsi model
   */
  readonly fields: ProvinsiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Provinsi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProvinsiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Country<T extends CountryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CountryDefaultArgs<ExtArgs>>): Prisma__CountryClient<$Result.GetResult<Prisma.$CountryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Kabupaten<T extends Provinsi$KabupatenArgs<ExtArgs> = {}>(args?: Subset<T, Provinsi$KabupatenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KabupatenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Provinsi model
   */
  interface ProvinsiFieldRefs {
    readonly ProvinsiId: FieldRef<"Provinsi", 'String'>
    readonly CountryId: FieldRef<"Provinsi", 'String'>
    readonly Nama: FieldRef<"Provinsi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Provinsi findUnique
   */
  export type ProvinsiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi findUniqueOrThrow
   */
  export type ProvinsiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi findFirst
   */
  export type ProvinsiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provinsis.
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provinsis.
     */
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Provinsi findFirstOrThrow
   */
  export type ProvinsiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsi to fetch.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Provinsis.
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Provinsis.
     */
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Provinsi findMany
   */
  export type ProvinsiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter, which Provinsis to fetch.
     */
    where?: ProvinsiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Provinsis to fetch.
     */
    orderBy?: ProvinsiOrderByWithRelationInput | ProvinsiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Provinsis.
     */
    cursor?: ProvinsiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Provinsis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Provinsis.
     */
    skip?: number
    distinct?: ProvinsiScalarFieldEnum | ProvinsiScalarFieldEnum[]
  }

  /**
   * Provinsi create
   */
  export type ProvinsiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * The data needed to create a Provinsi.
     */
    data: XOR<ProvinsiCreateInput, ProvinsiUncheckedCreateInput>
  }

  /**
   * Provinsi createMany
   */
  export type ProvinsiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Provinsis.
     */
    data: ProvinsiCreateManyInput | ProvinsiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Provinsi createManyAndReturn
   */
  export type ProvinsiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * The data used to create many Provinsis.
     */
    data: ProvinsiCreateManyInput | ProvinsiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Provinsi update
   */
  export type ProvinsiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * The data needed to update a Provinsi.
     */
    data: XOR<ProvinsiUpdateInput, ProvinsiUncheckedUpdateInput>
    /**
     * Choose, which Provinsi to update.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi updateMany
   */
  export type ProvinsiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Provinsis.
     */
    data: XOR<ProvinsiUpdateManyMutationInput, ProvinsiUncheckedUpdateManyInput>
    /**
     * Filter which Provinsis to update
     */
    where?: ProvinsiWhereInput
    /**
     * Limit how many Provinsis to update.
     */
    limit?: number
  }

  /**
   * Provinsi updateManyAndReturn
   */
  export type ProvinsiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * The data used to update Provinsis.
     */
    data: XOR<ProvinsiUpdateManyMutationInput, ProvinsiUncheckedUpdateManyInput>
    /**
     * Filter which Provinsis to update
     */
    where?: ProvinsiWhereInput
    /**
     * Limit how many Provinsis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Provinsi upsert
   */
  export type ProvinsiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * The filter to search for the Provinsi to update in case it exists.
     */
    where: ProvinsiWhereUniqueInput
    /**
     * In case the Provinsi found by the `where` argument doesn't exist, create a new Provinsi with this data.
     */
    create: XOR<ProvinsiCreateInput, ProvinsiUncheckedCreateInput>
    /**
     * In case the Provinsi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProvinsiUpdateInput, ProvinsiUncheckedUpdateInput>
  }

  /**
   * Provinsi delete
   */
  export type ProvinsiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
    /**
     * Filter which Provinsi to delete.
     */
    where: ProvinsiWhereUniqueInput
  }

  /**
   * Provinsi deleteMany
   */
  export type ProvinsiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Provinsis to delete
     */
    where?: ProvinsiWhereInput
    /**
     * Limit how many Provinsis to delete.
     */
    limit?: number
  }

  /**
   * Provinsi.Kabupaten
   */
  export type Provinsi$KabupatenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Kabupaten
     */
    select?: KabupatenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Kabupaten
     */
    omit?: KabupatenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KabupatenInclude<ExtArgs> | null
    where?: KabupatenWhereInput
    orderBy?: KabupatenOrderByWithRelationInput | KabupatenOrderByWithRelationInput[]
    cursor?: KabupatenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KabupatenScalarFieldEnum | KabupatenScalarFieldEnum[]
  }

  /**
   * Provinsi without action
   */
  export type ProvinsiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provinsi
     */
    select?: ProvinsiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Provinsi
     */
    omit?: ProvinsiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProvinsiInclude<ExtArgs> | null
  }


  /**
   * Model RoleHasPermissions
   */

  export type AggregateRoleHasPermissions = {
    _count: RoleHasPermissionsCountAggregateOutputType | null
    _min: RoleHasPermissionsMinAggregateOutputType | null
    _max: RoleHasPermissionsMaxAggregateOutputType | null
  }

  export type RoleHasPermissionsMinAggregateOutputType = {
    PermissionId: string | null
    RoleId: string | null
  }

  export type RoleHasPermissionsMaxAggregateOutputType = {
    PermissionId: string | null
    RoleId: string | null
  }

  export type RoleHasPermissionsCountAggregateOutputType = {
    PermissionId: number
    RoleId: number
    _all: number
  }


  export type RoleHasPermissionsMinAggregateInputType = {
    PermissionId?: true
    RoleId?: true
  }

  export type RoleHasPermissionsMaxAggregateInputType = {
    PermissionId?: true
    RoleId?: true
  }

  export type RoleHasPermissionsCountAggregateInputType = {
    PermissionId?: true
    RoleId?: true
    _all?: true
  }

  export type RoleHasPermissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleHasPermissions to aggregate.
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleHasPermissions to fetch.
     */
    orderBy?: RoleHasPermissionsOrderByWithRelationInput | RoleHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoleHasPermissions
    **/
    _count?: true | RoleHasPermissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleHasPermissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleHasPermissionsMaxAggregateInputType
  }

  export type GetRoleHasPermissionsAggregateType<T extends RoleHasPermissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateRoleHasPermissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoleHasPermissions[P]>
      : GetScalarType<T[P], AggregateRoleHasPermissions[P]>
  }




  export type RoleHasPermissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleHasPermissionsWhereInput
    orderBy?: RoleHasPermissionsOrderByWithAggregationInput | RoleHasPermissionsOrderByWithAggregationInput[]
    by: RoleHasPermissionsScalarFieldEnum[] | RoleHasPermissionsScalarFieldEnum
    having?: RoleHasPermissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleHasPermissionsCountAggregateInputType | true
    _min?: RoleHasPermissionsMinAggregateInputType
    _max?: RoleHasPermissionsMaxAggregateInputType
  }

  export type RoleHasPermissionsGroupByOutputType = {
    PermissionId: string
    RoleId: string
    _count: RoleHasPermissionsCountAggregateOutputType | null
    _min: RoleHasPermissionsMinAggregateOutputType | null
    _max: RoleHasPermissionsMaxAggregateOutputType | null
  }

  type GetRoleHasPermissionsGroupByPayload<T extends RoleHasPermissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleHasPermissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleHasPermissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleHasPermissionsGroupByOutputType[P]>
            : GetScalarType<T[P], RoleHasPermissionsGroupByOutputType[P]>
        }
      >
    >


  export type RoleHasPermissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    RoleId?: boolean
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    Role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleHasPermissions"]>

  export type RoleHasPermissionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    RoleId?: boolean
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    Role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleHasPermissions"]>

  export type RoleHasPermissionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PermissionId?: boolean
    RoleId?: boolean
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    Role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleHasPermissions"]>

  export type RoleHasPermissionsSelectScalar = {
    PermissionId?: boolean
    RoleId?: boolean
  }

  export type RoleHasPermissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"PermissionId" | "RoleId", ExtArgs["result"]["roleHasPermissions"]>
  export type RoleHasPermissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    Role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type RoleHasPermissionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    Role?: boolean | RoleDefaultArgs<ExtArgs>
  }
  export type RoleHasPermissionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Permission?: boolean | PermissionDefaultArgs<ExtArgs>
    Role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $RoleHasPermissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RoleHasPermissions"
    objects: {
      Permission: Prisma.$PermissionPayload<ExtArgs>
      Role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      PermissionId: string
      RoleId: string
    }, ExtArgs["result"]["roleHasPermissions"]>
    composites: {}
  }

  type RoleHasPermissionsGetPayload<S extends boolean | null | undefined | RoleHasPermissionsDefaultArgs> = $Result.GetResult<Prisma.$RoleHasPermissionsPayload, S>

  type RoleHasPermissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleHasPermissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleHasPermissionsCountAggregateInputType | true
    }

  export interface RoleHasPermissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RoleHasPermissions'], meta: { name: 'RoleHasPermissions' } }
    /**
     * Find zero or one RoleHasPermissions that matches the filter.
     * @param {RoleHasPermissionsFindUniqueArgs} args - Arguments to find a RoleHasPermissions
     * @example
     * // Get one RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleHasPermissionsFindUniqueArgs>(args: SelectSubset<T, RoleHasPermissionsFindUniqueArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RoleHasPermissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleHasPermissionsFindUniqueOrThrowArgs} args - Arguments to find a RoleHasPermissions
     * @example
     * // Get one RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleHasPermissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleHasPermissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleHasPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsFindFirstArgs} args - Arguments to find a RoleHasPermissions
     * @example
     * // Get one RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleHasPermissionsFindFirstArgs>(args?: SelectSubset<T, RoleHasPermissionsFindFirstArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleHasPermissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsFindFirstOrThrowArgs} args - Arguments to find a RoleHasPermissions
     * @example
     * // Get one RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleHasPermissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleHasPermissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RoleHasPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.findMany()
     * 
     * // Get first 10 RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.findMany({ take: 10 })
     * 
     * // Only select the `PermissionId`
     * const roleHasPermissionsWithPermissionIdOnly = await prisma.roleHasPermissions.findMany({ select: { PermissionId: true } })
     * 
     */
    findMany<T extends RoleHasPermissionsFindManyArgs>(args?: SelectSubset<T, RoleHasPermissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RoleHasPermissions.
     * @param {RoleHasPermissionsCreateArgs} args - Arguments to create a RoleHasPermissions.
     * @example
     * // Create one RoleHasPermissions
     * const RoleHasPermissions = await prisma.roleHasPermissions.create({
     *   data: {
     *     // ... data to create a RoleHasPermissions
     *   }
     * })
     * 
     */
    create<T extends RoleHasPermissionsCreateArgs>(args: SelectSubset<T, RoleHasPermissionsCreateArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RoleHasPermissions.
     * @param {RoleHasPermissionsCreateManyArgs} args - Arguments to create many RoleHasPermissions.
     * @example
     * // Create many RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleHasPermissionsCreateManyArgs>(args?: SelectSubset<T, RoleHasPermissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RoleHasPermissions and returns the data saved in the database.
     * @param {RoleHasPermissionsCreateManyAndReturnArgs} args - Arguments to create many RoleHasPermissions.
     * @example
     * // Create many RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RoleHasPermissions and only return the `PermissionId`
     * const roleHasPermissionsWithPermissionIdOnly = await prisma.roleHasPermissions.createManyAndReturn({
     *   select: { PermissionId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleHasPermissionsCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleHasPermissionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RoleHasPermissions.
     * @param {RoleHasPermissionsDeleteArgs} args - Arguments to delete one RoleHasPermissions.
     * @example
     * // Delete one RoleHasPermissions
     * const RoleHasPermissions = await prisma.roleHasPermissions.delete({
     *   where: {
     *     // ... filter to delete one RoleHasPermissions
     *   }
     * })
     * 
     */
    delete<T extends RoleHasPermissionsDeleteArgs>(args: SelectSubset<T, RoleHasPermissionsDeleteArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RoleHasPermissions.
     * @param {RoleHasPermissionsUpdateArgs} args - Arguments to update one RoleHasPermissions.
     * @example
     * // Update one RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleHasPermissionsUpdateArgs>(args: SelectSubset<T, RoleHasPermissionsUpdateArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RoleHasPermissions.
     * @param {RoleHasPermissionsDeleteManyArgs} args - Arguments to filter RoleHasPermissions to delete.
     * @example
     * // Delete a few RoleHasPermissions
     * const { count } = await prisma.roleHasPermissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleHasPermissionsDeleteManyArgs>(args?: SelectSubset<T, RoleHasPermissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleHasPermissionsUpdateManyArgs>(args: SelectSubset<T, RoleHasPermissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleHasPermissions and returns the data updated in the database.
     * @param {RoleHasPermissionsUpdateManyAndReturnArgs} args - Arguments to update many RoleHasPermissions.
     * @example
     * // Update many RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RoleHasPermissions and only return the `PermissionId`
     * const roleHasPermissionsWithPermissionIdOnly = await prisma.roleHasPermissions.updateManyAndReturn({
     *   select: { PermissionId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleHasPermissionsUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleHasPermissionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RoleHasPermissions.
     * @param {RoleHasPermissionsUpsertArgs} args - Arguments to update or create a RoleHasPermissions.
     * @example
     * // Update or create a RoleHasPermissions
     * const roleHasPermissions = await prisma.roleHasPermissions.upsert({
     *   create: {
     *     // ... data to create a RoleHasPermissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoleHasPermissions we want to update
     *   }
     * })
     */
    upsert<T extends RoleHasPermissionsUpsertArgs>(args: SelectSubset<T, RoleHasPermissionsUpsertArgs<ExtArgs>>): Prisma__RoleHasPermissionsClient<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RoleHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsCountArgs} args - Arguments to filter RoleHasPermissions to count.
     * @example
     * // Count the number of RoleHasPermissions
     * const count = await prisma.roleHasPermissions.count({
     *   where: {
     *     // ... the filter for the RoleHasPermissions we want to count
     *   }
     * })
    **/
    count<T extends RoleHasPermissionsCountArgs>(
      args?: Subset<T, RoleHasPermissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleHasPermissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoleHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleHasPermissionsAggregateArgs>(args: Subset<T, RoleHasPermissionsAggregateArgs>): Prisma.PrismaPromise<GetRoleHasPermissionsAggregateType<T>>

    /**
     * Group by RoleHasPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleHasPermissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleHasPermissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleHasPermissionsGroupByArgs['orderBy'] }
        : { orderBy?: RoleHasPermissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleHasPermissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleHasPermissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RoleHasPermissions model
   */
  readonly fields: RoleHasPermissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RoleHasPermissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleHasPermissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Permission<T extends PermissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissionDefaultArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RoleHasPermissions model
   */
  interface RoleHasPermissionsFieldRefs {
    readonly PermissionId: FieldRef<"RoleHasPermissions", 'String'>
    readonly RoleId: FieldRef<"RoleHasPermissions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RoleHasPermissions findUnique
   */
  export type RoleHasPermissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which RoleHasPermissions to fetch.
     */
    where: RoleHasPermissionsWhereUniqueInput
  }

  /**
   * RoleHasPermissions findUniqueOrThrow
   */
  export type RoleHasPermissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which RoleHasPermissions to fetch.
     */
    where: RoleHasPermissionsWhereUniqueInput
  }

  /**
   * RoleHasPermissions findFirst
   */
  export type RoleHasPermissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which RoleHasPermissions to fetch.
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleHasPermissions to fetch.
     */
    orderBy?: RoleHasPermissionsOrderByWithRelationInput | RoleHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleHasPermissions.
     */
    cursor?: RoleHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleHasPermissions.
     */
    distinct?: RoleHasPermissionsScalarFieldEnum | RoleHasPermissionsScalarFieldEnum[]
  }

  /**
   * RoleHasPermissions findFirstOrThrow
   */
  export type RoleHasPermissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which RoleHasPermissions to fetch.
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleHasPermissions to fetch.
     */
    orderBy?: RoleHasPermissionsOrderByWithRelationInput | RoleHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleHasPermissions.
     */
    cursor?: RoleHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleHasPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleHasPermissions.
     */
    distinct?: RoleHasPermissionsScalarFieldEnum | RoleHasPermissionsScalarFieldEnum[]
  }

  /**
   * RoleHasPermissions findMany
   */
  export type RoleHasPermissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter, which RoleHasPermissions to fetch.
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleHasPermissions to fetch.
     */
    orderBy?: RoleHasPermissionsOrderByWithRelationInput | RoleHasPermissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoleHasPermissions.
     */
    cursor?: RoleHasPermissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleHasPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleHasPermissions.
     */
    skip?: number
    distinct?: RoleHasPermissionsScalarFieldEnum | RoleHasPermissionsScalarFieldEnum[]
  }

  /**
   * RoleHasPermissions create
   */
  export type RoleHasPermissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a RoleHasPermissions.
     */
    data: XOR<RoleHasPermissionsCreateInput, RoleHasPermissionsUncheckedCreateInput>
  }

  /**
   * RoleHasPermissions createMany
   */
  export type RoleHasPermissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RoleHasPermissions.
     */
    data: RoleHasPermissionsCreateManyInput | RoleHasPermissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RoleHasPermissions createManyAndReturn
   */
  export type RoleHasPermissionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * The data used to create many RoleHasPermissions.
     */
    data: RoleHasPermissionsCreateManyInput | RoleHasPermissionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RoleHasPermissions update
   */
  export type RoleHasPermissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a RoleHasPermissions.
     */
    data: XOR<RoleHasPermissionsUpdateInput, RoleHasPermissionsUncheckedUpdateInput>
    /**
     * Choose, which RoleHasPermissions to update.
     */
    where: RoleHasPermissionsWhereUniqueInput
  }

  /**
   * RoleHasPermissions updateMany
   */
  export type RoleHasPermissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RoleHasPermissions.
     */
    data: XOR<RoleHasPermissionsUpdateManyMutationInput, RoleHasPermissionsUncheckedUpdateManyInput>
    /**
     * Filter which RoleHasPermissions to update
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * Limit how many RoleHasPermissions to update.
     */
    limit?: number
  }

  /**
   * RoleHasPermissions updateManyAndReturn
   */
  export type RoleHasPermissionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * The data used to update RoleHasPermissions.
     */
    data: XOR<RoleHasPermissionsUpdateManyMutationInput, RoleHasPermissionsUncheckedUpdateManyInput>
    /**
     * Filter which RoleHasPermissions to update
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * Limit how many RoleHasPermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RoleHasPermissions upsert
   */
  export type RoleHasPermissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the RoleHasPermissions to update in case it exists.
     */
    where: RoleHasPermissionsWhereUniqueInput
    /**
     * In case the RoleHasPermissions found by the `where` argument doesn't exist, create a new RoleHasPermissions with this data.
     */
    create: XOR<RoleHasPermissionsCreateInput, RoleHasPermissionsUncheckedCreateInput>
    /**
     * In case the RoleHasPermissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleHasPermissionsUpdateInput, RoleHasPermissionsUncheckedUpdateInput>
  }

  /**
   * RoleHasPermissions delete
   */
  export type RoleHasPermissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    /**
     * Filter which RoleHasPermissions to delete.
     */
    where: RoleHasPermissionsWhereUniqueInput
  }

  /**
   * RoleHasPermissions deleteMany
   */
  export type RoleHasPermissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleHasPermissions to delete
     */
    where?: RoleHasPermissionsWhereInput
    /**
     * Limit how many RoleHasPermissions to delete.
     */
    limit?: number
  }

  /**
   * RoleHasPermissions without action
   */
  export type RoleHasPermissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleMinAggregateOutputType = {
    RoleId: string | null
    Name: string | null
    GuardName: string | null
    Icon: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    RoleId: string | null
    Name: string | null
    GuardName: string | null
    Icon: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    RoleId: number
    Name: number
    GuardName: number
    Icon: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type RoleMinAggregateInputType = {
    RoleId?: true
    Name?: true
    GuardName?: true
    Icon?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    RoleId?: true
    Name?: true
    GuardName?: true
    Icon?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type RoleCountAggregateInputType = {
    RoleId?: true
    Name?: true
    GuardName?: true
    Icon?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    RoleId: string
    Name: string
    GuardName: string
    Icon: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: RoleCountAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    RoleId?: boolean
    Name?: boolean
    GuardName?: boolean
    Icon?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    UserHasRoles?: boolean | Role$UserHasRolesArgs<ExtArgs>
    RoleHasPermissions?: boolean | Role$RoleHasPermissionsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    RoleId?: boolean
    Name?: boolean
    GuardName?: boolean
    Icon?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    RoleId?: boolean
    Name?: boolean
    GuardName?: boolean
    Icon?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    RoleId?: boolean
    Name?: boolean
    GuardName?: boolean
    Icon?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"RoleId" | "Name" | "GuardName" | "Icon" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserHasRoles?: boolean | Role$UserHasRolesArgs<ExtArgs>
    RoleHasPermissions?: boolean | Role$RoleHasPermissionsArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      UserHasRoles: Prisma.$UserHasRolesPayload<ExtArgs>[]
      RoleHasPermissions: Prisma.$RoleHasPermissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      RoleId: string
      Name: string
      GuardName: string
      Icon: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `RoleId`
     * const roleWithRoleIdOnly = await prisma.role.findMany({ select: { RoleId: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `RoleId`
     * const roleWithRoleIdOnly = await prisma.role.createManyAndReturn({
     *   select: { RoleId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `RoleId`
     * const roleWithRoleIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { RoleId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    UserHasRoles<T extends Role$UserHasRolesArgs<ExtArgs> = {}>(args?: Subset<T, Role$UserHasRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RoleHasPermissions<T extends Role$RoleHasPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Role$RoleHasPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleHasPermissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly RoleId: FieldRef<"Role", 'String'>
    readonly Name: FieldRef<"Role", 'String'>
    readonly GuardName: FieldRef<"Role", 'String'>
    readonly Icon: FieldRef<"Role", 'String'>
    readonly CreatedAt: FieldRef<"Role", 'DateTime'>
    readonly UpdatedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.UserHasRoles
   */
  export type Role$UserHasRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    where?: UserHasRolesWhereInput
    orderBy?: UserHasRolesOrderByWithRelationInput | UserHasRolesOrderByWithRelationInput[]
    cursor?: UserHasRolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHasRolesScalarFieldEnum | UserHasRolesScalarFieldEnum[]
  }

  /**
   * Role.RoleHasPermissions
   */
  export type Role$RoleHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleHasPermissions
     */
    select?: RoleHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleHasPermissions
     */
    omit?: RoleHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleHasPermissionsInclude<ExtArgs> | null
    where?: RoleHasPermissionsWhereInput
    orderBy?: RoleHasPermissionsOrderByWithRelationInput | RoleHasPermissionsOrderByWithRelationInput[]
    cursor?: RoleHasPermissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleHasPermissionsScalarFieldEnum | RoleHasPermissionsScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model SanggahanAssesmen
   */

  export type AggregateSanggahanAssesmen = {
    _count: SanggahanAssesmenCountAggregateOutputType | null
    _min: SanggahanAssesmenMinAggregateOutputType | null
    _max: SanggahanAssesmenMaxAggregateOutputType | null
  }

  export type SanggahanAssesmenMinAggregateOutputType = {
    SanggahanAssesmenId: string | null
    PendaftaranId: string | null
    ProsesBanding: boolean | null
    DiskusiBanding: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SanggahanAssesmenMaxAggregateOutputType = {
    SanggahanAssesmenId: string | null
    PendaftaranId: string | null
    ProsesBanding: boolean | null
    DiskusiBanding: boolean | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SanggahanAssesmenCountAggregateOutputType = {
    SanggahanAssesmenId: number
    PendaftaranId: number
    ProsesBanding: number
    DiskusiBanding: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type SanggahanAssesmenMinAggregateInputType = {
    SanggahanAssesmenId?: true
    PendaftaranId?: true
    ProsesBanding?: true
    DiskusiBanding?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SanggahanAssesmenMaxAggregateInputType = {
    SanggahanAssesmenId?: true
    PendaftaranId?: true
    ProsesBanding?: true
    DiskusiBanding?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SanggahanAssesmenCountAggregateInputType = {
    SanggahanAssesmenId?: true
    PendaftaranId?: true
    ProsesBanding?: true
    DiskusiBanding?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type SanggahanAssesmenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SanggahanAssesmen to aggregate.
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmen to fetch.
     */
    orderBy?: SanggahanAssesmenOrderByWithRelationInput | SanggahanAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SanggahanAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SanggahanAssesmen
    **/
    _count?: true | SanggahanAssesmenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SanggahanAssesmenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SanggahanAssesmenMaxAggregateInputType
  }

  export type GetSanggahanAssesmenAggregateType<T extends SanggahanAssesmenAggregateArgs> = {
        [P in keyof T & keyof AggregateSanggahanAssesmen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSanggahanAssesmen[P]>
      : GetScalarType<T[P], AggregateSanggahanAssesmen[P]>
  }




  export type SanggahanAssesmenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenWhereInput
    orderBy?: SanggahanAssesmenOrderByWithAggregationInput | SanggahanAssesmenOrderByWithAggregationInput[]
    by: SanggahanAssesmenScalarFieldEnum[] | SanggahanAssesmenScalarFieldEnum
    having?: SanggahanAssesmenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SanggahanAssesmenCountAggregateInputType | true
    _min?: SanggahanAssesmenMinAggregateInputType
    _max?: SanggahanAssesmenMaxAggregateInputType
  }

  export type SanggahanAssesmenGroupByOutputType = {
    SanggahanAssesmenId: string
    PendaftaranId: string
    ProsesBanding: boolean
    DiskusiBanding: boolean
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: SanggahanAssesmenCountAggregateOutputType | null
    _min: SanggahanAssesmenMinAggregateOutputType | null
    _max: SanggahanAssesmenMaxAggregateOutputType | null
  }

  type GetSanggahanAssesmenGroupByPayload<T extends SanggahanAssesmenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SanggahanAssesmenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SanggahanAssesmenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SanggahanAssesmenGroupByOutputType[P]>
            : GetScalarType<T[P], SanggahanAssesmenGroupByOutputType[P]>
        }
      >
    >


  export type SanggahanAssesmenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenId?: boolean
    PendaftaranId?: boolean
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    SanggahanAssesmenMk?: boolean | SanggahanAssesmen$SanggahanAssesmenMkArgs<ExtArgs>
    SanggahanAssesmenPihak?: boolean | SanggahanAssesmen$SanggahanAssesmenPihakArgs<ExtArgs>
    _count?: boolean | SanggahanAssesmenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmen"]>

  export type SanggahanAssesmenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenId?: boolean
    PendaftaranId?: boolean
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmen"]>

  export type SanggahanAssesmenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenId?: boolean
    PendaftaranId?: boolean
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmen"]>

  export type SanggahanAssesmenSelectScalar = {
    SanggahanAssesmenId?: boolean
    PendaftaranId?: boolean
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type SanggahanAssesmenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SanggahanAssesmenId" | "PendaftaranId" | "ProsesBanding" | "DiskusiBanding" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["sanggahanAssesmen"]>
  export type SanggahanAssesmenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
    SanggahanAssesmenMk?: boolean | SanggahanAssesmen$SanggahanAssesmenMkArgs<ExtArgs>
    SanggahanAssesmenPihak?: boolean | SanggahanAssesmen$SanggahanAssesmenPihakArgs<ExtArgs>
    _count?: boolean | SanggahanAssesmenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SanggahanAssesmenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type SanggahanAssesmenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $SanggahanAssesmenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SanggahanAssesmen"
    objects: {
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
      SanggahanAssesmenMk: Prisma.$SanggahanAssesmenMkPayload<ExtArgs>[]
      SanggahanAssesmenPihak: Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      SanggahanAssesmenId: string
      PendaftaranId: string
      ProsesBanding: boolean
      DiskusiBanding: boolean
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["sanggahanAssesmen"]>
    composites: {}
  }

  type SanggahanAssesmenGetPayload<S extends boolean | null | undefined | SanggahanAssesmenDefaultArgs> = $Result.GetResult<Prisma.$SanggahanAssesmenPayload, S>

  type SanggahanAssesmenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SanggahanAssesmenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SanggahanAssesmenCountAggregateInputType | true
    }

  export interface SanggahanAssesmenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SanggahanAssesmen'], meta: { name: 'SanggahanAssesmen' } }
    /**
     * Find zero or one SanggahanAssesmen that matches the filter.
     * @param {SanggahanAssesmenFindUniqueArgs} args - Arguments to find a SanggahanAssesmen
     * @example
     * // Get one SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SanggahanAssesmenFindUniqueArgs>(args: SelectSubset<T, SanggahanAssesmenFindUniqueArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SanggahanAssesmen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SanggahanAssesmenFindUniqueOrThrowArgs} args - Arguments to find a SanggahanAssesmen
     * @example
     * // Get one SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SanggahanAssesmenFindUniqueOrThrowArgs>(args: SelectSubset<T, SanggahanAssesmenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SanggahanAssesmen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenFindFirstArgs} args - Arguments to find a SanggahanAssesmen
     * @example
     * // Get one SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SanggahanAssesmenFindFirstArgs>(args?: SelectSubset<T, SanggahanAssesmenFindFirstArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SanggahanAssesmen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenFindFirstOrThrowArgs} args - Arguments to find a SanggahanAssesmen
     * @example
     * // Get one SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SanggahanAssesmenFindFirstOrThrowArgs>(args?: SelectSubset<T, SanggahanAssesmenFindFirstOrThrowArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SanggahanAssesmen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findMany()
     * 
     * // Get first 10 SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.findMany({ take: 10 })
     * 
     * // Only select the `SanggahanAssesmenId`
     * const sanggahanAssesmenWithSanggahanAssesmenIdOnly = await prisma.sanggahanAssesmen.findMany({ select: { SanggahanAssesmenId: true } })
     * 
     */
    findMany<T extends SanggahanAssesmenFindManyArgs>(args?: SelectSubset<T, SanggahanAssesmenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SanggahanAssesmen.
     * @param {SanggahanAssesmenCreateArgs} args - Arguments to create a SanggahanAssesmen.
     * @example
     * // Create one SanggahanAssesmen
     * const SanggahanAssesmen = await prisma.sanggahanAssesmen.create({
     *   data: {
     *     // ... data to create a SanggahanAssesmen
     *   }
     * })
     * 
     */
    create<T extends SanggahanAssesmenCreateArgs>(args: SelectSubset<T, SanggahanAssesmenCreateArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SanggahanAssesmen.
     * @param {SanggahanAssesmenCreateManyArgs} args - Arguments to create many SanggahanAssesmen.
     * @example
     * // Create many SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SanggahanAssesmenCreateManyArgs>(args?: SelectSubset<T, SanggahanAssesmenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SanggahanAssesmen and returns the data saved in the database.
     * @param {SanggahanAssesmenCreateManyAndReturnArgs} args - Arguments to create many SanggahanAssesmen.
     * @example
     * // Create many SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SanggahanAssesmen and only return the `SanggahanAssesmenId`
     * const sanggahanAssesmenWithSanggahanAssesmenIdOnly = await prisma.sanggahanAssesmen.createManyAndReturn({
     *   select: { SanggahanAssesmenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SanggahanAssesmenCreateManyAndReturnArgs>(args?: SelectSubset<T, SanggahanAssesmenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SanggahanAssesmen.
     * @param {SanggahanAssesmenDeleteArgs} args - Arguments to delete one SanggahanAssesmen.
     * @example
     * // Delete one SanggahanAssesmen
     * const SanggahanAssesmen = await prisma.sanggahanAssesmen.delete({
     *   where: {
     *     // ... filter to delete one SanggahanAssesmen
     *   }
     * })
     * 
     */
    delete<T extends SanggahanAssesmenDeleteArgs>(args: SelectSubset<T, SanggahanAssesmenDeleteArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SanggahanAssesmen.
     * @param {SanggahanAssesmenUpdateArgs} args - Arguments to update one SanggahanAssesmen.
     * @example
     * // Update one SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SanggahanAssesmenUpdateArgs>(args: SelectSubset<T, SanggahanAssesmenUpdateArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SanggahanAssesmen.
     * @param {SanggahanAssesmenDeleteManyArgs} args - Arguments to filter SanggahanAssesmen to delete.
     * @example
     * // Delete a few SanggahanAssesmen
     * const { count } = await prisma.sanggahanAssesmen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SanggahanAssesmenDeleteManyArgs>(args?: SelectSubset<T, SanggahanAssesmenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SanggahanAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SanggahanAssesmenUpdateManyArgs>(args: SelectSubset<T, SanggahanAssesmenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SanggahanAssesmen and returns the data updated in the database.
     * @param {SanggahanAssesmenUpdateManyAndReturnArgs} args - Arguments to update many SanggahanAssesmen.
     * @example
     * // Update many SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SanggahanAssesmen and only return the `SanggahanAssesmenId`
     * const sanggahanAssesmenWithSanggahanAssesmenIdOnly = await prisma.sanggahanAssesmen.updateManyAndReturn({
     *   select: { SanggahanAssesmenId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SanggahanAssesmenUpdateManyAndReturnArgs>(args: SelectSubset<T, SanggahanAssesmenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SanggahanAssesmen.
     * @param {SanggahanAssesmenUpsertArgs} args - Arguments to update or create a SanggahanAssesmen.
     * @example
     * // Update or create a SanggahanAssesmen
     * const sanggahanAssesmen = await prisma.sanggahanAssesmen.upsert({
     *   create: {
     *     // ... data to create a SanggahanAssesmen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SanggahanAssesmen we want to update
     *   }
     * })
     */
    upsert<T extends SanggahanAssesmenUpsertArgs>(args: SelectSubset<T, SanggahanAssesmenUpsertArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SanggahanAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenCountArgs} args - Arguments to filter SanggahanAssesmen to count.
     * @example
     * // Count the number of SanggahanAssesmen
     * const count = await prisma.sanggahanAssesmen.count({
     *   where: {
     *     // ... the filter for the SanggahanAssesmen we want to count
     *   }
     * })
    **/
    count<T extends SanggahanAssesmenCountArgs>(
      args?: Subset<T, SanggahanAssesmenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SanggahanAssesmenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SanggahanAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SanggahanAssesmenAggregateArgs>(args: Subset<T, SanggahanAssesmenAggregateArgs>): Prisma.PrismaPromise<GetSanggahanAssesmenAggregateType<T>>

    /**
     * Group by SanggahanAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SanggahanAssesmenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SanggahanAssesmenGroupByArgs['orderBy'] }
        : { orderBy?: SanggahanAssesmenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SanggahanAssesmenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSanggahanAssesmenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SanggahanAssesmen model
   */
  readonly fields: SanggahanAssesmenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SanggahanAssesmen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SanggahanAssesmenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    SanggahanAssesmenMk<T extends SanggahanAssesmen$SanggahanAssesmenMkArgs<ExtArgs> = {}>(args?: Subset<T, SanggahanAssesmen$SanggahanAssesmenMkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SanggahanAssesmenPihak<T extends SanggahanAssesmen$SanggahanAssesmenPihakArgs<ExtArgs> = {}>(args?: Subset<T, SanggahanAssesmen$SanggahanAssesmenPihakArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SanggahanAssesmen model
   */
  interface SanggahanAssesmenFieldRefs {
    readonly SanggahanAssesmenId: FieldRef<"SanggahanAssesmen", 'String'>
    readonly PendaftaranId: FieldRef<"SanggahanAssesmen", 'String'>
    readonly ProsesBanding: FieldRef<"SanggahanAssesmen", 'Boolean'>
    readonly DiskusiBanding: FieldRef<"SanggahanAssesmen", 'Boolean'>
    readonly CreatedAt: FieldRef<"SanggahanAssesmen", 'DateTime'>
    readonly UpdatedAt: FieldRef<"SanggahanAssesmen", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SanggahanAssesmen findUnique
   */
  export type SanggahanAssesmenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmen to fetch.
     */
    where: SanggahanAssesmenWhereUniqueInput
  }

  /**
   * SanggahanAssesmen findUniqueOrThrow
   */
  export type SanggahanAssesmenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmen to fetch.
     */
    where: SanggahanAssesmenWhereUniqueInput
  }

  /**
   * SanggahanAssesmen findFirst
   */
  export type SanggahanAssesmenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmen to fetch.
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmen to fetch.
     */
    orderBy?: SanggahanAssesmenOrderByWithRelationInput | SanggahanAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SanggahanAssesmen.
     */
    cursor?: SanggahanAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SanggahanAssesmen.
     */
    distinct?: SanggahanAssesmenScalarFieldEnum | SanggahanAssesmenScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmen findFirstOrThrow
   */
  export type SanggahanAssesmenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmen to fetch.
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmen to fetch.
     */
    orderBy?: SanggahanAssesmenOrderByWithRelationInput | SanggahanAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SanggahanAssesmen.
     */
    cursor?: SanggahanAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SanggahanAssesmen.
     */
    distinct?: SanggahanAssesmenScalarFieldEnum | SanggahanAssesmenScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmen findMany
   */
  export type SanggahanAssesmenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmen to fetch.
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmen to fetch.
     */
    orderBy?: SanggahanAssesmenOrderByWithRelationInput | SanggahanAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SanggahanAssesmen.
     */
    cursor?: SanggahanAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmen.
     */
    skip?: number
    distinct?: SanggahanAssesmenScalarFieldEnum | SanggahanAssesmenScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmen create
   */
  export type SanggahanAssesmenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * The data needed to create a SanggahanAssesmen.
     */
    data: XOR<SanggahanAssesmenCreateInput, SanggahanAssesmenUncheckedCreateInput>
  }

  /**
   * SanggahanAssesmen createMany
   */
  export type SanggahanAssesmenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SanggahanAssesmen.
     */
    data: SanggahanAssesmenCreateManyInput | SanggahanAssesmenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SanggahanAssesmen createManyAndReturn
   */
  export type SanggahanAssesmenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * The data used to create many SanggahanAssesmen.
     */
    data: SanggahanAssesmenCreateManyInput | SanggahanAssesmenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SanggahanAssesmen update
   */
  export type SanggahanAssesmenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * The data needed to update a SanggahanAssesmen.
     */
    data: XOR<SanggahanAssesmenUpdateInput, SanggahanAssesmenUncheckedUpdateInput>
    /**
     * Choose, which SanggahanAssesmen to update.
     */
    where: SanggahanAssesmenWhereUniqueInput
  }

  /**
   * SanggahanAssesmen updateMany
   */
  export type SanggahanAssesmenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SanggahanAssesmen.
     */
    data: XOR<SanggahanAssesmenUpdateManyMutationInput, SanggahanAssesmenUncheckedUpdateManyInput>
    /**
     * Filter which SanggahanAssesmen to update
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * Limit how many SanggahanAssesmen to update.
     */
    limit?: number
  }

  /**
   * SanggahanAssesmen updateManyAndReturn
   */
  export type SanggahanAssesmenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * The data used to update SanggahanAssesmen.
     */
    data: XOR<SanggahanAssesmenUpdateManyMutationInput, SanggahanAssesmenUncheckedUpdateManyInput>
    /**
     * Filter which SanggahanAssesmen to update
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * Limit how many SanggahanAssesmen to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SanggahanAssesmen upsert
   */
  export type SanggahanAssesmenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * The filter to search for the SanggahanAssesmen to update in case it exists.
     */
    where: SanggahanAssesmenWhereUniqueInput
    /**
     * In case the SanggahanAssesmen found by the `where` argument doesn't exist, create a new SanggahanAssesmen with this data.
     */
    create: XOR<SanggahanAssesmenCreateInput, SanggahanAssesmenUncheckedCreateInput>
    /**
     * In case the SanggahanAssesmen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SanggahanAssesmenUpdateInput, SanggahanAssesmenUncheckedUpdateInput>
  }

  /**
   * SanggahanAssesmen delete
   */
  export type SanggahanAssesmenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
    /**
     * Filter which SanggahanAssesmen to delete.
     */
    where: SanggahanAssesmenWhereUniqueInput
  }

  /**
   * SanggahanAssesmen deleteMany
   */
  export type SanggahanAssesmenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SanggahanAssesmen to delete
     */
    where?: SanggahanAssesmenWhereInput
    /**
     * Limit how many SanggahanAssesmen to delete.
     */
    limit?: number
  }

  /**
   * SanggahanAssesmen.SanggahanAssesmenMk
   */
  export type SanggahanAssesmen$SanggahanAssesmenMkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    where?: SanggahanAssesmenMkWhereInput
    orderBy?: SanggahanAssesmenMkOrderByWithRelationInput | SanggahanAssesmenMkOrderByWithRelationInput[]
    cursor?: SanggahanAssesmenMkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SanggahanAssesmenMkScalarFieldEnum | SanggahanAssesmenMkScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmen.SanggahanAssesmenPihak
   */
  export type SanggahanAssesmen$SanggahanAssesmenPihakArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    where?: SanggahanAssesmenPihakWhereInput
    orderBy?: SanggahanAssesmenPihakOrderByWithRelationInput | SanggahanAssesmenPihakOrderByWithRelationInput[]
    cursor?: SanggahanAssesmenPihakWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SanggahanAssesmenPihakScalarFieldEnum | SanggahanAssesmenPihakScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmen without action
   */
  export type SanggahanAssesmenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmen
     */
    select?: SanggahanAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmen
     */
    omit?: SanggahanAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenInclude<ExtArgs> | null
  }


  /**
   * Model SanggahanAssesmenMk
   */

  export type AggregateSanggahanAssesmenMk = {
    _count: SanggahanAssesmenMkCountAggregateOutputType | null
    _min: SanggahanAssesmenMkMinAggregateOutputType | null
    _max: SanggahanAssesmenMkMaxAggregateOutputType | null
  }

  export type SanggahanAssesmenMkMinAggregateOutputType = {
    SanggahanAssesmenMkId: string | null
    SanggahanAssesmenId: string | null
    MataKuliahMahasiswaId: string | null
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SanggahanAssesmenMkMaxAggregateOutputType = {
    SanggahanAssesmenMkId: string | null
    SanggahanAssesmenId: string | null
    MataKuliahMahasiswaId: string | null
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SanggahanAssesmenMkCountAggregateOutputType = {
    SanggahanAssesmenMkId: number
    SanggahanAssesmenId: number
    MataKuliahMahasiswaId: number
    Keterangan: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type SanggahanAssesmenMkMinAggregateInputType = {
    SanggahanAssesmenMkId?: true
    SanggahanAssesmenId?: true
    MataKuliahMahasiswaId?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SanggahanAssesmenMkMaxAggregateInputType = {
    SanggahanAssesmenMkId?: true
    SanggahanAssesmenId?: true
    MataKuliahMahasiswaId?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SanggahanAssesmenMkCountAggregateInputType = {
    SanggahanAssesmenMkId?: true
    SanggahanAssesmenId?: true
    MataKuliahMahasiswaId?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type SanggahanAssesmenMkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SanggahanAssesmenMk to aggregate.
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenMks to fetch.
     */
    orderBy?: SanggahanAssesmenMkOrderByWithRelationInput | SanggahanAssesmenMkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SanggahanAssesmenMkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenMks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenMks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SanggahanAssesmenMks
    **/
    _count?: true | SanggahanAssesmenMkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SanggahanAssesmenMkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SanggahanAssesmenMkMaxAggregateInputType
  }

  export type GetSanggahanAssesmenMkAggregateType<T extends SanggahanAssesmenMkAggregateArgs> = {
        [P in keyof T & keyof AggregateSanggahanAssesmenMk]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSanggahanAssesmenMk[P]>
      : GetScalarType<T[P], AggregateSanggahanAssesmenMk[P]>
  }




  export type SanggahanAssesmenMkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenMkWhereInput
    orderBy?: SanggahanAssesmenMkOrderByWithAggregationInput | SanggahanAssesmenMkOrderByWithAggregationInput[]
    by: SanggahanAssesmenMkScalarFieldEnum[] | SanggahanAssesmenMkScalarFieldEnum
    having?: SanggahanAssesmenMkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SanggahanAssesmenMkCountAggregateInputType | true
    _min?: SanggahanAssesmenMkMinAggregateInputType
    _max?: SanggahanAssesmenMkMaxAggregateInputType
  }

  export type SanggahanAssesmenMkGroupByOutputType = {
    SanggahanAssesmenMkId: string
    SanggahanAssesmenId: string
    MataKuliahMahasiswaId: string
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: SanggahanAssesmenMkCountAggregateOutputType | null
    _min: SanggahanAssesmenMkMinAggregateOutputType | null
    _max: SanggahanAssesmenMkMaxAggregateOutputType | null
  }

  type GetSanggahanAssesmenMkGroupByPayload<T extends SanggahanAssesmenMkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SanggahanAssesmenMkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SanggahanAssesmenMkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SanggahanAssesmenMkGroupByOutputType[P]>
            : GetScalarType<T[P], SanggahanAssesmenMkGroupByOutputType[P]>
        }
      >
    >


  export type SanggahanAssesmenMkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenMkId?: boolean
    SanggahanAssesmenId?: boolean
    MataKuliahMahasiswaId?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmenMk"]>

  export type SanggahanAssesmenMkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenMkId?: boolean
    SanggahanAssesmenId?: boolean
    MataKuliahMahasiswaId?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmenMk"]>

  export type SanggahanAssesmenMkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenMkId?: boolean
    SanggahanAssesmenId?: boolean
    MataKuliahMahasiswaId?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmenMk"]>

  export type SanggahanAssesmenMkSelectScalar = {
    SanggahanAssesmenMkId?: boolean
    SanggahanAssesmenId?: boolean
    MataKuliahMahasiswaId?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type SanggahanAssesmenMkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SanggahanAssesmenMkId" | "SanggahanAssesmenId" | "MataKuliahMahasiswaId" | "Keterangan" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["sanggahanAssesmenMk"]>
  export type SanggahanAssesmenMkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
  }
  export type SanggahanAssesmenMkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
  }
  export type SanggahanAssesmenMkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
    MataKuliahMahasiswa?: boolean | MataKuliahMahasiswaDefaultArgs<ExtArgs>
  }

  export type $SanggahanAssesmenMkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SanggahanAssesmenMk"
    objects: {
      SanggahanAssesmen: Prisma.$SanggahanAssesmenPayload<ExtArgs>
      MataKuliahMahasiswa: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      SanggahanAssesmenMkId: string
      SanggahanAssesmenId: string
      MataKuliahMahasiswaId: string
      Keterangan: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["sanggahanAssesmenMk"]>
    composites: {}
  }

  type SanggahanAssesmenMkGetPayload<S extends boolean | null | undefined | SanggahanAssesmenMkDefaultArgs> = $Result.GetResult<Prisma.$SanggahanAssesmenMkPayload, S>

  type SanggahanAssesmenMkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SanggahanAssesmenMkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SanggahanAssesmenMkCountAggregateInputType | true
    }

  export interface SanggahanAssesmenMkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SanggahanAssesmenMk'], meta: { name: 'SanggahanAssesmenMk' } }
    /**
     * Find zero or one SanggahanAssesmenMk that matches the filter.
     * @param {SanggahanAssesmenMkFindUniqueArgs} args - Arguments to find a SanggahanAssesmenMk
     * @example
     * // Get one SanggahanAssesmenMk
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SanggahanAssesmenMkFindUniqueArgs>(args: SelectSubset<T, SanggahanAssesmenMkFindUniqueArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SanggahanAssesmenMk that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SanggahanAssesmenMkFindUniqueOrThrowArgs} args - Arguments to find a SanggahanAssesmenMk
     * @example
     * // Get one SanggahanAssesmenMk
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SanggahanAssesmenMkFindUniqueOrThrowArgs>(args: SelectSubset<T, SanggahanAssesmenMkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SanggahanAssesmenMk that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkFindFirstArgs} args - Arguments to find a SanggahanAssesmenMk
     * @example
     * // Get one SanggahanAssesmenMk
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SanggahanAssesmenMkFindFirstArgs>(args?: SelectSubset<T, SanggahanAssesmenMkFindFirstArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SanggahanAssesmenMk that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkFindFirstOrThrowArgs} args - Arguments to find a SanggahanAssesmenMk
     * @example
     * // Get one SanggahanAssesmenMk
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SanggahanAssesmenMkFindFirstOrThrowArgs>(args?: SelectSubset<T, SanggahanAssesmenMkFindFirstOrThrowArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SanggahanAssesmenMks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SanggahanAssesmenMks
     * const sanggahanAssesmenMks = await prisma.sanggahanAssesmenMk.findMany()
     * 
     * // Get first 10 SanggahanAssesmenMks
     * const sanggahanAssesmenMks = await prisma.sanggahanAssesmenMk.findMany({ take: 10 })
     * 
     * // Only select the `SanggahanAssesmenMkId`
     * const sanggahanAssesmenMkWithSanggahanAssesmenMkIdOnly = await prisma.sanggahanAssesmenMk.findMany({ select: { SanggahanAssesmenMkId: true } })
     * 
     */
    findMany<T extends SanggahanAssesmenMkFindManyArgs>(args?: SelectSubset<T, SanggahanAssesmenMkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SanggahanAssesmenMk.
     * @param {SanggahanAssesmenMkCreateArgs} args - Arguments to create a SanggahanAssesmenMk.
     * @example
     * // Create one SanggahanAssesmenMk
     * const SanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.create({
     *   data: {
     *     // ... data to create a SanggahanAssesmenMk
     *   }
     * })
     * 
     */
    create<T extends SanggahanAssesmenMkCreateArgs>(args: SelectSubset<T, SanggahanAssesmenMkCreateArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SanggahanAssesmenMks.
     * @param {SanggahanAssesmenMkCreateManyArgs} args - Arguments to create many SanggahanAssesmenMks.
     * @example
     * // Create many SanggahanAssesmenMks
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SanggahanAssesmenMkCreateManyArgs>(args?: SelectSubset<T, SanggahanAssesmenMkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SanggahanAssesmenMks and returns the data saved in the database.
     * @param {SanggahanAssesmenMkCreateManyAndReturnArgs} args - Arguments to create many SanggahanAssesmenMks.
     * @example
     * // Create many SanggahanAssesmenMks
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SanggahanAssesmenMks and only return the `SanggahanAssesmenMkId`
     * const sanggahanAssesmenMkWithSanggahanAssesmenMkIdOnly = await prisma.sanggahanAssesmenMk.createManyAndReturn({
     *   select: { SanggahanAssesmenMkId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SanggahanAssesmenMkCreateManyAndReturnArgs>(args?: SelectSubset<T, SanggahanAssesmenMkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SanggahanAssesmenMk.
     * @param {SanggahanAssesmenMkDeleteArgs} args - Arguments to delete one SanggahanAssesmenMk.
     * @example
     * // Delete one SanggahanAssesmenMk
     * const SanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.delete({
     *   where: {
     *     // ... filter to delete one SanggahanAssesmenMk
     *   }
     * })
     * 
     */
    delete<T extends SanggahanAssesmenMkDeleteArgs>(args: SelectSubset<T, SanggahanAssesmenMkDeleteArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SanggahanAssesmenMk.
     * @param {SanggahanAssesmenMkUpdateArgs} args - Arguments to update one SanggahanAssesmenMk.
     * @example
     * // Update one SanggahanAssesmenMk
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SanggahanAssesmenMkUpdateArgs>(args: SelectSubset<T, SanggahanAssesmenMkUpdateArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SanggahanAssesmenMks.
     * @param {SanggahanAssesmenMkDeleteManyArgs} args - Arguments to filter SanggahanAssesmenMks to delete.
     * @example
     * // Delete a few SanggahanAssesmenMks
     * const { count } = await prisma.sanggahanAssesmenMk.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SanggahanAssesmenMkDeleteManyArgs>(args?: SelectSubset<T, SanggahanAssesmenMkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SanggahanAssesmenMks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SanggahanAssesmenMks
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SanggahanAssesmenMkUpdateManyArgs>(args: SelectSubset<T, SanggahanAssesmenMkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SanggahanAssesmenMks and returns the data updated in the database.
     * @param {SanggahanAssesmenMkUpdateManyAndReturnArgs} args - Arguments to update many SanggahanAssesmenMks.
     * @example
     * // Update many SanggahanAssesmenMks
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SanggahanAssesmenMks and only return the `SanggahanAssesmenMkId`
     * const sanggahanAssesmenMkWithSanggahanAssesmenMkIdOnly = await prisma.sanggahanAssesmenMk.updateManyAndReturn({
     *   select: { SanggahanAssesmenMkId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SanggahanAssesmenMkUpdateManyAndReturnArgs>(args: SelectSubset<T, SanggahanAssesmenMkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SanggahanAssesmenMk.
     * @param {SanggahanAssesmenMkUpsertArgs} args - Arguments to update or create a SanggahanAssesmenMk.
     * @example
     * // Update or create a SanggahanAssesmenMk
     * const sanggahanAssesmenMk = await prisma.sanggahanAssesmenMk.upsert({
     *   create: {
     *     // ... data to create a SanggahanAssesmenMk
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SanggahanAssesmenMk we want to update
     *   }
     * })
     */
    upsert<T extends SanggahanAssesmenMkUpsertArgs>(args: SelectSubset<T, SanggahanAssesmenMkUpsertArgs<ExtArgs>>): Prisma__SanggahanAssesmenMkClient<$Result.GetResult<Prisma.$SanggahanAssesmenMkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SanggahanAssesmenMks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkCountArgs} args - Arguments to filter SanggahanAssesmenMks to count.
     * @example
     * // Count the number of SanggahanAssesmenMks
     * const count = await prisma.sanggahanAssesmenMk.count({
     *   where: {
     *     // ... the filter for the SanggahanAssesmenMks we want to count
     *   }
     * })
    **/
    count<T extends SanggahanAssesmenMkCountArgs>(
      args?: Subset<T, SanggahanAssesmenMkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SanggahanAssesmenMkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SanggahanAssesmenMk.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SanggahanAssesmenMkAggregateArgs>(args: Subset<T, SanggahanAssesmenMkAggregateArgs>): Prisma.PrismaPromise<GetSanggahanAssesmenMkAggregateType<T>>

    /**
     * Group by SanggahanAssesmenMk.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenMkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SanggahanAssesmenMkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SanggahanAssesmenMkGroupByArgs['orderBy'] }
        : { orderBy?: SanggahanAssesmenMkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SanggahanAssesmenMkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSanggahanAssesmenMkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SanggahanAssesmenMk model
   */
  readonly fields: SanggahanAssesmenMkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SanggahanAssesmenMk.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SanggahanAssesmenMkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SanggahanAssesmen<T extends SanggahanAssesmenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SanggahanAssesmenDefaultArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    MataKuliahMahasiswa<T extends MataKuliahMahasiswaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahMahasiswaDefaultArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SanggahanAssesmenMk model
   */
  interface SanggahanAssesmenMkFieldRefs {
    readonly SanggahanAssesmenMkId: FieldRef<"SanggahanAssesmenMk", 'String'>
    readonly SanggahanAssesmenId: FieldRef<"SanggahanAssesmenMk", 'String'>
    readonly MataKuliahMahasiswaId: FieldRef<"SanggahanAssesmenMk", 'String'>
    readonly Keterangan: FieldRef<"SanggahanAssesmenMk", 'String'>
    readonly CreatedAt: FieldRef<"SanggahanAssesmenMk", 'DateTime'>
    readonly UpdatedAt: FieldRef<"SanggahanAssesmenMk", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SanggahanAssesmenMk findUnique
   */
  export type SanggahanAssesmenMkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenMk to fetch.
     */
    where: SanggahanAssesmenMkWhereUniqueInput
  }

  /**
   * SanggahanAssesmenMk findUniqueOrThrow
   */
  export type SanggahanAssesmenMkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenMk to fetch.
     */
    where: SanggahanAssesmenMkWhereUniqueInput
  }

  /**
   * SanggahanAssesmenMk findFirst
   */
  export type SanggahanAssesmenMkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenMk to fetch.
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenMks to fetch.
     */
    orderBy?: SanggahanAssesmenMkOrderByWithRelationInput | SanggahanAssesmenMkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SanggahanAssesmenMks.
     */
    cursor?: SanggahanAssesmenMkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenMks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenMks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SanggahanAssesmenMks.
     */
    distinct?: SanggahanAssesmenMkScalarFieldEnum | SanggahanAssesmenMkScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmenMk findFirstOrThrow
   */
  export type SanggahanAssesmenMkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenMk to fetch.
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenMks to fetch.
     */
    orderBy?: SanggahanAssesmenMkOrderByWithRelationInput | SanggahanAssesmenMkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SanggahanAssesmenMks.
     */
    cursor?: SanggahanAssesmenMkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenMks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenMks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SanggahanAssesmenMks.
     */
    distinct?: SanggahanAssesmenMkScalarFieldEnum | SanggahanAssesmenMkScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmenMk findMany
   */
  export type SanggahanAssesmenMkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenMks to fetch.
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenMks to fetch.
     */
    orderBy?: SanggahanAssesmenMkOrderByWithRelationInput | SanggahanAssesmenMkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SanggahanAssesmenMks.
     */
    cursor?: SanggahanAssesmenMkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenMks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenMks.
     */
    skip?: number
    distinct?: SanggahanAssesmenMkScalarFieldEnum | SanggahanAssesmenMkScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmenMk create
   */
  export type SanggahanAssesmenMkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * The data needed to create a SanggahanAssesmenMk.
     */
    data: XOR<SanggahanAssesmenMkCreateInput, SanggahanAssesmenMkUncheckedCreateInput>
  }

  /**
   * SanggahanAssesmenMk createMany
   */
  export type SanggahanAssesmenMkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SanggahanAssesmenMks.
     */
    data: SanggahanAssesmenMkCreateManyInput | SanggahanAssesmenMkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SanggahanAssesmenMk createManyAndReturn
   */
  export type SanggahanAssesmenMkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * The data used to create many SanggahanAssesmenMks.
     */
    data: SanggahanAssesmenMkCreateManyInput | SanggahanAssesmenMkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SanggahanAssesmenMk update
   */
  export type SanggahanAssesmenMkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * The data needed to update a SanggahanAssesmenMk.
     */
    data: XOR<SanggahanAssesmenMkUpdateInput, SanggahanAssesmenMkUncheckedUpdateInput>
    /**
     * Choose, which SanggahanAssesmenMk to update.
     */
    where: SanggahanAssesmenMkWhereUniqueInput
  }

  /**
   * SanggahanAssesmenMk updateMany
   */
  export type SanggahanAssesmenMkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SanggahanAssesmenMks.
     */
    data: XOR<SanggahanAssesmenMkUpdateManyMutationInput, SanggahanAssesmenMkUncheckedUpdateManyInput>
    /**
     * Filter which SanggahanAssesmenMks to update
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * Limit how many SanggahanAssesmenMks to update.
     */
    limit?: number
  }

  /**
   * SanggahanAssesmenMk updateManyAndReturn
   */
  export type SanggahanAssesmenMkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * The data used to update SanggahanAssesmenMks.
     */
    data: XOR<SanggahanAssesmenMkUpdateManyMutationInput, SanggahanAssesmenMkUncheckedUpdateManyInput>
    /**
     * Filter which SanggahanAssesmenMks to update
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * Limit how many SanggahanAssesmenMks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SanggahanAssesmenMk upsert
   */
  export type SanggahanAssesmenMkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * The filter to search for the SanggahanAssesmenMk to update in case it exists.
     */
    where: SanggahanAssesmenMkWhereUniqueInput
    /**
     * In case the SanggahanAssesmenMk found by the `where` argument doesn't exist, create a new SanggahanAssesmenMk with this data.
     */
    create: XOR<SanggahanAssesmenMkCreateInput, SanggahanAssesmenMkUncheckedCreateInput>
    /**
     * In case the SanggahanAssesmenMk was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SanggahanAssesmenMkUpdateInput, SanggahanAssesmenMkUncheckedUpdateInput>
  }

  /**
   * SanggahanAssesmenMk delete
   */
  export type SanggahanAssesmenMkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
    /**
     * Filter which SanggahanAssesmenMk to delete.
     */
    where: SanggahanAssesmenMkWhereUniqueInput
  }

  /**
   * SanggahanAssesmenMk deleteMany
   */
  export type SanggahanAssesmenMkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SanggahanAssesmenMks to delete
     */
    where?: SanggahanAssesmenMkWhereInput
    /**
     * Limit how many SanggahanAssesmenMks to delete.
     */
    limit?: number
  }

  /**
   * SanggahanAssesmenMk without action
   */
  export type SanggahanAssesmenMkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenMk
     */
    select?: SanggahanAssesmenMkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenMk
     */
    omit?: SanggahanAssesmenMkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenMkInclude<ExtArgs> | null
  }


  /**
   * Model SanggahanAssesmenPihak
   */

  export type AggregateSanggahanAssesmenPihak = {
    _count: SanggahanAssesmenPihakCountAggregateOutputType | null
    _min: SanggahanAssesmenPihakMinAggregateOutputType | null
    _max: SanggahanAssesmenPihakMaxAggregateOutputType | null
  }

  export type SanggahanAssesmenPihakMinAggregateOutputType = {
    SanggahanAssesmenPihakId: string | null
    SanggahanAssesmenId: string | null
    NamaPihak: string | null
    JabatanPihak: string | null
    InstansiPihak: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SanggahanAssesmenPihakMaxAggregateOutputType = {
    SanggahanAssesmenPihakId: string | null
    SanggahanAssesmenId: string | null
    NamaPihak: string | null
    JabatanPihak: string | null
    InstansiPihak: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SanggahanAssesmenPihakCountAggregateOutputType = {
    SanggahanAssesmenPihakId: number
    SanggahanAssesmenId: number
    NamaPihak: number
    JabatanPihak: number
    InstansiPihak: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type SanggahanAssesmenPihakMinAggregateInputType = {
    SanggahanAssesmenPihakId?: true
    SanggahanAssesmenId?: true
    NamaPihak?: true
    JabatanPihak?: true
    InstansiPihak?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SanggahanAssesmenPihakMaxAggregateInputType = {
    SanggahanAssesmenPihakId?: true
    SanggahanAssesmenId?: true
    NamaPihak?: true
    JabatanPihak?: true
    InstansiPihak?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SanggahanAssesmenPihakCountAggregateInputType = {
    SanggahanAssesmenPihakId?: true
    SanggahanAssesmenId?: true
    NamaPihak?: true
    JabatanPihak?: true
    InstansiPihak?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type SanggahanAssesmenPihakAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SanggahanAssesmenPihak to aggregate.
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenPihaks to fetch.
     */
    orderBy?: SanggahanAssesmenPihakOrderByWithRelationInput | SanggahanAssesmenPihakOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SanggahanAssesmenPihakWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenPihaks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenPihaks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SanggahanAssesmenPihaks
    **/
    _count?: true | SanggahanAssesmenPihakCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SanggahanAssesmenPihakMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SanggahanAssesmenPihakMaxAggregateInputType
  }

  export type GetSanggahanAssesmenPihakAggregateType<T extends SanggahanAssesmenPihakAggregateArgs> = {
        [P in keyof T & keyof AggregateSanggahanAssesmenPihak]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSanggahanAssesmenPihak[P]>
      : GetScalarType<T[P], AggregateSanggahanAssesmenPihak[P]>
  }




  export type SanggahanAssesmenPihakGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SanggahanAssesmenPihakWhereInput
    orderBy?: SanggahanAssesmenPihakOrderByWithAggregationInput | SanggahanAssesmenPihakOrderByWithAggregationInput[]
    by: SanggahanAssesmenPihakScalarFieldEnum[] | SanggahanAssesmenPihakScalarFieldEnum
    having?: SanggahanAssesmenPihakScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SanggahanAssesmenPihakCountAggregateInputType | true
    _min?: SanggahanAssesmenPihakMinAggregateInputType
    _max?: SanggahanAssesmenPihakMaxAggregateInputType
  }

  export type SanggahanAssesmenPihakGroupByOutputType = {
    SanggahanAssesmenPihakId: string
    SanggahanAssesmenId: string
    NamaPihak: string
    JabatanPihak: string | null
    InstansiPihak: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: SanggahanAssesmenPihakCountAggregateOutputType | null
    _min: SanggahanAssesmenPihakMinAggregateOutputType | null
    _max: SanggahanAssesmenPihakMaxAggregateOutputType | null
  }

  type GetSanggahanAssesmenPihakGroupByPayload<T extends SanggahanAssesmenPihakGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SanggahanAssesmenPihakGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SanggahanAssesmenPihakGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SanggahanAssesmenPihakGroupByOutputType[P]>
            : GetScalarType<T[P], SanggahanAssesmenPihakGroupByOutputType[P]>
        }
      >
    >


  export type SanggahanAssesmenPihakSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenPihakId?: boolean
    SanggahanAssesmenId?: boolean
    NamaPihak?: boolean
    JabatanPihak?: boolean
    InstansiPihak?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmenPihak"]>

  export type SanggahanAssesmenPihakSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenPihakId?: boolean
    SanggahanAssesmenId?: boolean
    NamaPihak?: boolean
    JabatanPihak?: boolean
    InstansiPihak?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmenPihak"]>

  export type SanggahanAssesmenPihakSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SanggahanAssesmenPihakId?: boolean
    SanggahanAssesmenId?: boolean
    NamaPihak?: boolean
    JabatanPihak?: boolean
    InstansiPihak?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sanggahanAssesmenPihak"]>

  export type SanggahanAssesmenPihakSelectScalar = {
    SanggahanAssesmenPihakId?: boolean
    SanggahanAssesmenId?: boolean
    NamaPihak?: boolean
    JabatanPihak?: boolean
    InstansiPihak?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type SanggahanAssesmenPihakOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SanggahanAssesmenPihakId" | "SanggahanAssesmenId" | "NamaPihak" | "JabatanPihak" | "InstansiPihak" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["sanggahanAssesmenPihak"]>
  export type SanggahanAssesmenPihakInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
  }
  export type SanggahanAssesmenPihakIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
  }
  export type SanggahanAssesmenPihakIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SanggahanAssesmen?: boolean | SanggahanAssesmenDefaultArgs<ExtArgs>
  }

  export type $SanggahanAssesmenPihakPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SanggahanAssesmenPihak"
    objects: {
      SanggahanAssesmen: Prisma.$SanggahanAssesmenPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      SanggahanAssesmenPihakId: string
      SanggahanAssesmenId: string
      NamaPihak: string
      JabatanPihak: string | null
      InstansiPihak: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["sanggahanAssesmenPihak"]>
    composites: {}
  }

  type SanggahanAssesmenPihakGetPayload<S extends boolean | null | undefined | SanggahanAssesmenPihakDefaultArgs> = $Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload, S>

  type SanggahanAssesmenPihakCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SanggahanAssesmenPihakFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SanggahanAssesmenPihakCountAggregateInputType | true
    }

  export interface SanggahanAssesmenPihakDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SanggahanAssesmenPihak'], meta: { name: 'SanggahanAssesmenPihak' } }
    /**
     * Find zero or one SanggahanAssesmenPihak that matches the filter.
     * @param {SanggahanAssesmenPihakFindUniqueArgs} args - Arguments to find a SanggahanAssesmenPihak
     * @example
     * // Get one SanggahanAssesmenPihak
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SanggahanAssesmenPihakFindUniqueArgs>(args: SelectSubset<T, SanggahanAssesmenPihakFindUniqueArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SanggahanAssesmenPihak that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SanggahanAssesmenPihakFindUniqueOrThrowArgs} args - Arguments to find a SanggahanAssesmenPihak
     * @example
     * // Get one SanggahanAssesmenPihak
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SanggahanAssesmenPihakFindUniqueOrThrowArgs>(args: SelectSubset<T, SanggahanAssesmenPihakFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SanggahanAssesmenPihak that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakFindFirstArgs} args - Arguments to find a SanggahanAssesmenPihak
     * @example
     * // Get one SanggahanAssesmenPihak
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SanggahanAssesmenPihakFindFirstArgs>(args?: SelectSubset<T, SanggahanAssesmenPihakFindFirstArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SanggahanAssesmenPihak that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakFindFirstOrThrowArgs} args - Arguments to find a SanggahanAssesmenPihak
     * @example
     * // Get one SanggahanAssesmenPihak
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SanggahanAssesmenPihakFindFirstOrThrowArgs>(args?: SelectSubset<T, SanggahanAssesmenPihakFindFirstOrThrowArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SanggahanAssesmenPihaks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SanggahanAssesmenPihaks
     * const sanggahanAssesmenPihaks = await prisma.sanggahanAssesmenPihak.findMany()
     * 
     * // Get first 10 SanggahanAssesmenPihaks
     * const sanggahanAssesmenPihaks = await prisma.sanggahanAssesmenPihak.findMany({ take: 10 })
     * 
     * // Only select the `SanggahanAssesmenPihakId`
     * const sanggahanAssesmenPihakWithSanggahanAssesmenPihakIdOnly = await prisma.sanggahanAssesmenPihak.findMany({ select: { SanggahanAssesmenPihakId: true } })
     * 
     */
    findMany<T extends SanggahanAssesmenPihakFindManyArgs>(args?: SelectSubset<T, SanggahanAssesmenPihakFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SanggahanAssesmenPihak.
     * @param {SanggahanAssesmenPihakCreateArgs} args - Arguments to create a SanggahanAssesmenPihak.
     * @example
     * // Create one SanggahanAssesmenPihak
     * const SanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.create({
     *   data: {
     *     // ... data to create a SanggahanAssesmenPihak
     *   }
     * })
     * 
     */
    create<T extends SanggahanAssesmenPihakCreateArgs>(args: SelectSubset<T, SanggahanAssesmenPihakCreateArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SanggahanAssesmenPihaks.
     * @param {SanggahanAssesmenPihakCreateManyArgs} args - Arguments to create many SanggahanAssesmenPihaks.
     * @example
     * // Create many SanggahanAssesmenPihaks
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SanggahanAssesmenPihakCreateManyArgs>(args?: SelectSubset<T, SanggahanAssesmenPihakCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SanggahanAssesmenPihaks and returns the data saved in the database.
     * @param {SanggahanAssesmenPihakCreateManyAndReturnArgs} args - Arguments to create many SanggahanAssesmenPihaks.
     * @example
     * // Create many SanggahanAssesmenPihaks
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SanggahanAssesmenPihaks and only return the `SanggahanAssesmenPihakId`
     * const sanggahanAssesmenPihakWithSanggahanAssesmenPihakIdOnly = await prisma.sanggahanAssesmenPihak.createManyAndReturn({
     *   select: { SanggahanAssesmenPihakId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SanggahanAssesmenPihakCreateManyAndReturnArgs>(args?: SelectSubset<T, SanggahanAssesmenPihakCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SanggahanAssesmenPihak.
     * @param {SanggahanAssesmenPihakDeleteArgs} args - Arguments to delete one SanggahanAssesmenPihak.
     * @example
     * // Delete one SanggahanAssesmenPihak
     * const SanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.delete({
     *   where: {
     *     // ... filter to delete one SanggahanAssesmenPihak
     *   }
     * })
     * 
     */
    delete<T extends SanggahanAssesmenPihakDeleteArgs>(args: SelectSubset<T, SanggahanAssesmenPihakDeleteArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SanggahanAssesmenPihak.
     * @param {SanggahanAssesmenPihakUpdateArgs} args - Arguments to update one SanggahanAssesmenPihak.
     * @example
     * // Update one SanggahanAssesmenPihak
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SanggahanAssesmenPihakUpdateArgs>(args: SelectSubset<T, SanggahanAssesmenPihakUpdateArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SanggahanAssesmenPihaks.
     * @param {SanggahanAssesmenPihakDeleteManyArgs} args - Arguments to filter SanggahanAssesmenPihaks to delete.
     * @example
     * // Delete a few SanggahanAssesmenPihaks
     * const { count } = await prisma.sanggahanAssesmenPihak.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SanggahanAssesmenPihakDeleteManyArgs>(args?: SelectSubset<T, SanggahanAssesmenPihakDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SanggahanAssesmenPihaks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SanggahanAssesmenPihaks
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SanggahanAssesmenPihakUpdateManyArgs>(args: SelectSubset<T, SanggahanAssesmenPihakUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SanggahanAssesmenPihaks and returns the data updated in the database.
     * @param {SanggahanAssesmenPihakUpdateManyAndReturnArgs} args - Arguments to update many SanggahanAssesmenPihaks.
     * @example
     * // Update many SanggahanAssesmenPihaks
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SanggahanAssesmenPihaks and only return the `SanggahanAssesmenPihakId`
     * const sanggahanAssesmenPihakWithSanggahanAssesmenPihakIdOnly = await prisma.sanggahanAssesmenPihak.updateManyAndReturn({
     *   select: { SanggahanAssesmenPihakId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SanggahanAssesmenPihakUpdateManyAndReturnArgs>(args: SelectSubset<T, SanggahanAssesmenPihakUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SanggahanAssesmenPihak.
     * @param {SanggahanAssesmenPihakUpsertArgs} args - Arguments to update or create a SanggahanAssesmenPihak.
     * @example
     * // Update or create a SanggahanAssesmenPihak
     * const sanggahanAssesmenPihak = await prisma.sanggahanAssesmenPihak.upsert({
     *   create: {
     *     // ... data to create a SanggahanAssesmenPihak
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SanggahanAssesmenPihak we want to update
     *   }
     * })
     */
    upsert<T extends SanggahanAssesmenPihakUpsertArgs>(args: SelectSubset<T, SanggahanAssesmenPihakUpsertArgs<ExtArgs>>): Prisma__SanggahanAssesmenPihakClient<$Result.GetResult<Prisma.$SanggahanAssesmenPihakPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SanggahanAssesmenPihaks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakCountArgs} args - Arguments to filter SanggahanAssesmenPihaks to count.
     * @example
     * // Count the number of SanggahanAssesmenPihaks
     * const count = await prisma.sanggahanAssesmenPihak.count({
     *   where: {
     *     // ... the filter for the SanggahanAssesmenPihaks we want to count
     *   }
     * })
    **/
    count<T extends SanggahanAssesmenPihakCountArgs>(
      args?: Subset<T, SanggahanAssesmenPihakCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SanggahanAssesmenPihakCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SanggahanAssesmenPihak.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SanggahanAssesmenPihakAggregateArgs>(args: Subset<T, SanggahanAssesmenPihakAggregateArgs>): Prisma.PrismaPromise<GetSanggahanAssesmenPihakAggregateType<T>>

    /**
     * Group by SanggahanAssesmenPihak.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SanggahanAssesmenPihakGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SanggahanAssesmenPihakGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SanggahanAssesmenPihakGroupByArgs['orderBy'] }
        : { orderBy?: SanggahanAssesmenPihakGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SanggahanAssesmenPihakGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSanggahanAssesmenPihakGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SanggahanAssesmenPihak model
   */
  readonly fields: SanggahanAssesmenPihakFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SanggahanAssesmenPihak.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SanggahanAssesmenPihakClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SanggahanAssesmen<T extends SanggahanAssesmenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SanggahanAssesmenDefaultArgs<ExtArgs>>): Prisma__SanggahanAssesmenClient<$Result.GetResult<Prisma.$SanggahanAssesmenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SanggahanAssesmenPihak model
   */
  interface SanggahanAssesmenPihakFieldRefs {
    readonly SanggahanAssesmenPihakId: FieldRef<"SanggahanAssesmenPihak", 'String'>
    readonly SanggahanAssesmenId: FieldRef<"SanggahanAssesmenPihak", 'String'>
    readonly NamaPihak: FieldRef<"SanggahanAssesmenPihak", 'String'>
    readonly JabatanPihak: FieldRef<"SanggahanAssesmenPihak", 'String'>
    readonly InstansiPihak: FieldRef<"SanggahanAssesmenPihak", 'String'>
    readonly CreatedAt: FieldRef<"SanggahanAssesmenPihak", 'DateTime'>
    readonly UpdatedAt: FieldRef<"SanggahanAssesmenPihak", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SanggahanAssesmenPihak findUnique
   */
  export type SanggahanAssesmenPihakFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenPihak to fetch.
     */
    where: SanggahanAssesmenPihakWhereUniqueInput
  }

  /**
   * SanggahanAssesmenPihak findUniqueOrThrow
   */
  export type SanggahanAssesmenPihakFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenPihak to fetch.
     */
    where: SanggahanAssesmenPihakWhereUniqueInput
  }

  /**
   * SanggahanAssesmenPihak findFirst
   */
  export type SanggahanAssesmenPihakFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenPihak to fetch.
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenPihaks to fetch.
     */
    orderBy?: SanggahanAssesmenPihakOrderByWithRelationInput | SanggahanAssesmenPihakOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SanggahanAssesmenPihaks.
     */
    cursor?: SanggahanAssesmenPihakWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenPihaks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenPihaks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SanggahanAssesmenPihaks.
     */
    distinct?: SanggahanAssesmenPihakScalarFieldEnum | SanggahanAssesmenPihakScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmenPihak findFirstOrThrow
   */
  export type SanggahanAssesmenPihakFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenPihak to fetch.
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenPihaks to fetch.
     */
    orderBy?: SanggahanAssesmenPihakOrderByWithRelationInput | SanggahanAssesmenPihakOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SanggahanAssesmenPihaks.
     */
    cursor?: SanggahanAssesmenPihakWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenPihaks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenPihaks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SanggahanAssesmenPihaks.
     */
    distinct?: SanggahanAssesmenPihakScalarFieldEnum | SanggahanAssesmenPihakScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmenPihak findMany
   */
  export type SanggahanAssesmenPihakFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * Filter, which SanggahanAssesmenPihaks to fetch.
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SanggahanAssesmenPihaks to fetch.
     */
    orderBy?: SanggahanAssesmenPihakOrderByWithRelationInput | SanggahanAssesmenPihakOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SanggahanAssesmenPihaks.
     */
    cursor?: SanggahanAssesmenPihakWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SanggahanAssesmenPihaks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SanggahanAssesmenPihaks.
     */
    skip?: number
    distinct?: SanggahanAssesmenPihakScalarFieldEnum | SanggahanAssesmenPihakScalarFieldEnum[]
  }

  /**
   * SanggahanAssesmenPihak create
   */
  export type SanggahanAssesmenPihakCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * The data needed to create a SanggahanAssesmenPihak.
     */
    data: XOR<SanggahanAssesmenPihakCreateInput, SanggahanAssesmenPihakUncheckedCreateInput>
  }

  /**
   * SanggahanAssesmenPihak createMany
   */
  export type SanggahanAssesmenPihakCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SanggahanAssesmenPihaks.
     */
    data: SanggahanAssesmenPihakCreateManyInput | SanggahanAssesmenPihakCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SanggahanAssesmenPihak createManyAndReturn
   */
  export type SanggahanAssesmenPihakCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * The data used to create many SanggahanAssesmenPihaks.
     */
    data: SanggahanAssesmenPihakCreateManyInput | SanggahanAssesmenPihakCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SanggahanAssesmenPihak update
   */
  export type SanggahanAssesmenPihakUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * The data needed to update a SanggahanAssesmenPihak.
     */
    data: XOR<SanggahanAssesmenPihakUpdateInput, SanggahanAssesmenPihakUncheckedUpdateInput>
    /**
     * Choose, which SanggahanAssesmenPihak to update.
     */
    where: SanggahanAssesmenPihakWhereUniqueInput
  }

  /**
   * SanggahanAssesmenPihak updateMany
   */
  export type SanggahanAssesmenPihakUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SanggahanAssesmenPihaks.
     */
    data: XOR<SanggahanAssesmenPihakUpdateManyMutationInput, SanggahanAssesmenPihakUncheckedUpdateManyInput>
    /**
     * Filter which SanggahanAssesmenPihaks to update
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * Limit how many SanggahanAssesmenPihaks to update.
     */
    limit?: number
  }

  /**
   * SanggahanAssesmenPihak updateManyAndReturn
   */
  export type SanggahanAssesmenPihakUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * The data used to update SanggahanAssesmenPihaks.
     */
    data: XOR<SanggahanAssesmenPihakUpdateManyMutationInput, SanggahanAssesmenPihakUncheckedUpdateManyInput>
    /**
     * Filter which SanggahanAssesmenPihaks to update
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * Limit how many SanggahanAssesmenPihaks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SanggahanAssesmenPihak upsert
   */
  export type SanggahanAssesmenPihakUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * The filter to search for the SanggahanAssesmenPihak to update in case it exists.
     */
    where: SanggahanAssesmenPihakWhereUniqueInput
    /**
     * In case the SanggahanAssesmenPihak found by the `where` argument doesn't exist, create a new SanggahanAssesmenPihak with this data.
     */
    create: XOR<SanggahanAssesmenPihakCreateInput, SanggahanAssesmenPihakUncheckedCreateInput>
    /**
     * In case the SanggahanAssesmenPihak was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SanggahanAssesmenPihakUpdateInput, SanggahanAssesmenPihakUncheckedUpdateInput>
  }

  /**
   * SanggahanAssesmenPihak delete
   */
  export type SanggahanAssesmenPihakDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
    /**
     * Filter which SanggahanAssesmenPihak to delete.
     */
    where: SanggahanAssesmenPihakWhereUniqueInput
  }

  /**
   * SanggahanAssesmenPihak deleteMany
   */
  export type SanggahanAssesmenPihakDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SanggahanAssesmenPihaks to delete
     */
    where?: SanggahanAssesmenPihakWhereInput
    /**
     * Limit how many SanggahanAssesmenPihaks to delete.
     */
    limit?: number
  }

  /**
   * SanggahanAssesmenPihak without action
   */
  export type SanggahanAssesmenPihakDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SanggahanAssesmenPihak
     */
    select?: SanggahanAssesmenPihakSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SanggahanAssesmenPihak
     */
    omit?: SanggahanAssesmenPihakOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SanggahanAssesmenPihakInclude<ExtArgs> | null
  }


  /**
   * Model SkRektor
   */

  export type AggregateSkRektor = {
    _count: SkRektorCountAggregateOutputType | null
    _avg: SkRektorAvgAggregateOutputType | null
    _sum: SkRektorSumAggregateOutputType | null
    _min: SkRektorMinAggregateOutputType | null
    _max: SkRektorMaxAggregateOutputType | null
  }

  export type SkRektorAvgAggregateOutputType = {
    TahunSk: number | null
  }

  export type SkRektorSumAggregateOutputType = {
    TahunSk: number | null
  }

  export type SkRektorMinAggregateOutputType = {
    SkRektorId: string | null
    NamaSk: string | null
    TahunSk: number | null
    NomorSk: string | null
    NamaFile: string | null
    NamaDokumen: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SkRektorMaxAggregateOutputType = {
    SkRektorId: string | null
    NamaSk: string | null
    TahunSk: number | null
    NomorSk: string | null
    NamaFile: string | null
    NamaDokumen: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SkRektorCountAggregateOutputType = {
    SkRektorId: number
    NamaSk: number
    TahunSk: number
    NomorSk: number
    NamaFile: number
    NamaDokumen: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type SkRektorAvgAggregateInputType = {
    TahunSk?: true
  }

  export type SkRektorSumAggregateInputType = {
    TahunSk?: true
  }

  export type SkRektorMinAggregateInputType = {
    SkRektorId?: true
    NamaSk?: true
    TahunSk?: true
    NomorSk?: true
    NamaFile?: true
    NamaDokumen?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SkRektorMaxAggregateInputType = {
    SkRektorId?: true
    NamaSk?: true
    TahunSk?: true
    NomorSk?: true
    NamaFile?: true
    NamaDokumen?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SkRektorCountAggregateInputType = {
    SkRektorId?: true
    NamaSk?: true
    TahunSk?: true
    NomorSk?: true
    NamaFile?: true
    NamaDokumen?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type SkRektorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkRektor to aggregate.
     */
    where?: SkRektorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektors to fetch.
     */
    orderBy?: SkRektorOrderByWithRelationInput | SkRektorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SkRektorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SkRektors
    **/
    _count?: true | SkRektorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SkRektorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SkRektorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkRektorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkRektorMaxAggregateInputType
  }

  export type GetSkRektorAggregateType<T extends SkRektorAggregateArgs> = {
        [P in keyof T & keyof AggregateSkRektor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkRektor[P]>
      : GetScalarType<T[P], AggregateSkRektor[P]>
  }




  export type SkRektorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorWhereInput
    orderBy?: SkRektorOrderByWithAggregationInput | SkRektorOrderByWithAggregationInput[]
    by: SkRektorScalarFieldEnum[] | SkRektorScalarFieldEnum
    having?: SkRektorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkRektorCountAggregateInputType | true
    _avg?: SkRektorAvgAggregateInputType
    _sum?: SkRektorSumAggregateInputType
    _min?: SkRektorMinAggregateInputType
    _max?: SkRektorMaxAggregateInputType
  }

  export type SkRektorGroupByOutputType = {
    SkRektorId: string
    NamaSk: string
    TahunSk: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: SkRektorCountAggregateOutputType | null
    _avg: SkRektorAvgAggregateOutputType | null
    _sum: SkRektorSumAggregateOutputType | null
    _min: SkRektorMinAggregateOutputType | null
    _max: SkRektorMaxAggregateOutputType | null
  }

  type GetSkRektorGroupByPayload<T extends SkRektorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkRektorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkRektorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkRektorGroupByOutputType[P]>
            : GetScalarType<T[P], SkRektorGroupByOutputType[P]>
        }
      >
    >


  export type SkRektorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    NamaSk?: boolean
    TahunSk?: boolean
    NomorSk?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    SkRektorAssesor?: boolean | SkRektor$SkRektorAssesorArgs<ExtArgs>
    SkRektorMahasiswa?: boolean | SkRektor$SkRektorMahasiswaArgs<ExtArgs>
    _count?: boolean | SkRektorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektor"]>

  export type SkRektorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    NamaSk?: boolean
    TahunSk?: boolean
    NomorSk?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["skRektor"]>

  export type SkRektorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    NamaSk?: boolean
    TahunSk?: boolean
    NomorSk?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }, ExtArgs["result"]["skRektor"]>

  export type SkRektorSelectScalar = {
    SkRektorId?: boolean
    NamaSk?: boolean
    TahunSk?: boolean
    NomorSk?: boolean
    NamaFile?: boolean
    NamaDokumen?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type SkRektorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SkRektorId" | "NamaSk" | "TahunSk" | "NomorSk" | "NamaFile" | "NamaDokumen" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["skRektor"]>
  export type SkRektorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektorAssesor?: boolean | SkRektor$SkRektorAssesorArgs<ExtArgs>
    SkRektorMahasiswa?: boolean | SkRektor$SkRektorMahasiswaArgs<ExtArgs>
    _count?: boolean | SkRektorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SkRektorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SkRektorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SkRektorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SkRektor"
    objects: {
      SkRektorAssesor: Prisma.$SkRektorAssesorPayload<ExtArgs>[]
      SkRektorMahasiswa: Prisma.$SkRektorMahasiswaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      SkRektorId: string
      NamaSk: string
      TahunSk: number
      NomorSk: string
      NamaFile: string
      NamaDokumen: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["skRektor"]>
    composites: {}
  }

  type SkRektorGetPayload<S extends boolean | null | undefined | SkRektorDefaultArgs> = $Result.GetResult<Prisma.$SkRektorPayload, S>

  type SkRektorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SkRektorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkRektorCountAggregateInputType | true
    }

  export interface SkRektorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SkRektor'], meta: { name: 'SkRektor' } }
    /**
     * Find zero or one SkRektor that matches the filter.
     * @param {SkRektorFindUniqueArgs} args - Arguments to find a SkRektor
     * @example
     * // Get one SkRektor
     * const skRektor = await prisma.skRektor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SkRektorFindUniqueArgs>(args: SelectSubset<T, SkRektorFindUniqueArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SkRektor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SkRektorFindUniqueOrThrowArgs} args - Arguments to find a SkRektor
     * @example
     * // Get one SkRektor
     * const skRektor = await prisma.skRektor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SkRektorFindUniqueOrThrowArgs>(args: SelectSubset<T, SkRektorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkRektor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorFindFirstArgs} args - Arguments to find a SkRektor
     * @example
     * // Get one SkRektor
     * const skRektor = await prisma.skRektor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SkRektorFindFirstArgs>(args?: SelectSubset<T, SkRektorFindFirstArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkRektor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorFindFirstOrThrowArgs} args - Arguments to find a SkRektor
     * @example
     * // Get one SkRektor
     * const skRektor = await prisma.skRektor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SkRektorFindFirstOrThrowArgs>(args?: SelectSubset<T, SkRektorFindFirstOrThrowArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SkRektors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SkRektors
     * const skRektors = await prisma.skRektor.findMany()
     * 
     * // Get first 10 SkRektors
     * const skRektors = await prisma.skRektor.findMany({ take: 10 })
     * 
     * // Only select the `SkRektorId`
     * const skRektorWithSkRektorIdOnly = await prisma.skRektor.findMany({ select: { SkRektorId: true } })
     * 
     */
    findMany<T extends SkRektorFindManyArgs>(args?: SelectSubset<T, SkRektorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SkRektor.
     * @param {SkRektorCreateArgs} args - Arguments to create a SkRektor.
     * @example
     * // Create one SkRektor
     * const SkRektor = await prisma.skRektor.create({
     *   data: {
     *     // ... data to create a SkRektor
     *   }
     * })
     * 
     */
    create<T extends SkRektorCreateArgs>(args: SelectSubset<T, SkRektorCreateArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SkRektors.
     * @param {SkRektorCreateManyArgs} args - Arguments to create many SkRektors.
     * @example
     * // Create many SkRektors
     * const skRektor = await prisma.skRektor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SkRektorCreateManyArgs>(args?: SelectSubset<T, SkRektorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SkRektors and returns the data saved in the database.
     * @param {SkRektorCreateManyAndReturnArgs} args - Arguments to create many SkRektors.
     * @example
     * // Create many SkRektors
     * const skRektor = await prisma.skRektor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SkRektors and only return the `SkRektorId`
     * const skRektorWithSkRektorIdOnly = await prisma.skRektor.createManyAndReturn({
     *   select: { SkRektorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SkRektorCreateManyAndReturnArgs>(args?: SelectSubset<T, SkRektorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SkRektor.
     * @param {SkRektorDeleteArgs} args - Arguments to delete one SkRektor.
     * @example
     * // Delete one SkRektor
     * const SkRektor = await prisma.skRektor.delete({
     *   where: {
     *     // ... filter to delete one SkRektor
     *   }
     * })
     * 
     */
    delete<T extends SkRektorDeleteArgs>(args: SelectSubset<T, SkRektorDeleteArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SkRektor.
     * @param {SkRektorUpdateArgs} args - Arguments to update one SkRektor.
     * @example
     * // Update one SkRektor
     * const skRektor = await prisma.skRektor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SkRektorUpdateArgs>(args: SelectSubset<T, SkRektorUpdateArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SkRektors.
     * @param {SkRektorDeleteManyArgs} args - Arguments to filter SkRektors to delete.
     * @example
     * // Delete a few SkRektors
     * const { count } = await prisma.skRektor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SkRektorDeleteManyArgs>(args?: SelectSubset<T, SkRektorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkRektors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SkRektors
     * const skRektor = await prisma.skRektor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SkRektorUpdateManyArgs>(args: SelectSubset<T, SkRektorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkRektors and returns the data updated in the database.
     * @param {SkRektorUpdateManyAndReturnArgs} args - Arguments to update many SkRektors.
     * @example
     * // Update many SkRektors
     * const skRektor = await prisma.skRektor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SkRektors and only return the `SkRektorId`
     * const skRektorWithSkRektorIdOnly = await prisma.skRektor.updateManyAndReturn({
     *   select: { SkRektorId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SkRektorUpdateManyAndReturnArgs>(args: SelectSubset<T, SkRektorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SkRektor.
     * @param {SkRektorUpsertArgs} args - Arguments to update or create a SkRektor.
     * @example
     * // Update or create a SkRektor
     * const skRektor = await prisma.skRektor.upsert({
     *   create: {
     *     // ... data to create a SkRektor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SkRektor we want to update
     *   }
     * })
     */
    upsert<T extends SkRektorUpsertArgs>(args: SelectSubset<T, SkRektorUpsertArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SkRektors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorCountArgs} args - Arguments to filter SkRektors to count.
     * @example
     * // Count the number of SkRektors
     * const count = await prisma.skRektor.count({
     *   where: {
     *     // ... the filter for the SkRektors we want to count
     *   }
     * })
    **/
    count<T extends SkRektorCountArgs>(
      args?: Subset<T, SkRektorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkRektorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SkRektor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkRektorAggregateArgs>(args: Subset<T, SkRektorAggregateArgs>): Prisma.PrismaPromise<GetSkRektorAggregateType<T>>

    /**
     * Group by SkRektor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SkRektorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SkRektorGroupByArgs['orderBy'] }
        : { orderBy?: SkRektorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SkRektorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkRektorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SkRektor model
   */
  readonly fields: SkRektorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SkRektor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SkRektorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SkRektorAssesor<T extends SkRektor$SkRektorAssesorArgs<ExtArgs> = {}>(args?: Subset<T, SkRektor$SkRektorAssesorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    SkRektorMahasiswa<T extends SkRektor$SkRektorMahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, SkRektor$SkRektorMahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SkRektor model
   */
  interface SkRektorFieldRefs {
    readonly SkRektorId: FieldRef<"SkRektor", 'String'>
    readonly NamaSk: FieldRef<"SkRektor", 'String'>
    readonly TahunSk: FieldRef<"SkRektor", 'Int'>
    readonly NomorSk: FieldRef<"SkRektor", 'String'>
    readonly NamaFile: FieldRef<"SkRektor", 'String'>
    readonly NamaDokumen: FieldRef<"SkRektor", 'String'>
    readonly CreatedAt: FieldRef<"SkRektor", 'DateTime'>
    readonly UpdatedAt: FieldRef<"SkRektor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SkRektor findUnique
   */
  export type SkRektorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektor to fetch.
     */
    where: SkRektorWhereUniqueInput
  }

  /**
   * SkRektor findUniqueOrThrow
   */
  export type SkRektorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektor to fetch.
     */
    where: SkRektorWhereUniqueInput
  }

  /**
   * SkRektor findFirst
   */
  export type SkRektorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektor to fetch.
     */
    where?: SkRektorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektors to fetch.
     */
    orderBy?: SkRektorOrderByWithRelationInput | SkRektorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkRektors.
     */
    cursor?: SkRektorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkRektors.
     */
    distinct?: SkRektorScalarFieldEnum | SkRektorScalarFieldEnum[]
  }

  /**
   * SkRektor findFirstOrThrow
   */
  export type SkRektorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektor to fetch.
     */
    where?: SkRektorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektors to fetch.
     */
    orderBy?: SkRektorOrderByWithRelationInput | SkRektorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkRektors.
     */
    cursor?: SkRektorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkRektors.
     */
    distinct?: SkRektorScalarFieldEnum | SkRektorScalarFieldEnum[]
  }

  /**
   * SkRektor findMany
   */
  export type SkRektorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektors to fetch.
     */
    where?: SkRektorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektors to fetch.
     */
    orderBy?: SkRektorOrderByWithRelationInput | SkRektorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SkRektors.
     */
    cursor?: SkRektorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektors.
     */
    skip?: number
    distinct?: SkRektorScalarFieldEnum | SkRektorScalarFieldEnum[]
  }

  /**
   * SkRektor create
   */
  export type SkRektorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * The data needed to create a SkRektor.
     */
    data: XOR<SkRektorCreateInput, SkRektorUncheckedCreateInput>
  }

  /**
   * SkRektor createMany
   */
  export type SkRektorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SkRektors.
     */
    data: SkRektorCreateManyInput | SkRektorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkRektor createManyAndReturn
   */
  export type SkRektorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * The data used to create many SkRektors.
     */
    data: SkRektorCreateManyInput | SkRektorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkRektor update
   */
  export type SkRektorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * The data needed to update a SkRektor.
     */
    data: XOR<SkRektorUpdateInput, SkRektorUncheckedUpdateInput>
    /**
     * Choose, which SkRektor to update.
     */
    where: SkRektorWhereUniqueInput
  }

  /**
   * SkRektor updateMany
   */
  export type SkRektorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SkRektors.
     */
    data: XOR<SkRektorUpdateManyMutationInput, SkRektorUncheckedUpdateManyInput>
    /**
     * Filter which SkRektors to update
     */
    where?: SkRektorWhereInput
    /**
     * Limit how many SkRektors to update.
     */
    limit?: number
  }

  /**
   * SkRektor updateManyAndReturn
   */
  export type SkRektorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * The data used to update SkRektors.
     */
    data: XOR<SkRektorUpdateManyMutationInput, SkRektorUncheckedUpdateManyInput>
    /**
     * Filter which SkRektors to update
     */
    where?: SkRektorWhereInput
    /**
     * Limit how many SkRektors to update.
     */
    limit?: number
  }

  /**
   * SkRektor upsert
   */
  export type SkRektorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * The filter to search for the SkRektor to update in case it exists.
     */
    where: SkRektorWhereUniqueInput
    /**
     * In case the SkRektor found by the `where` argument doesn't exist, create a new SkRektor with this data.
     */
    create: XOR<SkRektorCreateInput, SkRektorUncheckedCreateInput>
    /**
     * In case the SkRektor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SkRektorUpdateInput, SkRektorUncheckedUpdateInput>
  }

  /**
   * SkRektor delete
   */
  export type SkRektorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
    /**
     * Filter which SkRektor to delete.
     */
    where: SkRektorWhereUniqueInput
  }

  /**
   * SkRektor deleteMany
   */
  export type SkRektorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkRektors to delete
     */
    where?: SkRektorWhereInput
    /**
     * Limit how many SkRektors to delete.
     */
    limit?: number
  }

  /**
   * SkRektor.SkRektorAssesor
   */
  export type SkRektor$SkRektorAssesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    where?: SkRektorAssesorWhereInput
    orderBy?: SkRektorAssesorOrderByWithRelationInput | SkRektorAssesorOrderByWithRelationInput[]
    cursor?: SkRektorAssesorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkRektorAssesorScalarFieldEnum | SkRektorAssesorScalarFieldEnum[]
  }

  /**
   * SkRektor.SkRektorMahasiswa
   */
  export type SkRektor$SkRektorMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    where?: SkRektorMahasiswaWhereInput
    orderBy?: SkRektorMahasiswaOrderByWithRelationInput | SkRektorMahasiswaOrderByWithRelationInput[]
    cursor?: SkRektorMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SkRektorMahasiswaScalarFieldEnum | SkRektorMahasiswaScalarFieldEnum[]
  }

  /**
   * SkRektor without action
   */
  export type SkRektorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektor
     */
    select?: SkRektorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektor
     */
    omit?: SkRektorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorInclude<ExtArgs> | null
  }


  /**
   * Model SkRektorAssesor
   */

  export type AggregateSkRektorAssesor = {
    _count: SkRektorAssesorCountAggregateOutputType | null
    _min: SkRektorAssesorMinAggregateOutputType | null
    _max: SkRektorAssesorMaxAggregateOutputType | null
  }

  export type SkRektorAssesorMinAggregateOutputType = {
    SkRektorId: string | null
    AssesorMahasiswaId: string | null
  }

  export type SkRektorAssesorMaxAggregateOutputType = {
    SkRektorId: string | null
    AssesorMahasiswaId: string | null
  }

  export type SkRektorAssesorCountAggregateOutputType = {
    SkRektorId: number
    AssesorMahasiswaId: number
    _all: number
  }


  export type SkRektorAssesorMinAggregateInputType = {
    SkRektorId?: true
    AssesorMahasiswaId?: true
  }

  export type SkRektorAssesorMaxAggregateInputType = {
    SkRektorId?: true
    AssesorMahasiswaId?: true
  }

  export type SkRektorAssesorCountAggregateInputType = {
    SkRektorId?: true
    AssesorMahasiswaId?: true
    _all?: true
  }

  export type SkRektorAssesorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkRektorAssesor to aggregate.
     */
    where?: SkRektorAssesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorAssesors to fetch.
     */
    orderBy?: SkRektorAssesorOrderByWithRelationInput | SkRektorAssesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SkRektorAssesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorAssesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorAssesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SkRektorAssesors
    **/
    _count?: true | SkRektorAssesorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkRektorAssesorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkRektorAssesorMaxAggregateInputType
  }

  export type GetSkRektorAssesorAggregateType<T extends SkRektorAssesorAggregateArgs> = {
        [P in keyof T & keyof AggregateSkRektorAssesor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkRektorAssesor[P]>
      : GetScalarType<T[P], AggregateSkRektorAssesor[P]>
  }




  export type SkRektorAssesorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorAssesorWhereInput
    orderBy?: SkRektorAssesorOrderByWithAggregationInput | SkRektorAssesorOrderByWithAggregationInput[]
    by: SkRektorAssesorScalarFieldEnum[] | SkRektorAssesorScalarFieldEnum
    having?: SkRektorAssesorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkRektorAssesorCountAggregateInputType | true
    _min?: SkRektorAssesorMinAggregateInputType
    _max?: SkRektorAssesorMaxAggregateInputType
  }

  export type SkRektorAssesorGroupByOutputType = {
    SkRektorId: string
    AssesorMahasiswaId: string
    _count: SkRektorAssesorCountAggregateOutputType | null
    _min: SkRektorAssesorMinAggregateOutputType | null
    _max: SkRektorAssesorMaxAggregateOutputType | null
  }

  type GetSkRektorAssesorGroupByPayload<T extends SkRektorAssesorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkRektorAssesorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkRektorAssesorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkRektorAssesorGroupByOutputType[P]>
            : GetScalarType<T[P], SkRektorAssesorGroupByOutputType[P]>
        }
      >
    >


  export type SkRektorAssesorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    AssesorMahasiswaId?: boolean
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | AssesorMahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektorAssesor"]>

  export type SkRektorAssesorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    AssesorMahasiswaId?: boolean
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | AssesorMahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektorAssesor"]>

  export type SkRektorAssesorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    AssesorMahasiswaId?: boolean
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | AssesorMahasiswaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektorAssesor"]>

  export type SkRektorAssesorSelectScalar = {
    SkRektorId?: boolean
    AssesorMahasiswaId?: boolean
  }

  export type SkRektorAssesorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SkRektorId" | "AssesorMahasiswaId", ExtArgs["result"]["skRektorAssesor"]>
  export type SkRektorAssesorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | AssesorMahasiswaDefaultArgs<ExtArgs>
  }
  export type SkRektorAssesorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | AssesorMahasiswaDefaultArgs<ExtArgs>
  }
  export type SkRektorAssesorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    AssesorMahasiswa?: boolean | AssesorMahasiswaDefaultArgs<ExtArgs>
  }

  export type $SkRektorAssesorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SkRektorAssesor"
    objects: {
      SkRektor: Prisma.$SkRektorPayload<ExtArgs>
      AssesorMahasiswa: Prisma.$AssesorMahasiswaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      SkRektorId: string
      AssesorMahasiswaId: string
    }, ExtArgs["result"]["skRektorAssesor"]>
    composites: {}
  }

  type SkRektorAssesorGetPayload<S extends boolean | null | undefined | SkRektorAssesorDefaultArgs> = $Result.GetResult<Prisma.$SkRektorAssesorPayload, S>

  type SkRektorAssesorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SkRektorAssesorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkRektorAssesorCountAggregateInputType | true
    }

  export interface SkRektorAssesorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SkRektorAssesor'], meta: { name: 'SkRektorAssesor' } }
    /**
     * Find zero or one SkRektorAssesor that matches the filter.
     * @param {SkRektorAssesorFindUniqueArgs} args - Arguments to find a SkRektorAssesor
     * @example
     * // Get one SkRektorAssesor
     * const skRektorAssesor = await prisma.skRektorAssesor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SkRektorAssesorFindUniqueArgs>(args: SelectSubset<T, SkRektorAssesorFindUniqueArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SkRektorAssesor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SkRektorAssesorFindUniqueOrThrowArgs} args - Arguments to find a SkRektorAssesor
     * @example
     * // Get one SkRektorAssesor
     * const skRektorAssesor = await prisma.skRektorAssesor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SkRektorAssesorFindUniqueOrThrowArgs>(args: SelectSubset<T, SkRektorAssesorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkRektorAssesor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorFindFirstArgs} args - Arguments to find a SkRektorAssesor
     * @example
     * // Get one SkRektorAssesor
     * const skRektorAssesor = await prisma.skRektorAssesor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SkRektorAssesorFindFirstArgs>(args?: SelectSubset<T, SkRektorAssesorFindFirstArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkRektorAssesor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorFindFirstOrThrowArgs} args - Arguments to find a SkRektorAssesor
     * @example
     * // Get one SkRektorAssesor
     * const skRektorAssesor = await prisma.skRektorAssesor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SkRektorAssesorFindFirstOrThrowArgs>(args?: SelectSubset<T, SkRektorAssesorFindFirstOrThrowArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SkRektorAssesors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SkRektorAssesors
     * const skRektorAssesors = await prisma.skRektorAssesor.findMany()
     * 
     * // Get first 10 SkRektorAssesors
     * const skRektorAssesors = await prisma.skRektorAssesor.findMany({ take: 10 })
     * 
     * // Only select the `SkRektorId`
     * const skRektorAssesorWithSkRektorIdOnly = await prisma.skRektorAssesor.findMany({ select: { SkRektorId: true } })
     * 
     */
    findMany<T extends SkRektorAssesorFindManyArgs>(args?: SelectSubset<T, SkRektorAssesorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SkRektorAssesor.
     * @param {SkRektorAssesorCreateArgs} args - Arguments to create a SkRektorAssesor.
     * @example
     * // Create one SkRektorAssesor
     * const SkRektorAssesor = await prisma.skRektorAssesor.create({
     *   data: {
     *     // ... data to create a SkRektorAssesor
     *   }
     * })
     * 
     */
    create<T extends SkRektorAssesorCreateArgs>(args: SelectSubset<T, SkRektorAssesorCreateArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SkRektorAssesors.
     * @param {SkRektorAssesorCreateManyArgs} args - Arguments to create many SkRektorAssesors.
     * @example
     * // Create many SkRektorAssesors
     * const skRektorAssesor = await prisma.skRektorAssesor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SkRektorAssesorCreateManyArgs>(args?: SelectSubset<T, SkRektorAssesorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SkRektorAssesors and returns the data saved in the database.
     * @param {SkRektorAssesorCreateManyAndReturnArgs} args - Arguments to create many SkRektorAssesors.
     * @example
     * // Create many SkRektorAssesors
     * const skRektorAssesor = await prisma.skRektorAssesor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SkRektorAssesors and only return the `SkRektorId`
     * const skRektorAssesorWithSkRektorIdOnly = await prisma.skRektorAssesor.createManyAndReturn({
     *   select: { SkRektorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SkRektorAssesorCreateManyAndReturnArgs>(args?: SelectSubset<T, SkRektorAssesorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SkRektorAssesor.
     * @param {SkRektorAssesorDeleteArgs} args - Arguments to delete one SkRektorAssesor.
     * @example
     * // Delete one SkRektorAssesor
     * const SkRektorAssesor = await prisma.skRektorAssesor.delete({
     *   where: {
     *     // ... filter to delete one SkRektorAssesor
     *   }
     * })
     * 
     */
    delete<T extends SkRektorAssesorDeleteArgs>(args: SelectSubset<T, SkRektorAssesorDeleteArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SkRektorAssesor.
     * @param {SkRektorAssesorUpdateArgs} args - Arguments to update one SkRektorAssesor.
     * @example
     * // Update one SkRektorAssesor
     * const skRektorAssesor = await prisma.skRektorAssesor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SkRektorAssesorUpdateArgs>(args: SelectSubset<T, SkRektorAssesorUpdateArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SkRektorAssesors.
     * @param {SkRektorAssesorDeleteManyArgs} args - Arguments to filter SkRektorAssesors to delete.
     * @example
     * // Delete a few SkRektorAssesors
     * const { count } = await prisma.skRektorAssesor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SkRektorAssesorDeleteManyArgs>(args?: SelectSubset<T, SkRektorAssesorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkRektorAssesors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SkRektorAssesors
     * const skRektorAssesor = await prisma.skRektorAssesor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SkRektorAssesorUpdateManyArgs>(args: SelectSubset<T, SkRektorAssesorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkRektorAssesors and returns the data updated in the database.
     * @param {SkRektorAssesorUpdateManyAndReturnArgs} args - Arguments to update many SkRektorAssesors.
     * @example
     * // Update many SkRektorAssesors
     * const skRektorAssesor = await prisma.skRektorAssesor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SkRektorAssesors and only return the `SkRektorId`
     * const skRektorAssesorWithSkRektorIdOnly = await prisma.skRektorAssesor.updateManyAndReturn({
     *   select: { SkRektorId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SkRektorAssesorUpdateManyAndReturnArgs>(args: SelectSubset<T, SkRektorAssesorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SkRektorAssesor.
     * @param {SkRektorAssesorUpsertArgs} args - Arguments to update or create a SkRektorAssesor.
     * @example
     * // Update or create a SkRektorAssesor
     * const skRektorAssesor = await prisma.skRektorAssesor.upsert({
     *   create: {
     *     // ... data to create a SkRektorAssesor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SkRektorAssesor we want to update
     *   }
     * })
     */
    upsert<T extends SkRektorAssesorUpsertArgs>(args: SelectSubset<T, SkRektorAssesorUpsertArgs<ExtArgs>>): Prisma__SkRektorAssesorClient<$Result.GetResult<Prisma.$SkRektorAssesorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SkRektorAssesors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorCountArgs} args - Arguments to filter SkRektorAssesors to count.
     * @example
     * // Count the number of SkRektorAssesors
     * const count = await prisma.skRektorAssesor.count({
     *   where: {
     *     // ... the filter for the SkRektorAssesors we want to count
     *   }
     * })
    **/
    count<T extends SkRektorAssesorCountArgs>(
      args?: Subset<T, SkRektorAssesorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkRektorAssesorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SkRektorAssesor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkRektorAssesorAggregateArgs>(args: Subset<T, SkRektorAssesorAggregateArgs>): Prisma.PrismaPromise<GetSkRektorAssesorAggregateType<T>>

    /**
     * Group by SkRektorAssesor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorAssesorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SkRektorAssesorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SkRektorAssesorGroupByArgs['orderBy'] }
        : { orderBy?: SkRektorAssesorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SkRektorAssesorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkRektorAssesorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SkRektorAssesor model
   */
  readonly fields: SkRektorAssesorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SkRektorAssesor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SkRektorAssesorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SkRektor<T extends SkRektorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SkRektorDefaultArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    AssesorMahasiswa<T extends AssesorMahasiswaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssesorMahasiswaDefaultArgs<ExtArgs>>): Prisma__AssesorMahasiswaClient<$Result.GetResult<Prisma.$AssesorMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SkRektorAssesor model
   */
  interface SkRektorAssesorFieldRefs {
    readonly SkRektorId: FieldRef<"SkRektorAssesor", 'String'>
    readonly AssesorMahasiswaId: FieldRef<"SkRektorAssesor", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SkRektorAssesor findUnique
   */
  export type SkRektorAssesorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorAssesor to fetch.
     */
    where: SkRektorAssesorWhereUniqueInput
  }

  /**
   * SkRektorAssesor findUniqueOrThrow
   */
  export type SkRektorAssesorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorAssesor to fetch.
     */
    where: SkRektorAssesorWhereUniqueInput
  }

  /**
   * SkRektorAssesor findFirst
   */
  export type SkRektorAssesorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorAssesor to fetch.
     */
    where?: SkRektorAssesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorAssesors to fetch.
     */
    orderBy?: SkRektorAssesorOrderByWithRelationInput | SkRektorAssesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkRektorAssesors.
     */
    cursor?: SkRektorAssesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorAssesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorAssesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkRektorAssesors.
     */
    distinct?: SkRektorAssesorScalarFieldEnum | SkRektorAssesorScalarFieldEnum[]
  }

  /**
   * SkRektorAssesor findFirstOrThrow
   */
  export type SkRektorAssesorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorAssesor to fetch.
     */
    where?: SkRektorAssesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorAssesors to fetch.
     */
    orderBy?: SkRektorAssesorOrderByWithRelationInput | SkRektorAssesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkRektorAssesors.
     */
    cursor?: SkRektorAssesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorAssesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorAssesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkRektorAssesors.
     */
    distinct?: SkRektorAssesorScalarFieldEnum | SkRektorAssesorScalarFieldEnum[]
  }

  /**
   * SkRektorAssesor findMany
   */
  export type SkRektorAssesorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorAssesors to fetch.
     */
    where?: SkRektorAssesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorAssesors to fetch.
     */
    orderBy?: SkRektorAssesorOrderByWithRelationInput | SkRektorAssesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SkRektorAssesors.
     */
    cursor?: SkRektorAssesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorAssesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorAssesors.
     */
    skip?: number
    distinct?: SkRektorAssesorScalarFieldEnum | SkRektorAssesorScalarFieldEnum[]
  }

  /**
   * SkRektorAssesor create
   */
  export type SkRektorAssesorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * The data needed to create a SkRektorAssesor.
     */
    data: XOR<SkRektorAssesorCreateInput, SkRektorAssesorUncheckedCreateInput>
  }

  /**
   * SkRektorAssesor createMany
   */
  export type SkRektorAssesorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SkRektorAssesors.
     */
    data: SkRektorAssesorCreateManyInput | SkRektorAssesorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkRektorAssesor createManyAndReturn
   */
  export type SkRektorAssesorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * The data used to create many SkRektorAssesors.
     */
    data: SkRektorAssesorCreateManyInput | SkRektorAssesorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SkRektorAssesor update
   */
  export type SkRektorAssesorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * The data needed to update a SkRektorAssesor.
     */
    data: XOR<SkRektorAssesorUpdateInput, SkRektorAssesorUncheckedUpdateInput>
    /**
     * Choose, which SkRektorAssesor to update.
     */
    where: SkRektorAssesorWhereUniqueInput
  }

  /**
   * SkRektorAssesor updateMany
   */
  export type SkRektorAssesorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SkRektorAssesors.
     */
    data: XOR<SkRektorAssesorUpdateManyMutationInput, SkRektorAssesorUncheckedUpdateManyInput>
    /**
     * Filter which SkRektorAssesors to update
     */
    where?: SkRektorAssesorWhereInput
    /**
     * Limit how many SkRektorAssesors to update.
     */
    limit?: number
  }

  /**
   * SkRektorAssesor updateManyAndReturn
   */
  export type SkRektorAssesorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * The data used to update SkRektorAssesors.
     */
    data: XOR<SkRektorAssesorUpdateManyMutationInput, SkRektorAssesorUncheckedUpdateManyInput>
    /**
     * Filter which SkRektorAssesors to update
     */
    where?: SkRektorAssesorWhereInput
    /**
     * Limit how many SkRektorAssesors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SkRektorAssesor upsert
   */
  export type SkRektorAssesorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * The filter to search for the SkRektorAssesor to update in case it exists.
     */
    where: SkRektorAssesorWhereUniqueInput
    /**
     * In case the SkRektorAssesor found by the `where` argument doesn't exist, create a new SkRektorAssesor with this data.
     */
    create: XOR<SkRektorAssesorCreateInput, SkRektorAssesorUncheckedCreateInput>
    /**
     * In case the SkRektorAssesor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SkRektorAssesorUpdateInput, SkRektorAssesorUncheckedUpdateInput>
  }

  /**
   * SkRektorAssesor delete
   */
  export type SkRektorAssesorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
    /**
     * Filter which SkRektorAssesor to delete.
     */
    where: SkRektorAssesorWhereUniqueInput
  }

  /**
   * SkRektorAssesor deleteMany
   */
  export type SkRektorAssesorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkRektorAssesors to delete
     */
    where?: SkRektorAssesorWhereInput
    /**
     * Limit how many SkRektorAssesors to delete.
     */
    limit?: number
  }

  /**
   * SkRektorAssesor without action
   */
  export type SkRektorAssesorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorAssesor
     */
    select?: SkRektorAssesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorAssesor
     */
    omit?: SkRektorAssesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorAssesorInclude<ExtArgs> | null
  }


  /**
   * Model SkRektorMahasiswa
   */

  export type AggregateSkRektorMahasiswa = {
    _count: SkRektorMahasiswaCountAggregateOutputType | null
    _min: SkRektorMahasiswaMinAggregateOutputType | null
    _max: SkRektorMahasiswaMaxAggregateOutputType | null
  }

  export type SkRektorMahasiswaMinAggregateOutputType = {
    SkRektorId: string | null
    PendaftaranId: string | null
  }

  export type SkRektorMahasiswaMaxAggregateOutputType = {
    SkRektorId: string | null
    PendaftaranId: string | null
  }

  export type SkRektorMahasiswaCountAggregateOutputType = {
    SkRektorId: number
    PendaftaranId: number
    _all: number
  }


  export type SkRektorMahasiswaMinAggregateInputType = {
    SkRektorId?: true
    PendaftaranId?: true
  }

  export type SkRektorMahasiswaMaxAggregateInputType = {
    SkRektorId?: true
    PendaftaranId?: true
  }

  export type SkRektorMahasiswaCountAggregateInputType = {
    SkRektorId?: true
    PendaftaranId?: true
    _all?: true
  }

  export type SkRektorMahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkRektorMahasiswa to aggregate.
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorMahasiswas to fetch.
     */
    orderBy?: SkRektorMahasiswaOrderByWithRelationInput | SkRektorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SkRektorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SkRektorMahasiswas
    **/
    _count?: true | SkRektorMahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkRektorMahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkRektorMahasiswaMaxAggregateInputType
  }

  export type GetSkRektorMahasiswaAggregateType<T extends SkRektorMahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregateSkRektorMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkRektorMahasiswa[P]>
      : GetScalarType<T[P], AggregateSkRektorMahasiswa[P]>
  }




  export type SkRektorMahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkRektorMahasiswaWhereInput
    orderBy?: SkRektorMahasiswaOrderByWithAggregationInput | SkRektorMahasiswaOrderByWithAggregationInput[]
    by: SkRektorMahasiswaScalarFieldEnum[] | SkRektorMahasiswaScalarFieldEnum
    having?: SkRektorMahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkRektorMahasiswaCountAggregateInputType | true
    _min?: SkRektorMahasiswaMinAggregateInputType
    _max?: SkRektorMahasiswaMaxAggregateInputType
  }

  export type SkRektorMahasiswaGroupByOutputType = {
    SkRektorId: string
    PendaftaranId: string
    _count: SkRektorMahasiswaCountAggregateOutputType | null
    _min: SkRektorMahasiswaMinAggregateOutputType | null
    _max: SkRektorMahasiswaMaxAggregateOutputType | null
  }

  type GetSkRektorMahasiswaGroupByPayload<T extends SkRektorMahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkRektorMahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkRektorMahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkRektorMahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], SkRektorMahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type SkRektorMahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    PendaftaranId?: boolean
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektorMahasiswa"]>

  export type SkRektorMahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    PendaftaranId?: boolean
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektorMahasiswa"]>

  export type SkRektorMahasiswaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkRektorId?: boolean
    PendaftaranId?: boolean
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skRektorMahasiswa"]>

  export type SkRektorMahasiswaSelectScalar = {
    SkRektorId?: boolean
    PendaftaranId?: boolean
  }

  export type SkRektorMahasiswaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SkRektorId" | "PendaftaranId", ExtArgs["result"]["skRektorMahasiswa"]>
  export type SkRektorMahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type SkRektorMahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }
  export type SkRektorMahasiswaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SkRektor?: boolean | SkRektorDefaultArgs<ExtArgs>
    Pendaftaran?: boolean | PendaftaranDefaultArgs<ExtArgs>
  }

  export type $SkRektorMahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SkRektorMahasiswa"
    objects: {
      SkRektor: Prisma.$SkRektorPayload<ExtArgs>
      Pendaftaran: Prisma.$PendaftaranPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      SkRektorId: string
      PendaftaranId: string
    }, ExtArgs["result"]["skRektorMahasiswa"]>
    composites: {}
  }

  type SkRektorMahasiswaGetPayload<S extends boolean | null | undefined | SkRektorMahasiswaDefaultArgs> = $Result.GetResult<Prisma.$SkRektorMahasiswaPayload, S>

  type SkRektorMahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SkRektorMahasiswaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkRektorMahasiswaCountAggregateInputType | true
    }

  export interface SkRektorMahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SkRektorMahasiswa'], meta: { name: 'SkRektorMahasiswa' } }
    /**
     * Find zero or one SkRektorMahasiswa that matches the filter.
     * @param {SkRektorMahasiswaFindUniqueArgs} args - Arguments to find a SkRektorMahasiswa
     * @example
     * // Get one SkRektorMahasiswa
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SkRektorMahasiswaFindUniqueArgs>(args: SelectSubset<T, SkRektorMahasiswaFindUniqueArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SkRektorMahasiswa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SkRektorMahasiswaFindUniqueOrThrowArgs} args - Arguments to find a SkRektorMahasiswa
     * @example
     * // Get one SkRektorMahasiswa
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SkRektorMahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, SkRektorMahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkRektorMahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaFindFirstArgs} args - Arguments to find a SkRektorMahasiswa
     * @example
     * // Get one SkRektorMahasiswa
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SkRektorMahasiswaFindFirstArgs>(args?: SelectSubset<T, SkRektorMahasiswaFindFirstArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkRektorMahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaFindFirstOrThrowArgs} args - Arguments to find a SkRektorMahasiswa
     * @example
     * // Get one SkRektorMahasiswa
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SkRektorMahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, SkRektorMahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SkRektorMahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SkRektorMahasiswas
     * const skRektorMahasiswas = await prisma.skRektorMahasiswa.findMany()
     * 
     * // Get first 10 SkRektorMahasiswas
     * const skRektorMahasiswas = await prisma.skRektorMahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `SkRektorId`
     * const skRektorMahasiswaWithSkRektorIdOnly = await prisma.skRektorMahasiswa.findMany({ select: { SkRektorId: true } })
     * 
     */
    findMany<T extends SkRektorMahasiswaFindManyArgs>(args?: SelectSubset<T, SkRektorMahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SkRektorMahasiswa.
     * @param {SkRektorMahasiswaCreateArgs} args - Arguments to create a SkRektorMahasiswa.
     * @example
     * // Create one SkRektorMahasiswa
     * const SkRektorMahasiswa = await prisma.skRektorMahasiswa.create({
     *   data: {
     *     // ... data to create a SkRektorMahasiswa
     *   }
     * })
     * 
     */
    create<T extends SkRektorMahasiswaCreateArgs>(args: SelectSubset<T, SkRektorMahasiswaCreateArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SkRektorMahasiswas.
     * @param {SkRektorMahasiswaCreateManyArgs} args - Arguments to create many SkRektorMahasiswas.
     * @example
     * // Create many SkRektorMahasiswas
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SkRektorMahasiswaCreateManyArgs>(args?: SelectSubset<T, SkRektorMahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SkRektorMahasiswas and returns the data saved in the database.
     * @param {SkRektorMahasiswaCreateManyAndReturnArgs} args - Arguments to create many SkRektorMahasiswas.
     * @example
     * // Create many SkRektorMahasiswas
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SkRektorMahasiswas and only return the `SkRektorId`
     * const skRektorMahasiswaWithSkRektorIdOnly = await prisma.skRektorMahasiswa.createManyAndReturn({
     *   select: { SkRektorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SkRektorMahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, SkRektorMahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SkRektorMahasiswa.
     * @param {SkRektorMahasiswaDeleteArgs} args - Arguments to delete one SkRektorMahasiswa.
     * @example
     * // Delete one SkRektorMahasiswa
     * const SkRektorMahasiswa = await prisma.skRektorMahasiswa.delete({
     *   where: {
     *     // ... filter to delete one SkRektorMahasiswa
     *   }
     * })
     * 
     */
    delete<T extends SkRektorMahasiswaDeleteArgs>(args: SelectSubset<T, SkRektorMahasiswaDeleteArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SkRektorMahasiswa.
     * @param {SkRektorMahasiswaUpdateArgs} args - Arguments to update one SkRektorMahasiswa.
     * @example
     * // Update one SkRektorMahasiswa
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SkRektorMahasiswaUpdateArgs>(args: SelectSubset<T, SkRektorMahasiswaUpdateArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SkRektorMahasiswas.
     * @param {SkRektorMahasiswaDeleteManyArgs} args - Arguments to filter SkRektorMahasiswas to delete.
     * @example
     * // Delete a few SkRektorMahasiswas
     * const { count } = await prisma.skRektorMahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SkRektorMahasiswaDeleteManyArgs>(args?: SelectSubset<T, SkRektorMahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkRektorMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SkRektorMahasiswas
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SkRektorMahasiswaUpdateManyArgs>(args: SelectSubset<T, SkRektorMahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkRektorMahasiswas and returns the data updated in the database.
     * @param {SkRektorMahasiswaUpdateManyAndReturnArgs} args - Arguments to update many SkRektorMahasiswas.
     * @example
     * // Update many SkRektorMahasiswas
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SkRektorMahasiswas and only return the `SkRektorId`
     * const skRektorMahasiswaWithSkRektorIdOnly = await prisma.skRektorMahasiswa.updateManyAndReturn({
     *   select: { SkRektorId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SkRektorMahasiswaUpdateManyAndReturnArgs>(args: SelectSubset<T, SkRektorMahasiswaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SkRektorMahasiswa.
     * @param {SkRektorMahasiswaUpsertArgs} args - Arguments to update or create a SkRektorMahasiswa.
     * @example
     * // Update or create a SkRektorMahasiswa
     * const skRektorMahasiswa = await prisma.skRektorMahasiswa.upsert({
     *   create: {
     *     // ... data to create a SkRektorMahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SkRektorMahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends SkRektorMahasiswaUpsertArgs>(args: SelectSubset<T, SkRektorMahasiswaUpsertArgs<ExtArgs>>): Prisma__SkRektorMahasiswaClient<$Result.GetResult<Prisma.$SkRektorMahasiswaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SkRektorMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaCountArgs} args - Arguments to filter SkRektorMahasiswas to count.
     * @example
     * // Count the number of SkRektorMahasiswas
     * const count = await prisma.skRektorMahasiswa.count({
     *   where: {
     *     // ... the filter for the SkRektorMahasiswas we want to count
     *   }
     * })
    **/
    count<T extends SkRektorMahasiswaCountArgs>(
      args?: Subset<T, SkRektorMahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkRektorMahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SkRektorMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkRektorMahasiswaAggregateArgs>(args: Subset<T, SkRektorMahasiswaAggregateArgs>): Prisma.PrismaPromise<GetSkRektorMahasiswaAggregateType<T>>

    /**
     * Group by SkRektorMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkRektorMahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SkRektorMahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SkRektorMahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: SkRektorMahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SkRektorMahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkRektorMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SkRektorMahasiswa model
   */
  readonly fields: SkRektorMahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SkRektorMahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SkRektorMahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SkRektor<T extends SkRektorDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SkRektorDefaultArgs<ExtArgs>>): Prisma__SkRektorClient<$Result.GetResult<Prisma.$SkRektorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Pendaftaran<T extends PendaftaranDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PendaftaranDefaultArgs<ExtArgs>>): Prisma__PendaftaranClient<$Result.GetResult<Prisma.$PendaftaranPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SkRektorMahasiswa model
   */
  interface SkRektorMahasiswaFieldRefs {
    readonly SkRektorId: FieldRef<"SkRektorMahasiswa", 'String'>
    readonly PendaftaranId: FieldRef<"SkRektorMahasiswa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SkRektorMahasiswa findUnique
   */
  export type SkRektorMahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorMahasiswa to fetch.
     */
    where: SkRektorMahasiswaWhereUniqueInput
  }

  /**
   * SkRektorMahasiswa findUniqueOrThrow
   */
  export type SkRektorMahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorMahasiswa to fetch.
     */
    where: SkRektorMahasiswaWhereUniqueInput
  }

  /**
   * SkRektorMahasiswa findFirst
   */
  export type SkRektorMahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorMahasiswa to fetch.
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorMahasiswas to fetch.
     */
    orderBy?: SkRektorMahasiswaOrderByWithRelationInput | SkRektorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkRektorMahasiswas.
     */
    cursor?: SkRektorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkRektorMahasiswas.
     */
    distinct?: SkRektorMahasiswaScalarFieldEnum | SkRektorMahasiswaScalarFieldEnum[]
  }

  /**
   * SkRektorMahasiswa findFirstOrThrow
   */
  export type SkRektorMahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorMahasiswa to fetch.
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorMahasiswas to fetch.
     */
    orderBy?: SkRektorMahasiswaOrderByWithRelationInput | SkRektorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkRektorMahasiswas.
     */
    cursor?: SkRektorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkRektorMahasiswas.
     */
    distinct?: SkRektorMahasiswaScalarFieldEnum | SkRektorMahasiswaScalarFieldEnum[]
  }

  /**
   * SkRektorMahasiswa findMany
   */
  export type SkRektorMahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which SkRektorMahasiswas to fetch.
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkRektorMahasiswas to fetch.
     */
    orderBy?: SkRektorMahasiswaOrderByWithRelationInput | SkRektorMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SkRektorMahasiswas.
     */
    cursor?: SkRektorMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkRektorMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkRektorMahasiswas.
     */
    skip?: number
    distinct?: SkRektorMahasiswaScalarFieldEnum | SkRektorMahasiswaScalarFieldEnum[]
  }

  /**
   * SkRektorMahasiswa create
   */
  export type SkRektorMahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a SkRektorMahasiswa.
     */
    data: XOR<SkRektorMahasiswaCreateInput, SkRektorMahasiswaUncheckedCreateInput>
  }

  /**
   * SkRektorMahasiswa createMany
   */
  export type SkRektorMahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SkRektorMahasiswas.
     */
    data: SkRektorMahasiswaCreateManyInput | SkRektorMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkRektorMahasiswa createManyAndReturn
   */
  export type SkRektorMahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to create many SkRektorMahasiswas.
     */
    data: SkRektorMahasiswaCreateManyInput | SkRektorMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SkRektorMahasiswa update
   */
  export type SkRektorMahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a SkRektorMahasiswa.
     */
    data: XOR<SkRektorMahasiswaUpdateInput, SkRektorMahasiswaUncheckedUpdateInput>
    /**
     * Choose, which SkRektorMahasiswa to update.
     */
    where: SkRektorMahasiswaWhereUniqueInput
  }

  /**
   * SkRektorMahasiswa updateMany
   */
  export type SkRektorMahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SkRektorMahasiswas.
     */
    data: XOR<SkRektorMahasiswaUpdateManyMutationInput, SkRektorMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which SkRektorMahasiswas to update
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * Limit how many SkRektorMahasiswas to update.
     */
    limit?: number
  }

  /**
   * SkRektorMahasiswa updateManyAndReturn
   */
  export type SkRektorMahasiswaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * The data used to update SkRektorMahasiswas.
     */
    data: XOR<SkRektorMahasiswaUpdateManyMutationInput, SkRektorMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which SkRektorMahasiswas to update
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * Limit how many SkRektorMahasiswas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SkRektorMahasiswa upsert
   */
  export type SkRektorMahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the SkRektorMahasiswa to update in case it exists.
     */
    where: SkRektorMahasiswaWhereUniqueInput
    /**
     * In case the SkRektorMahasiswa found by the `where` argument doesn't exist, create a new SkRektorMahasiswa with this data.
     */
    create: XOR<SkRektorMahasiswaCreateInput, SkRektorMahasiswaUncheckedCreateInput>
    /**
     * In case the SkRektorMahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SkRektorMahasiswaUpdateInput, SkRektorMahasiswaUncheckedUpdateInput>
  }

  /**
   * SkRektorMahasiswa delete
   */
  export type SkRektorMahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
    /**
     * Filter which SkRektorMahasiswa to delete.
     */
    where: SkRektorMahasiswaWhereUniqueInput
  }

  /**
   * SkRektorMahasiswa deleteMany
   */
  export type SkRektorMahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkRektorMahasiswas to delete
     */
    where?: SkRektorMahasiswaWhereInput
    /**
     * Limit how many SkRektorMahasiswas to delete.
     */
    limit?: number
  }

  /**
   * SkRektorMahasiswa without action
   */
  export type SkRektorMahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkRektorMahasiswa
     */
    select?: SkRektorMahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkRektorMahasiswa
     */
    omit?: SkRektorMahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkRektorMahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model SkorAssesmen
   */

  export type AggregateSkorAssesmen = {
    _count: SkorAssesmenCountAggregateOutputType | null
    _avg: SkorAssesmenAvgAggregateOutputType | null
    _sum: SkorAssesmenSumAggregateOutputType | null
    _min: SkorAssesmenMinAggregateOutputType | null
    _max: SkorAssesmenMaxAggregateOutputType | null
  }

  export type SkorAssesmenAvgAggregateOutputType = {
    Portofolio: number | null
    Tulis: number | null
    Wawancara: number | null
    Demo: number | null
    SkorRataRata: number | null
  }

  export type SkorAssesmenSumAggregateOutputType = {
    Portofolio: number | null
    Tulis: number | null
    Wawancara: number | null
    Demo: number | null
    SkorRataRata: number | null
  }

  export type SkorAssesmenMinAggregateOutputType = {
    SkorAssesmenId: string | null
    HasilAssesmenId: string | null
    Portofolio: number | null
    Tulis: number | null
    Wawancara: number | null
    Demo: number | null
    SkorRataRata: number | null
    NilaiHuruf: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SkorAssesmenMaxAggregateOutputType = {
    SkorAssesmenId: string | null
    HasilAssesmenId: string | null
    Portofolio: number | null
    Tulis: number | null
    Wawancara: number | null
    Demo: number | null
    SkorRataRata: number | null
    NilaiHuruf: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
  }

  export type SkorAssesmenCountAggregateOutputType = {
    SkorAssesmenId: number
    HasilAssesmenId: number
    Portofolio: number
    Tulis: number
    Wawancara: number
    Demo: number
    SkorRataRata: number
    NilaiHuruf: number
    CreatedAt: number
    UpdatedAt: number
    _all: number
  }


  export type SkorAssesmenAvgAggregateInputType = {
    Portofolio?: true
    Tulis?: true
    Wawancara?: true
    Demo?: true
    SkorRataRata?: true
  }

  export type SkorAssesmenSumAggregateInputType = {
    Portofolio?: true
    Tulis?: true
    Wawancara?: true
    Demo?: true
    SkorRataRata?: true
  }

  export type SkorAssesmenMinAggregateInputType = {
    SkorAssesmenId?: true
    HasilAssesmenId?: true
    Portofolio?: true
    Tulis?: true
    Wawancara?: true
    Demo?: true
    SkorRataRata?: true
    NilaiHuruf?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SkorAssesmenMaxAggregateInputType = {
    SkorAssesmenId?: true
    HasilAssesmenId?: true
    Portofolio?: true
    Tulis?: true
    Wawancara?: true
    Demo?: true
    SkorRataRata?: true
    NilaiHuruf?: true
    CreatedAt?: true
    UpdatedAt?: true
  }

  export type SkorAssesmenCountAggregateInputType = {
    SkorAssesmenId?: true
    HasilAssesmenId?: true
    Portofolio?: true
    Tulis?: true
    Wawancara?: true
    Demo?: true
    SkorRataRata?: true
    NilaiHuruf?: true
    CreatedAt?: true
    UpdatedAt?: true
    _all?: true
  }

  export type SkorAssesmenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkorAssesmen to aggregate.
     */
    where?: SkorAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkorAssesmen to fetch.
     */
    orderBy?: SkorAssesmenOrderByWithRelationInput | SkorAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SkorAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkorAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkorAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SkorAssesmen
    **/
    _count?: true | SkorAssesmenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SkorAssesmenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SkorAssesmenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SkorAssesmenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SkorAssesmenMaxAggregateInputType
  }

  export type GetSkorAssesmenAggregateType<T extends SkorAssesmenAggregateArgs> = {
        [P in keyof T & keyof AggregateSkorAssesmen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSkorAssesmen[P]>
      : GetScalarType<T[P], AggregateSkorAssesmen[P]>
  }




  export type SkorAssesmenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SkorAssesmenWhereInput
    orderBy?: SkorAssesmenOrderByWithAggregationInput | SkorAssesmenOrderByWithAggregationInput[]
    by: SkorAssesmenScalarFieldEnum[] | SkorAssesmenScalarFieldEnum
    having?: SkorAssesmenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SkorAssesmenCountAggregateInputType | true
    _avg?: SkorAssesmenAvgAggregateInputType
    _sum?: SkorAssesmenSumAggregateInputType
    _min?: SkorAssesmenMinAggregateInputType
    _max?: SkorAssesmenMaxAggregateInputType
  }

  export type SkorAssesmenGroupByOutputType = {
    SkorAssesmenId: string
    HasilAssesmenId: string
    Portofolio: number
    Tulis: number
    Wawancara: number
    Demo: number
    SkorRataRata: number
    NilaiHuruf: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    _count: SkorAssesmenCountAggregateOutputType | null
    _avg: SkorAssesmenAvgAggregateOutputType | null
    _sum: SkorAssesmenSumAggregateOutputType | null
    _min: SkorAssesmenMinAggregateOutputType | null
    _max: SkorAssesmenMaxAggregateOutputType | null
  }

  type GetSkorAssesmenGroupByPayload<T extends SkorAssesmenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SkorAssesmenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SkorAssesmenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SkorAssesmenGroupByOutputType[P]>
            : GetScalarType<T[P], SkorAssesmenGroupByOutputType[P]>
        }
      >
    >


  export type SkorAssesmenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkorAssesmenId?: boolean
    HasilAssesmenId?: boolean
    Portofolio?: boolean
    Tulis?: boolean
    Wawancara?: boolean
    Demo?: boolean
    SkorRataRata?: boolean
    NilaiHuruf?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    HasilAssesmen?: boolean | HasilAssesmenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skorAssesmen"]>

  export type SkorAssesmenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkorAssesmenId?: boolean
    HasilAssesmenId?: boolean
    Portofolio?: boolean
    Tulis?: boolean
    Wawancara?: boolean
    Demo?: boolean
    SkorRataRata?: boolean
    NilaiHuruf?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    HasilAssesmen?: boolean | HasilAssesmenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skorAssesmen"]>

  export type SkorAssesmenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    SkorAssesmenId?: boolean
    HasilAssesmenId?: boolean
    Portofolio?: boolean
    Tulis?: boolean
    Wawancara?: boolean
    Demo?: boolean
    SkorRataRata?: boolean
    NilaiHuruf?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    HasilAssesmen?: boolean | HasilAssesmenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["skorAssesmen"]>

  export type SkorAssesmenSelectScalar = {
    SkorAssesmenId?: boolean
    HasilAssesmenId?: boolean
    Portofolio?: boolean
    Tulis?: boolean
    Wawancara?: boolean
    Demo?: boolean
    SkorRataRata?: boolean
    NilaiHuruf?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
  }

  export type SkorAssesmenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"SkorAssesmenId" | "HasilAssesmenId" | "Portofolio" | "Tulis" | "Wawancara" | "Demo" | "SkorRataRata" | "NilaiHuruf" | "CreatedAt" | "UpdatedAt", ExtArgs["result"]["skorAssesmen"]>
  export type SkorAssesmenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HasilAssesmen?: boolean | HasilAssesmenDefaultArgs<ExtArgs>
  }
  export type SkorAssesmenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HasilAssesmen?: boolean | HasilAssesmenDefaultArgs<ExtArgs>
  }
  export type SkorAssesmenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HasilAssesmen?: boolean | HasilAssesmenDefaultArgs<ExtArgs>
  }

  export type $SkorAssesmenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SkorAssesmen"
    objects: {
      HasilAssesmen: Prisma.$HasilAssesmenPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      SkorAssesmenId: string
      HasilAssesmenId: string
      Portofolio: number
      Tulis: number
      Wawancara: number
      Demo: number
      SkorRataRata: number
      NilaiHuruf: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
    }, ExtArgs["result"]["skorAssesmen"]>
    composites: {}
  }

  type SkorAssesmenGetPayload<S extends boolean | null | undefined | SkorAssesmenDefaultArgs> = $Result.GetResult<Prisma.$SkorAssesmenPayload, S>

  type SkorAssesmenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SkorAssesmenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SkorAssesmenCountAggregateInputType | true
    }

  export interface SkorAssesmenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SkorAssesmen'], meta: { name: 'SkorAssesmen' } }
    /**
     * Find zero or one SkorAssesmen that matches the filter.
     * @param {SkorAssesmenFindUniqueArgs} args - Arguments to find a SkorAssesmen
     * @example
     * // Get one SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SkorAssesmenFindUniqueArgs>(args: SelectSubset<T, SkorAssesmenFindUniqueArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SkorAssesmen that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SkorAssesmenFindUniqueOrThrowArgs} args - Arguments to find a SkorAssesmen
     * @example
     * // Get one SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SkorAssesmenFindUniqueOrThrowArgs>(args: SelectSubset<T, SkorAssesmenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkorAssesmen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenFindFirstArgs} args - Arguments to find a SkorAssesmen
     * @example
     * // Get one SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SkorAssesmenFindFirstArgs>(args?: SelectSubset<T, SkorAssesmenFindFirstArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SkorAssesmen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenFindFirstOrThrowArgs} args - Arguments to find a SkorAssesmen
     * @example
     * // Get one SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SkorAssesmenFindFirstOrThrowArgs>(args?: SelectSubset<T, SkorAssesmenFindFirstOrThrowArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SkorAssesmen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.findMany()
     * 
     * // Get first 10 SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.findMany({ take: 10 })
     * 
     * // Only select the `SkorAssesmenId`
     * const skorAssesmenWithSkorAssesmenIdOnly = await prisma.skorAssesmen.findMany({ select: { SkorAssesmenId: true } })
     * 
     */
    findMany<T extends SkorAssesmenFindManyArgs>(args?: SelectSubset<T, SkorAssesmenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SkorAssesmen.
     * @param {SkorAssesmenCreateArgs} args - Arguments to create a SkorAssesmen.
     * @example
     * // Create one SkorAssesmen
     * const SkorAssesmen = await prisma.skorAssesmen.create({
     *   data: {
     *     // ... data to create a SkorAssesmen
     *   }
     * })
     * 
     */
    create<T extends SkorAssesmenCreateArgs>(args: SelectSubset<T, SkorAssesmenCreateArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SkorAssesmen.
     * @param {SkorAssesmenCreateManyArgs} args - Arguments to create many SkorAssesmen.
     * @example
     * // Create many SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SkorAssesmenCreateManyArgs>(args?: SelectSubset<T, SkorAssesmenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SkorAssesmen and returns the data saved in the database.
     * @param {SkorAssesmenCreateManyAndReturnArgs} args - Arguments to create many SkorAssesmen.
     * @example
     * // Create many SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SkorAssesmen and only return the `SkorAssesmenId`
     * const skorAssesmenWithSkorAssesmenIdOnly = await prisma.skorAssesmen.createManyAndReturn({
     *   select: { SkorAssesmenId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SkorAssesmenCreateManyAndReturnArgs>(args?: SelectSubset<T, SkorAssesmenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SkorAssesmen.
     * @param {SkorAssesmenDeleteArgs} args - Arguments to delete one SkorAssesmen.
     * @example
     * // Delete one SkorAssesmen
     * const SkorAssesmen = await prisma.skorAssesmen.delete({
     *   where: {
     *     // ... filter to delete one SkorAssesmen
     *   }
     * })
     * 
     */
    delete<T extends SkorAssesmenDeleteArgs>(args: SelectSubset<T, SkorAssesmenDeleteArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SkorAssesmen.
     * @param {SkorAssesmenUpdateArgs} args - Arguments to update one SkorAssesmen.
     * @example
     * // Update one SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SkorAssesmenUpdateArgs>(args: SelectSubset<T, SkorAssesmenUpdateArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SkorAssesmen.
     * @param {SkorAssesmenDeleteManyArgs} args - Arguments to filter SkorAssesmen to delete.
     * @example
     * // Delete a few SkorAssesmen
     * const { count } = await prisma.skorAssesmen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SkorAssesmenDeleteManyArgs>(args?: SelectSubset<T, SkorAssesmenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkorAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SkorAssesmenUpdateManyArgs>(args: SelectSubset<T, SkorAssesmenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SkorAssesmen and returns the data updated in the database.
     * @param {SkorAssesmenUpdateManyAndReturnArgs} args - Arguments to update many SkorAssesmen.
     * @example
     * // Update many SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SkorAssesmen and only return the `SkorAssesmenId`
     * const skorAssesmenWithSkorAssesmenIdOnly = await prisma.skorAssesmen.updateManyAndReturn({
     *   select: { SkorAssesmenId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SkorAssesmenUpdateManyAndReturnArgs>(args: SelectSubset<T, SkorAssesmenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SkorAssesmen.
     * @param {SkorAssesmenUpsertArgs} args - Arguments to update or create a SkorAssesmen.
     * @example
     * // Update or create a SkorAssesmen
     * const skorAssesmen = await prisma.skorAssesmen.upsert({
     *   create: {
     *     // ... data to create a SkorAssesmen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SkorAssesmen we want to update
     *   }
     * })
     */
    upsert<T extends SkorAssesmenUpsertArgs>(args: SelectSubset<T, SkorAssesmenUpsertArgs<ExtArgs>>): Prisma__SkorAssesmenClient<$Result.GetResult<Prisma.$SkorAssesmenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SkorAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenCountArgs} args - Arguments to filter SkorAssesmen to count.
     * @example
     * // Count the number of SkorAssesmen
     * const count = await prisma.skorAssesmen.count({
     *   where: {
     *     // ... the filter for the SkorAssesmen we want to count
     *   }
     * })
    **/
    count<T extends SkorAssesmenCountArgs>(
      args?: Subset<T, SkorAssesmenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SkorAssesmenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SkorAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SkorAssesmenAggregateArgs>(args: Subset<T, SkorAssesmenAggregateArgs>): Prisma.PrismaPromise<GetSkorAssesmenAggregateType<T>>

    /**
     * Group by SkorAssesmen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SkorAssesmenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SkorAssesmenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SkorAssesmenGroupByArgs['orderBy'] }
        : { orderBy?: SkorAssesmenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SkorAssesmenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSkorAssesmenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SkorAssesmen model
   */
  readonly fields: SkorAssesmenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SkorAssesmen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SkorAssesmenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    HasilAssesmen<T extends HasilAssesmenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, HasilAssesmenDefaultArgs<ExtArgs>>): Prisma__HasilAssesmenClient<$Result.GetResult<Prisma.$HasilAssesmenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SkorAssesmen model
   */
  interface SkorAssesmenFieldRefs {
    readonly SkorAssesmenId: FieldRef<"SkorAssesmen", 'String'>
    readonly HasilAssesmenId: FieldRef<"SkorAssesmen", 'String'>
    readonly Portofolio: FieldRef<"SkorAssesmen", 'Float'>
    readonly Tulis: FieldRef<"SkorAssesmen", 'Float'>
    readonly Wawancara: FieldRef<"SkorAssesmen", 'Float'>
    readonly Demo: FieldRef<"SkorAssesmen", 'Float'>
    readonly SkorRataRata: FieldRef<"SkorAssesmen", 'Float'>
    readonly NilaiHuruf: FieldRef<"SkorAssesmen", 'String'>
    readonly CreatedAt: FieldRef<"SkorAssesmen", 'DateTime'>
    readonly UpdatedAt: FieldRef<"SkorAssesmen", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SkorAssesmen findUnique
   */
  export type SkorAssesmenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SkorAssesmen to fetch.
     */
    where: SkorAssesmenWhereUniqueInput
  }

  /**
   * SkorAssesmen findUniqueOrThrow
   */
  export type SkorAssesmenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SkorAssesmen to fetch.
     */
    where: SkorAssesmenWhereUniqueInput
  }

  /**
   * SkorAssesmen findFirst
   */
  export type SkorAssesmenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SkorAssesmen to fetch.
     */
    where?: SkorAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkorAssesmen to fetch.
     */
    orderBy?: SkorAssesmenOrderByWithRelationInput | SkorAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkorAssesmen.
     */
    cursor?: SkorAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkorAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkorAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkorAssesmen.
     */
    distinct?: SkorAssesmenScalarFieldEnum | SkorAssesmenScalarFieldEnum[]
  }

  /**
   * SkorAssesmen findFirstOrThrow
   */
  export type SkorAssesmenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SkorAssesmen to fetch.
     */
    where?: SkorAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkorAssesmen to fetch.
     */
    orderBy?: SkorAssesmenOrderByWithRelationInput | SkorAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SkorAssesmen.
     */
    cursor?: SkorAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkorAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkorAssesmen.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SkorAssesmen.
     */
    distinct?: SkorAssesmenScalarFieldEnum | SkorAssesmenScalarFieldEnum[]
  }

  /**
   * SkorAssesmen findMany
   */
  export type SkorAssesmenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * Filter, which SkorAssesmen to fetch.
     */
    where?: SkorAssesmenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SkorAssesmen to fetch.
     */
    orderBy?: SkorAssesmenOrderByWithRelationInput | SkorAssesmenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SkorAssesmen.
     */
    cursor?: SkorAssesmenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SkorAssesmen from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SkorAssesmen.
     */
    skip?: number
    distinct?: SkorAssesmenScalarFieldEnum | SkorAssesmenScalarFieldEnum[]
  }

  /**
   * SkorAssesmen create
   */
  export type SkorAssesmenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * The data needed to create a SkorAssesmen.
     */
    data: XOR<SkorAssesmenCreateInput, SkorAssesmenUncheckedCreateInput>
  }

  /**
   * SkorAssesmen createMany
   */
  export type SkorAssesmenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SkorAssesmen.
     */
    data: SkorAssesmenCreateManyInput | SkorAssesmenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SkorAssesmen createManyAndReturn
   */
  export type SkorAssesmenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * The data used to create many SkorAssesmen.
     */
    data: SkorAssesmenCreateManyInput | SkorAssesmenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SkorAssesmen update
   */
  export type SkorAssesmenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * The data needed to update a SkorAssesmen.
     */
    data: XOR<SkorAssesmenUpdateInput, SkorAssesmenUncheckedUpdateInput>
    /**
     * Choose, which SkorAssesmen to update.
     */
    where: SkorAssesmenWhereUniqueInput
  }

  /**
   * SkorAssesmen updateMany
   */
  export type SkorAssesmenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SkorAssesmen.
     */
    data: XOR<SkorAssesmenUpdateManyMutationInput, SkorAssesmenUncheckedUpdateManyInput>
    /**
     * Filter which SkorAssesmen to update
     */
    where?: SkorAssesmenWhereInput
    /**
     * Limit how many SkorAssesmen to update.
     */
    limit?: number
  }

  /**
   * SkorAssesmen updateManyAndReturn
   */
  export type SkorAssesmenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * The data used to update SkorAssesmen.
     */
    data: XOR<SkorAssesmenUpdateManyMutationInput, SkorAssesmenUncheckedUpdateManyInput>
    /**
     * Filter which SkorAssesmen to update
     */
    where?: SkorAssesmenWhereInput
    /**
     * Limit how many SkorAssesmen to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SkorAssesmen upsert
   */
  export type SkorAssesmenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * The filter to search for the SkorAssesmen to update in case it exists.
     */
    where: SkorAssesmenWhereUniqueInput
    /**
     * In case the SkorAssesmen found by the `where` argument doesn't exist, create a new SkorAssesmen with this data.
     */
    create: XOR<SkorAssesmenCreateInput, SkorAssesmenUncheckedCreateInput>
    /**
     * In case the SkorAssesmen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SkorAssesmenUpdateInput, SkorAssesmenUncheckedUpdateInput>
  }

  /**
   * SkorAssesmen delete
   */
  export type SkorAssesmenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
    /**
     * Filter which SkorAssesmen to delete.
     */
    where: SkorAssesmenWhereUniqueInput
  }

  /**
   * SkorAssesmen deleteMany
   */
  export type SkorAssesmenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SkorAssesmen to delete
     */
    where?: SkorAssesmenWhereInput
    /**
     * Limit how many SkorAssesmen to delete.
     */
    limit?: number
  }

  /**
   * SkorAssesmen without action
   */
  export type SkorAssesmenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SkorAssesmen
     */
    select?: SkorAssesmenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SkorAssesmen
     */
    omit?: SkorAssesmenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SkorAssesmenInclude<ExtArgs> | null
  }


  /**
   * Model StatusMahasiswaAssesment
   */

  export type AggregateStatusMahasiswaAssesment = {
    _count: StatusMahasiswaAssesmentCountAggregateOutputType | null
    _avg: StatusMahasiswaAssesmentAvgAggregateOutputType | null
    _sum: StatusMahasiswaAssesmentSumAggregateOutputType | null
    _min: StatusMahasiswaAssesmentMinAggregateOutputType | null
    _max: StatusMahasiswaAssesmentMaxAggregateOutputType | null
  }

  export type StatusMahasiswaAssesmentAvgAggregateOutputType = {
    Urutan: number | null
  }

  export type StatusMahasiswaAssesmentSumAggregateOutputType = {
    Urutan: number | null
  }

  export type StatusMahasiswaAssesmentMinAggregateOutputType = {
    StatusMahasiswaAssesmentId: string | null
    NamaStatus: string | null
    Icon: string | null
    Urutan: number | null
    Keterangan: string | null
  }

  export type StatusMahasiswaAssesmentMaxAggregateOutputType = {
    StatusMahasiswaAssesmentId: string | null
    NamaStatus: string | null
    Icon: string | null
    Urutan: number | null
    Keterangan: string | null
  }

  export type StatusMahasiswaAssesmentCountAggregateOutputType = {
    StatusMahasiswaAssesmentId: number
    NamaStatus: number
    Icon: number
    Urutan: number
    Keterangan: number
    _all: number
  }


  export type StatusMahasiswaAssesmentAvgAggregateInputType = {
    Urutan?: true
  }

  export type StatusMahasiswaAssesmentSumAggregateInputType = {
    Urutan?: true
  }

  export type StatusMahasiswaAssesmentMinAggregateInputType = {
    StatusMahasiswaAssesmentId?: true
    NamaStatus?: true
    Icon?: true
    Urutan?: true
    Keterangan?: true
  }

  export type StatusMahasiswaAssesmentMaxAggregateInputType = {
    StatusMahasiswaAssesmentId?: true
    NamaStatus?: true
    Icon?: true
    Urutan?: true
    Keterangan?: true
  }

  export type StatusMahasiswaAssesmentCountAggregateInputType = {
    StatusMahasiswaAssesmentId?: true
    NamaStatus?: true
    Icon?: true
    Urutan?: true
    Keterangan?: true
    _all?: true
  }

  export type StatusMahasiswaAssesmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatusMahasiswaAssesment to aggregate.
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesments to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentOrderByWithRelationInput | StatusMahasiswaAssesmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StatusMahasiswaAssesmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StatusMahasiswaAssesments
    **/
    _count?: true | StatusMahasiswaAssesmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StatusMahasiswaAssesmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StatusMahasiswaAssesmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StatusMahasiswaAssesmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StatusMahasiswaAssesmentMaxAggregateInputType
  }

  export type GetStatusMahasiswaAssesmentAggregateType<T extends StatusMahasiswaAssesmentAggregateArgs> = {
        [P in keyof T & keyof AggregateStatusMahasiswaAssesment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStatusMahasiswaAssesment[P]>
      : GetScalarType<T[P], AggregateStatusMahasiswaAssesment[P]>
  }




  export type StatusMahasiswaAssesmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatusMahasiswaAssesmentWhereInput
    orderBy?: StatusMahasiswaAssesmentOrderByWithAggregationInput | StatusMahasiswaAssesmentOrderByWithAggregationInput[]
    by: StatusMahasiswaAssesmentScalarFieldEnum[] | StatusMahasiswaAssesmentScalarFieldEnum
    having?: StatusMahasiswaAssesmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StatusMahasiswaAssesmentCountAggregateInputType | true
    _avg?: StatusMahasiswaAssesmentAvgAggregateInputType
    _sum?: StatusMahasiswaAssesmentSumAggregateInputType
    _min?: StatusMahasiswaAssesmentMinAggregateInputType
    _max?: StatusMahasiswaAssesmentMaxAggregateInputType
  }

  export type StatusMahasiswaAssesmentGroupByOutputType = {
    StatusMahasiswaAssesmentId: string
    NamaStatus: string
    Icon: string
    Urutan: number
    Keterangan: string | null
    _count: StatusMahasiswaAssesmentCountAggregateOutputType | null
    _avg: StatusMahasiswaAssesmentAvgAggregateOutputType | null
    _sum: StatusMahasiswaAssesmentSumAggregateOutputType | null
    _min: StatusMahasiswaAssesmentMinAggregateOutputType | null
    _max: StatusMahasiswaAssesmentMaxAggregateOutputType | null
  }

  type GetStatusMahasiswaAssesmentGroupByPayload<T extends StatusMahasiswaAssesmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StatusMahasiswaAssesmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StatusMahasiswaAssesmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StatusMahasiswaAssesmentGroupByOutputType[P]>
            : GetScalarType<T[P], StatusMahasiswaAssesmentGroupByOutputType[P]>
        }
      >
    >


  export type StatusMahasiswaAssesmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    StatusMahasiswaAssesmentId?: boolean
    NamaStatus?: boolean
    Icon?: boolean
    Urutan?: boolean
    Keterangan?: boolean
    StatusMahasiswaAssesmentHistory?: boolean | StatusMahasiswaAssesment$StatusMahasiswaAssesmentHistoryArgs<ExtArgs>
    _count?: boolean | StatusMahasiswaAssesmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["statusMahasiswaAssesment"]>

  export type StatusMahasiswaAssesmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    StatusMahasiswaAssesmentId?: boolean
    NamaStatus?: boolean
    Icon?: boolean
    Urutan?: boolean
    Keterangan?: boolean
  }, ExtArgs["result"]["statusMahasiswaAssesment"]>

  export type StatusMahasiswaAssesmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    StatusMahasiswaAssesmentId?: boolean
    NamaStatus?: boolean
    Icon?: boolean
    Urutan?: boolean
    Keterangan?: boolean
  }, ExtArgs["result"]["statusMahasiswaAssesment"]>

  export type StatusMahasiswaAssesmentSelectScalar = {
    StatusMahasiswaAssesmentId?: boolean
    NamaStatus?: boolean
    Icon?: boolean
    Urutan?: boolean
    Keterangan?: boolean
  }

  export type StatusMahasiswaAssesmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"StatusMahasiswaAssesmentId" | "NamaStatus" | "Icon" | "Urutan" | "Keterangan", ExtArgs["result"]["statusMahasiswaAssesment"]>
  export type StatusMahasiswaAssesmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StatusMahasiswaAssesmentHistory?: boolean | StatusMahasiswaAssesment$StatusMahasiswaAssesmentHistoryArgs<ExtArgs>
    _count?: boolean | StatusMahasiswaAssesmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StatusMahasiswaAssesmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type StatusMahasiswaAssesmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $StatusMahasiswaAssesmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StatusMahasiswaAssesment"
    objects: {
      StatusMahasiswaAssesmentHistory: Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      StatusMahasiswaAssesmentId: string
      NamaStatus: string
      Icon: string
      Urutan: number
      Keterangan: string | null
    }, ExtArgs["result"]["statusMahasiswaAssesment"]>
    composites: {}
  }

  type StatusMahasiswaAssesmentGetPayload<S extends boolean | null | undefined | StatusMahasiswaAssesmentDefaultArgs> = $Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload, S>

  type StatusMahasiswaAssesmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StatusMahasiswaAssesmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StatusMahasiswaAssesmentCountAggregateInputType | true
    }

  export interface StatusMahasiswaAssesmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StatusMahasiswaAssesment'], meta: { name: 'StatusMahasiswaAssesment' } }
    /**
     * Find zero or one StatusMahasiswaAssesment that matches the filter.
     * @param {StatusMahasiswaAssesmentFindUniqueArgs} args - Arguments to find a StatusMahasiswaAssesment
     * @example
     * // Get one StatusMahasiswaAssesment
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StatusMahasiswaAssesmentFindUniqueArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentFindUniqueArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StatusMahasiswaAssesment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StatusMahasiswaAssesmentFindUniqueOrThrowArgs} args - Arguments to find a StatusMahasiswaAssesment
     * @example
     * // Get one StatusMahasiswaAssesment
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StatusMahasiswaAssesmentFindUniqueOrThrowArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatusMahasiswaAssesment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentFindFirstArgs} args - Arguments to find a StatusMahasiswaAssesment
     * @example
     * // Get one StatusMahasiswaAssesment
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StatusMahasiswaAssesmentFindFirstArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentFindFirstArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatusMahasiswaAssesment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentFindFirstOrThrowArgs} args - Arguments to find a StatusMahasiswaAssesment
     * @example
     * // Get one StatusMahasiswaAssesment
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StatusMahasiswaAssesmentFindFirstOrThrowArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StatusMahasiswaAssesments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StatusMahasiswaAssesments
     * const statusMahasiswaAssesments = await prisma.statusMahasiswaAssesment.findMany()
     * 
     * // Get first 10 StatusMahasiswaAssesments
     * const statusMahasiswaAssesments = await prisma.statusMahasiswaAssesment.findMany({ take: 10 })
     * 
     * // Only select the `StatusMahasiswaAssesmentId`
     * const statusMahasiswaAssesmentWithStatusMahasiswaAssesmentIdOnly = await prisma.statusMahasiswaAssesment.findMany({ select: { StatusMahasiswaAssesmentId: true } })
     * 
     */
    findMany<T extends StatusMahasiswaAssesmentFindManyArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StatusMahasiswaAssesment.
     * @param {StatusMahasiswaAssesmentCreateArgs} args - Arguments to create a StatusMahasiswaAssesment.
     * @example
     * // Create one StatusMahasiswaAssesment
     * const StatusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.create({
     *   data: {
     *     // ... data to create a StatusMahasiswaAssesment
     *   }
     * })
     * 
     */
    create<T extends StatusMahasiswaAssesmentCreateArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentCreateArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StatusMahasiswaAssesments.
     * @param {StatusMahasiswaAssesmentCreateManyArgs} args - Arguments to create many StatusMahasiswaAssesments.
     * @example
     * // Create many StatusMahasiswaAssesments
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StatusMahasiswaAssesmentCreateManyArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StatusMahasiswaAssesments and returns the data saved in the database.
     * @param {StatusMahasiswaAssesmentCreateManyAndReturnArgs} args - Arguments to create many StatusMahasiswaAssesments.
     * @example
     * // Create many StatusMahasiswaAssesments
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StatusMahasiswaAssesments and only return the `StatusMahasiswaAssesmentId`
     * const statusMahasiswaAssesmentWithStatusMahasiswaAssesmentIdOnly = await prisma.statusMahasiswaAssesment.createManyAndReturn({
     *   select: { StatusMahasiswaAssesmentId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StatusMahasiswaAssesmentCreateManyAndReturnArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StatusMahasiswaAssesment.
     * @param {StatusMahasiswaAssesmentDeleteArgs} args - Arguments to delete one StatusMahasiswaAssesment.
     * @example
     * // Delete one StatusMahasiswaAssesment
     * const StatusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.delete({
     *   where: {
     *     // ... filter to delete one StatusMahasiswaAssesment
     *   }
     * })
     * 
     */
    delete<T extends StatusMahasiswaAssesmentDeleteArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentDeleteArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StatusMahasiswaAssesment.
     * @param {StatusMahasiswaAssesmentUpdateArgs} args - Arguments to update one StatusMahasiswaAssesment.
     * @example
     * // Update one StatusMahasiswaAssesment
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StatusMahasiswaAssesmentUpdateArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentUpdateArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StatusMahasiswaAssesments.
     * @param {StatusMahasiswaAssesmentDeleteManyArgs} args - Arguments to filter StatusMahasiswaAssesments to delete.
     * @example
     * // Delete a few StatusMahasiswaAssesments
     * const { count } = await prisma.statusMahasiswaAssesment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StatusMahasiswaAssesmentDeleteManyArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StatusMahasiswaAssesments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StatusMahasiswaAssesments
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StatusMahasiswaAssesmentUpdateManyArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StatusMahasiswaAssesments and returns the data updated in the database.
     * @param {StatusMahasiswaAssesmentUpdateManyAndReturnArgs} args - Arguments to update many StatusMahasiswaAssesments.
     * @example
     * // Update many StatusMahasiswaAssesments
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StatusMahasiswaAssesments and only return the `StatusMahasiswaAssesmentId`
     * const statusMahasiswaAssesmentWithStatusMahasiswaAssesmentIdOnly = await prisma.statusMahasiswaAssesment.updateManyAndReturn({
     *   select: { StatusMahasiswaAssesmentId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StatusMahasiswaAssesmentUpdateManyAndReturnArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StatusMahasiswaAssesment.
     * @param {StatusMahasiswaAssesmentUpsertArgs} args - Arguments to update or create a StatusMahasiswaAssesment.
     * @example
     * // Update or create a StatusMahasiswaAssesment
     * const statusMahasiswaAssesment = await prisma.statusMahasiswaAssesment.upsert({
     *   create: {
     *     // ... data to create a StatusMahasiswaAssesment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StatusMahasiswaAssesment we want to update
     *   }
     * })
     */
    upsert<T extends StatusMahasiswaAssesmentUpsertArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentUpsertArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StatusMahasiswaAssesments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentCountArgs} args - Arguments to filter StatusMahasiswaAssesments to count.
     * @example
     * // Count the number of StatusMahasiswaAssesments
     * const count = await prisma.statusMahasiswaAssesment.count({
     *   where: {
     *     // ... the filter for the StatusMahasiswaAssesments we want to count
     *   }
     * })
    **/
    count<T extends StatusMahasiswaAssesmentCountArgs>(
      args?: Subset<T, StatusMahasiswaAssesmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StatusMahasiswaAssesmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StatusMahasiswaAssesment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StatusMahasiswaAssesmentAggregateArgs>(args: Subset<T, StatusMahasiswaAssesmentAggregateArgs>): Prisma.PrismaPromise<GetStatusMahasiswaAssesmentAggregateType<T>>

    /**
     * Group by StatusMahasiswaAssesment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StatusMahasiswaAssesmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StatusMahasiswaAssesmentGroupByArgs['orderBy'] }
        : { orderBy?: StatusMahasiswaAssesmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StatusMahasiswaAssesmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStatusMahasiswaAssesmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StatusMahasiswaAssesment model
   */
  readonly fields: StatusMahasiswaAssesmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StatusMahasiswaAssesment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StatusMahasiswaAssesmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    StatusMahasiswaAssesmentHistory<T extends StatusMahasiswaAssesment$StatusMahasiswaAssesmentHistoryArgs<ExtArgs> = {}>(args?: Subset<T, StatusMahasiswaAssesment$StatusMahasiswaAssesmentHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StatusMahasiswaAssesment model
   */
  interface StatusMahasiswaAssesmentFieldRefs {
    readonly StatusMahasiswaAssesmentId: FieldRef<"StatusMahasiswaAssesment", 'String'>
    readonly NamaStatus: FieldRef<"StatusMahasiswaAssesment", 'String'>
    readonly Icon: FieldRef<"StatusMahasiswaAssesment", 'String'>
    readonly Urutan: FieldRef<"StatusMahasiswaAssesment", 'Int'>
    readonly Keterangan: FieldRef<"StatusMahasiswaAssesment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StatusMahasiswaAssesment findUnique
   */
  export type StatusMahasiswaAssesmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesment to fetch.
     */
    where: StatusMahasiswaAssesmentWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesment findUniqueOrThrow
   */
  export type StatusMahasiswaAssesmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesment to fetch.
     */
    where: StatusMahasiswaAssesmentWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesment findFirst
   */
  export type StatusMahasiswaAssesmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesment to fetch.
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesments to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentOrderByWithRelationInput | StatusMahasiswaAssesmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatusMahasiswaAssesments.
     */
    cursor?: StatusMahasiswaAssesmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatusMahasiswaAssesments.
     */
    distinct?: StatusMahasiswaAssesmentScalarFieldEnum | StatusMahasiswaAssesmentScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesment findFirstOrThrow
   */
  export type StatusMahasiswaAssesmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesment to fetch.
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesments to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentOrderByWithRelationInput | StatusMahasiswaAssesmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatusMahasiswaAssesments.
     */
    cursor?: StatusMahasiswaAssesmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatusMahasiswaAssesments.
     */
    distinct?: StatusMahasiswaAssesmentScalarFieldEnum | StatusMahasiswaAssesmentScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesment findMany
   */
  export type StatusMahasiswaAssesmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesments to fetch.
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesments to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentOrderByWithRelationInput | StatusMahasiswaAssesmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StatusMahasiswaAssesments.
     */
    cursor?: StatusMahasiswaAssesmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesments.
     */
    skip?: number
    distinct?: StatusMahasiswaAssesmentScalarFieldEnum | StatusMahasiswaAssesmentScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesment create
   */
  export type StatusMahasiswaAssesmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * The data needed to create a StatusMahasiswaAssesment.
     */
    data: XOR<StatusMahasiswaAssesmentCreateInput, StatusMahasiswaAssesmentUncheckedCreateInput>
  }

  /**
   * StatusMahasiswaAssesment createMany
   */
  export type StatusMahasiswaAssesmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StatusMahasiswaAssesments.
     */
    data: StatusMahasiswaAssesmentCreateManyInput | StatusMahasiswaAssesmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StatusMahasiswaAssesment createManyAndReturn
   */
  export type StatusMahasiswaAssesmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * The data used to create many StatusMahasiswaAssesments.
     */
    data: StatusMahasiswaAssesmentCreateManyInput | StatusMahasiswaAssesmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StatusMahasiswaAssesment update
   */
  export type StatusMahasiswaAssesmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * The data needed to update a StatusMahasiswaAssesment.
     */
    data: XOR<StatusMahasiswaAssesmentUpdateInput, StatusMahasiswaAssesmentUncheckedUpdateInput>
    /**
     * Choose, which StatusMahasiswaAssesment to update.
     */
    where: StatusMahasiswaAssesmentWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesment updateMany
   */
  export type StatusMahasiswaAssesmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StatusMahasiswaAssesments.
     */
    data: XOR<StatusMahasiswaAssesmentUpdateManyMutationInput, StatusMahasiswaAssesmentUncheckedUpdateManyInput>
    /**
     * Filter which StatusMahasiswaAssesments to update
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * Limit how many StatusMahasiswaAssesments to update.
     */
    limit?: number
  }

  /**
   * StatusMahasiswaAssesment updateManyAndReturn
   */
  export type StatusMahasiswaAssesmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * The data used to update StatusMahasiswaAssesments.
     */
    data: XOR<StatusMahasiswaAssesmentUpdateManyMutationInput, StatusMahasiswaAssesmentUncheckedUpdateManyInput>
    /**
     * Filter which StatusMahasiswaAssesments to update
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * Limit how many StatusMahasiswaAssesments to update.
     */
    limit?: number
  }

  /**
   * StatusMahasiswaAssesment upsert
   */
  export type StatusMahasiswaAssesmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * The filter to search for the StatusMahasiswaAssesment to update in case it exists.
     */
    where: StatusMahasiswaAssesmentWhereUniqueInput
    /**
     * In case the StatusMahasiswaAssesment found by the `where` argument doesn't exist, create a new StatusMahasiswaAssesment with this data.
     */
    create: XOR<StatusMahasiswaAssesmentCreateInput, StatusMahasiswaAssesmentUncheckedCreateInput>
    /**
     * In case the StatusMahasiswaAssesment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StatusMahasiswaAssesmentUpdateInput, StatusMahasiswaAssesmentUncheckedUpdateInput>
  }

  /**
   * StatusMahasiswaAssesment delete
   */
  export type StatusMahasiswaAssesmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
    /**
     * Filter which StatusMahasiswaAssesment to delete.
     */
    where: StatusMahasiswaAssesmentWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesment deleteMany
   */
  export type StatusMahasiswaAssesmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatusMahasiswaAssesments to delete
     */
    where?: StatusMahasiswaAssesmentWhereInput
    /**
     * Limit how many StatusMahasiswaAssesments to delete.
     */
    limit?: number
  }

  /**
   * StatusMahasiswaAssesment.StatusMahasiswaAssesmentHistory
   */
  export type StatusMahasiswaAssesment$StatusMahasiswaAssesmentHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    orderBy?: StatusMahasiswaAssesmentHistoryOrderByWithRelationInput | StatusMahasiswaAssesmentHistoryOrderByWithRelationInput[]
    cursor?: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StatusMahasiswaAssesmentHistoryScalarFieldEnum | StatusMahasiswaAssesmentHistoryScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesment without action
   */
  export type StatusMahasiswaAssesmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesment
     */
    select?: StatusMahasiswaAssesmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesment
     */
    omit?: StatusMahasiswaAssesmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentInclude<ExtArgs> | null
  }


  /**
   * Model StatusMahasiswaAssesmentHistory
   */

  export type AggregateStatusMahasiswaAssesmentHistory = {
    _count: StatusMahasiswaAssesmentHistoryCountAggregateOutputType | null
    _min: StatusMahasiswaAssesmentHistoryMinAggregateOutputType | null
    _max: StatusMahasiswaAssesmentHistoryMaxAggregateOutputType | null
  }

  export type StatusMahasiswaAssesmentHistoryMinAggregateOutputType = {
    StatusMahasiswaAssesmentHistoryId: string | null
    StatusMahasiswaAssesmentId: string | null
    DaftarUlangId: string | null
    Tanggal: Date | null
    Keterangan: string | null
  }

  export type StatusMahasiswaAssesmentHistoryMaxAggregateOutputType = {
    StatusMahasiswaAssesmentHistoryId: string | null
    StatusMahasiswaAssesmentId: string | null
    DaftarUlangId: string | null
    Tanggal: Date | null
    Keterangan: string | null
  }

  export type StatusMahasiswaAssesmentHistoryCountAggregateOutputType = {
    StatusMahasiswaAssesmentHistoryId: number
    StatusMahasiswaAssesmentId: number
    DaftarUlangId: number
    Tanggal: number
    Keterangan: number
    _all: number
  }


  export type StatusMahasiswaAssesmentHistoryMinAggregateInputType = {
    StatusMahasiswaAssesmentHistoryId?: true
    StatusMahasiswaAssesmentId?: true
    DaftarUlangId?: true
    Tanggal?: true
    Keterangan?: true
  }

  export type StatusMahasiswaAssesmentHistoryMaxAggregateInputType = {
    StatusMahasiswaAssesmentHistoryId?: true
    StatusMahasiswaAssesmentId?: true
    DaftarUlangId?: true
    Tanggal?: true
    Keterangan?: true
  }

  export type StatusMahasiswaAssesmentHistoryCountAggregateInputType = {
    StatusMahasiswaAssesmentHistoryId?: true
    StatusMahasiswaAssesmentId?: true
    DaftarUlangId?: true
    Tanggal?: true
    Keterangan?: true
    _all?: true
  }

  export type StatusMahasiswaAssesmentHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatusMahasiswaAssesmentHistory to aggregate.
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesmentHistories to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentHistoryOrderByWithRelationInput | StatusMahasiswaAssesmentHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesmentHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesmentHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StatusMahasiswaAssesmentHistories
    **/
    _count?: true | StatusMahasiswaAssesmentHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StatusMahasiswaAssesmentHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StatusMahasiswaAssesmentHistoryMaxAggregateInputType
  }

  export type GetStatusMahasiswaAssesmentHistoryAggregateType<T extends StatusMahasiswaAssesmentHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateStatusMahasiswaAssesmentHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStatusMahasiswaAssesmentHistory[P]>
      : GetScalarType<T[P], AggregateStatusMahasiswaAssesmentHistory[P]>
  }




  export type StatusMahasiswaAssesmentHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    orderBy?: StatusMahasiswaAssesmentHistoryOrderByWithAggregationInput | StatusMahasiswaAssesmentHistoryOrderByWithAggregationInput[]
    by: StatusMahasiswaAssesmentHistoryScalarFieldEnum[] | StatusMahasiswaAssesmentHistoryScalarFieldEnum
    having?: StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StatusMahasiswaAssesmentHistoryCountAggregateInputType | true
    _min?: StatusMahasiswaAssesmentHistoryMinAggregateInputType
    _max?: StatusMahasiswaAssesmentHistoryMaxAggregateInputType
  }

  export type StatusMahasiswaAssesmentHistoryGroupByOutputType = {
    StatusMahasiswaAssesmentHistoryId: string
    StatusMahasiswaAssesmentId: string
    DaftarUlangId: string
    Tanggal: Date | null
    Keterangan: string | null
    _count: StatusMahasiswaAssesmentHistoryCountAggregateOutputType | null
    _min: StatusMahasiswaAssesmentHistoryMinAggregateOutputType | null
    _max: StatusMahasiswaAssesmentHistoryMaxAggregateOutputType | null
  }

  type GetStatusMahasiswaAssesmentHistoryGroupByPayload<T extends StatusMahasiswaAssesmentHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StatusMahasiswaAssesmentHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StatusMahasiswaAssesmentHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StatusMahasiswaAssesmentHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], StatusMahasiswaAssesmentHistoryGroupByOutputType[P]>
        }
      >
    >


  export type StatusMahasiswaAssesmentHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    StatusMahasiswaAssesmentHistoryId?: boolean
    StatusMahasiswaAssesmentId?: boolean
    DaftarUlangId?: boolean
    Tanggal?: boolean
    Keterangan?: boolean
    StatusMahasiswaAssesment?: boolean | StatusMahasiswaAssesmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["statusMahasiswaAssesmentHistory"]>

  export type StatusMahasiswaAssesmentHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    StatusMahasiswaAssesmentHistoryId?: boolean
    StatusMahasiswaAssesmentId?: boolean
    DaftarUlangId?: boolean
    Tanggal?: boolean
    Keterangan?: boolean
    StatusMahasiswaAssesment?: boolean | StatusMahasiswaAssesmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["statusMahasiswaAssesmentHistory"]>

  export type StatusMahasiswaAssesmentHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    StatusMahasiswaAssesmentHistoryId?: boolean
    StatusMahasiswaAssesmentId?: boolean
    DaftarUlangId?: boolean
    Tanggal?: boolean
    Keterangan?: boolean
    StatusMahasiswaAssesment?: boolean | StatusMahasiswaAssesmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["statusMahasiswaAssesmentHistory"]>

  export type StatusMahasiswaAssesmentHistorySelectScalar = {
    StatusMahasiswaAssesmentHistoryId?: boolean
    StatusMahasiswaAssesmentId?: boolean
    DaftarUlangId?: boolean
    Tanggal?: boolean
    Keterangan?: boolean
  }

  export type StatusMahasiswaAssesmentHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"StatusMahasiswaAssesmentHistoryId" | "StatusMahasiswaAssesmentId" | "DaftarUlangId" | "Tanggal" | "Keterangan", ExtArgs["result"]["statusMahasiswaAssesmentHistory"]>
  export type StatusMahasiswaAssesmentHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StatusMahasiswaAssesment?: boolean | StatusMahasiswaAssesmentDefaultArgs<ExtArgs>
  }
  export type StatusMahasiswaAssesmentHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StatusMahasiswaAssesment?: boolean | StatusMahasiswaAssesmentDefaultArgs<ExtArgs>
  }
  export type StatusMahasiswaAssesmentHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    StatusMahasiswaAssesment?: boolean | StatusMahasiswaAssesmentDefaultArgs<ExtArgs>
  }

  export type $StatusMahasiswaAssesmentHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StatusMahasiswaAssesmentHistory"
    objects: {
      StatusMahasiswaAssesment: Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      StatusMahasiswaAssesmentHistoryId: string
      StatusMahasiswaAssesmentId: string
      DaftarUlangId: string
      Tanggal: Date | null
      Keterangan: string | null
    }, ExtArgs["result"]["statusMahasiswaAssesmentHistory"]>
    composites: {}
  }

  type StatusMahasiswaAssesmentHistoryGetPayload<S extends boolean | null | undefined | StatusMahasiswaAssesmentHistoryDefaultArgs> = $Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload, S>

  type StatusMahasiswaAssesmentHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StatusMahasiswaAssesmentHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StatusMahasiswaAssesmentHistoryCountAggregateInputType | true
    }

  export interface StatusMahasiswaAssesmentHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StatusMahasiswaAssesmentHistory'], meta: { name: 'StatusMahasiswaAssesmentHistory' } }
    /**
     * Find zero or one StatusMahasiswaAssesmentHistory that matches the filter.
     * @param {StatusMahasiswaAssesmentHistoryFindUniqueArgs} args - Arguments to find a StatusMahasiswaAssesmentHistory
     * @example
     * // Get one StatusMahasiswaAssesmentHistory
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StatusMahasiswaAssesmentHistoryFindUniqueArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryFindUniqueArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StatusMahasiswaAssesmentHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StatusMahasiswaAssesmentHistoryFindUniqueOrThrowArgs} args - Arguments to find a StatusMahasiswaAssesmentHistory
     * @example
     * // Get one StatusMahasiswaAssesmentHistory
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StatusMahasiswaAssesmentHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatusMahasiswaAssesmentHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryFindFirstArgs} args - Arguments to find a StatusMahasiswaAssesmentHistory
     * @example
     * // Get one StatusMahasiswaAssesmentHistory
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StatusMahasiswaAssesmentHistoryFindFirstArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentHistoryFindFirstArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StatusMahasiswaAssesmentHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryFindFirstOrThrowArgs} args - Arguments to find a StatusMahasiswaAssesmentHistory
     * @example
     * // Get one StatusMahasiswaAssesmentHistory
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StatusMahasiswaAssesmentHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StatusMahasiswaAssesmentHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StatusMahasiswaAssesmentHistories
     * const statusMahasiswaAssesmentHistories = await prisma.statusMahasiswaAssesmentHistory.findMany()
     * 
     * // Get first 10 StatusMahasiswaAssesmentHistories
     * const statusMahasiswaAssesmentHistories = await prisma.statusMahasiswaAssesmentHistory.findMany({ take: 10 })
     * 
     * // Only select the `StatusMahasiswaAssesmentHistoryId`
     * const statusMahasiswaAssesmentHistoryWithStatusMahasiswaAssesmentHistoryIdOnly = await prisma.statusMahasiswaAssesmentHistory.findMany({ select: { StatusMahasiswaAssesmentHistoryId: true } })
     * 
     */
    findMany<T extends StatusMahasiswaAssesmentHistoryFindManyArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StatusMahasiswaAssesmentHistory.
     * @param {StatusMahasiswaAssesmentHistoryCreateArgs} args - Arguments to create a StatusMahasiswaAssesmentHistory.
     * @example
     * // Create one StatusMahasiswaAssesmentHistory
     * const StatusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.create({
     *   data: {
     *     // ... data to create a StatusMahasiswaAssesmentHistory
     *   }
     * })
     * 
     */
    create<T extends StatusMahasiswaAssesmentHistoryCreateArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryCreateArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StatusMahasiswaAssesmentHistories.
     * @param {StatusMahasiswaAssesmentHistoryCreateManyArgs} args - Arguments to create many StatusMahasiswaAssesmentHistories.
     * @example
     * // Create many StatusMahasiswaAssesmentHistories
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StatusMahasiswaAssesmentHistoryCreateManyArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StatusMahasiswaAssesmentHistories and returns the data saved in the database.
     * @param {StatusMahasiswaAssesmentHistoryCreateManyAndReturnArgs} args - Arguments to create many StatusMahasiswaAssesmentHistories.
     * @example
     * // Create many StatusMahasiswaAssesmentHistories
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StatusMahasiswaAssesmentHistories and only return the `StatusMahasiswaAssesmentHistoryId`
     * const statusMahasiswaAssesmentHistoryWithStatusMahasiswaAssesmentHistoryIdOnly = await prisma.statusMahasiswaAssesmentHistory.createManyAndReturn({
     *   select: { StatusMahasiswaAssesmentHistoryId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StatusMahasiswaAssesmentHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StatusMahasiswaAssesmentHistory.
     * @param {StatusMahasiswaAssesmentHistoryDeleteArgs} args - Arguments to delete one StatusMahasiswaAssesmentHistory.
     * @example
     * // Delete one StatusMahasiswaAssesmentHistory
     * const StatusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.delete({
     *   where: {
     *     // ... filter to delete one StatusMahasiswaAssesmentHistory
     *   }
     * })
     * 
     */
    delete<T extends StatusMahasiswaAssesmentHistoryDeleteArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryDeleteArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StatusMahasiswaAssesmentHistory.
     * @param {StatusMahasiswaAssesmentHistoryUpdateArgs} args - Arguments to update one StatusMahasiswaAssesmentHistory.
     * @example
     * // Update one StatusMahasiswaAssesmentHistory
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StatusMahasiswaAssesmentHistoryUpdateArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryUpdateArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StatusMahasiswaAssesmentHistories.
     * @param {StatusMahasiswaAssesmentHistoryDeleteManyArgs} args - Arguments to filter StatusMahasiswaAssesmentHistories to delete.
     * @example
     * // Delete a few StatusMahasiswaAssesmentHistories
     * const { count } = await prisma.statusMahasiswaAssesmentHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StatusMahasiswaAssesmentHistoryDeleteManyArgs>(args?: SelectSubset<T, StatusMahasiswaAssesmentHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StatusMahasiswaAssesmentHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StatusMahasiswaAssesmentHistories
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StatusMahasiswaAssesmentHistoryUpdateManyArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StatusMahasiswaAssesmentHistories and returns the data updated in the database.
     * @param {StatusMahasiswaAssesmentHistoryUpdateManyAndReturnArgs} args - Arguments to update many StatusMahasiswaAssesmentHistories.
     * @example
     * // Update many StatusMahasiswaAssesmentHistories
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StatusMahasiswaAssesmentHistories and only return the `StatusMahasiswaAssesmentHistoryId`
     * const statusMahasiswaAssesmentHistoryWithStatusMahasiswaAssesmentHistoryIdOnly = await prisma.statusMahasiswaAssesmentHistory.updateManyAndReturn({
     *   select: { StatusMahasiswaAssesmentHistoryId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StatusMahasiswaAssesmentHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StatusMahasiswaAssesmentHistory.
     * @param {StatusMahasiswaAssesmentHistoryUpsertArgs} args - Arguments to update or create a StatusMahasiswaAssesmentHistory.
     * @example
     * // Update or create a StatusMahasiswaAssesmentHistory
     * const statusMahasiswaAssesmentHistory = await prisma.statusMahasiswaAssesmentHistory.upsert({
     *   create: {
     *     // ... data to create a StatusMahasiswaAssesmentHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StatusMahasiswaAssesmentHistory we want to update
     *   }
     * })
     */
    upsert<T extends StatusMahasiswaAssesmentHistoryUpsertArgs>(args: SelectSubset<T, StatusMahasiswaAssesmentHistoryUpsertArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentHistoryClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StatusMahasiswaAssesmentHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryCountArgs} args - Arguments to filter StatusMahasiswaAssesmentHistories to count.
     * @example
     * // Count the number of StatusMahasiswaAssesmentHistories
     * const count = await prisma.statusMahasiswaAssesmentHistory.count({
     *   where: {
     *     // ... the filter for the StatusMahasiswaAssesmentHistories we want to count
     *   }
     * })
    **/
    count<T extends StatusMahasiswaAssesmentHistoryCountArgs>(
      args?: Subset<T, StatusMahasiswaAssesmentHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StatusMahasiswaAssesmentHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StatusMahasiswaAssesmentHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StatusMahasiswaAssesmentHistoryAggregateArgs>(args: Subset<T, StatusMahasiswaAssesmentHistoryAggregateArgs>): Prisma.PrismaPromise<GetStatusMahasiswaAssesmentHistoryAggregateType<T>>

    /**
     * Group by StatusMahasiswaAssesmentHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StatusMahasiswaAssesmentHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StatusMahasiswaAssesmentHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StatusMahasiswaAssesmentHistoryGroupByArgs['orderBy'] }
        : { orderBy?: StatusMahasiswaAssesmentHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StatusMahasiswaAssesmentHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStatusMahasiswaAssesmentHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StatusMahasiswaAssesmentHistory model
   */
  readonly fields: StatusMahasiswaAssesmentHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StatusMahasiswaAssesmentHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StatusMahasiswaAssesmentHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    StatusMahasiswaAssesment<T extends StatusMahasiswaAssesmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StatusMahasiswaAssesmentDefaultArgs<ExtArgs>>): Prisma__StatusMahasiswaAssesmentClient<$Result.GetResult<Prisma.$StatusMahasiswaAssesmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StatusMahasiswaAssesmentHistory model
   */
  interface StatusMahasiswaAssesmentHistoryFieldRefs {
    readonly StatusMahasiswaAssesmentHistoryId: FieldRef<"StatusMahasiswaAssesmentHistory", 'String'>
    readonly StatusMahasiswaAssesmentId: FieldRef<"StatusMahasiswaAssesmentHistory", 'String'>
    readonly DaftarUlangId: FieldRef<"StatusMahasiswaAssesmentHistory", 'String'>
    readonly Tanggal: FieldRef<"StatusMahasiswaAssesmentHistory", 'DateTime'>
    readonly Keterangan: FieldRef<"StatusMahasiswaAssesmentHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StatusMahasiswaAssesmentHistory findUnique
   */
  export type StatusMahasiswaAssesmentHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesmentHistory to fetch.
     */
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesmentHistory findUniqueOrThrow
   */
  export type StatusMahasiswaAssesmentHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesmentHistory to fetch.
     */
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesmentHistory findFirst
   */
  export type StatusMahasiswaAssesmentHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesmentHistory to fetch.
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesmentHistories to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentHistoryOrderByWithRelationInput | StatusMahasiswaAssesmentHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatusMahasiswaAssesmentHistories.
     */
    cursor?: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesmentHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesmentHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatusMahasiswaAssesmentHistories.
     */
    distinct?: StatusMahasiswaAssesmentHistoryScalarFieldEnum | StatusMahasiswaAssesmentHistoryScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesmentHistory findFirstOrThrow
   */
  export type StatusMahasiswaAssesmentHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesmentHistory to fetch.
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesmentHistories to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentHistoryOrderByWithRelationInput | StatusMahasiswaAssesmentHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StatusMahasiswaAssesmentHistories.
     */
    cursor?: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesmentHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesmentHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StatusMahasiswaAssesmentHistories.
     */
    distinct?: StatusMahasiswaAssesmentHistoryScalarFieldEnum | StatusMahasiswaAssesmentHistoryScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesmentHistory findMany
   */
  export type StatusMahasiswaAssesmentHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * Filter, which StatusMahasiswaAssesmentHistories to fetch.
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StatusMahasiswaAssesmentHistories to fetch.
     */
    orderBy?: StatusMahasiswaAssesmentHistoryOrderByWithRelationInput | StatusMahasiswaAssesmentHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StatusMahasiswaAssesmentHistories.
     */
    cursor?: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StatusMahasiswaAssesmentHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StatusMahasiswaAssesmentHistories.
     */
    skip?: number
    distinct?: StatusMahasiswaAssesmentHistoryScalarFieldEnum | StatusMahasiswaAssesmentHistoryScalarFieldEnum[]
  }

  /**
   * StatusMahasiswaAssesmentHistory create
   */
  export type StatusMahasiswaAssesmentHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a StatusMahasiswaAssesmentHistory.
     */
    data: XOR<StatusMahasiswaAssesmentHistoryCreateInput, StatusMahasiswaAssesmentHistoryUncheckedCreateInput>
  }

  /**
   * StatusMahasiswaAssesmentHistory createMany
   */
  export type StatusMahasiswaAssesmentHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StatusMahasiswaAssesmentHistories.
     */
    data: StatusMahasiswaAssesmentHistoryCreateManyInput | StatusMahasiswaAssesmentHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StatusMahasiswaAssesmentHistory createManyAndReturn
   */
  export type StatusMahasiswaAssesmentHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many StatusMahasiswaAssesmentHistories.
     */
    data: StatusMahasiswaAssesmentHistoryCreateManyInput | StatusMahasiswaAssesmentHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StatusMahasiswaAssesmentHistory update
   */
  export type StatusMahasiswaAssesmentHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a StatusMahasiswaAssesmentHistory.
     */
    data: XOR<StatusMahasiswaAssesmentHistoryUpdateInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateInput>
    /**
     * Choose, which StatusMahasiswaAssesmentHistory to update.
     */
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesmentHistory updateMany
   */
  export type StatusMahasiswaAssesmentHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StatusMahasiswaAssesmentHistories.
     */
    data: XOR<StatusMahasiswaAssesmentHistoryUpdateManyMutationInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateManyInput>
    /**
     * Filter which StatusMahasiswaAssesmentHistories to update
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * Limit how many StatusMahasiswaAssesmentHistories to update.
     */
    limit?: number
  }

  /**
   * StatusMahasiswaAssesmentHistory updateManyAndReturn
   */
  export type StatusMahasiswaAssesmentHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * The data used to update StatusMahasiswaAssesmentHistories.
     */
    data: XOR<StatusMahasiswaAssesmentHistoryUpdateManyMutationInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateManyInput>
    /**
     * Filter which StatusMahasiswaAssesmentHistories to update
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * Limit how many StatusMahasiswaAssesmentHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * StatusMahasiswaAssesmentHistory upsert
   */
  export type StatusMahasiswaAssesmentHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the StatusMahasiswaAssesmentHistory to update in case it exists.
     */
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    /**
     * In case the StatusMahasiswaAssesmentHistory found by the `where` argument doesn't exist, create a new StatusMahasiswaAssesmentHistory with this data.
     */
    create: XOR<StatusMahasiswaAssesmentHistoryCreateInput, StatusMahasiswaAssesmentHistoryUncheckedCreateInput>
    /**
     * In case the StatusMahasiswaAssesmentHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StatusMahasiswaAssesmentHistoryUpdateInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateInput>
  }

  /**
   * StatusMahasiswaAssesmentHistory delete
   */
  export type StatusMahasiswaAssesmentHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
    /**
     * Filter which StatusMahasiswaAssesmentHistory to delete.
     */
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
  }

  /**
   * StatusMahasiswaAssesmentHistory deleteMany
   */
  export type StatusMahasiswaAssesmentHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StatusMahasiswaAssesmentHistories to delete
     */
    where?: StatusMahasiswaAssesmentHistoryWhereInput
    /**
     * Limit how many StatusMahasiswaAssesmentHistories to delete.
     */
    limit?: number
  }

  /**
   * StatusMahasiswaAssesmentHistory without action
   */
  export type StatusMahasiswaAssesmentHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StatusMahasiswaAssesmentHistory
     */
    select?: StatusMahasiswaAssesmentHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the StatusMahasiswaAssesmentHistory
     */
    omit?: StatusMahasiswaAssesmentHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StatusMahasiswaAssesmentHistoryInclude<ExtArgs> | null
  }


  /**
   * Model TipeAsesor
   */

  export type AggregateTipeAsesor = {
    _count: TipeAsesorCountAggregateOutputType | null
    _min: TipeAsesorMinAggregateOutputType | null
    _max: TipeAsesorMaxAggregateOutputType | null
  }

  export type TipeAsesorMinAggregateOutputType = {
    TipeAsesorId: string | null
    Nama: string | null
    Icon: string | null
    Deskripsi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type TipeAsesorMaxAggregateOutputType = {
    TipeAsesorId: string | null
    Nama: string | null
    Icon: string | null
    Deskripsi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type TipeAsesorCountAggregateOutputType = {
    TipeAsesorId: number
    Nama: number
    Icon: number
    Deskripsi: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type TipeAsesorMinAggregateInputType = {
    TipeAsesorId?: true
    Nama?: true
    Icon?: true
    Deskripsi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type TipeAsesorMaxAggregateInputType = {
    TipeAsesorId?: true
    Nama?: true
    Icon?: true
    Deskripsi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type TipeAsesorCountAggregateInputType = {
    TipeAsesorId?: true
    Nama?: true
    Icon?: true
    Deskripsi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type TipeAsesorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipeAsesor to aggregate.
     */
    where?: TipeAsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipeAsesors to fetch.
     */
    orderBy?: TipeAsesorOrderByWithRelationInput | TipeAsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TipeAsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipeAsesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipeAsesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TipeAsesors
    **/
    _count?: true | TipeAsesorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TipeAsesorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TipeAsesorMaxAggregateInputType
  }

  export type GetTipeAsesorAggregateType<T extends TipeAsesorAggregateArgs> = {
        [P in keyof T & keyof AggregateTipeAsesor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipeAsesor[P]>
      : GetScalarType<T[P], AggregateTipeAsesor[P]>
  }




  export type TipeAsesorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TipeAsesorWhereInput
    orderBy?: TipeAsesorOrderByWithAggregationInput | TipeAsesorOrderByWithAggregationInput[]
    by: TipeAsesorScalarFieldEnum[] | TipeAsesorScalarFieldEnum
    having?: TipeAsesorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TipeAsesorCountAggregateInputType | true
    _min?: TipeAsesorMinAggregateInputType
    _max?: TipeAsesorMaxAggregateInputType
  }

  export type TipeAsesorGroupByOutputType = {
    TipeAsesorId: string
    Nama: string
    Icon: string | null
    Deskripsi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: TipeAsesorCountAggregateOutputType | null
    _min: TipeAsesorMinAggregateOutputType | null
    _max: TipeAsesorMaxAggregateOutputType | null
  }

  type GetTipeAsesorGroupByPayload<T extends TipeAsesorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TipeAsesorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TipeAsesorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TipeAsesorGroupByOutputType[P]>
            : GetScalarType<T[P], TipeAsesorGroupByOutputType[P]>
        }
      >
    >


  export type TipeAsesorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    TipeAsesorId?: boolean
    Nama?: boolean
    Icon?: boolean
    Deskripsi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Asesor?: boolean | TipeAsesor$AsesorArgs<ExtArgs>
    _count?: boolean | TipeAsesorCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipeAsesor"]>

  export type TipeAsesorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    TipeAsesorId?: boolean
    Nama?: boolean
    Icon?: boolean
    Deskripsi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }, ExtArgs["result"]["tipeAsesor"]>

  export type TipeAsesorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    TipeAsesorId?: boolean
    Nama?: boolean
    Icon?: boolean
    Deskripsi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }, ExtArgs["result"]["tipeAsesor"]>

  export type TipeAsesorSelectScalar = {
    TipeAsesorId?: boolean
    Nama?: boolean
    Icon?: boolean
    Deskripsi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type TipeAsesorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"TipeAsesorId" | "Nama" | "Icon" | "Deskripsi" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["tipeAsesor"]>
  export type TipeAsesorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asesor?: boolean | TipeAsesor$AsesorArgs<ExtArgs>
    _count?: boolean | TipeAsesorCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TipeAsesorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type TipeAsesorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TipeAsesorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TipeAsesor"
    objects: {
      Asesor: Prisma.$AsesorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      TipeAsesorId: string
      Nama: string
      Icon: string | null
      Deskripsi: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["tipeAsesor"]>
    composites: {}
  }

  type TipeAsesorGetPayload<S extends boolean | null | undefined | TipeAsesorDefaultArgs> = $Result.GetResult<Prisma.$TipeAsesorPayload, S>

  type TipeAsesorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TipeAsesorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TipeAsesorCountAggregateInputType | true
    }

  export interface TipeAsesorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TipeAsesor'], meta: { name: 'TipeAsesor' } }
    /**
     * Find zero or one TipeAsesor that matches the filter.
     * @param {TipeAsesorFindUniqueArgs} args - Arguments to find a TipeAsesor
     * @example
     * // Get one TipeAsesor
     * const tipeAsesor = await prisma.tipeAsesor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TipeAsesorFindUniqueArgs>(args: SelectSubset<T, TipeAsesorFindUniqueArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TipeAsesor that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TipeAsesorFindUniqueOrThrowArgs} args - Arguments to find a TipeAsesor
     * @example
     * // Get one TipeAsesor
     * const tipeAsesor = await prisma.tipeAsesor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TipeAsesorFindUniqueOrThrowArgs>(args: SelectSubset<T, TipeAsesorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipeAsesor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorFindFirstArgs} args - Arguments to find a TipeAsesor
     * @example
     * // Get one TipeAsesor
     * const tipeAsesor = await prisma.tipeAsesor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TipeAsesorFindFirstArgs>(args?: SelectSubset<T, TipeAsesorFindFirstArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TipeAsesor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorFindFirstOrThrowArgs} args - Arguments to find a TipeAsesor
     * @example
     * // Get one TipeAsesor
     * const tipeAsesor = await prisma.tipeAsesor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TipeAsesorFindFirstOrThrowArgs>(args?: SelectSubset<T, TipeAsesorFindFirstOrThrowArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TipeAsesors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TipeAsesors
     * const tipeAsesors = await prisma.tipeAsesor.findMany()
     * 
     * // Get first 10 TipeAsesors
     * const tipeAsesors = await prisma.tipeAsesor.findMany({ take: 10 })
     * 
     * // Only select the `TipeAsesorId`
     * const tipeAsesorWithTipeAsesorIdOnly = await prisma.tipeAsesor.findMany({ select: { TipeAsesorId: true } })
     * 
     */
    findMany<T extends TipeAsesorFindManyArgs>(args?: SelectSubset<T, TipeAsesorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TipeAsesor.
     * @param {TipeAsesorCreateArgs} args - Arguments to create a TipeAsesor.
     * @example
     * // Create one TipeAsesor
     * const TipeAsesor = await prisma.tipeAsesor.create({
     *   data: {
     *     // ... data to create a TipeAsesor
     *   }
     * })
     * 
     */
    create<T extends TipeAsesorCreateArgs>(args: SelectSubset<T, TipeAsesorCreateArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TipeAsesors.
     * @param {TipeAsesorCreateManyArgs} args - Arguments to create many TipeAsesors.
     * @example
     * // Create many TipeAsesors
     * const tipeAsesor = await prisma.tipeAsesor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TipeAsesorCreateManyArgs>(args?: SelectSubset<T, TipeAsesorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TipeAsesors and returns the data saved in the database.
     * @param {TipeAsesorCreateManyAndReturnArgs} args - Arguments to create many TipeAsesors.
     * @example
     * // Create many TipeAsesors
     * const tipeAsesor = await prisma.tipeAsesor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TipeAsesors and only return the `TipeAsesorId`
     * const tipeAsesorWithTipeAsesorIdOnly = await prisma.tipeAsesor.createManyAndReturn({
     *   select: { TipeAsesorId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TipeAsesorCreateManyAndReturnArgs>(args?: SelectSubset<T, TipeAsesorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TipeAsesor.
     * @param {TipeAsesorDeleteArgs} args - Arguments to delete one TipeAsesor.
     * @example
     * // Delete one TipeAsesor
     * const TipeAsesor = await prisma.tipeAsesor.delete({
     *   where: {
     *     // ... filter to delete one TipeAsesor
     *   }
     * })
     * 
     */
    delete<T extends TipeAsesorDeleteArgs>(args: SelectSubset<T, TipeAsesorDeleteArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TipeAsesor.
     * @param {TipeAsesorUpdateArgs} args - Arguments to update one TipeAsesor.
     * @example
     * // Update one TipeAsesor
     * const tipeAsesor = await prisma.tipeAsesor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TipeAsesorUpdateArgs>(args: SelectSubset<T, TipeAsesorUpdateArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TipeAsesors.
     * @param {TipeAsesorDeleteManyArgs} args - Arguments to filter TipeAsesors to delete.
     * @example
     * // Delete a few TipeAsesors
     * const { count } = await prisma.tipeAsesor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TipeAsesorDeleteManyArgs>(args?: SelectSubset<T, TipeAsesorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipeAsesors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TipeAsesors
     * const tipeAsesor = await prisma.tipeAsesor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TipeAsesorUpdateManyArgs>(args: SelectSubset<T, TipeAsesorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TipeAsesors and returns the data updated in the database.
     * @param {TipeAsesorUpdateManyAndReturnArgs} args - Arguments to update many TipeAsesors.
     * @example
     * // Update many TipeAsesors
     * const tipeAsesor = await prisma.tipeAsesor.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TipeAsesors and only return the `TipeAsesorId`
     * const tipeAsesorWithTipeAsesorIdOnly = await prisma.tipeAsesor.updateManyAndReturn({
     *   select: { TipeAsesorId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TipeAsesorUpdateManyAndReturnArgs>(args: SelectSubset<T, TipeAsesorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TipeAsesor.
     * @param {TipeAsesorUpsertArgs} args - Arguments to update or create a TipeAsesor.
     * @example
     * // Update or create a TipeAsesor
     * const tipeAsesor = await prisma.tipeAsesor.upsert({
     *   create: {
     *     // ... data to create a TipeAsesor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TipeAsesor we want to update
     *   }
     * })
     */
    upsert<T extends TipeAsesorUpsertArgs>(args: SelectSubset<T, TipeAsesorUpsertArgs<ExtArgs>>): Prisma__TipeAsesorClient<$Result.GetResult<Prisma.$TipeAsesorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TipeAsesors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorCountArgs} args - Arguments to filter TipeAsesors to count.
     * @example
     * // Count the number of TipeAsesors
     * const count = await prisma.tipeAsesor.count({
     *   where: {
     *     // ... the filter for the TipeAsesors we want to count
     *   }
     * })
    **/
    count<T extends TipeAsesorCountArgs>(
      args?: Subset<T, TipeAsesorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TipeAsesorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TipeAsesor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TipeAsesorAggregateArgs>(args: Subset<T, TipeAsesorAggregateArgs>): Prisma.PrismaPromise<GetTipeAsesorAggregateType<T>>

    /**
     * Group by TipeAsesor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TipeAsesorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TipeAsesorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TipeAsesorGroupByArgs['orderBy'] }
        : { orderBy?: TipeAsesorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TipeAsesorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipeAsesorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TipeAsesor model
   */
  readonly fields: TipeAsesorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TipeAsesor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TipeAsesorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Asesor<T extends TipeAsesor$AsesorArgs<ExtArgs> = {}>(args?: Subset<T, TipeAsesor$AsesorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsesorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TipeAsesor model
   */
  interface TipeAsesorFieldRefs {
    readonly TipeAsesorId: FieldRef<"TipeAsesor", 'String'>
    readonly Nama: FieldRef<"TipeAsesor", 'String'>
    readonly Icon: FieldRef<"TipeAsesor", 'String'>
    readonly Deskripsi: FieldRef<"TipeAsesor", 'String'>
    readonly CreatedAt: FieldRef<"TipeAsesor", 'DateTime'>
    readonly UpdatedAt: FieldRef<"TipeAsesor", 'DateTime'>
    readonly DeletedAt: FieldRef<"TipeAsesor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TipeAsesor findUnique
   */
  export type TipeAsesorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * Filter, which TipeAsesor to fetch.
     */
    where: TipeAsesorWhereUniqueInput
  }

  /**
   * TipeAsesor findUniqueOrThrow
   */
  export type TipeAsesorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * Filter, which TipeAsesor to fetch.
     */
    where: TipeAsesorWhereUniqueInput
  }

  /**
   * TipeAsesor findFirst
   */
  export type TipeAsesorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * Filter, which TipeAsesor to fetch.
     */
    where?: TipeAsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipeAsesors to fetch.
     */
    orderBy?: TipeAsesorOrderByWithRelationInput | TipeAsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipeAsesors.
     */
    cursor?: TipeAsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipeAsesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipeAsesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipeAsesors.
     */
    distinct?: TipeAsesorScalarFieldEnum | TipeAsesorScalarFieldEnum[]
  }

  /**
   * TipeAsesor findFirstOrThrow
   */
  export type TipeAsesorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * Filter, which TipeAsesor to fetch.
     */
    where?: TipeAsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipeAsesors to fetch.
     */
    orderBy?: TipeAsesorOrderByWithRelationInput | TipeAsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TipeAsesors.
     */
    cursor?: TipeAsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipeAsesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipeAsesors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TipeAsesors.
     */
    distinct?: TipeAsesorScalarFieldEnum | TipeAsesorScalarFieldEnum[]
  }

  /**
   * TipeAsesor findMany
   */
  export type TipeAsesorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * Filter, which TipeAsesors to fetch.
     */
    where?: TipeAsesorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TipeAsesors to fetch.
     */
    orderBy?: TipeAsesorOrderByWithRelationInput | TipeAsesorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TipeAsesors.
     */
    cursor?: TipeAsesorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TipeAsesors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TipeAsesors.
     */
    skip?: number
    distinct?: TipeAsesorScalarFieldEnum | TipeAsesorScalarFieldEnum[]
  }

  /**
   * TipeAsesor create
   */
  export type TipeAsesorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * The data needed to create a TipeAsesor.
     */
    data: XOR<TipeAsesorCreateInput, TipeAsesorUncheckedCreateInput>
  }

  /**
   * TipeAsesor createMany
   */
  export type TipeAsesorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TipeAsesors.
     */
    data: TipeAsesorCreateManyInput | TipeAsesorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipeAsesor createManyAndReturn
   */
  export type TipeAsesorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * The data used to create many TipeAsesors.
     */
    data: TipeAsesorCreateManyInput | TipeAsesorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TipeAsesor update
   */
  export type TipeAsesorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * The data needed to update a TipeAsesor.
     */
    data: XOR<TipeAsesorUpdateInput, TipeAsesorUncheckedUpdateInput>
    /**
     * Choose, which TipeAsesor to update.
     */
    where: TipeAsesorWhereUniqueInput
  }

  /**
   * TipeAsesor updateMany
   */
  export type TipeAsesorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TipeAsesors.
     */
    data: XOR<TipeAsesorUpdateManyMutationInput, TipeAsesorUncheckedUpdateManyInput>
    /**
     * Filter which TipeAsesors to update
     */
    where?: TipeAsesorWhereInput
    /**
     * Limit how many TipeAsesors to update.
     */
    limit?: number
  }

  /**
   * TipeAsesor updateManyAndReturn
   */
  export type TipeAsesorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * The data used to update TipeAsesors.
     */
    data: XOR<TipeAsesorUpdateManyMutationInput, TipeAsesorUncheckedUpdateManyInput>
    /**
     * Filter which TipeAsesors to update
     */
    where?: TipeAsesorWhereInput
    /**
     * Limit how many TipeAsesors to update.
     */
    limit?: number
  }

  /**
   * TipeAsesor upsert
   */
  export type TipeAsesorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * The filter to search for the TipeAsesor to update in case it exists.
     */
    where: TipeAsesorWhereUniqueInput
    /**
     * In case the TipeAsesor found by the `where` argument doesn't exist, create a new TipeAsesor with this data.
     */
    create: XOR<TipeAsesorCreateInput, TipeAsesorUncheckedCreateInput>
    /**
     * In case the TipeAsesor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TipeAsesorUpdateInput, TipeAsesorUncheckedUpdateInput>
  }

  /**
   * TipeAsesor delete
   */
  export type TipeAsesorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
    /**
     * Filter which TipeAsesor to delete.
     */
    where: TipeAsesorWhereUniqueInput
  }

  /**
   * TipeAsesor deleteMany
   */
  export type TipeAsesorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TipeAsesors to delete
     */
    where?: TipeAsesorWhereInput
    /**
     * Limit how many TipeAsesors to delete.
     */
    limit?: number
  }

  /**
   * TipeAsesor.Asesor
   */
  export type TipeAsesor$AsesorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asesor
     */
    select?: AsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asesor
     */
    omit?: AsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsesorInclude<ExtArgs> | null
    where?: AsesorWhereInput
    orderBy?: AsesorOrderByWithRelationInput | AsesorOrderByWithRelationInput[]
    cursor?: AsesorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsesorScalarFieldEnum | AsesorScalarFieldEnum[]
  }

  /**
   * TipeAsesor without action
   */
  export type TipeAsesorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TipeAsesor
     */
    select?: TipeAsesorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TipeAsesor
     */
    omit?: TipeAsesorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TipeAsesorInclude<ExtArgs> | null
  }


  /**
   * Model University
   */

  export type AggregateUniversity = {
    _count: UniversityCountAggregateOutputType | null
    _min: UniversityMinAggregateOutputType | null
    _max: UniversityMaxAggregateOutputType | null
  }

  export type UniversityMinAggregateOutputType = {
    UniversityId: string | null
    AlamatId: string | null
    Nama: string | null
    Akreditasi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UniversityMaxAggregateOutputType = {
    UniversityId: string | null
    AlamatId: string | null
    Nama: string | null
    Akreditasi: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UniversityCountAggregateOutputType = {
    UniversityId: number
    AlamatId: number
    Nama: number
    Akreditasi: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type UniversityMinAggregateInputType = {
    UniversityId?: true
    AlamatId?: true
    Nama?: true
    Akreditasi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UniversityMaxAggregateInputType = {
    UniversityId?: true
    AlamatId?: true
    Nama?: true
    Akreditasi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UniversityCountAggregateInputType = {
    UniversityId?: true
    AlamatId?: true
    Nama?: true
    Akreditasi?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type UniversityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which University to aggregate.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Universities
    **/
    _count?: true | UniversityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversityMaxAggregateInputType
  }

  export type GetUniversityAggregateType<T extends UniversityAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversity[P]>
      : GetScalarType<T[P], AggregateUniversity[P]>
  }




  export type UniversityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityWhereInput
    orderBy?: UniversityOrderByWithAggregationInput | UniversityOrderByWithAggregationInput[]
    by: UniversityScalarFieldEnum[] | UniversityScalarFieldEnum
    having?: UniversityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversityCountAggregateInputType | true
    _min?: UniversityMinAggregateInputType
    _max?: UniversityMaxAggregateInputType
  }

  export type UniversityGroupByOutputType = {
    UniversityId: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: UniversityCountAggregateOutputType | null
    _min: UniversityMinAggregateOutputType | null
    _max: UniversityMaxAggregateOutputType | null
  }

  type GetUniversityGroupByPayload<T extends UniversityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversityGroupByOutputType[P]>
            : GetScalarType<T[P], UniversityGroupByOutputType[P]>
        }
      >
    >


  export type UniversitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | University$ProgramStudiArgs<ExtArgs>
    UniversityJabatan?: boolean | University$UniversityJabatanArgs<ExtArgs>
    UniversitySosialMedia?: boolean | University$UniversitySosialMediaArgs<ExtArgs>
    UniversityInformasi?: boolean | University$UniversityInformasiArgs<ExtArgs>
    _count?: boolean | UniversityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["university"]>

  export type UniversitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["university"]>

  export type UniversitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["university"]>

  export type UniversitySelectScalar = {
    UniversityId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Akreditasi?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type UniversityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UniversityId" | "AlamatId" | "Nama" | "Akreditasi" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["university"]>
  export type UniversityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
    ProgramStudi?: boolean | University$ProgramStudiArgs<ExtArgs>
    UniversityJabatan?: boolean | University$UniversityJabatanArgs<ExtArgs>
    UniversitySosialMedia?: boolean | University$UniversitySosialMediaArgs<ExtArgs>
    UniversityInformasi?: boolean | University$UniversityInformasiArgs<ExtArgs>
    _count?: boolean | UniversityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UniversityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }
  export type UniversityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }

  export type $UniversityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "University"
    objects: {
      Alamat: Prisma.$AlamatPayload<ExtArgs>
      ProgramStudi: Prisma.$ProgramStudiPayload<ExtArgs>[]
      UniversityJabatan: Prisma.$UniversityJabatanPayload<ExtArgs>[]
      UniversitySosialMedia: Prisma.$UniversitySosialMediaPayload<ExtArgs>[]
      UniversityInformasi: Prisma.$UniversityInformasiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      UniversityId: string
      AlamatId: string
      Nama: string
      Akreditasi: string
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["university"]>
    composites: {}
  }

  type UniversityGetPayload<S extends boolean | null | undefined | UniversityDefaultArgs> = $Result.GetResult<Prisma.$UniversityPayload, S>

  type UniversityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversityCountAggregateInputType | true
    }

  export interface UniversityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['University'], meta: { name: 'University' } }
    /**
     * Find zero or one University that matches the filter.
     * @param {UniversityFindUniqueArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversityFindUniqueArgs>(args: SelectSubset<T, UniversityFindUniqueArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one University that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversityFindUniqueOrThrowArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversityFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first University that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityFindFirstArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversityFindFirstArgs>(args?: SelectSubset<T, UniversityFindFirstArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first University that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityFindFirstOrThrowArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversityFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversityFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Universities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Universities
     * const universities = await prisma.university.findMany()
     * 
     * // Get first 10 Universities
     * const universities = await prisma.university.findMany({ take: 10 })
     * 
     * // Only select the `UniversityId`
     * const universityWithUniversityIdOnly = await prisma.university.findMany({ select: { UniversityId: true } })
     * 
     */
    findMany<T extends UniversityFindManyArgs>(args?: SelectSubset<T, UniversityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a University.
     * @param {UniversityCreateArgs} args - Arguments to create a University.
     * @example
     * // Create one University
     * const University = await prisma.university.create({
     *   data: {
     *     // ... data to create a University
     *   }
     * })
     * 
     */
    create<T extends UniversityCreateArgs>(args: SelectSubset<T, UniversityCreateArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Universities.
     * @param {UniversityCreateManyArgs} args - Arguments to create many Universities.
     * @example
     * // Create many Universities
     * const university = await prisma.university.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversityCreateManyArgs>(args?: SelectSubset<T, UniversityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Universities and returns the data saved in the database.
     * @param {UniversityCreateManyAndReturnArgs} args - Arguments to create many Universities.
     * @example
     * // Create many Universities
     * const university = await prisma.university.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Universities and only return the `UniversityId`
     * const universityWithUniversityIdOnly = await prisma.university.createManyAndReturn({
     *   select: { UniversityId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversityCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a University.
     * @param {UniversityDeleteArgs} args - Arguments to delete one University.
     * @example
     * // Delete one University
     * const University = await prisma.university.delete({
     *   where: {
     *     // ... filter to delete one University
     *   }
     * })
     * 
     */
    delete<T extends UniversityDeleteArgs>(args: SelectSubset<T, UniversityDeleteArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one University.
     * @param {UniversityUpdateArgs} args - Arguments to update one University.
     * @example
     * // Update one University
     * const university = await prisma.university.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversityUpdateArgs>(args: SelectSubset<T, UniversityUpdateArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Universities.
     * @param {UniversityDeleteManyArgs} args - Arguments to filter Universities to delete.
     * @example
     * // Delete a few Universities
     * const { count } = await prisma.university.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversityDeleteManyArgs>(args?: SelectSubset<T, UniversityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Universities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Universities
     * const university = await prisma.university.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversityUpdateManyArgs>(args: SelectSubset<T, UniversityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Universities and returns the data updated in the database.
     * @param {UniversityUpdateManyAndReturnArgs} args - Arguments to update many Universities.
     * @example
     * // Update many Universities
     * const university = await prisma.university.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Universities and only return the `UniversityId`
     * const universityWithUniversityIdOnly = await prisma.university.updateManyAndReturn({
     *   select: { UniversityId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversityUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one University.
     * @param {UniversityUpsertArgs} args - Arguments to update or create a University.
     * @example
     * // Update or create a University
     * const university = await prisma.university.upsert({
     *   create: {
     *     // ... data to create a University
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the University we want to update
     *   }
     * })
     */
    upsert<T extends UniversityUpsertArgs>(args: SelectSubset<T, UniversityUpsertArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Universities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityCountArgs} args - Arguments to filter Universities to count.
     * @example
     * // Count the number of Universities
     * const count = await prisma.university.count({
     *   where: {
     *     // ... the filter for the Universities we want to count
     *   }
     * })
    **/
    count<T extends UniversityCountArgs>(
      args?: Subset<T, UniversityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a University.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversityAggregateArgs>(args: Subset<T, UniversityAggregateArgs>): Prisma.PrismaPromise<GetUniversityAggregateType<T>>

    /**
     * Group by University.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversityGroupByArgs['orderBy'] }
        : { orderBy?: UniversityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the University model
   */
  readonly fields: UniversityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for University.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alamat<T extends AlamatDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlamatDefaultArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ProgramStudi<T extends University$ProgramStudiArgs<ExtArgs> = {}>(args?: Subset<T, University$ProgramStudiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramStudiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UniversityJabatan<T extends University$UniversityJabatanArgs<ExtArgs> = {}>(args?: Subset<T, University$UniversityJabatanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UniversitySosialMedia<T extends University$UniversitySosialMediaArgs<ExtArgs> = {}>(args?: Subset<T, University$UniversitySosialMediaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UniversityInformasi<T extends University$UniversityInformasiArgs<ExtArgs> = {}>(args?: Subset<T, University$UniversityInformasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the University model
   */
  interface UniversityFieldRefs {
    readonly UniversityId: FieldRef<"University", 'String'>
    readonly AlamatId: FieldRef<"University", 'String'>
    readonly Nama: FieldRef<"University", 'String'>
    readonly Akreditasi: FieldRef<"University", 'String'>
    readonly CreatedAt: FieldRef<"University", 'DateTime'>
    readonly UpdatedAt: FieldRef<"University", 'DateTime'>
    readonly DeletedAt: FieldRef<"University", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * University findUnique
   */
  export type UniversityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University findUniqueOrThrow
   */
  export type UniversityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University findFirst
   */
  export type UniversityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Universities.
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Universities.
     */
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * University findFirstOrThrow
   */
  export type UniversityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Universities.
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Universities.
     */
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * University findMany
   */
  export type UniversityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which Universities to fetch.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Universities.
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * University create
   */
  export type UniversityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * The data needed to create a University.
     */
    data: XOR<UniversityCreateInput, UniversityUncheckedCreateInput>
  }

  /**
   * University createMany
   */
  export type UniversityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Universities.
     */
    data: UniversityCreateManyInput | UniversityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * University createManyAndReturn
   */
  export type UniversityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * The data used to create many Universities.
     */
    data: UniversityCreateManyInput | UniversityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * University update
   */
  export type UniversityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * The data needed to update a University.
     */
    data: XOR<UniversityUpdateInput, UniversityUncheckedUpdateInput>
    /**
     * Choose, which University to update.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University updateMany
   */
  export type UniversityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Universities.
     */
    data: XOR<UniversityUpdateManyMutationInput, UniversityUncheckedUpdateManyInput>
    /**
     * Filter which Universities to update
     */
    where?: UniversityWhereInput
    /**
     * Limit how many Universities to update.
     */
    limit?: number
  }

  /**
   * University updateManyAndReturn
   */
  export type UniversityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * The data used to update Universities.
     */
    data: XOR<UniversityUpdateManyMutationInput, UniversityUncheckedUpdateManyInput>
    /**
     * Filter which Universities to update
     */
    where?: UniversityWhereInput
    /**
     * Limit how many Universities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * University upsert
   */
  export type UniversityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * The filter to search for the University to update in case it exists.
     */
    where: UniversityWhereUniqueInput
    /**
     * In case the University found by the `where` argument doesn't exist, create a new University with this data.
     */
    create: XOR<UniversityCreateInput, UniversityUncheckedCreateInput>
    /**
     * In case the University was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversityUpdateInput, UniversityUncheckedUpdateInput>
  }

  /**
   * University delete
   */
  export type UniversityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter which University to delete.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University deleteMany
   */
  export type UniversityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Universities to delete
     */
    where?: UniversityWhereInput
    /**
     * Limit how many Universities to delete.
     */
    limit?: number
  }

  /**
   * University.ProgramStudi
   */
  export type University$ProgramStudiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramStudi
     */
    select?: ProgramStudiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramStudi
     */
    omit?: ProgramStudiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramStudiInclude<ExtArgs> | null
    where?: ProgramStudiWhereInput
    orderBy?: ProgramStudiOrderByWithRelationInput | ProgramStudiOrderByWithRelationInput[]
    cursor?: ProgramStudiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProgramStudiScalarFieldEnum | ProgramStudiScalarFieldEnum[]
  }

  /**
   * University.UniversityJabatan
   */
  export type University$UniversityJabatanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    where?: UniversityJabatanWhereInput
    orderBy?: UniversityJabatanOrderByWithRelationInput | UniversityJabatanOrderByWithRelationInput[]
    cursor?: UniversityJabatanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversityJabatanScalarFieldEnum | UniversityJabatanScalarFieldEnum[]
  }

  /**
   * University.UniversitySosialMedia
   */
  export type University$UniversitySosialMediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    where?: UniversitySosialMediaWhereInput
    orderBy?: UniversitySosialMediaOrderByWithRelationInput | UniversitySosialMediaOrderByWithRelationInput[]
    cursor?: UniversitySosialMediaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversitySosialMediaScalarFieldEnum | UniversitySosialMediaScalarFieldEnum[]
  }

  /**
   * University.UniversityInformasi
   */
  export type University$UniversityInformasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    where?: UniversityInformasiWhereInput
    orderBy?: UniversityInformasiOrderByWithRelationInput | UniversityInformasiOrderByWithRelationInput[]
    cursor?: UniversityInformasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversityInformasiScalarFieldEnum | UniversityInformasiScalarFieldEnum[]
  }

  /**
   * University without action
   */
  export type UniversityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
  }


  /**
   * Model UniversitySosialMedia
   */

  export type AggregateUniversitySosialMedia = {
    _count: UniversitySosialMediaCountAggregateOutputType | null
    _min: UniversitySosialMediaMinAggregateOutputType | null
    _max: UniversitySosialMediaMaxAggregateOutputType | null
  }

  export type UniversitySosialMediaMinAggregateOutputType = {
    UniversitySosialMediaId: string | null
    UniversityId: string | null
    Nama: string | null
    Username: string | null
    Icon: string | null
  }

  export type UniversitySosialMediaMaxAggregateOutputType = {
    UniversitySosialMediaId: string | null
    UniversityId: string | null
    Nama: string | null
    Username: string | null
    Icon: string | null
  }

  export type UniversitySosialMediaCountAggregateOutputType = {
    UniversitySosialMediaId: number
    UniversityId: number
    Nama: number
    Username: number
    Icon: number
    _all: number
  }


  export type UniversitySosialMediaMinAggregateInputType = {
    UniversitySosialMediaId?: true
    UniversityId?: true
    Nama?: true
    Username?: true
    Icon?: true
  }

  export type UniversitySosialMediaMaxAggregateInputType = {
    UniversitySosialMediaId?: true
    UniversityId?: true
    Nama?: true
    Username?: true
    Icon?: true
  }

  export type UniversitySosialMediaCountAggregateInputType = {
    UniversitySosialMediaId?: true
    UniversityId?: true
    Nama?: true
    Username?: true
    Icon?: true
    _all?: true
  }

  export type UniversitySosialMediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversitySosialMedia to aggregate.
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversitySosialMedias to fetch.
     */
    orderBy?: UniversitySosialMediaOrderByWithRelationInput | UniversitySosialMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversitySosialMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversitySosialMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversitySosialMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UniversitySosialMedias
    **/
    _count?: true | UniversitySosialMediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversitySosialMediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversitySosialMediaMaxAggregateInputType
  }

  export type GetUniversitySosialMediaAggregateType<T extends UniversitySosialMediaAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversitySosialMedia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversitySosialMedia[P]>
      : GetScalarType<T[P], AggregateUniversitySosialMedia[P]>
  }




  export type UniversitySosialMediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversitySosialMediaWhereInput
    orderBy?: UniversitySosialMediaOrderByWithAggregationInput | UniversitySosialMediaOrderByWithAggregationInput[]
    by: UniversitySosialMediaScalarFieldEnum[] | UniversitySosialMediaScalarFieldEnum
    having?: UniversitySosialMediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversitySosialMediaCountAggregateInputType | true
    _min?: UniversitySosialMediaMinAggregateInputType
    _max?: UniversitySosialMediaMaxAggregateInputType
  }

  export type UniversitySosialMediaGroupByOutputType = {
    UniversitySosialMediaId: string
    UniversityId: string
    Nama: string
    Username: string | null
    Icon: string | null
    _count: UniversitySosialMediaCountAggregateOutputType | null
    _min: UniversitySosialMediaMinAggregateOutputType | null
    _max: UniversitySosialMediaMaxAggregateOutputType | null
  }

  type GetUniversitySosialMediaGroupByPayload<T extends UniversitySosialMediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversitySosialMediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversitySosialMediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversitySosialMediaGroupByOutputType[P]>
            : GetScalarType<T[P], UniversitySosialMediaGroupByOutputType[P]>
        }
      >
    >


  export type UniversitySosialMediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversitySosialMediaId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Username?: boolean
    Icon?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universitySosialMedia"]>

  export type UniversitySosialMediaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversitySosialMediaId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Username?: boolean
    Icon?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universitySosialMedia"]>

  export type UniversitySosialMediaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversitySosialMediaId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Username?: boolean
    Icon?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universitySosialMedia"]>

  export type UniversitySosialMediaSelectScalar = {
    UniversitySosialMediaId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Username?: boolean
    Icon?: boolean
  }

  export type UniversitySosialMediaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UniversitySosialMediaId" | "UniversityId" | "Nama" | "Username" | "Icon", ExtArgs["result"]["universitySosialMedia"]>
  export type UniversitySosialMediaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversitySosialMediaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversitySosialMediaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $UniversitySosialMediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UniversitySosialMedia"
    objects: {
      University: Prisma.$UniversityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      UniversitySosialMediaId: string
      UniversityId: string
      Nama: string
      Username: string | null
      Icon: string | null
    }, ExtArgs["result"]["universitySosialMedia"]>
    composites: {}
  }

  type UniversitySosialMediaGetPayload<S extends boolean | null | undefined | UniversitySosialMediaDefaultArgs> = $Result.GetResult<Prisma.$UniversitySosialMediaPayload, S>

  type UniversitySosialMediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversitySosialMediaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversitySosialMediaCountAggregateInputType | true
    }

  export interface UniversitySosialMediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UniversitySosialMedia'], meta: { name: 'UniversitySosialMedia' } }
    /**
     * Find zero or one UniversitySosialMedia that matches the filter.
     * @param {UniversitySosialMediaFindUniqueArgs} args - Arguments to find a UniversitySosialMedia
     * @example
     * // Get one UniversitySosialMedia
     * const universitySosialMedia = await prisma.universitySosialMedia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversitySosialMediaFindUniqueArgs>(args: SelectSubset<T, UniversitySosialMediaFindUniqueArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UniversitySosialMedia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversitySosialMediaFindUniqueOrThrowArgs} args - Arguments to find a UniversitySosialMedia
     * @example
     * // Get one UniversitySosialMedia
     * const universitySosialMedia = await prisma.universitySosialMedia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversitySosialMediaFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversitySosialMediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversitySosialMedia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaFindFirstArgs} args - Arguments to find a UniversitySosialMedia
     * @example
     * // Get one UniversitySosialMedia
     * const universitySosialMedia = await prisma.universitySosialMedia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversitySosialMediaFindFirstArgs>(args?: SelectSubset<T, UniversitySosialMediaFindFirstArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversitySosialMedia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaFindFirstOrThrowArgs} args - Arguments to find a UniversitySosialMedia
     * @example
     * // Get one UniversitySosialMedia
     * const universitySosialMedia = await prisma.universitySosialMedia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversitySosialMediaFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversitySosialMediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UniversitySosialMedias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UniversitySosialMedias
     * const universitySosialMedias = await prisma.universitySosialMedia.findMany()
     * 
     * // Get first 10 UniversitySosialMedias
     * const universitySosialMedias = await prisma.universitySosialMedia.findMany({ take: 10 })
     * 
     * // Only select the `UniversitySosialMediaId`
     * const universitySosialMediaWithUniversitySosialMediaIdOnly = await prisma.universitySosialMedia.findMany({ select: { UniversitySosialMediaId: true } })
     * 
     */
    findMany<T extends UniversitySosialMediaFindManyArgs>(args?: SelectSubset<T, UniversitySosialMediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UniversitySosialMedia.
     * @param {UniversitySosialMediaCreateArgs} args - Arguments to create a UniversitySosialMedia.
     * @example
     * // Create one UniversitySosialMedia
     * const UniversitySosialMedia = await prisma.universitySosialMedia.create({
     *   data: {
     *     // ... data to create a UniversitySosialMedia
     *   }
     * })
     * 
     */
    create<T extends UniversitySosialMediaCreateArgs>(args: SelectSubset<T, UniversitySosialMediaCreateArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UniversitySosialMedias.
     * @param {UniversitySosialMediaCreateManyArgs} args - Arguments to create many UniversitySosialMedias.
     * @example
     * // Create many UniversitySosialMedias
     * const universitySosialMedia = await prisma.universitySosialMedia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversitySosialMediaCreateManyArgs>(args?: SelectSubset<T, UniversitySosialMediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UniversitySosialMedias and returns the data saved in the database.
     * @param {UniversitySosialMediaCreateManyAndReturnArgs} args - Arguments to create many UniversitySosialMedias.
     * @example
     * // Create many UniversitySosialMedias
     * const universitySosialMedia = await prisma.universitySosialMedia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UniversitySosialMedias and only return the `UniversitySosialMediaId`
     * const universitySosialMediaWithUniversitySosialMediaIdOnly = await prisma.universitySosialMedia.createManyAndReturn({
     *   select: { UniversitySosialMediaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversitySosialMediaCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversitySosialMediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UniversitySosialMedia.
     * @param {UniversitySosialMediaDeleteArgs} args - Arguments to delete one UniversitySosialMedia.
     * @example
     * // Delete one UniversitySosialMedia
     * const UniversitySosialMedia = await prisma.universitySosialMedia.delete({
     *   where: {
     *     // ... filter to delete one UniversitySosialMedia
     *   }
     * })
     * 
     */
    delete<T extends UniversitySosialMediaDeleteArgs>(args: SelectSubset<T, UniversitySosialMediaDeleteArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UniversitySosialMedia.
     * @param {UniversitySosialMediaUpdateArgs} args - Arguments to update one UniversitySosialMedia.
     * @example
     * // Update one UniversitySosialMedia
     * const universitySosialMedia = await prisma.universitySosialMedia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversitySosialMediaUpdateArgs>(args: SelectSubset<T, UniversitySosialMediaUpdateArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UniversitySosialMedias.
     * @param {UniversitySosialMediaDeleteManyArgs} args - Arguments to filter UniversitySosialMedias to delete.
     * @example
     * // Delete a few UniversitySosialMedias
     * const { count } = await prisma.universitySosialMedia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversitySosialMediaDeleteManyArgs>(args?: SelectSubset<T, UniversitySosialMediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversitySosialMedias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UniversitySosialMedias
     * const universitySosialMedia = await prisma.universitySosialMedia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversitySosialMediaUpdateManyArgs>(args: SelectSubset<T, UniversitySosialMediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversitySosialMedias and returns the data updated in the database.
     * @param {UniversitySosialMediaUpdateManyAndReturnArgs} args - Arguments to update many UniversitySosialMedias.
     * @example
     * // Update many UniversitySosialMedias
     * const universitySosialMedia = await prisma.universitySosialMedia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UniversitySosialMedias and only return the `UniversitySosialMediaId`
     * const universitySosialMediaWithUniversitySosialMediaIdOnly = await prisma.universitySosialMedia.updateManyAndReturn({
     *   select: { UniversitySosialMediaId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversitySosialMediaUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversitySosialMediaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UniversitySosialMedia.
     * @param {UniversitySosialMediaUpsertArgs} args - Arguments to update or create a UniversitySosialMedia.
     * @example
     * // Update or create a UniversitySosialMedia
     * const universitySosialMedia = await prisma.universitySosialMedia.upsert({
     *   create: {
     *     // ... data to create a UniversitySosialMedia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UniversitySosialMedia we want to update
     *   }
     * })
     */
    upsert<T extends UniversitySosialMediaUpsertArgs>(args: SelectSubset<T, UniversitySosialMediaUpsertArgs<ExtArgs>>): Prisma__UniversitySosialMediaClient<$Result.GetResult<Prisma.$UniversitySosialMediaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UniversitySosialMedias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaCountArgs} args - Arguments to filter UniversitySosialMedias to count.
     * @example
     * // Count the number of UniversitySosialMedias
     * const count = await prisma.universitySosialMedia.count({
     *   where: {
     *     // ... the filter for the UniversitySosialMedias we want to count
     *   }
     * })
    **/
    count<T extends UniversitySosialMediaCountArgs>(
      args?: Subset<T, UniversitySosialMediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversitySosialMediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UniversitySosialMedia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversitySosialMediaAggregateArgs>(args: Subset<T, UniversitySosialMediaAggregateArgs>): Prisma.PrismaPromise<GetUniversitySosialMediaAggregateType<T>>

    /**
     * Group by UniversitySosialMedia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversitySosialMediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversitySosialMediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversitySosialMediaGroupByArgs['orderBy'] }
        : { orderBy?: UniversitySosialMediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversitySosialMediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversitySosialMediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UniversitySosialMedia model
   */
  readonly fields: UniversitySosialMediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UniversitySosialMedia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversitySosialMediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    University<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UniversitySosialMedia model
   */
  interface UniversitySosialMediaFieldRefs {
    readonly UniversitySosialMediaId: FieldRef<"UniversitySosialMedia", 'String'>
    readonly UniversityId: FieldRef<"UniversitySosialMedia", 'String'>
    readonly Nama: FieldRef<"UniversitySosialMedia", 'String'>
    readonly Username: FieldRef<"UniversitySosialMedia", 'String'>
    readonly Icon: FieldRef<"UniversitySosialMedia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UniversitySosialMedia findUnique
   */
  export type UniversitySosialMediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * Filter, which UniversitySosialMedia to fetch.
     */
    where: UniversitySosialMediaWhereUniqueInput
  }

  /**
   * UniversitySosialMedia findUniqueOrThrow
   */
  export type UniversitySosialMediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * Filter, which UniversitySosialMedia to fetch.
     */
    where: UniversitySosialMediaWhereUniqueInput
  }

  /**
   * UniversitySosialMedia findFirst
   */
  export type UniversitySosialMediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * Filter, which UniversitySosialMedia to fetch.
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversitySosialMedias to fetch.
     */
    orderBy?: UniversitySosialMediaOrderByWithRelationInput | UniversitySosialMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversitySosialMedias.
     */
    cursor?: UniversitySosialMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversitySosialMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversitySosialMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversitySosialMedias.
     */
    distinct?: UniversitySosialMediaScalarFieldEnum | UniversitySosialMediaScalarFieldEnum[]
  }

  /**
   * UniversitySosialMedia findFirstOrThrow
   */
  export type UniversitySosialMediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * Filter, which UniversitySosialMedia to fetch.
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversitySosialMedias to fetch.
     */
    orderBy?: UniversitySosialMediaOrderByWithRelationInput | UniversitySosialMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversitySosialMedias.
     */
    cursor?: UniversitySosialMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversitySosialMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversitySosialMedias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversitySosialMedias.
     */
    distinct?: UniversitySosialMediaScalarFieldEnum | UniversitySosialMediaScalarFieldEnum[]
  }

  /**
   * UniversitySosialMedia findMany
   */
  export type UniversitySosialMediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * Filter, which UniversitySosialMedias to fetch.
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversitySosialMedias to fetch.
     */
    orderBy?: UniversitySosialMediaOrderByWithRelationInput | UniversitySosialMediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UniversitySosialMedias.
     */
    cursor?: UniversitySosialMediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversitySosialMedias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversitySosialMedias.
     */
    skip?: number
    distinct?: UniversitySosialMediaScalarFieldEnum | UniversitySosialMediaScalarFieldEnum[]
  }

  /**
   * UniversitySosialMedia create
   */
  export type UniversitySosialMediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * The data needed to create a UniversitySosialMedia.
     */
    data: XOR<UniversitySosialMediaCreateInput, UniversitySosialMediaUncheckedCreateInput>
  }

  /**
   * UniversitySosialMedia createMany
   */
  export type UniversitySosialMediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UniversitySosialMedias.
     */
    data: UniversitySosialMediaCreateManyInput | UniversitySosialMediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UniversitySosialMedia createManyAndReturn
   */
  export type UniversitySosialMediaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * The data used to create many UniversitySosialMedias.
     */
    data: UniversitySosialMediaCreateManyInput | UniversitySosialMediaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversitySosialMedia update
   */
  export type UniversitySosialMediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * The data needed to update a UniversitySosialMedia.
     */
    data: XOR<UniversitySosialMediaUpdateInput, UniversitySosialMediaUncheckedUpdateInput>
    /**
     * Choose, which UniversitySosialMedia to update.
     */
    where: UniversitySosialMediaWhereUniqueInput
  }

  /**
   * UniversitySosialMedia updateMany
   */
  export type UniversitySosialMediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UniversitySosialMedias.
     */
    data: XOR<UniversitySosialMediaUpdateManyMutationInput, UniversitySosialMediaUncheckedUpdateManyInput>
    /**
     * Filter which UniversitySosialMedias to update
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * Limit how many UniversitySosialMedias to update.
     */
    limit?: number
  }

  /**
   * UniversitySosialMedia updateManyAndReturn
   */
  export type UniversitySosialMediaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * The data used to update UniversitySosialMedias.
     */
    data: XOR<UniversitySosialMediaUpdateManyMutationInput, UniversitySosialMediaUncheckedUpdateManyInput>
    /**
     * Filter which UniversitySosialMedias to update
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * Limit how many UniversitySosialMedias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversitySosialMedia upsert
   */
  export type UniversitySosialMediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * The filter to search for the UniversitySosialMedia to update in case it exists.
     */
    where: UniversitySosialMediaWhereUniqueInput
    /**
     * In case the UniversitySosialMedia found by the `where` argument doesn't exist, create a new UniversitySosialMedia with this data.
     */
    create: XOR<UniversitySosialMediaCreateInput, UniversitySosialMediaUncheckedCreateInput>
    /**
     * In case the UniversitySosialMedia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversitySosialMediaUpdateInput, UniversitySosialMediaUncheckedUpdateInput>
  }

  /**
   * UniversitySosialMedia delete
   */
  export type UniversitySosialMediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
    /**
     * Filter which UniversitySosialMedia to delete.
     */
    where: UniversitySosialMediaWhereUniqueInput
  }

  /**
   * UniversitySosialMedia deleteMany
   */
  export type UniversitySosialMediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversitySosialMedias to delete
     */
    where?: UniversitySosialMediaWhereInput
    /**
     * Limit how many UniversitySosialMedias to delete.
     */
    limit?: number
  }

  /**
   * UniversitySosialMedia without action
   */
  export type UniversitySosialMediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversitySosialMedia
     */
    select?: UniversitySosialMediaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversitySosialMedia
     */
    omit?: UniversitySosialMediaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversitySosialMediaInclude<ExtArgs> | null
  }


  /**
   * Model UniversityInformasi
   */

  export type AggregateUniversityInformasi = {
    _count: UniversityInformasiCountAggregateOutputType | null
    _min: UniversityInformasiMinAggregateOutputType | null
    _max: UniversityInformasiMaxAggregateOutputType | null
  }

  export type UniversityInformasiMinAggregateOutputType = {
    UniversityInformasiId: string | null
    UniversityId: string | null
    Nama: string | null
    Informasi: string | null
  }

  export type UniversityInformasiMaxAggregateOutputType = {
    UniversityInformasiId: string | null
    UniversityId: string | null
    Nama: string | null
    Informasi: string | null
  }

  export type UniversityInformasiCountAggregateOutputType = {
    UniversityInformasiId: number
    UniversityId: number
    Nama: number
    Informasi: number
    _all: number
  }


  export type UniversityInformasiMinAggregateInputType = {
    UniversityInformasiId?: true
    UniversityId?: true
    Nama?: true
    Informasi?: true
  }

  export type UniversityInformasiMaxAggregateInputType = {
    UniversityInformasiId?: true
    UniversityId?: true
    Nama?: true
    Informasi?: true
  }

  export type UniversityInformasiCountAggregateInputType = {
    UniversityInformasiId?: true
    UniversityId?: true
    Nama?: true
    Informasi?: true
    _all?: true
  }

  export type UniversityInformasiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityInformasi to aggregate.
     */
    where?: UniversityInformasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityInformasis to fetch.
     */
    orderBy?: UniversityInformasiOrderByWithRelationInput | UniversityInformasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversityInformasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityInformasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityInformasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UniversityInformasis
    **/
    _count?: true | UniversityInformasiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversityInformasiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversityInformasiMaxAggregateInputType
  }

  export type GetUniversityInformasiAggregateType<T extends UniversityInformasiAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversityInformasi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversityInformasi[P]>
      : GetScalarType<T[P], AggregateUniversityInformasi[P]>
  }




  export type UniversityInformasiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityInformasiWhereInput
    orderBy?: UniversityInformasiOrderByWithAggregationInput | UniversityInformasiOrderByWithAggregationInput[]
    by: UniversityInformasiScalarFieldEnum[] | UniversityInformasiScalarFieldEnum
    having?: UniversityInformasiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversityInformasiCountAggregateInputType | true
    _min?: UniversityInformasiMinAggregateInputType
    _max?: UniversityInformasiMaxAggregateInputType
  }

  export type UniversityInformasiGroupByOutputType = {
    UniversityInformasiId: string
    UniversityId: string
    Nama: string
    Informasi: string | null
    _count: UniversityInformasiCountAggregateOutputType | null
    _min: UniversityInformasiMinAggregateOutputType | null
    _max: UniversityInformasiMaxAggregateOutputType | null
  }

  type GetUniversityInformasiGroupByPayload<T extends UniversityInformasiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversityInformasiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversityInformasiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversityInformasiGroupByOutputType[P]>
            : GetScalarType<T[P], UniversityInformasiGroupByOutputType[P]>
        }
      >
    >


  export type UniversityInformasiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityInformasiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Informasi?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityInformasi"]>

  export type UniversityInformasiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityInformasiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Informasi?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityInformasi"]>

  export type UniversityInformasiSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityInformasiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Informasi?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityInformasi"]>

  export type UniversityInformasiSelectScalar = {
    UniversityInformasiId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Informasi?: boolean
  }

  export type UniversityInformasiOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UniversityInformasiId" | "UniversityId" | "Nama" | "Informasi", ExtArgs["result"]["universityInformasi"]>
  export type UniversityInformasiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversityInformasiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversityInformasiIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $UniversityInformasiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UniversityInformasi"
    objects: {
      University: Prisma.$UniversityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      UniversityInformasiId: string
      UniversityId: string
      Nama: string
      Informasi: string | null
    }, ExtArgs["result"]["universityInformasi"]>
    composites: {}
  }

  type UniversityInformasiGetPayload<S extends boolean | null | undefined | UniversityInformasiDefaultArgs> = $Result.GetResult<Prisma.$UniversityInformasiPayload, S>

  type UniversityInformasiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversityInformasiFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversityInformasiCountAggregateInputType | true
    }

  export interface UniversityInformasiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UniversityInformasi'], meta: { name: 'UniversityInformasi' } }
    /**
     * Find zero or one UniversityInformasi that matches the filter.
     * @param {UniversityInformasiFindUniqueArgs} args - Arguments to find a UniversityInformasi
     * @example
     * // Get one UniversityInformasi
     * const universityInformasi = await prisma.universityInformasi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversityInformasiFindUniqueArgs>(args: SelectSubset<T, UniversityInformasiFindUniqueArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UniversityInformasi that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversityInformasiFindUniqueOrThrowArgs} args - Arguments to find a UniversityInformasi
     * @example
     * // Get one UniversityInformasi
     * const universityInformasi = await prisma.universityInformasi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversityInformasiFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversityInformasiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityInformasi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiFindFirstArgs} args - Arguments to find a UniversityInformasi
     * @example
     * // Get one UniversityInformasi
     * const universityInformasi = await prisma.universityInformasi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversityInformasiFindFirstArgs>(args?: SelectSubset<T, UniversityInformasiFindFirstArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityInformasi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiFindFirstOrThrowArgs} args - Arguments to find a UniversityInformasi
     * @example
     * // Get one UniversityInformasi
     * const universityInformasi = await prisma.universityInformasi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversityInformasiFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversityInformasiFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UniversityInformasis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UniversityInformasis
     * const universityInformasis = await prisma.universityInformasi.findMany()
     * 
     * // Get first 10 UniversityInformasis
     * const universityInformasis = await prisma.universityInformasi.findMany({ take: 10 })
     * 
     * // Only select the `UniversityInformasiId`
     * const universityInformasiWithUniversityInformasiIdOnly = await prisma.universityInformasi.findMany({ select: { UniversityInformasiId: true } })
     * 
     */
    findMany<T extends UniversityInformasiFindManyArgs>(args?: SelectSubset<T, UniversityInformasiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UniversityInformasi.
     * @param {UniversityInformasiCreateArgs} args - Arguments to create a UniversityInformasi.
     * @example
     * // Create one UniversityInformasi
     * const UniversityInformasi = await prisma.universityInformasi.create({
     *   data: {
     *     // ... data to create a UniversityInformasi
     *   }
     * })
     * 
     */
    create<T extends UniversityInformasiCreateArgs>(args: SelectSubset<T, UniversityInformasiCreateArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UniversityInformasis.
     * @param {UniversityInformasiCreateManyArgs} args - Arguments to create many UniversityInformasis.
     * @example
     * // Create many UniversityInformasis
     * const universityInformasi = await prisma.universityInformasi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversityInformasiCreateManyArgs>(args?: SelectSubset<T, UniversityInformasiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UniversityInformasis and returns the data saved in the database.
     * @param {UniversityInformasiCreateManyAndReturnArgs} args - Arguments to create many UniversityInformasis.
     * @example
     * // Create many UniversityInformasis
     * const universityInformasi = await prisma.universityInformasi.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UniversityInformasis and only return the `UniversityInformasiId`
     * const universityInformasiWithUniversityInformasiIdOnly = await prisma.universityInformasi.createManyAndReturn({
     *   select: { UniversityInformasiId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversityInformasiCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversityInformasiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UniversityInformasi.
     * @param {UniversityInformasiDeleteArgs} args - Arguments to delete one UniversityInformasi.
     * @example
     * // Delete one UniversityInformasi
     * const UniversityInformasi = await prisma.universityInformasi.delete({
     *   where: {
     *     // ... filter to delete one UniversityInformasi
     *   }
     * })
     * 
     */
    delete<T extends UniversityInformasiDeleteArgs>(args: SelectSubset<T, UniversityInformasiDeleteArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UniversityInformasi.
     * @param {UniversityInformasiUpdateArgs} args - Arguments to update one UniversityInformasi.
     * @example
     * // Update one UniversityInformasi
     * const universityInformasi = await prisma.universityInformasi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversityInformasiUpdateArgs>(args: SelectSubset<T, UniversityInformasiUpdateArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UniversityInformasis.
     * @param {UniversityInformasiDeleteManyArgs} args - Arguments to filter UniversityInformasis to delete.
     * @example
     * // Delete a few UniversityInformasis
     * const { count } = await prisma.universityInformasi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversityInformasiDeleteManyArgs>(args?: SelectSubset<T, UniversityInformasiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityInformasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UniversityInformasis
     * const universityInformasi = await prisma.universityInformasi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversityInformasiUpdateManyArgs>(args: SelectSubset<T, UniversityInformasiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityInformasis and returns the data updated in the database.
     * @param {UniversityInformasiUpdateManyAndReturnArgs} args - Arguments to update many UniversityInformasis.
     * @example
     * // Update many UniversityInformasis
     * const universityInformasi = await prisma.universityInformasi.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UniversityInformasis and only return the `UniversityInformasiId`
     * const universityInformasiWithUniversityInformasiIdOnly = await prisma.universityInformasi.updateManyAndReturn({
     *   select: { UniversityInformasiId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversityInformasiUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversityInformasiUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UniversityInformasi.
     * @param {UniversityInformasiUpsertArgs} args - Arguments to update or create a UniversityInformasi.
     * @example
     * // Update or create a UniversityInformasi
     * const universityInformasi = await prisma.universityInformasi.upsert({
     *   create: {
     *     // ... data to create a UniversityInformasi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UniversityInformasi we want to update
     *   }
     * })
     */
    upsert<T extends UniversityInformasiUpsertArgs>(args: SelectSubset<T, UniversityInformasiUpsertArgs<ExtArgs>>): Prisma__UniversityInformasiClient<$Result.GetResult<Prisma.$UniversityInformasiPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UniversityInformasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiCountArgs} args - Arguments to filter UniversityInformasis to count.
     * @example
     * // Count the number of UniversityInformasis
     * const count = await prisma.universityInformasi.count({
     *   where: {
     *     // ... the filter for the UniversityInformasis we want to count
     *   }
     * })
    **/
    count<T extends UniversityInformasiCountArgs>(
      args?: Subset<T, UniversityInformasiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversityInformasiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UniversityInformasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversityInformasiAggregateArgs>(args: Subset<T, UniversityInformasiAggregateArgs>): Prisma.PrismaPromise<GetUniversityInformasiAggregateType<T>>

    /**
     * Group by UniversityInformasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityInformasiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversityInformasiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversityInformasiGroupByArgs['orderBy'] }
        : { orderBy?: UniversityInformasiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversityInformasiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversityInformasiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UniversityInformasi model
   */
  readonly fields: UniversityInformasiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UniversityInformasi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversityInformasiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    University<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UniversityInformasi model
   */
  interface UniversityInformasiFieldRefs {
    readonly UniversityInformasiId: FieldRef<"UniversityInformasi", 'String'>
    readonly UniversityId: FieldRef<"UniversityInformasi", 'String'>
    readonly Nama: FieldRef<"UniversityInformasi", 'String'>
    readonly Informasi: FieldRef<"UniversityInformasi", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UniversityInformasi findUnique
   */
  export type UniversityInformasiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * Filter, which UniversityInformasi to fetch.
     */
    where: UniversityInformasiWhereUniqueInput
  }

  /**
   * UniversityInformasi findUniqueOrThrow
   */
  export type UniversityInformasiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * Filter, which UniversityInformasi to fetch.
     */
    where: UniversityInformasiWhereUniqueInput
  }

  /**
   * UniversityInformasi findFirst
   */
  export type UniversityInformasiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * Filter, which UniversityInformasi to fetch.
     */
    where?: UniversityInformasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityInformasis to fetch.
     */
    orderBy?: UniversityInformasiOrderByWithRelationInput | UniversityInformasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityInformasis.
     */
    cursor?: UniversityInformasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityInformasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityInformasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityInformasis.
     */
    distinct?: UniversityInformasiScalarFieldEnum | UniversityInformasiScalarFieldEnum[]
  }

  /**
   * UniversityInformasi findFirstOrThrow
   */
  export type UniversityInformasiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * Filter, which UniversityInformasi to fetch.
     */
    where?: UniversityInformasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityInformasis to fetch.
     */
    orderBy?: UniversityInformasiOrderByWithRelationInput | UniversityInformasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityInformasis.
     */
    cursor?: UniversityInformasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityInformasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityInformasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityInformasis.
     */
    distinct?: UniversityInformasiScalarFieldEnum | UniversityInformasiScalarFieldEnum[]
  }

  /**
   * UniversityInformasi findMany
   */
  export type UniversityInformasiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * Filter, which UniversityInformasis to fetch.
     */
    where?: UniversityInformasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityInformasis to fetch.
     */
    orderBy?: UniversityInformasiOrderByWithRelationInput | UniversityInformasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UniversityInformasis.
     */
    cursor?: UniversityInformasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityInformasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityInformasis.
     */
    skip?: number
    distinct?: UniversityInformasiScalarFieldEnum | UniversityInformasiScalarFieldEnum[]
  }

  /**
   * UniversityInformasi create
   */
  export type UniversityInformasiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * The data needed to create a UniversityInformasi.
     */
    data: XOR<UniversityInformasiCreateInput, UniversityInformasiUncheckedCreateInput>
  }

  /**
   * UniversityInformasi createMany
   */
  export type UniversityInformasiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UniversityInformasis.
     */
    data: UniversityInformasiCreateManyInput | UniversityInformasiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UniversityInformasi createManyAndReturn
   */
  export type UniversityInformasiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * The data used to create many UniversityInformasis.
     */
    data: UniversityInformasiCreateManyInput | UniversityInformasiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityInformasi update
   */
  export type UniversityInformasiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * The data needed to update a UniversityInformasi.
     */
    data: XOR<UniversityInformasiUpdateInput, UniversityInformasiUncheckedUpdateInput>
    /**
     * Choose, which UniversityInformasi to update.
     */
    where: UniversityInformasiWhereUniqueInput
  }

  /**
   * UniversityInformasi updateMany
   */
  export type UniversityInformasiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UniversityInformasis.
     */
    data: XOR<UniversityInformasiUpdateManyMutationInput, UniversityInformasiUncheckedUpdateManyInput>
    /**
     * Filter which UniversityInformasis to update
     */
    where?: UniversityInformasiWhereInput
    /**
     * Limit how many UniversityInformasis to update.
     */
    limit?: number
  }

  /**
   * UniversityInformasi updateManyAndReturn
   */
  export type UniversityInformasiUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * The data used to update UniversityInformasis.
     */
    data: XOR<UniversityInformasiUpdateManyMutationInput, UniversityInformasiUncheckedUpdateManyInput>
    /**
     * Filter which UniversityInformasis to update
     */
    where?: UniversityInformasiWhereInput
    /**
     * Limit how many UniversityInformasis to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityInformasi upsert
   */
  export type UniversityInformasiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * The filter to search for the UniversityInformasi to update in case it exists.
     */
    where: UniversityInformasiWhereUniqueInput
    /**
     * In case the UniversityInformasi found by the `where` argument doesn't exist, create a new UniversityInformasi with this data.
     */
    create: XOR<UniversityInformasiCreateInput, UniversityInformasiUncheckedCreateInput>
    /**
     * In case the UniversityInformasi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversityInformasiUpdateInput, UniversityInformasiUncheckedUpdateInput>
  }

  /**
   * UniversityInformasi delete
   */
  export type UniversityInformasiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
    /**
     * Filter which UniversityInformasi to delete.
     */
    where: UniversityInformasiWhereUniqueInput
  }

  /**
   * UniversityInformasi deleteMany
   */
  export type UniversityInformasiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityInformasis to delete
     */
    where?: UniversityInformasiWhereInput
    /**
     * Limit how many UniversityInformasis to delete.
     */
    limit?: number
  }

  /**
   * UniversityInformasi without action
   */
  export type UniversityInformasiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityInformasi
     */
    select?: UniversityInformasiSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityInformasi
     */
    omit?: UniversityInformasiOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInformasiInclude<ExtArgs> | null
  }


  /**
   * Model UniversityJabatan
   */

  export type AggregateUniversityJabatan = {
    _count: UniversityJabatanCountAggregateOutputType | null
    _min: UniversityJabatanMinAggregateOutputType | null
    _max: UniversityJabatanMaxAggregateOutputType | null
  }

  export type UniversityJabatanMinAggregateOutputType = {
    UniversityJabatanId: string | null
    UniversityId: string | null
    Nama: string | null
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UniversityJabatanMaxAggregateOutputType = {
    UniversityJabatanId: string | null
    UniversityId: string | null
    Nama: string | null
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UniversityJabatanCountAggregateOutputType = {
    UniversityJabatanId: number
    UniversityId: number
    Nama: number
    Keterangan: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type UniversityJabatanMinAggregateInputType = {
    UniversityJabatanId?: true
    UniversityId?: true
    Nama?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UniversityJabatanMaxAggregateInputType = {
    UniversityJabatanId?: true
    UniversityId?: true
    Nama?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UniversityJabatanCountAggregateInputType = {
    UniversityJabatanId?: true
    UniversityId?: true
    Nama?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type UniversityJabatanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityJabatan to aggregate.
     */
    where?: UniversityJabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatans to fetch.
     */
    orderBy?: UniversityJabatanOrderByWithRelationInput | UniversityJabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversityJabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UniversityJabatans
    **/
    _count?: true | UniversityJabatanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversityJabatanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversityJabatanMaxAggregateInputType
  }

  export type GetUniversityJabatanAggregateType<T extends UniversityJabatanAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversityJabatan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversityJabatan[P]>
      : GetScalarType<T[P], AggregateUniversityJabatan[P]>
  }




  export type UniversityJabatanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityJabatanWhereInput
    orderBy?: UniversityJabatanOrderByWithAggregationInput | UniversityJabatanOrderByWithAggregationInput[]
    by: UniversityJabatanScalarFieldEnum[] | UniversityJabatanScalarFieldEnum
    having?: UniversityJabatanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversityJabatanCountAggregateInputType | true
    _min?: UniversityJabatanMinAggregateInputType
    _max?: UniversityJabatanMaxAggregateInputType
  }

  export type UniversityJabatanGroupByOutputType = {
    UniversityJabatanId: string
    UniversityId: string
    Nama: string
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: UniversityJabatanCountAggregateOutputType | null
    _min: UniversityJabatanMinAggregateOutputType | null
    _max: UniversityJabatanMaxAggregateOutputType | null
  }

  type GetUniversityJabatanGroupByPayload<T extends UniversityJabatanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversityJabatanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversityJabatanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversityJabatanGroupByOutputType[P]>
            : GetScalarType<T[P], UniversityJabatanGroupByOutputType[P]>
        }
      >
    >


  export type UniversityJabatanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityJabatanId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
    UniversityJabatanOrang?: boolean | UniversityJabatan$UniversityJabatanOrangArgs<ExtArgs>
    _count?: boolean | UniversityJabatanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityJabatan"]>

  export type UniversityJabatanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityJabatanId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityJabatan"]>

  export type UniversityJabatanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityJabatanId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityJabatan"]>

  export type UniversityJabatanSelectScalar = {
    UniversityJabatanId?: boolean
    UniversityId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type UniversityJabatanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UniversityJabatanId" | "UniversityId" | "Nama" | "Keterangan" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["universityJabatan"]>
  export type UniversityJabatanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
    UniversityJabatanOrang?: boolean | UniversityJabatan$UniversityJabatanOrangArgs<ExtArgs>
    _count?: boolean | UniversityJabatanCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UniversityJabatanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversityJabatanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    University?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $UniversityJabatanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UniversityJabatan"
    objects: {
      University: Prisma.$UniversityPayload<ExtArgs>
      UniversityJabatanOrang: Prisma.$UniversityJabatanOrangPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      UniversityJabatanId: string
      UniversityId: string
      Nama: string
      Keterangan: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["universityJabatan"]>
    composites: {}
  }

  type UniversityJabatanGetPayload<S extends boolean | null | undefined | UniversityJabatanDefaultArgs> = $Result.GetResult<Prisma.$UniversityJabatanPayload, S>

  type UniversityJabatanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversityJabatanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversityJabatanCountAggregateInputType | true
    }

  export interface UniversityJabatanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UniversityJabatan'], meta: { name: 'UniversityJabatan' } }
    /**
     * Find zero or one UniversityJabatan that matches the filter.
     * @param {UniversityJabatanFindUniqueArgs} args - Arguments to find a UniversityJabatan
     * @example
     * // Get one UniversityJabatan
     * const universityJabatan = await prisma.universityJabatan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversityJabatanFindUniqueArgs>(args: SelectSubset<T, UniversityJabatanFindUniqueArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UniversityJabatan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversityJabatanFindUniqueOrThrowArgs} args - Arguments to find a UniversityJabatan
     * @example
     * // Get one UniversityJabatan
     * const universityJabatan = await prisma.universityJabatan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversityJabatanFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversityJabatanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityJabatan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanFindFirstArgs} args - Arguments to find a UniversityJabatan
     * @example
     * // Get one UniversityJabatan
     * const universityJabatan = await prisma.universityJabatan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversityJabatanFindFirstArgs>(args?: SelectSubset<T, UniversityJabatanFindFirstArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityJabatan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanFindFirstOrThrowArgs} args - Arguments to find a UniversityJabatan
     * @example
     * // Get one UniversityJabatan
     * const universityJabatan = await prisma.universityJabatan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversityJabatanFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversityJabatanFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UniversityJabatans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UniversityJabatans
     * const universityJabatans = await prisma.universityJabatan.findMany()
     * 
     * // Get first 10 UniversityJabatans
     * const universityJabatans = await prisma.universityJabatan.findMany({ take: 10 })
     * 
     * // Only select the `UniversityJabatanId`
     * const universityJabatanWithUniversityJabatanIdOnly = await prisma.universityJabatan.findMany({ select: { UniversityJabatanId: true } })
     * 
     */
    findMany<T extends UniversityJabatanFindManyArgs>(args?: SelectSubset<T, UniversityJabatanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UniversityJabatan.
     * @param {UniversityJabatanCreateArgs} args - Arguments to create a UniversityJabatan.
     * @example
     * // Create one UniversityJabatan
     * const UniversityJabatan = await prisma.universityJabatan.create({
     *   data: {
     *     // ... data to create a UniversityJabatan
     *   }
     * })
     * 
     */
    create<T extends UniversityJabatanCreateArgs>(args: SelectSubset<T, UniversityJabatanCreateArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UniversityJabatans.
     * @param {UniversityJabatanCreateManyArgs} args - Arguments to create many UniversityJabatans.
     * @example
     * // Create many UniversityJabatans
     * const universityJabatan = await prisma.universityJabatan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversityJabatanCreateManyArgs>(args?: SelectSubset<T, UniversityJabatanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UniversityJabatans and returns the data saved in the database.
     * @param {UniversityJabatanCreateManyAndReturnArgs} args - Arguments to create many UniversityJabatans.
     * @example
     * // Create many UniversityJabatans
     * const universityJabatan = await prisma.universityJabatan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UniversityJabatans and only return the `UniversityJabatanId`
     * const universityJabatanWithUniversityJabatanIdOnly = await prisma.universityJabatan.createManyAndReturn({
     *   select: { UniversityJabatanId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversityJabatanCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversityJabatanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UniversityJabatan.
     * @param {UniversityJabatanDeleteArgs} args - Arguments to delete one UniversityJabatan.
     * @example
     * // Delete one UniversityJabatan
     * const UniversityJabatan = await prisma.universityJabatan.delete({
     *   where: {
     *     // ... filter to delete one UniversityJabatan
     *   }
     * })
     * 
     */
    delete<T extends UniversityJabatanDeleteArgs>(args: SelectSubset<T, UniversityJabatanDeleteArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UniversityJabatan.
     * @param {UniversityJabatanUpdateArgs} args - Arguments to update one UniversityJabatan.
     * @example
     * // Update one UniversityJabatan
     * const universityJabatan = await prisma.universityJabatan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversityJabatanUpdateArgs>(args: SelectSubset<T, UniversityJabatanUpdateArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UniversityJabatans.
     * @param {UniversityJabatanDeleteManyArgs} args - Arguments to filter UniversityJabatans to delete.
     * @example
     * // Delete a few UniversityJabatans
     * const { count } = await prisma.universityJabatan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversityJabatanDeleteManyArgs>(args?: SelectSubset<T, UniversityJabatanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityJabatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UniversityJabatans
     * const universityJabatan = await prisma.universityJabatan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversityJabatanUpdateManyArgs>(args: SelectSubset<T, UniversityJabatanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityJabatans and returns the data updated in the database.
     * @param {UniversityJabatanUpdateManyAndReturnArgs} args - Arguments to update many UniversityJabatans.
     * @example
     * // Update many UniversityJabatans
     * const universityJabatan = await prisma.universityJabatan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UniversityJabatans and only return the `UniversityJabatanId`
     * const universityJabatanWithUniversityJabatanIdOnly = await prisma.universityJabatan.updateManyAndReturn({
     *   select: { UniversityJabatanId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversityJabatanUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversityJabatanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UniversityJabatan.
     * @param {UniversityJabatanUpsertArgs} args - Arguments to update or create a UniversityJabatan.
     * @example
     * // Update or create a UniversityJabatan
     * const universityJabatan = await prisma.universityJabatan.upsert({
     *   create: {
     *     // ... data to create a UniversityJabatan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UniversityJabatan we want to update
     *   }
     * })
     */
    upsert<T extends UniversityJabatanUpsertArgs>(args: SelectSubset<T, UniversityJabatanUpsertArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UniversityJabatans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanCountArgs} args - Arguments to filter UniversityJabatans to count.
     * @example
     * // Count the number of UniversityJabatans
     * const count = await prisma.universityJabatan.count({
     *   where: {
     *     // ... the filter for the UniversityJabatans we want to count
     *   }
     * })
    **/
    count<T extends UniversityJabatanCountArgs>(
      args?: Subset<T, UniversityJabatanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversityJabatanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UniversityJabatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversityJabatanAggregateArgs>(args: Subset<T, UniversityJabatanAggregateArgs>): Prisma.PrismaPromise<GetUniversityJabatanAggregateType<T>>

    /**
     * Group by UniversityJabatan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversityJabatanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversityJabatanGroupByArgs['orderBy'] }
        : { orderBy?: UniversityJabatanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversityJabatanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversityJabatanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UniversityJabatan model
   */
  readonly fields: UniversityJabatanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UniversityJabatan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversityJabatanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    University<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    UniversityJabatanOrang<T extends UniversityJabatan$UniversityJabatanOrangArgs<ExtArgs> = {}>(args?: Subset<T, UniversityJabatan$UniversityJabatanOrangArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UniversityJabatan model
   */
  interface UniversityJabatanFieldRefs {
    readonly UniversityJabatanId: FieldRef<"UniversityJabatan", 'String'>
    readonly UniversityId: FieldRef<"UniversityJabatan", 'String'>
    readonly Nama: FieldRef<"UniversityJabatan", 'String'>
    readonly Keterangan: FieldRef<"UniversityJabatan", 'String'>
    readonly CreatedAt: FieldRef<"UniversityJabatan", 'DateTime'>
    readonly UpdatedAt: FieldRef<"UniversityJabatan", 'DateTime'>
    readonly DeletedAt: FieldRef<"UniversityJabatan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UniversityJabatan findUnique
   */
  export type UniversityJabatanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatan to fetch.
     */
    where: UniversityJabatanWhereUniqueInput
  }

  /**
   * UniversityJabatan findUniqueOrThrow
   */
  export type UniversityJabatanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatan to fetch.
     */
    where: UniversityJabatanWhereUniqueInput
  }

  /**
   * UniversityJabatan findFirst
   */
  export type UniversityJabatanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatan to fetch.
     */
    where?: UniversityJabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatans to fetch.
     */
    orderBy?: UniversityJabatanOrderByWithRelationInput | UniversityJabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityJabatans.
     */
    cursor?: UniversityJabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityJabatans.
     */
    distinct?: UniversityJabatanScalarFieldEnum | UniversityJabatanScalarFieldEnum[]
  }

  /**
   * UniversityJabatan findFirstOrThrow
   */
  export type UniversityJabatanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatan to fetch.
     */
    where?: UniversityJabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatans to fetch.
     */
    orderBy?: UniversityJabatanOrderByWithRelationInput | UniversityJabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityJabatans.
     */
    cursor?: UniversityJabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityJabatans.
     */
    distinct?: UniversityJabatanScalarFieldEnum | UniversityJabatanScalarFieldEnum[]
  }

  /**
   * UniversityJabatan findMany
   */
  export type UniversityJabatanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatans to fetch.
     */
    where?: UniversityJabatanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatans to fetch.
     */
    orderBy?: UniversityJabatanOrderByWithRelationInput | UniversityJabatanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UniversityJabatans.
     */
    cursor?: UniversityJabatanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatans.
     */
    skip?: number
    distinct?: UniversityJabatanScalarFieldEnum | UniversityJabatanScalarFieldEnum[]
  }

  /**
   * UniversityJabatan create
   */
  export type UniversityJabatanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * The data needed to create a UniversityJabatan.
     */
    data: XOR<UniversityJabatanCreateInput, UniversityJabatanUncheckedCreateInput>
  }

  /**
   * UniversityJabatan createMany
   */
  export type UniversityJabatanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UniversityJabatans.
     */
    data: UniversityJabatanCreateManyInput | UniversityJabatanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UniversityJabatan createManyAndReturn
   */
  export type UniversityJabatanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * The data used to create many UniversityJabatans.
     */
    data: UniversityJabatanCreateManyInput | UniversityJabatanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityJabatan update
   */
  export type UniversityJabatanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * The data needed to update a UniversityJabatan.
     */
    data: XOR<UniversityJabatanUpdateInput, UniversityJabatanUncheckedUpdateInput>
    /**
     * Choose, which UniversityJabatan to update.
     */
    where: UniversityJabatanWhereUniqueInput
  }

  /**
   * UniversityJabatan updateMany
   */
  export type UniversityJabatanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UniversityJabatans.
     */
    data: XOR<UniversityJabatanUpdateManyMutationInput, UniversityJabatanUncheckedUpdateManyInput>
    /**
     * Filter which UniversityJabatans to update
     */
    where?: UniversityJabatanWhereInput
    /**
     * Limit how many UniversityJabatans to update.
     */
    limit?: number
  }

  /**
   * UniversityJabatan updateManyAndReturn
   */
  export type UniversityJabatanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * The data used to update UniversityJabatans.
     */
    data: XOR<UniversityJabatanUpdateManyMutationInput, UniversityJabatanUncheckedUpdateManyInput>
    /**
     * Filter which UniversityJabatans to update
     */
    where?: UniversityJabatanWhereInput
    /**
     * Limit how many UniversityJabatans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityJabatan upsert
   */
  export type UniversityJabatanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * The filter to search for the UniversityJabatan to update in case it exists.
     */
    where: UniversityJabatanWhereUniqueInput
    /**
     * In case the UniversityJabatan found by the `where` argument doesn't exist, create a new UniversityJabatan with this data.
     */
    create: XOR<UniversityJabatanCreateInput, UniversityJabatanUncheckedCreateInput>
    /**
     * In case the UniversityJabatan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversityJabatanUpdateInput, UniversityJabatanUncheckedUpdateInput>
  }

  /**
   * UniversityJabatan delete
   */
  export type UniversityJabatanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
    /**
     * Filter which UniversityJabatan to delete.
     */
    where: UniversityJabatanWhereUniqueInput
  }

  /**
   * UniversityJabatan deleteMany
   */
  export type UniversityJabatanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityJabatans to delete
     */
    where?: UniversityJabatanWhereInput
    /**
     * Limit how many UniversityJabatans to delete.
     */
    limit?: number
  }

  /**
   * UniversityJabatan.UniversityJabatanOrang
   */
  export type UniversityJabatan$UniversityJabatanOrangArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    where?: UniversityJabatanOrangWhereInput
    orderBy?: UniversityJabatanOrangOrderByWithRelationInput | UniversityJabatanOrangOrderByWithRelationInput[]
    cursor?: UniversityJabatanOrangWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversityJabatanOrangScalarFieldEnum | UniversityJabatanOrangScalarFieldEnum[]
  }

  /**
   * UniversityJabatan without action
   */
  export type UniversityJabatanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatan
     */
    select?: UniversityJabatanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatan
     */
    omit?: UniversityJabatanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanInclude<ExtArgs> | null
  }


  /**
   * Model UniversityJabatanOrang
   */

  export type AggregateUniversityJabatanOrang = {
    _count: UniversityJabatanOrangCountAggregateOutputType | null
    _min: UniversityJabatanOrangMinAggregateOutputType | null
    _max: UniversityJabatanOrangMaxAggregateOutputType | null
  }

  export type UniversityJabatanOrangMinAggregateOutputType = {
    UniversityJabatanOrangId: string | null
    UniversityJabatanId: string | null
    Nama: string | null
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UniversityJabatanOrangMaxAggregateOutputType = {
    UniversityJabatanOrangId: string | null
    UniversityJabatanId: string | null
    Nama: string | null
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UniversityJabatanOrangCountAggregateOutputType = {
    UniversityJabatanOrangId: number
    UniversityJabatanId: number
    Nama: number
    Keterangan: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type UniversityJabatanOrangMinAggregateInputType = {
    UniversityJabatanOrangId?: true
    UniversityJabatanId?: true
    Nama?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UniversityJabatanOrangMaxAggregateInputType = {
    UniversityJabatanOrangId?: true
    UniversityJabatanId?: true
    Nama?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UniversityJabatanOrangCountAggregateInputType = {
    UniversityJabatanOrangId?: true
    UniversityJabatanId?: true
    Nama?: true
    Keterangan?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type UniversityJabatanOrangAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityJabatanOrang to aggregate.
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatanOrangs to fetch.
     */
    orderBy?: UniversityJabatanOrangOrderByWithRelationInput | UniversityJabatanOrangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversityJabatanOrangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatanOrangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatanOrangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UniversityJabatanOrangs
    **/
    _count?: true | UniversityJabatanOrangCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversityJabatanOrangMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversityJabatanOrangMaxAggregateInputType
  }

  export type GetUniversityJabatanOrangAggregateType<T extends UniversityJabatanOrangAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversityJabatanOrang]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversityJabatanOrang[P]>
      : GetScalarType<T[P], AggregateUniversityJabatanOrang[P]>
  }




  export type UniversityJabatanOrangGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityJabatanOrangWhereInput
    orderBy?: UniversityJabatanOrangOrderByWithAggregationInput | UniversityJabatanOrangOrderByWithAggregationInput[]
    by: UniversityJabatanOrangScalarFieldEnum[] | UniversityJabatanOrangScalarFieldEnum
    having?: UniversityJabatanOrangScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversityJabatanOrangCountAggregateInputType | true
    _min?: UniversityJabatanOrangMinAggregateInputType
    _max?: UniversityJabatanOrangMaxAggregateInputType
  }

  export type UniversityJabatanOrangGroupByOutputType = {
    UniversityJabatanOrangId: string
    UniversityJabatanId: string
    Nama: string
    Keterangan: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: UniversityJabatanOrangCountAggregateOutputType | null
    _min: UniversityJabatanOrangMinAggregateOutputType | null
    _max: UniversityJabatanOrangMaxAggregateOutputType | null
  }

  type GetUniversityJabatanOrangGroupByPayload<T extends UniversityJabatanOrangGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversityJabatanOrangGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversityJabatanOrangGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversityJabatanOrangGroupByOutputType[P]>
            : GetScalarType<T[P], UniversityJabatanOrangGroupByOutputType[P]>
        }
      >
    >


  export type UniversityJabatanOrangSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityJabatanOrangId?: boolean
    UniversityJabatanId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    UniversityJabatan?: boolean | UniversityJabatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityJabatanOrang"]>

  export type UniversityJabatanOrangSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityJabatanOrangId?: boolean
    UniversityJabatanId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    UniversityJabatan?: boolean | UniversityJabatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityJabatanOrang"]>

  export type UniversityJabatanOrangSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UniversityJabatanOrangId?: boolean
    UniversityJabatanId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    UniversityJabatan?: boolean | UniversityJabatanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityJabatanOrang"]>

  export type UniversityJabatanOrangSelectScalar = {
    UniversityJabatanOrangId?: boolean
    UniversityJabatanId?: boolean
    Nama?: boolean
    Keterangan?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type UniversityJabatanOrangOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UniversityJabatanOrangId" | "UniversityJabatanId" | "Nama" | "Keterangan" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["universityJabatanOrang"]>
  export type UniversityJabatanOrangInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UniversityJabatan?: boolean | UniversityJabatanDefaultArgs<ExtArgs>
  }
  export type UniversityJabatanOrangIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UniversityJabatan?: boolean | UniversityJabatanDefaultArgs<ExtArgs>
  }
  export type UniversityJabatanOrangIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UniversityJabatan?: boolean | UniversityJabatanDefaultArgs<ExtArgs>
  }

  export type $UniversityJabatanOrangPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UniversityJabatanOrang"
    objects: {
      UniversityJabatan: Prisma.$UniversityJabatanPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      UniversityJabatanOrangId: string
      UniversityJabatanId: string
      Nama: string
      Keterangan: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["universityJabatanOrang"]>
    composites: {}
  }

  type UniversityJabatanOrangGetPayload<S extends boolean | null | undefined | UniversityJabatanOrangDefaultArgs> = $Result.GetResult<Prisma.$UniversityJabatanOrangPayload, S>

  type UniversityJabatanOrangCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversityJabatanOrangFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversityJabatanOrangCountAggregateInputType | true
    }

  export interface UniversityJabatanOrangDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UniversityJabatanOrang'], meta: { name: 'UniversityJabatanOrang' } }
    /**
     * Find zero or one UniversityJabatanOrang that matches the filter.
     * @param {UniversityJabatanOrangFindUniqueArgs} args - Arguments to find a UniversityJabatanOrang
     * @example
     * // Get one UniversityJabatanOrang
     * const universityJabatanOrang = await prisma.universityJabatanOrang.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversityJabatanOrangFindUniqueArgs>(args: SelectSubset<T, UniversityJabatanOrangFindUniqueArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UniversityJabatanOrang that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversityJabatanOrangFindUniqueOrThrowArgs} args - Arguments to find a UniversityJabatanOrang
     * @example
     * // Get one UniversityJabatanOrang
     * const universityJabatanOrang = await prisma.universityJabatanOrang.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversityJabatanOrangFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversityJabatanOrangFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityJabatanOrang that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangFindFirstArgs} args - Arguments to find a UniversityJabatanOrang
     * @example
     * // Get one UniversityJabatanOrang
     * const universityJabatanOrang = await prisma.universityJabatanOrang.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversityJabatanOrangFindFirstArgs>(args?: SelectSubset<T, UniversityJabatanOrangFindFirstArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityJabatanOrang that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangFindFirstOrThrowArgs} args - Arguments to find a UniversityJabatanOrang
     * @example
     * // Get one UniversityJabatanOrang
     * const universityJabatanOrang = await prisma.universityJabatanOrang.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversityJabatanOrangFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversityJabatanOrangFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UniversityJabatanOrangs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UniversityJabatanOrangs
     * const universityJabatanOrangs = await prisma.universityJabatanOrang.findMany()
     * 
     * // Get first 10 UniversityJabatanOrangs
     * const universityJabatanOrangs = await prisma.universityJabatanOrang.findMany({ take: 10 })
     * 
     * // Only select the `UniversityJabatanOrangId`
     * const universityJabatanOrangWithUniversityJabatanOrangIdOnly = await prisma.universityJabatanOrang.findMany({ select: { UniversityJabatanOrangId: true } })
     * 
     */
    findMany<T extends UniversityJabatanOrangFindManyArgs>(args?: SelectSubset<T, UniversityJabatanOrangFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UniversityJabatanOrang.
     * @param {UniversityJabatanOrangCreateArgs} args - Arguments to create a UniversityJabatanOrang.
     * @example
     * // Create one UniversityJabatanOrang
     * const UniversityJabatanOrang = await prisma.universityJabatanOrang.create({
     *   data: {
     *     // ... data to create a UniversityJabatanOrang
     *   }
     * })
     * 
     */
    create<T extends UniversityJabatanOrangCreateArgs>(args: SelectSubset<T, UniversityJabatanOrangCreateArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UniversityJabatanOrangs.
     * @param {UniversityJabatanOrangCreateManyArgs} args - Arguments to create many UniversityJabatanOrangs.
     * @example
     * // Create many UniversityJabatanOrangs
     * const universityJabatanOrang = await prisma.universityJabatanOrang.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversityJabatanOrangCreateManyArgs>(args?: SelectSubset<T, UniversityJabatanOrangCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UniversityJabatanOrangs and returns the data saved in the database.
     * @param {UniversityJabatanOrangCreateManyAndReturnArgs} args - Arguments to create many UniversityJabatanOrangs.
     * @example
     * // Create many UniversityJabatanOrangs
     * const universityJabatanOrang = await prisma.universityJabatanOrang.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UniversityJabatanOrangs and only return the `UniversityJabatanOrangId`
     * const universityJabatanOrangWithUniversityJabatanOrangIdOnly = await prisma.universityJabatanOrang.createManyAndReturn({
     *   select: { UniversityJabatanOrangId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversityJabatanOrangCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversityJabatanOrangCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UniversityJabatanOrang.
     * @param {UniversityJabatanOrangDeleteArgs} args - Arguments to delete one UniversityJabatanOrang.
     * @example
     * // Delete one UniversityJabatanOrang
     * const UniversityJabatanOrang = await prisma.universityJabatanOrang.delete({
     *   where: {
     *     // ... filter to delete one UniversityJabatanOrang
     *   }
     * })
     * 
     */
    delete<T extends UniversityJabatanOrangDeleteArgs>(args: SelectSubset<T, UniversityJabatanOrangDeleteArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UniversityJabatanOrang.
     * @param {UniversityJabatanOrangUpdateArgs} args - Arguments to update one UniversityJabatanOrang.
     * @example
     * // Update one UniversityJabatanOrang
     * const universityJabatanOrang = await prisma.universityJabatanOrang.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversityJabatanOrangUpdateArgs>(args: SelectSubset<T, UniversityJabatanOrangUpdateArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UniversityJabatanOrangs.
     * @param {UniversityJabatanOrangDeleteManyArgs} args - Arguments to filter UniversityJabatanOrangs to delete.
     * @example
     * // Delete a few UniversityJabatanOrangs
     * const { count } = await prisma.universityJabatanOrang.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversityJabatanOrangDeleteManyArgs>(args?: SelectSubset<T, UniversityJabatanOrangDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityJabatanOrangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UniversityJabatanOrangs
     * const universityJabatanOrang = await prisma.universityJabatanOrang.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversityJabatanOrangUpdateManyArgs>(args: SelectSubset<T, UniversityJabatanOrangUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityJabatanOrangs and returns the data updated in the database.
     * @param {UniversityJabatanOrangUpdateManyAndReturnArgs} args - Arguments to update many UniversityJabatanOrangs.
     * @example
     * // Update many UniversityJabatanOrangs
     * const universityJabatanOrang = await prisma.universityJabatanOrang.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UniversityJabatanOrangs and only return the `UniversityJabatanOrangId`
     * const universityJabatanOrangWithUniversityJabatanOrangIdOnly = await prisma.universityJabatanOrang.updateManyAndReturn({
     *   select: { UniversityJabatanOrangId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversityJabatanOrangUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversityJabatanOrangUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UniversityJabatanOrang.
     * @param {UniversityJabatanOrangUpsertArgs} args - Arguments to update or create a UniversityJabatanOrang.
     * @example
     * // Update or create a UniversityJabatanOrang
     * const universityJabatanOrang = await prisma.universityJabatanOrang.upsert({
     *   create: {
     *     // ... data to create a UniversityJabatanOrang
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UniversityJabatanOrang we want to update
     *   }
     * })
     */
    upsert<T extends UniversityJabatanOrangUpsertArgs>(args: SelectSubset<T, UniversityJabatanOrangUpsertArgs<ExtArgs>>): Prisma__UniversityJabatanOrangClient<$Result.GetResult<Prisma.$UniversityJabatanOrangPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UniversityJabatanOrangs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangCountArgs} args - Arguments to filter UniversityJabatanOrangs to count.
     * @example
     * // Count the number of UniversityJabatanOrangs
     * const count = await prisma.universityJabatanOrang.count({
     *   where: {
     *     // ... the filter for the UniversityJabatanOrangs we want to count
     *   }
     * })
    **/
    count<T extends UniversityJabatanOrangCountArgs>(
      args?: Subset<T, UniversityJabatanOrangCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversityJabatanOrangCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UniversityJabatanOrang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversityJabatanOrangAggregateArgs>(args: Subset<T, UniversityJabatanOrangAggregateArgs>): Prisma.PrismaPromise<GetUniversityJabatanOrangAggregateType<T>>

    /**
     * Group by UniversityJabatanOrang.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityJabatanOrangGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversityJabatanOrangGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversityJabatanOrangGroupByArgs['orderBy'] }
        : { orderBy?: UniversityJabatanOrangGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversityJabatanOrangGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversityJabatanOrangGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UniversityJabatanOrang model
   */
  readonly fields: UniversityJabatanOrangFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UniversityJabatanOrang.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversityJabatanOrangClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    UniversityJabatan<T extends UniversityJabatanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityJabatanDefaultArgs<ExtArgs>>): Prisma__UniversityJabatanClient<$Result.GetResult<Prisma.$UniversityJabatanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UniversityJabatanOrang model
   */
  interface UniversityJabatanOrangFieldRefs {
    readonly UniversityJabatanOrangId: FieldRef<"UniversityJabatanOrang", 'String'>
    readonly UniversityJabatanId: FieldRef<"UniversityJabatanOrang", 'String'>
    readonly Nama: FieldRef<"UniversityJabatanOrang", 'String'>
    readonly Keterangan: FieldRef<"UniversityJabatanOrang", 'String'>
    readonly CreatedAt: FieldRef<"UniversityJabatanOrang", 'DateTime'>
    readonly UpdatedAt: FieldRef<"UniversityJabatanOrang", 'DateTime'>
    readonly DeletedAt: FieldRef<"UniversityJabatanOrang", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UniversityJabatanOrang findUnique
   */
  export type UniversityJabatanOrangFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatanOrang to fetch.
     */
    where: UniversityJabatanOrangWhereUniqueInput
  }

  /**
   * UniversityJabatanOrang findUniqueOrThrow
   */
  export type UniversityJabatanOrangFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatanOrang to fetch.
     */
    where: UniversityJabatanOrangWhereUniqueInput
  }

  /**
   * UniversityJabatanOrang findFirst
   */
  export type UniversityJabatanOrangFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatanOrang to fetch.
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatanOrangs to fetch.
     */
    orderBy?: UniversityJabatanOrangOrderByWithRelationInput | UniversityJabatanOrangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityJabatanOrangs.
     */
    cursor?: UniversityJabatanOrangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatanOrangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatanOrangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityJabatanOrangs.
     */
    distinct?: UniversityJabatanOrangScalarFieldEnum | UniversityJabatanOrangScalarFieldEnum[]
  }

  /**
   * UniversityJabatanOrang findFirstOrThrow
   */
  export type UniversityJabatanOrangFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatanOrang to fetch.
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatanOrangs to fetch.
     */
    orderBy?: UniversityJabatanOrangOrderByWithRelationInput | UniversityJabatanOrangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityJabatanOrangs.
     */
    cursor?: UniversityJabatanOrangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatanOrangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatanOrangs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityJabatanOrangs.
     */
    distinct?: UniversityJabatanOrangScalarFieldEnum | UniversityJabatanOrangScalarFieldEnum[]
  }

  /**
   * UniversityJabatanOrang findMany
   */
  export type UniversityJabatanOrangFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * Filter, which UniversityJabatanOrangs to fetch.
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityJabatanOrangs to fetch.
     */
    orderBy?: UniversityJabatanOrangOrderByWithRelationInput | UniversityJabatanOrangOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UniversityJabatanOrangs.
     */
    cursor?: UniversityJabatanOrangWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityJabatanOrangs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityJabatanOrangs.
     */
    skip?: number
    distinct?: UniversityJabatanOrangScalarFieldEnum | UniversityJabatanOrangScalarFieldEnum[]
  }

  /**
   * UniversityJabatanOrang create
   */
  export type UniversityJabatanOrangCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * The data needed to create a UniversityJabatanOrang.
     */
    data: XOR<UniversityJabatanOrangCreateInput, UniversityJabatanOrangUncheckedCreateInput>
  }

  /**
   * UniversityJabatanOrang createMany
   */
  export type UniversityJabatanOrangCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UniversityJabatanOrangs.
     */
    data: UniversityJabatanOrangCreateManyInput | UniversityJabatanOrangCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UniversityJabatanOrang createManyAndReturn
   */
  export type UniversityJabatanOrangCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * The data used to create many UniversityJabatanOrangs.
     */
    data: UniversityJabatanOrangCreateManyInput | UniversityJabatanOrangCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityJabatanOrang update
   */
  export type UniversityJabatanOrangUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * The data needed to update a UniversityJabatanOrang.
     */
    data: XOR<UniversityJabatanOrangUpdateInput, UniversityJabatanOrangUncheckedUpdateInput>
    /**
     * Choose, which UniversityJabatanOrang to update.
     */
    where: UniversityJabatanOrangWhereUniqueInput
  }

  /**
   * UniversityJabatanOrang updateMany
   */
  export type UniversityJabatanOrangUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UniversityJabatanOrangs.
     */
    data: XOR<UniversityJabatanOrangUpdateManyMutationInput, UniversityJabatanOrangUncheckedUpdateManyInput>
    /**
     * Filter which UniversityJabatanOrangs to update
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * Limit how many UniversityJabatanOrangs to update.
     */
    limit?: number
  }

  /**
   * UniversityJabatanOrang updateManyAndReturn
   */
  export type UniversityJabatanOrangUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * The data used to update UniversityJabatanOrangs.
     */
    data: XOR<UniversityJabatanOrangUpdateManyMutationInput, UniversityJabatanOrangUncheckedUpdateManyInput>
    /**
     * Filter which UniversityJabatanOrangs to update
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * Limit how many UniversityJabatanOrangs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityJabatanOrang upsert
   */
  export type UniversityJabatanOrangUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * The filter to search for the UniversityJabatanOrang to update in case it exists.
     */
    where: UniversityJabatanOrangWhereUniqueInput
    /**
     * In case the UniversityJabatanOrang found by the `where` argument doesn't exist, create a new UniversityJabatanOrang with this data.
     */
    create: XOR<UniversityJabatanOrangCreateInput, UniversityJabatanOrangUncheckedCreateInput>
    /**
     * In case the UniversityJabatanOrang was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversityJabatanOrangUpdateInput, UniversityJabatanOrangUncheckedUpdateInput>
  }

  /**
   * UniversityJabatanOrang delete
   */
  export type UniversityJabatanOrangDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
    /**
     * Filter which UniversityJabatanOrang to delete.
     */
    where: UniversityJabatanOrangWhereUniqueInput
  }

  /**
   * UniversityJabatanOrang deleteMany
   */
  export type UniversityJabatanOrangDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityJabatanOrangs to delete
     */
    where?: UniversityJabatanOrangWhereInput
    /**
     * Limit how many UniversityJabatanOrangs to delete.
     */
    limit?: number
  }

  /**
   * UniversityJabatanOrang without action
   */
  export type UniversityJabatanOrangDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityJabatanOrang
     */
    select?: UniversityJabatanOrangSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityJabatanOrang
     */
    omit?: UniversityJabatanOrangOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityJabatanOrangInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    UserId: string | null
    AlamatId: string | null
    Nama: string | null
    Email: string | null
    EmailVerifiedAt: Date | null
    TempatLahir: string | null
    TanggalLahir: Date | null
    JenisKelamin: $Enums.JenisKelamin | null
    PendidikanTerakhir: $Enums.Jenjang | null
    Avatar: string | null
    Agama: string | null
    Telepon: string | null
    NomorWa: string | null
    NomorHp: string | null
    RememberToken: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    UserId: string | null
    AlamatId: string | null
    Nama: string | null
    Email: string | null
    EmailVerifiedAt: Date | null
    TempatLahir: string | null
    TanggalLahir: Date | null
    JenisKelamin: $Enums.JenisKelamin | null
    PendidikanTerakhir: $Enums.Jenjang | null
    Avatar: string | null
    Agama: string | null
    Telepon: string | null
    NomorWa: string | null
    NomorHp: string | null
    RememberToken: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    UserId: number
    AlamatId: number
    Nama: number
    Email: number
    EmailVerifiedAt: number
    TempatLahir: number
    TanggalLahir: number
    JenisKelamin: number
    PendidikanTerakhir: number
    Avatar: number
    Agama: number
    Telepon: number
    NomorWa: number
    NomorHp: number
    RememberToken: number
    CreatedAt: number
    UpdatedAt: number
    DeletedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    UserId?: true
    AlamatId?: true
    Nama?: true
    Email?: true
    EmailVerifiedAt?: true
    TempatLahir?: true
    TanggalLahir?: true
    JenisKelamin?: true
    PendidikanTerakhir?: true
    Avatar?: true
    Agama?: true
    Telepon?: true
    NomorWa?: true
    NomorHp?: true
    RememberToken?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UserMaxAggregateInputType = {
    UserId?: true
    AlamatId?: true
    Nama?: true
    Email?: true
    EmailVerifiedAt?: true
    TempatLahir?: true
    TanggalLahir?: true
    JenisKelamin?: true
    PendidikanTerakhir?: true
    Avatar?: true
    Agama?: true
    Telepon?: true
    NomorWa?: true
    NomorHp?: true
    RememberToken?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
  }

  export type UserCountAggregateInputType = {
    UserId?: true
    AlamatId?: true
    Nama?: true
    Email?: true
    EmailVerifiedAt?: true
    TempatLahir?: true
    TanggalLahir?: true
    JenisKelamin?: true
    PendidikanTerakhir?: true
    Avatar?: true
    Agama?: true
    Telepon?: true
    NomorWa?: true
    NomorHp?: true
    RememberToken?: true
    CreatedAt?: true
    UpdatedAt?: true
    DeletedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    UserId: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt: Date | null
    TempatLahir: string | null
    TanggalLahir: Date | null
    JenisKelamin: $Enums.JenisKelamin
    PendidikanTerakhir: $Enums.Jenjang
    Avatar: string | null
    Agama: string | null
    Telepon: string | null
    NomorWa: string | null
    NomorHp: string | null
    RememberToken: string | null
    CreatedAt: Date | null
    UpdatedAt: Date | null
    DeletedAt: Date | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Email?: boolean
    EmailVerifiedAt?: boolean
    TempatLahir?: boolean
    TanggalLahir?: boolean
    JenisKelamin?: boolean
    PendidikanTerakhir?: boolean
    Avatar?: boolean
    Agama?: boolean
    Telepon?: boolean
    NomorWa?: boolean
    NomorHp?: boolean
    RememberToken?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
    Mahasiswa?: boolean | User$MahasiswaArgs<ExtArgs>
    UserHasPermissions?: boolean | User$UserHasPermissionsArgs<ExtArgs>
    UserHasRoles?: boolean | User$UserHasRolesArgs<ExtArgs>
    Userlogin?: boolean | User$UserloginArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Email?: boolean
    EmailVerifiedAt?: boolean
    TempatLahir?: boolean
    TanggalLahir?: boolean
    JenisKelamin?: boolean
    PendidikanTerakhir?: boolean
    Avatar?: boolean
    Agama?: boolean
    Telepon?: boolean
    NomorWa?: boolean
    NomorHp?: boolean
    RememberToken?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Email?: boolean
    EmailVerifiedAt?: boolean
    TempatLahir?: boolean
    TanggalLahir?: boolean
    JenisKelamin?: boolean
    PendidikanTerakhir?: boolean
    Avatar?: boolean
    Agama?: boolean
    Telepon?: boolean
    NomorWa?: boolean
    NomorHp?: boolean
    RememberToken?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    UserId?: boolean
    AlamatId?: boolean
    Nama?: boolean
    Email?: boolean
    EmailVerifiedAt?: boolean
    TempatLahir?: boolean
    TanggalLahir?: boolean
    JenisKelamin?: boolean
    PendidikanTerakhir?: boolean
    Avatar?: boolean
    Agama?: boolean
    Telepon?: boolean
    NomorWa?: boolean
    NomorHp?: boolean
    RememberToken?: boolean
    CreatedAt?: boolean
    UpdatedAt?: boolean
    DeletedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UserId" | "AlamatId" | "Nama" | "Email" | "EmailVerifiedAt" | "TempatLahir" | "TanggalLahir" | "JenisKelamin" | "PendidikanTerakhir" | "Avatar" | "Agama" | "Telepon" | "NomorWa" | "NomorHp" | "RememberToken" | "CreatedAt" | "UpdatedAt" | "DeletedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
    Mahasiswa?: boolean | User$MahasiswaArgs<ExtArgs>
    UserHasPermissions?: boolean | User$UserHasPermissionsArgs<ExtArgs>
    UserHasRoles?: boolean | User$UserHasRolesArgs<ExtArgs>
    Userlogin?: boolean | User$UserloginArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alamat?: boolean | AlamatDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      Alamat: Prisma.$AlamatPayload<ExtArgs>
      Mahasiswa: Prisma.$MahasiswaPayload<ExtArgs>[]
      UserHasPermissions: Prisma.$UserHasPermissionsPayload<ExtArgs>[]
      UserHasRoles: Prisma.$UserHasRolesPayload<ExtArgs>[]
      Userlogin: Prisma.$UserloginPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      UserId: string
      AlamatId: string
      Nama: string
      Email: string
      EmailVerifiedAt: Date | null
      TempatLahir: string | null
      TanggalLahir: Date | null
      JenisKelamin: $Enums.JenisKelamin
      PendidikanTerakhir: $Enums.Jenjang
      Avatar: string | null
      Agama: string | null
      Telepon: string | null
      NomorWa: string | null
      NomorHp: string | null
      RememberToken: string | null
      CreatedAt: Date | null
      UpdatedAt: Date | null
      DeletedAt: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `UserId`
     * const userWithUserIdOnly = await prisma.user.findMany({ select: { UserId: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `UserId`
     * const userWithUserIdOnly = await prisma.user.createManyAndReturn({
     *   select: { UserId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `UserId`
     * const userWithUserIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { UserId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alamat<T extends AlamatDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlamatDefaultArgs<ExtArgs>>): Prisma__AlamatClient<$Result.GetResult<Prisma.$AlamatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Mahasiswa<T extends User$MahasiswaArgs<ExtArgs> = {}>(args?: Subset<T, User$MahasiswaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserHasPermissions<T extends User$UserHasPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, User$UserHasPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasPermissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserHasRoles<T extends User$UserHasRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$UserHasRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserHasRolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Userlogin<T extends User$UserloginArgs<ExtArgs> = {}>(args?: Subset<T, User$UserloginArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly UserId: FieldRef<"User", 'String'>
    readonly AlamatId: FieldRef<"User", 'String'>
    readonly Nama: FieldRef<"User", 'String'>
    readonly Email: FieldRef<"User", 'String'>
    readonly EmailVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly TempatLahir: FieldRef<"User", 'String'>
    readonly TanggalLahir: FieldRef<"User", 'DateTime'>
    readonly JenisKelamin: FieldRef<"User", 'JenisKelamin'>
    readonly PendidikanTerakhir: FieldRef<"User", 'Jenjang'>
    readonly Avatar: FieldRef<"User", 'String'>
    readonly Agama: FieldRef<"User", 'String'>
    readonly Telepon: FieldRef<"User", 'String'>
    readonly NomorWa: FieldRef<"User", 'String'>
    readonly NomorHp: FieldRef<"User", 'String'>
    readonly RememberToken: FieldRef<"User", 'String'>
    readonly CreatedAt: FieldRef<"User", 'DateTime'>
    readonly UpdatedAt: FieldRef<"User", 'DateTime'>
    readonly DeletedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.Mahasiswa
   */
  export type User$MahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mahasiswa
     */
    omit?: MahasiswaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    where?: MahasiswaWhereInput
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    cursor?: MahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * User.UserHasPermissions
   */
  export type User$UserHasPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasPermissions
     */
    select?: UserHasPermissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasPermissions
     */
    omit?: UserHasPermissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasPermissionsInclude<ExtArgs> | null
    where?: UserHasPermissionsWhereInput
    orderBy?: UserHasPermissionsOrderByWithRelationInput | UserHasPermissionsOrderByWithRelationInput[]
    cursor?: UserHasPermissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHasPermissionsScalarFieldEnum | UserHasPermissionsScalarFieldEnum[]
  }

  /**
   * User.UserHasRoles
   */
  export type User$UserHasRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserHasRoles
     */
    select?: UserHasRolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserHasRoles
     */
    omit?: UserHasRolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserHasRolesInclude<ExtArgs> | null
    where?: UserHasRolesWhereInput
    orderBy?: UserHasRolesOrderByWithRelationInput | UserHasRolesOrderByWithRelationInput[]
    cursor?: UserHasRolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserHasRolesScalarFieldEnum | UserHasRolesScalarFieldEnum[]
  }

  /**
   * User.Userlogin
   */
  export type User$UserloginArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    where?: UserloginWhereInput
    orderBy?: UserloginOrderByWithRelationInput | UserloginOrderByWithRelationInput[]
    cursor?: UserloginWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserloginScalarFieldEnum | UserloginScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Userlogin
   */

  export type AggregateUserlogin = {
    _count: UserloginCountAggregateOutputType | null
    _min: UserloginMinAggregateOutputType | null
    _max: UserloginMaxAggregateOutputType | null
  }

  export type UserloginMinAggregateOutputType = {
    UserloginId: string | null
    UserId: string | null
    Username: string | null
    Password: string | null
    Credential: string | null
  }

  export type UserloginMaxAggregateOutputType = {
    UserloginId: string | null
    UserId: string | null
    Username: string | null
    Password: string | null
    Credential: string | null
  }

  export type UserloginCountAggregateOutputType = {
    UserloginId: number
    UserId: number
    Username: number
    Password: number
    Credential: number
    _all: number
  }


  export type UserloginMinAggregateInputType = {
    UserloginId?: true
    UserId?: true
    Username?: true
    Password?: true
    Credential?: true
  }

  export type UserloginMaxAggregateInputType = {
    UserloginId?: true
    UserId?: true
    Username?: true
    Password?: true
    Credential?: true
  }

  export type UserloginCountAggregateInputType = {
    UserloginId?: true
    UserId?: true
    Username?: true
    Password?: true
    Credential?: true
    _all?: true
  }

  export type UserloginAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Userlogin to aggregate.
     */
    where?: UserloginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Userlogins to fetch.
     */
    orderBy?: UserloginOrderByWithRelationInput | UserloginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserloginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Userlogins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Userlogins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Userlogins
    **/
    _count?: true | UserloginCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserloginMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserloginMaxAggregateInputType
  }

  export type GetUserloginAggregateType<T extends UserloginAggregateArgs> = {
        [P in keyof T & keyof AggregateUserlogin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserlogin[P]>
      : GetScalarType<T[P], AggregateUserlogin[P]>
  }




  export type UserloginGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserloginWhereInput
    orderBy?: UserloginOrderByWithAggregationInput | UserloginOrderByWithAggregationInput[]
    by: UserloginScalarFieldEnum[] | UserloginScalarFieldEnum
    having?: UserloginScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserloginCountAggregateInputType | true
    _min?: UserloginMinAggregateInputType
    _max?: UserloginMaxAggregateInputType
  }

  export type UserloginGroupByOutputType = {
    UserloginId: string
    UserId: string
    Username: string
    Password: string
    Credential: string
    _count: UserloginCountAggregateOutputType | null
    _min: UserloginMinAggregateOutputType | null
    _max: UserloginMaxAggregateOutputType | null
  }

  type GetUserloginGroupByPayload<T extends UserloginGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserloginGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserloginGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserloginGroupByOutputType[P]>
            : GetScalarType<T[P], UserloginGroupByOutputType[P]>
        }
      >
    >


  export type UserloginSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserloginId?: boolean
    UserId?: boolean
    Username?: boolean
    Password?: boolean
    Credential?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userlogin"]>

  export type UserloginSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserloginId?: boolean
    UserId?: boolean
    Username?: boolean
    Password?: boolean
    Credential?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userlogin"]>

  export type UserloginSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserloginId?: boolean
    UserId?: boolean
    Username?: boolean
    Password?: boolean
    Credential?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userlogin"]>

  export type UserloginSelectScalar = {
    UserloginId?: boolean
    UserId?: boolean
    Username?: boolean
    Password?: boolean
    Credential?: boolean
  }

  export type UserloginOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UserloginId" | "UserId" | "Username" | "Password" | "Credential", ExtArgs["result"]["userlogin"]>
  export type UserloginInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserloginIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserloginIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserloginPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Userlogin"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      UserloginId: string
      UserId: string
      Username: string
      Password: string
      Credential: string
    }, ExtArgs["result"]["userlogin"]>
    composites: {}
  }

  type UserloginGetPayload<S extends boolean | null | undefined | UserloginDefaultArgs> = $Result.GetResult<Prisma.$UserloginPayload, S>

  type UserloginCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserloginFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserloginCountAggregateInputType | true
    }

  export interface UserloginDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Userlogin'], meta: { name: 'Userlogin' } }
    /**
     * Find zero or one Userlogin that matches the filter.
     * @param {UserloginFindUniqueArgs} args - Arguments to find a Userlogin
     * @example
     * // Get one Userlogin
     * const userlogin = await prisma.userlogin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserloginFindUniqueArgs>(args: SelectSubset<T, UserloginFindUniqueArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Userlogin that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserloginFindUniqueOrThrowArgs} args - Arguments to find a Userlogin
     * @example
     * // Get one Userlogin
     * const userlogin = await prisma.userlogin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserloginFindUniqueOrThrowArgs>(args: SelectSubset<T, UserloginFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Userlogin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginFindFirstArgs} args - Arguments to find a Userlogin
     * @example
     * // Get one Userlogin
     * const userlogin = await prisma.userlogin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserloginFindFirstArgs>(args?: SelectSubset<T, UserloginFindFirstArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Userlogin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginFindFirstOrThrowArgs} args - Arguments to find a Userlogin
     * @example
     * // Get one Userlogin
     * const userlogin = await prisma.userlogin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserloginFindFirstOrThrowArgs>(args?: SelectSubset<T, UserloginFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Userlogins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Userlogins
     * const userlogins = await prisma.userlogin.findMany()
     * 
     * // Get first 10 Userlogins
     * const userlogins = await prisma.userlogin.findMany({ take: 10 })
     * 
     * // Only select the `UserloginId`
     * const userloginWithUserloginIdOnly = await prisma.userlogin.findMany({ select: { UserloginId: true } })
     * 
     */
    findMany<T extends UserloginFindManyArgs>(args?: SelectSubset<T, UserloginFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Userlogin.
     * @param {UserloginCreateArgs} args - Arguments to create a Userlogin.
     * @example
     * // Create one Userlogin
     * const Userlogin = await prisma.userlogin.create({
     *   data: {
     *     // ... data to create a Userlogin
     *   }
     * })
     * 
     */
    create<T extends UserloginCreateArgs>(args: SelectSubset<T, UserloginCreateArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Userlogins.
     * @param {UserloginCreateManyArgs} args - Arguments to create many Userlogins.
     * @example
     * // Create many Userlogins
     * const userlogin = await prisma.userlogin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserloginCreateManyArgs>(args?: SelectSubset<T, UserloginCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Userlogins and returns the data saved in the database.
     * @param {UserloginCreateManyAndReturnArgs} args - Arguments to create many Userlogins.
     * @example
     * // Create many Userlogins
     * const userlogin = await prisma.userlogin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Userlogins and only return the `UserloginId`
     * const userloginWithUserloginIdOnly = await prisma.userlogin.createManyAndReturn({
     *   select: { UserloginId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserloginCreateManyAndReturnArgs>(args?: SelectSubset<T, UserloginCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Userlogin.
     * @param {UserloginDeleteArgs} args - Arguments to delete one Userlogin.
     * @example
     * // Delete one Userlogin
     * const Userlogin = await prisma.userlogin.delete({
     *   where: {
     *     // ... filter to delete one Userlogin
     *   }
     * })
     * 
     */
    delete<T extends UserloginDeleteArgs>(args: SelectSubset<T, UserloginDeleteArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Userlogin.
     * @param {UserloginUpdateArgs} args - Arguments to update one Userlogin.
     * @example
     * // Update one Userlogin
     * const userlogin = await prisma.userlogin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserloginUpdateArgs>(args: SelectSubset<T, UserloginUpdateArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Userlogins.
     * @param {UserloginDeleteManyArgs} args - Arguments to filter Userlogins to delete.
     * @example
     * // Delete a few Userlogins
     * const { count } = await prisma.userlogin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserloginDeleteManyArgs>(args?: SelectSubset<T, UserloginDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userlogins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Userlogins
     * const userlogin = await prisma.userlogin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserloginUpdateManyArgs>(args: SelectSubset<T, UserloginUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Userlogins and returns the data updated in the database.
     * @param {UserloginUpdateManyAndReturnArgs} args - Arguments to update many Userlogins.
     * @example
     * // Update many Userlogins
     * const userlogin = await prisma.userlogin.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Userlogins and only return the `UserloginId`
     * const userloginWithUserloginIdOnly = await prisma.userlogin.updateManyAndReturn({
     *   select: { UserloginId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserloginUpdateManyAndReturnArgs>(args: SelectSubset<T, UserloginUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Userlogin.
     * @param {UserloginUpsertArgs} args - Arguments to update or create a Userlogin.
     * @example
     * // Update or create a Userlogin
     * const userlogin = await prisma.userlogin.upsert({
     *   create: {
     *     // ... data to create a Userlogin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Userlogin we want to update
     *   }
     * })
     */
    upsert<T extends UserloginUpsertArgs>(args: SelectSubset<T, UserloginUpsertArgs<ExtArgs>>): Prisma__UserloginClient<$Result.GetResult<Prisma.$UserloginPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Userlogins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginCountArgs} args - Arguments to filter Userlogins to count.
     * @example
     * // Count the number of Userlogins
     * const count = await prisma.userlogin.count({
     *   where: {
     *     // ... the filter for the Userlogins we want to count
     *   }
     * })
    **/
    count<T extends UserloginCountArgs>(
      args?: Subset<T, UserloginCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserloginCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Userlogin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserloginAggregateArgs>(args: Subset<T, UserloginAggregateArgs>): Prisma.PrismaPromise<GetUserloginAggregateType<T>>

    /**
     * Group by Userlogin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserloginGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserloginGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserloginGroupByArgs['orderBy'] }
        : { orderBy?: UserloginGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserloginGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserloginGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Userlogin model
   */
  readonly fields: UserloginFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Userlogin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserloginClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Userlogin model
   */
  interface UserloginFieldRefs {
    readonly UserloginId: FieldRef<"Userlogin", 'String'>
    readonly UserId: FieldRef<"Userlogin", 'String'>
    readonly Username: FieldRef<"Userlogin", 'String'>
    readonly Password: FieldRef<"Userlogin", 'String'>
    readonly Credential: FieldRef<"Userlogin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Userlogin findUnique
   */
  export type UserloginFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * Filter, which Userlogin to fetch.
     */
    where: UserloginWhereUniqueInput
  }

  /**
   * Userlogin findUniqueOrThrow
   */
  export type UserloginFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * Filter, which Userlogin to fetch.
     */
    where: UserloginWhereUniqueInput
  }

  /**
   * Userlogin findFirst
   */
  export type UserloginFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * Filter, which Userlogin to fetch.
     */
    where?: UserloginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Userlogins to fetch.
     */
    orderBy?: UserloginOrderByWithRelationInput | UserloginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Userlogins.
     */
    cursor?: UserloginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Userlogins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Userlogins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Userlogins.
     */
    distinct?: UserloginScalarFieldEnum | UserloginScalarFieldEnum[]
  }

  /**
   * Userlogin findFirstOrThrow
   */
  export type UserloginFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * Filter, which Userlogin to fetch.
     */
    where?: UserloginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Userlogins to fetch.
     */
    orderBy?: UserloginOrderByWithRelationInput | UserloginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Userlogins.
     */
    cursor?: UserloginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Userlogins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Userlogins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Userlogins.
     */
    distinct?: UserloginScalarFieldEnum | UserloginScalarFieldEnum[]
  }

  /**
   * Userlogin findMany
   */
  export type UserloginFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * Filter, which Userlogins to fetch.
     */
    where?: UserloginWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Userlogins to fetch.
     */
    orderBy?: UserloginOrderByWithRelationInput | UserloginOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Userlogins.
     */
    cursor?: UserloginWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Userlogins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Userlogins.
     */
    skip?: number
    distinct?: UserloginScalarFieldEnum | UserloginScalarFieldEnum[]
  }

  /**
   * Userlogin create
   */
  export type UserloginCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * The data needed to create a Userlogin.
     */
    data: XOR<UserloginCreateInput, UserloginUncheckedCreateInput>
  }

  /**
   * Userlogin createMany
   */
  export type UserloginCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Userlogins.
     */
    data: UserloginCreateManyInput | UserloginCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Userlogin createManyAndReturn
   */
  export type UserloginCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * The data used to create many Userlogins.
     */
    data: UserloginCreateManyInput | UserloginCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Userlogin update
   */
  export type UserloginUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * The data needed to update a Userlogin.
     */
    data: XOR<UserloginUpdateInput, UserloginUncheckedUpdateInput>
    /**
     * Choose, which Userlogin to update.
     */
    where: UserloginWhereUniqueInput
  }

  /**
   * Userlogin updateMany
   */
  export type UserloginUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Userlogins.
     */
    data: XOR<UserloginUpdateManyMutationInput, UserloginUncheckedUpdateManyInput>
    /**
     * Filter which Userlogins to update
     */
    where?: UserloginWhereInput
    /**
     * Limit how many Userlogins to update.
     */
    limit?: number
  }

  /**
   * Userlogin updateManyAndReturn
   */
  export type UserloginUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * The data used to update Userlogins.
     */
    data: XOR<UserloginUpdateManyMutationInput, UserloginUncheckedUpdateManyInput>
    /**
     * Filter which Userlogins to update
     */
    where?: UserloginWhereInput
    /**
     * Limit how many Userlogins to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Userlogin upsert
   */
  export type UserloginUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * The filter to search for the Userlogin to update in case it exists.
     */
    where: UserloginWhereUniqueInput
    /**
     * In case the Userlogin found by the `where` argument doesn't exist, create a new Userlogin with this data.
     */
    create: XOR<UserloginCreateInput, UserloginUncheckedCreateInput>
    /**
     * In case the Userlogin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserloginUpdateInput, UserloginUncheckedUpdateInput>
  }

  /**
   * Userlogin delete
   */
  export type UserloginDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
    /**
     * Filter which Userlogin to delete.
     */
    where: UserloginWhereUniqueInput
  }

  /**
   * Userlogin deleteMany
   */
  export type UserloginDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Userlogins to delete
     */
    where?: UserloginWhereInput
    /**
     * Limit how many Userlogins to delete.
     */
    limit?: number
  }

  /**
   * Userlogin without action
   */
  export type UserloginDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Userlogin
     */
    select?: UserloginSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Userlogin
     */
    omit?: UserloginOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserloginInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AlamatScalarFieldEnum: {
    AlamatId: 'AlamatId',
    DesaId: 'DesaId',
    Alamat: 'Alamat',
    KodePos: 'KodePos'
  };

  export type AlamatScalarFieldEnum = (typeof AlamatScalarFieldEnum)[keyof typeof AlamatScalarFieldEnum]


  export const AsesorScalarFieldEnum: {
    AsesorId: 'AsesorId',
    TipeAsesorId: 'TipeAsesorId',
    UserId: 'UserId',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type AsesorScalarFieldEnum = (typeof AsesorScalarFieldEnum)[keyof typeof AsesorScalarFieldEnum]


  export const AsesorAkademikScalarFieldEnum: {
    AsesorAkademikId: 'AsesorAkademikId',
    AsesorId: 'AsesorId',
    Pangkat: 'Pangkat',
    JabatanFungsionalAkademik: 'JabatanFungsionalAkademik',
    NipNidn: 'NipNidn',
    NamaPerguruanTinggi: 'NamaPerguruanTinggi',
    AlamatPerguruanTinggi: 'AlamatPerguruanTinggi',
    PendidikanTerakhirBidangKeilmuan: 'PendidikanTerakhirBidangKeilmuan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type AsesorAkademikScalarFieldEnum = (typeof AsesorAkademikScalarFieldEnum)[keyof typeof AsesorAkademikScalarFieldEnum]


  export const AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum: {
    AsesorAkademikKeanggotaanAsosiasiId: 'AsesorAkademikKeanggotaanAsosiasiId',
    AsesorAkademikId: 'AsesorAkademikId',
    NamaAsosiasi: 'NamaAsosiasi',
    NomorKeanggotaan: 'NomorKeanggotaan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum = (typeof AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum)[keyof typeof AsesorAkademikKeanggotaanAsosiasiScalarFieldEnum]


  export const AsesorPraktisiScalarFieldEnum: {
    AsesorPraktisiId: 'AsesorPraktisiId',
    AsesorId: 'AsesorId',
    NamaAsosiasi: 'NamaAsosiasi',
    NomorKeanggotaan: 'NomorKeanggotaan',
    Jabatan: 'Jabatan',
    AlamatKantor: 'AlamatKantor',
    NamaInstansi: 'NamaInstansi',
    JabatanInstansi: 'JabatanInstansi',
    BidangKeahlian: 'BidangKeahlian',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type AsesorPraktisiScalarFieldEnum = (typeof AsesorPraktisiScalarFieldEnum)[keyof typeof AsesorPraktisiScalarFieldEnum]


  export const AssesorMahasiswaScalarFieldEnum: {
    AssesorMahasiswaId: 'AssesorMahasiswaId',
    PendaftaranId: 'PendaftaranId',
    AsesorId: 'AsesorId',
    Urutan: 'Urutan',
    Confirmation: 'Confirmation',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type AssesorMahasiswaScalarFieldEnum = (typeof AssesorMahasiswaScalarFieldEnum)[keyof typeof AssesorMahasiswaScalarFieldEnum]


  export const BuktiFormScalarFieldEnum: {
    BuktiFormId: 'BuktiFormId',
    PendaftaranId: 'PendaftaranId',
    JenisDokumenId: 'JenisDokumenId',
    NamaFile: 'NamaFile',
    NamaDokumen: 'NamaDokumen',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type BuktiFormScalarFieldEnum = (typeof BuktiFormScalarFieldEnum)[keyof typeof BuktiFormScalarFieldEnum]


  export const BuktiFormEvaluasiDiriScalarFieldEnum: {
    BuktiFormId: 'BuktiFormId',
    EvaluasiDiriId: 'EvaluasiDiriId'
  };

  export type BuktiFormEvaluasiDiriScalarFieldEnum = (typeof BuktiFormEvaluasiDiriScalarFieldEnum)[keyof typeof BuktiFormEvaluasiDiriScalarFieldEnum]


  export const CapaianPembelajaranScalarFieldEnum: {
    CapaianPembelajaranId: 'CapaianPembelajaranId',
    MataKuliahId: 'MataKuliahId',
    Nama: 'Nama',
    Urutan: 'Urutan',
    Active: 'Active',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type CapaianPembelajaranScalarFieldEnum = (typeof CapaianPembelajaranScalarFieldEnum)[keyof typeof CapaianPembelajaranScalarFieldEnum]


  export const CountryScalarFieldEnum: {
    CountryId: 'CountryId',
    Nama: 'Nama'
  };

  export type CountryScalarFieldEnum = (typeof CountryScalarFieldEnum)[keyof typeof CountryScalarFieldEnum]


  export const DaftarUlangScalarFieldEnum: {
    DaftarUlangId: 'DaftarUlangId',
    PendaftaranId: 'PendaftaranId',
    ProgramStudiId: 'ProgramStudiId',
    Nim: 'Nim',
    JenjangKkniDituju: 'JenjangKkniDituju',
    KipK: 'KipK',
    Aktif: 'Aktif',
    MengisiBiodata: 'MengisiBiodata',
    Finalisasi: 'Finalisasi',
    TanggalDaftar: 'TanggalDaftar',
    TanggalDaftarUlang: 'TanggalDaftarUlang',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type DaftarUlangScalarFieldEnum = (typeof DaftarUlangScalarFieldEnum)[keyof typeof DaftarUlangScalarFieldEnum]


  export const DesaScalarFieldEnum: {
    DesaId: 'DesaId',
    KecamatanId: 'KecamatanId',
    Nama: 'Nama'
  };

  export type DesaScalarFieldEnum = (typeof DesaScalarFieldEnum)[keyof typeof DesaScalarFieldEnum]


  export const EvaluasiDiriScalarFieldEnum: {
    EvaluasiDiriId: 'EvaluasiDiriId',
    MataKuliahMahasiswaId: 'MataKuliahMahasiswaId',
    CapaianPembelajaranId: 'CapaianPembelajaranId',
    ProfiensiPengetahuan: 'ProfiensiPengetahuan',
    TanggalPengesahan: 'TanggalPengesahan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type EvaluasiDiriScalarFieldEnum = (typeof EvaluasiDiriScalarFieldEnum)[keyof typeof EvaluasiDiriScalarFieldEnum]


  export const HasilAssesmenScalarFieldEnum: {
    HasilAssesmenId: 'HasilAssesmenId',
    EvaluasiDiriId: 'EvaluasiDiriId',
    Valid: 'Valid',
    Autentik: 'Autentik',
    Terkini: 'Terkini',
    Memadai: 'Memadai',
    Assesmen: 'Assesmen',
    Nilai: 'Nilai',
    Diakui: 'Diakui',
    TanggalAssesmen: 'TanggalAssesmen',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type HasilAssesmenScalarFieldEnum = (typeof HasilAssesmenScalarFieldEnum)[keyof typeof HasilAssesmenScalarFieldEnum]


  export const InformasiKependudukanScalarFieldEnum: {
    InformasiKependudukanId: 'InformasiKependudukanId',
    PendaftaranId: 'PendaftaranId',
    NoKk: 'NoKk',
    NoNik: 'NoNik',
    Suku: 'Suku',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type InformasiKependudukanScalarFieldEnum = (typeof InformasiKependudukanScalarFieldEnum)[keyof typeof InformasiKependudukanScalarFieldEnum]


  export const InstitusiLamaScalarFieldEnum: {
    InstitusiLamaId: 'InstitusiLamaId',
    PendaftaranId: 'PendaftaranId',
    AlamatId: 'AlamatId',
    Jenjang: 'Jenjang',
    JenisInstitusi: 'JenisInstitusi',
    NamaInstitusi: 'NamaInstitusi',
    Jurusan: 'Jurusan',
    Nisn: 'Nisn',
    Npsn: 'Npsn',
    TahunLulus: 'TahunLulus',
    NilaiLulusan: 'NilaiLulusan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type InstitusiLamaScalarFieldEnum = (typeof InstitusiLamaScalarFieldEnum)[keyof typeof InstitusiLamaScalarFieldEnum]


  export const JenisDokumenScalarFieldEnum: {
    JenisDokumenId: 'JenisDokumenId',
    Jenis: 'Jenis',
    NomorDokumen: 'NomorDokumen',
    Keterangan: 'Keterangan'
  };

  export type JenisDokumenScalarFieldEnum = (typeof JenisDokumenScalarFieldEnum)[keyof typeof JenisDokumenScalarFieldEnum]


  export const KabupatenScalarFieldEnum: {
    KabupatenId: 'KabupatenId',
    ProvinsiId: 'ProvinsiId',
    Nama: 'Nama'
  };

  export type KabupatenScalarFieldEnum = (typeof KabupatenScalarFieldEnum)[keyof typeof KabupatenScalarFieldEnum]


  export const KecamatanScalarFieldEnum: {
    KecamatanId: 'KecamatanId',
    KabupatenId: 'KabupatenId',
    Nama: 'Nama'
  };

  export type KecamatanScalarFieldEnum = (typeof KecamatanScalarFieldEnum)[keyof typeof KecamatanScalarFieldEnum]


  export const MahasiswaScalarFieldEnum: {
    MahasiswaId: 'MahasiswaId',
    UserId: 'UserId',
    StatusPerkawinan: 'StatusPerkawinan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaScalarFieldEnum = (typeof MahasiswaScalarFieldEnum)[keyof typeof MahasiswaScalarFieldEnum]


  export const MahasiswaKonferensiScalarFieldEnum: {
    MahasiswaKonferensiId: 'MahasiswaKonferensiId',
    PendaftaranId: 'PendaftaranId',
    Tahun: 'Tahun',
    JudulSeminar: 'JudulSeminar',
    Penyelenggara: 'Penyelenggara',
    StatusKeikutsertaan: 'StatusKeikutsertaan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaKonferensiScalarFieldEnum = (typeof MahasiswaKonferensiScalarFieldEnum)[keyof typeof MahasiswaKonferensiScalarFieldEnum]


  export const MahasiswaOrganisasiProfesiScalarFieldEnum: {
    MahasiswaOrganisasiProfesiId: 'MahasiswaOrganisasiProfesiId',
    PendaftaranId: 'PendaftaranId',
    Tahun: 'Tahun',
    NamaOrganisasi: 'NamaOrganisasi',
    JenjangAnggotaJabatan: 'JenjangAnggotaJabatan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaOrganisasiProfesiScalarFieldEnum = (typeof MahasiswaOrganisasiProfesiScalarFieldEnum)[keyof typeof MahasiswaOrganisasiProfesiScalarFieldEnum]


  export const MahasiswaPelatihanProfessionalScalarFieldEnum: {
    MahasiswaPelatihanProfessionalId: 'MahasiswaPelatihanProfessionalId',
    PendaftaranId: 'PendaftaranId',
    NamaPelatihan: 'NamaPelatihan',
    Penyelenggara: 'Penyelenggara',
    Mulai: 'Mulai',
    Selesai: 'Selesai',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaPelatihanProfessionalScalarFieldEnum = (typeof MahasiswaPelatihanProfessionalScalarFieldEnum)[keyof typeof MahasiswaPelatihanProfessionalScalarFieldEnum]


  export const MahasiswaPendidikanScalarFieldEnum: {
    MahasiswaPendidikanId: 'MahasiswaPendidikanId',
    PendaftaranId: 'PendaftaranId',
    NamaSekolah: 'NamaSekolah',
    TahunLulus: 'TahunLulus',
    Jurusan: 'Jurusan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaPendidikanScalarFieldEnum = (typeof MahasiswaPendidikanScalarFieldEnum)[keyof typeof MahasiswaPendidikanScalarFieldEnum]


  export const MahasiswaPiagamScalarFieldEnum: {
    MahasiswaPiagamId: 'MahasiswaPiagamId',
    PendaftaranId: 'PendaftaranId',
    Tahun: 'Tahun',
    BentukPenghargaan: 'BentukPenghargaan',
    PemberiPenghargaan: 'PemberiPenghargaan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaPiagamScalarFieldEnum = (typeof MahasiswaPiagamScalarFieldEnum)[keyof typeof MahasiswaPiagamScalarFieldEnum]


  export const MahasiswaRiwayatPekerjaanScalarFieldEnum: {
    MahasiswaRiwayatPekerjaanId: 'MahasiswaRiwayatPekerjaanId',
    PendaftaranId: 'PendaftaranId',
    Nama: 'Nama',
    PosisiJabatan: 'PosisiJabatan',
    Alamat: 'Alamat',
    UraianTugas: 'UraianTugas',
    MulaiBekerja: 'MulaiBekerja',
    SelesaiBekerja: 'SelesaiBekerja',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MahasiswaRiwayatPekerjaanScalarFieldEnum = (typeof MahasiswaRiwayatPekerjaanScalarFieldEnum)[keyof typeof MahasiswaRiwayatPekerjaanScalarFieldEnum]


  export const MataKuliahScalarFieldEnum: {
    MataKuliahId: 'MataKuliahId',
    ProgramStudiId: 'ProgramStudiId',
    Kode: 'Kode',
    Nama: 'Nama',
    Sks: 'Sks',
    Semester: 'Semester',
    Silabus: 'Silabus',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type MataKuliahScalarFieldEnum = (typeof MataKuliahScalarFieldEnum)[keyof typeof MataKuliahScalarFieldEnum]


  export const MataKuliahMahasiswaScalarFieldEnum: {
    MataKuliahMahasiswaId: 'MataKuliahMahasiswaId',
    PendaftaranId: 'PendaftaranId',
    MataKuliahId: 'MataKuliahId',
    Rpl: 'Rpl',
    Keterangan: 'Keterangan',
    StatusMataKuliahMahasiswa: 'StatusMataKuliahMahasiswa',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type MataKuliahMahasiswaScalarFieldEnum = (typeof MataKuliahMahasiswaScalarFieldEnum)[keyof typeof MataKuliahMahasiswaScalarFieldEnum]


  export const UserHasPermissionsScalarFieldEnum: {
    PermissionId: 'PermissionId',
    UserId: 'UserId'
  };

  export type UserHasPermissionsScalarFieldEnum = (typeof UserHasPermissionsScalarFieldEnum)[keyof typeof UserHasPermissionsScalarFieldEnum]


  export const UserHasRolesScalarFieldEnum: {
    RoleId: 'RoleId',
    UserId: 'UserId'
  };

  export type UserHasRolesScalarFieldEnum = (typeof UserHasRolesScalarFieldEnum)[keyof typeof UserHasRolesScalarFieldEnum]


  export const OrangTuaScalarFieldEnum: {
    OrangTuaId: 'OrangTuaId',
    PendaftaranId: 'PendaftaranId',
    Nama: 'Nama',
    Pekerjaan: 'Pekerjaan',
    JenisOrtu: 'JenisOrtu',
    Penghasilan: 'Penghasilan',
    Email: 'Email',
    NomorHp: 'NomorHp',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type OrangTuaScalarFieldEnum = (typeof OrangTuaScalarFieldEnum)[keyof typeof OrangTuaScalarFieldEnum]


  export const PasswordResetTokensScalarFieldEnum: {
    Email: 'Email',
    Token: 'Token',
    CreatedAt: 'CreatedAt'
  };

  export type PasswordResetTokensScalarFieldEnum = (typeof PasswordResetTokensScalarFieldEnum)[keyof typeof PasswordResetTokensScalarFieldEnum]


  export const PekerjaanMahasiswaScalarFieldEnum: {
    PekerjaanMahasiswaId: 'PekerjaanMahasiswaId',
    PendaftaranId: 'PendaftaranId',
    AlamatId: 'AlamatId',
    InstitusiTempatBekerja: 'InstitusiTempatBekerja',
    Jabatan: 'Jabatan',
    StatusPekerjaan: 'StatusPekerjaan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type PekerjaanMahasiswaScalarFieldEnum = (typeof PekerjaanMahasiswaScalarFieldEnum)[keyof typeof PekerjaanMahasiswaScalarFieldEnum]


  export const PendaftaranScalarFieldEnum: {
    PendaftaranId: 'PendaftaranId',
    MahasiswaId: 'MahasiswaId',
    KodePendaftar: 'KodePendaftar',
    NoUjian: 'NoUjian',
    Periode: 'Periode',
    Gelombang: 'Gelombang',
    SistemKuliah: 'SistemKuliah',
    JalurPendaftaran: 'JalurPendaftaran',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type PendaftaranScalarFieldEnum = (typeof PendaftaranScalarFieldEnum)[keyof typeof PendaftaranScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    PermissionId: 'PermissionId',
    Name: 'Name',
    GuardName: 'GuardName',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const PesantrenScalarFieldEnum: {
    PesantrenId: 'PesantrenId',
    PendaftaranId: 'PendaftaranId',
    NamaPesantren: 'NamaPesantren',
    LamaPesantren: 'LamaPesantren',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type PesantrenScalarFieldEnum = (typeof PesantrenScalarFieldEnum)[keyof typeof PesantrenScalarFieldEnum]


  export const ProgramStudiScalarFieldEnum: {
    ProgramStudiId: 'ProgramStudiId',
    UniversityId: 'UniversityId',
    Nama: 'Nama',
    Jenjang: 'Jenjang',
    Akreditasi: 'Akreditasi',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type ProgramStudiScalarFieldEnum = (typeof ProgramStudiScalarFieldEnum)[keyof typeof ProgramStudiScalarFieldEnum]


  export const ProvinsiScalarFieldEnum: {
    ProvinsiId: 'ProvinsiId',
    CountryId: 'CountryId',
    Nama: 'Nama'
  };

  export type ProvinsiScalarFieldEnum = (typeof ProvinsiScalarFieldEnum)[keyof typeof ProvinsiScalarFieldEnum]


  export const RoleHasPermissionsScalarFieldEnum: {
    PermissionId: 'PermissionId',
    RoleId: 'RoleId'
  };

  export type RoleHasPermissionsScalarFieldEnum = (typeof RoleHasPermissionsScalarFieldEnum)[keyof typeof RoleHasPermissionsScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    RoleId: 'RoleId',
    Name: 'Name',
    GuardName: 'GuardName',
    Icon: 'Icon',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const SanggahanAssesmenScalarFieldEnum: {
    SanggahanAssesmenId: 'SanggahanAssesmenId',
    PendaftaranId: 'PendaftaranId',
    ProsesBanding: 'ProsesBanding',
    DiskusiBanding: 'DiskusiBanding',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type SanggahanAssesmenScalarFieldEnum = (typeof SanggahanAssesmenScalarFieldEnum)[keyof typeof SanggahanAssesmenScalarFieldEnum]


  export const SanggahanAssesmenMkScalarFieldEnum: {
    SanggahanAssesmenMkId: 'SanggahanAssesmenMkId',
    SanggahanAssesmenId: 'SanggahanAssesmenId',
    MataKuliahMahasiswaId: 'MataKuliahMahasiswaId',
    Keterangan: 'Keterangan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type SanggahanAssesmenMkScalarFieldEnum = (typeof SanggahanAssesmenMkScalarFieldEnum)[keyof typeof SanggahanAssesmenMkScalarFieldEnum]


  export const SanggahanAssesmenPihakScalarFieldEnum: {
    SanggahanAssesmenPihakId: 'SanggahanAssesmenPihakId',
    SanggahanAssesmenId: 'SanggahanAssesmenId',
    NamaPihak: 'NamaPihak',
    JabatanPihak: 'JabatanPihak',
    InstansiPihak: 'InstansiPihak',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type SanggahanAssesmenPihakScalarFieldEnum = (typeof SanggahanAssesmenPihakScalarFieldEnum)[keyof typeof SanggahanAssesmenPihakScalarFieldEnum]


  export const SkRektorScalarFieldEnum: {
    SkRektorId: 'SkRektorId',
    NamaSk: 'NamaSk',
    TahunSk: 'TahunSk',
    NomorSk: 'NomorSk',
    NamaFile: 'NamaFile',
    NamaDokumen: 'NamaDokumen',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type SkRektorScalarFieldEnum = (typeof SkRektorScalarFieldEnum)[keyof typeof SkRektorScalarFieldEnum]


  export const SkRektorAssesorScalarFieldEnum: {
    SkRektorId: 'SkRektorId',
    AssesorMahasiswaId: 'AssesorMahasiswaId'
  };

  export type SkRektorAssesorScalarFieldEnum = (typeof SkRektorAssesorScalarFieldEnum)[keyof typeof SkRektorAssesorScalarFieldEnum]


  export const SkRektorMahasiswaScalarFieldEnum: {
    SkRektorId: 'SkRektorId',
    PendaftaranId: 'PendaftaranId'
  };

  export type SkRektorMahasiswaScalarFieldEnum = (typeof SkRektorMahasiswaScalarFieldEnum)[keyof typeof SkRektorMahasiswaScalarFieldEnum]


  export const SkorAssesmenScalarFieldEnum: {
    SkorAssesmenId: 'SkorAssesmenId',
    HasilAssesmenId: 'HasilAssesmenId',
    Portofolio: 'Portofolio',
    Tulis: 'Tulis',
    Wawancara: 'Wawancara',
    Demo: 'Demo',
    SkorRataRata: 'SkorRataRata',
    NilaiHuruf: 'NilaiHuruf',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt'
  };

  export type SkorAssesmenScalarFieldEnum = (typeof SkorAssesmenScalarFieldEnum)[keyof typeof SkorAssesmenScalarFieldEnum]


  export const StatusMahasiswaAssesmentScalarFieldEnum: {
    StatusMahasiswaAssesmentId: 'StatusMahasiswaAssesmentId',
    NamaStatus: 'NamaStatus',
    Icon: 'Icon',
    Urutan: 'Urutan',
    Keterangan: 'Keterangan'
  };

  export type StatusMahasiswaAssesmentScalarFieldEnum = (typeof StatusMahasiswaAssesmentScalarFieldEnum)[keyof typeof StatusMahasiswaAssesmentScalarFieldEnum]


  export const StatusMahasiswaAssesmentHistoryScalarFieldEnum: {
    StatusMahasiswaAssesmentHistoryId: 'StatusMahasiswaAssesmentHistoryId',
    StatusMahasiswaAssesmentId: 'StatusMahasiswaAssesmentId',
    DaftarUlangId: 'DaftarUlangId',
    Tanggal: 'Tanggal',
    Keterangan: 'Keterangan'
  };

  export type StatusMahasiswaAssesmentHistoryScalarFieldEnum = (typeof StatusMahasiswaAssesmentHistoryScalarFieldEnum)[keyof typeof StatusMahasiswaAssesmentHistoryScalarFieldEnum]


  export const TipeAsesorScalarFieldEnum: {
    TipeAsesorId: 'TipeAsesorId',
    Nama: 'Nama',
    Icon: 'Icon',
    Deskripsi: 'Deskripsi',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type TipeAsesorScalarFieldEnum = (typeof TipeAsesorScalarFieldEnum)[keyof typeof TipeAsesorScalarFieldEnum]


  export const UniversityScalarFieldEnum: {
    UniversityId: 'UniversityId',
    AlamatId: 'AlamatId',
    Nama: 'Nama',
    Akreditasi: 'Akreditasi',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type UniversityScalarFieldEnum = (typeof UniversityScalarFieldEnum)[keyof typeof UniversityScalarFieldEnum]


  export const UniversitySosialMediaScalarFieldEnum: {
    UniversitySosialMediaId: 'UniversitySosialMediaId',
    UniversityId: 'UniversityId',
    Nama: 'Nama',
    Username: 'Username',
    Icon: 'Icon'
  };

  export type UniversitySosialMediaScalarFieldEnum = (typeof UniversitySosialMediaScalarFieldEnum)[keyof typeof UniversitySosialMediaScalarFieldEnum]


  export const UniversityInformasiScalarFieldEnum: {
    UniversityInformasiId: 'UniversityInformasiId',
    UniversityId: 'UniversityId',
    Nama: 'Nama',
    Informasi: 'Informasi'
  };

  export type UniversityInformasiScalarFieldEnum = (typeof UniversityInformasiScalarFieldEnum)[keyof typeof UniversityInformasiScalarFieldEnum]


  export const UniversityJabatanScalarFieldEnum: {
    UniversityJabatanId: 'UniversityJabatanId',
    UniversityId: 'UniversityId',
    Nama: 'Nama',
    Keterangan: 'Keterangan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type UniversityJabatanScalarFieldEnum = (typeof UniversityJabatanScalarFieldEnum)[keyof typeof UniversityJabatanScalarFieldEnum]


  export const UniversityJabatanOrangScalarFieldEnum: {
    UniversityJabatanOrangId: 'UniversityJabatanOrangId',
    UniversityJabatanId: 'UniversityJabatanId',
    Nama: 'Nama',
    Keterangan: 'Keterangan',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type UniversityJabatanOrangScalarFieldEnum = (typeof UniversityJabatanOrangScalarFieldEnum)[keyof typeof UniversityJabatanOrangScalarFieldEnum]


  export const UserScalarFieldEnum: {
    UserId: 'UserId',
    AlamatId: 'AlamatId',
    Nama: 'Nama',
    Email: 'Email',
    EmailVerifiedAt: 'EmailVerifiedAt',
    TempatLahir: 'TempatLahir',
    TanggalLahir: 'TanggalLahir',
    JenisKelamin: 'JenisKelamin',
    PendidikanTerakhir: 'PendidikanTerakhir',
    Avatar: 'Avatar',
    Agama: 'Agama',
    Telepon: 'Telepon',
    NomorWa: 'NomorWa',
    NomorHp: 'NomorHp',
    RememberToken: 'RememberToken',
    CreatedAt: 'CreatedAt',
    UpdatedAt: 'UpdatedAt',
    DeletedAt: 'DeletedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserloginScalarFieldEnum: {
    UserloginId: 'UserloginId',
    UserId: 'UserId',
    Username: 'Username',
    Password: 'Password',
    Credential: 'Credential'
  };

  export type UserloginScalarFieldEnum = (typeof UserloginScalarFieldEnum)[keyof typeof UserloginScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'ProfiensiPengetahuan'
   */
  export type EnumProfiensiPengetahuanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProfiensiPengetahuan'>
    


  /**
   * Reference to a field of type 'ProfiensiPengetahuan[]'
   */
  export type ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProfiensiPengetahuan[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Jenjang'
   */
  export type EnumJenjangFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Jenjang'>
    


  /**
   * Reference to a field of type 'Jenjang[]'
   */
  export type ListEnumJenjangFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Jenjang[]'>
    


  /**
   * Reference to a field of type 'StatusPerkawinan'
   */
  export type EnumStatusPerkawinanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusPerkawinan'>
    


  /**
   * Reference to a field of type 'StatusPerkawinan[]'
   */
  export type ListEnumStatusPerkawinanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusPerkawinan[]'>
    


  /**
   * Reference to a field of type 'StatusKeikutsertaan'
   */
  export type EnumStatusKeikutsertaanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusKeikutsertaan'>
    


  /**
   * Reference to a field of type 'StatusKeikutsertaan[]'
   */
  export type ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusKeikutsertaan[]'>
    


  /**
   * Reference to a field of type 'KeteranganMataKuliah'
   */
  export type EnumKeteranganMataKuliahFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KeteranganMataKuliah'>
    


  /**
   * Reference to a field of type 'KeteranganMataKuliah[]'
   */
  export type ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'KeteranganMataKuliah[]'>
    


  /**
   * Reference to a field of type 'StatusMataKuliahMahasiswa'
   */
  export type EnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusMataKuliahMahasiswa'>
    


  /**
   * Reference to a field of type 'StatusMataKuliahMahasiswa[]'
   */
  export type ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusMataKuliahMahasiswa[]'>
    


  /**
   * Reference to a field of type 'JenisOrtu'
   */
  export type EnumJenisOrtuFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JenisOrtu'>
    


  /**
   * Reference to a field of type 'JenisOrtu[]'
   */
  export type ListEnumJenisOrtuFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JenisOrtu[]'>
    


  /**
   * Reference to a field of type 'StatusPekerjaan'
   */
  export type EnumStatusPekerjaanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusPekerjaan'>
    


  /**
   * Reference to a field of type 'StatusPekerjaan[]'
   */
  export type ListEnumStatusPekerjaanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusPekerjaan[]'>
    


  /**
   * Reference to a field of type 'SistemKuliah'
   */
  export type EnumSistemKuliahFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SistemKuliah'>
    


  /**
   * Reference to a field of type 'SistemKuliah[]'
   */
  export type ListEnumSistemKuliahFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SistemKuliah[]'>
    


  /**
   * Reference to a field of type 'JenisKelamin'
   */
  export type EnumJenisKelaminFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JenisKelamin'>
    


  /**
   * Reference to a field of type 'JenisKelamin[]'
   */
  export type ListEnumJenisKelaminFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'JenisKelamin[]'>
    
  /**
   * Deep Input Types
   */


  export type AlamatWhereInput = {
    AND?: AlamatWhereInput | AlamatWhereInput[]
    OR?: AlamatWhereInput[]
    NOT?: AlamatWhereInput | AlamatWhereInput[]
    AlamatId?: StringFilter<"Alamat"> | string
    DesaId?: StringFilter<"Alamat"> | string
    Alamat?: StringFilter<"Alamat"> | string
    KodePos?: StringFilter<"Alamat"> | string
    Desa?: XOR<DesaScalarRelationFilter, DesaWhereInput>
    InstitusiLama?: InstitusiLamaListRelationFilter
    University?: UniversityListRelationFilter
    User?: UserListRelationFilter
  }

  export type AlamatOrderByWithRelationInput = {
    AlamatId?: SortOrder
    DesaId?: SortOrder
    Alamat?: SortOrder
    KodePos?: SortOrder
    Desa?: DesaOrderByWithRelationInput
    InstitusiLama?: InstitusiLamaOrderByRelationAggregateInput
    University?: UniversityOrderByRelationAggregateInput
    User?: UserOrderByRelationAggregateInput
  }

  export type AlamatWhereUniqueInput = Prisma.AtLeast<{
    AlamatId?: string
    AND?: AlamatWhereInput | AlamatWhereInput[]
    OR?: AlamatWhereInput[]
    NOT?: AlamatWhereInput | AlamatWhereInput[]
    DesaId?: StringFilter<"Alamat"> | string
    Alamat?: StringFilter<"Alamat"> | string
    KodePos?: StringFilter<"Alamat"> | string
    Desa?: XOR<DesaScalarRelationFilter, DesaWhereInput>
    InstitusiLama?: InstitusiLamaListRelationFilter
    University?: UniversityListRelationFilter
    User?: UserListRelationFilter
  }, "AlamatId">

  export type AlamatOrderByWithAggregationInput = {
    AlamatId?: SortOrder
    DesaId?: SortOrder
    Alamat?: SortOrder
    KodePos?: SortOrder
    _count?: AlamatCountOrderByAggregateInput
    _max?: AlamatMaxOrderByAggregateInput
    _min?: AlamatMinOrderByAggregateInput
  }

  export type AlamatScalarWhereWithAggregatesInput = {
    AND?: AlamatScalarWhereWithAggregatesInput | AlamatScalarWhereWithAggregatesInput[]
    OR?: AlamatScalarWhereWithAggregatesInput[]
    NOT?: AlamatScalarWhereWithAggregatesInput | AlamatScalarWhereWithAggregatesInput[]
    AlamatId?: StringWithAggregatesFilter<"Alamat"> | string
    DesaId?: StringWithAggregatesFilter<"Alamat"> | string
    Alamat?: StringWithAggregatesFilter<"Alamat"> | string
    KodePos?: StringWithAggregatesFilter<"Alamat"> | string
  }

  export type AsesorWhereInput = {
    AND?: AsesorWhereInput | AsesorWhereInput[]
    OR?: AsesorWhereInput[]
    NOT?: AsesorWhereInput | AsesorWhereInput[]
    AsesorId?: StringFilter<"Asesor"> | string
    TipeAsesorId?: StringFilter<"Asesor"> | string
    UserId?: StringFilter<"Asesor"> | string
    CreatedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    TipeAsesor?: XOR<TipeAsesorScalarRelationFilter, TipeAsesorWhereInput>
    AsesorAkademik?: AsesorAkademikListRelationFilter
    AsesorPraktisi?: AsesorPraktisiListRelationFilter
    AssesorMahasiswa?: AssesorMahasiswaListRelationFilter
  }

  export type AsesorOrderByWithRelationInput = {
    AsesorId?: SortOrder
    TipeAsesorId?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    TipeAsesor?: TipeAsesorOrderByWithRelationInput
    AsesorAkademik?: AsesorAkademikOrderByRelationAggregateInput
    AsesorPraktisi?: AsesorPraktisiOrderByRelationAggregateInput
    AssesorMahasiswa?: AssesorMahasiswaOrderByRelationAggregateInput
  }

  export type AsesorWhereUniqueInput = Prisma.AtLeast<{
    AsesorId?: string
    AND?: AsesorWhereInput | AsesorWhereInput[]
    OR?: AsesorWhereInput[]
    NOT?: AsesorWhereInput | AsesorWhereInput[]
    TipeAsesorId?: StringFilter<"Asesor"> | string
    UserId?: StringFilter<"Asesor"> | string
    CreatedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    TipeAsesor?: XOR<TipeAsesorScalarRelationFilter, TipeAsesorWhereInput>
    AsesorAkademik?: AsesorAkademikListRelationFilter
    AsesorPraktisi?: AsesorPraktisiListRelationFilter
    AssesorMahasiswa?: AssesorMahasiswaListRelationFilter
  }, "AsesorId">

  export type AsesorOrderByWithAggregationInput = {
    AsesorId?: SortOrder
    TipeAsesorId?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: AsesorCountOrderByAggregateInput
    _max?: AsesorMaxOrderByAggregateInput
    _min?: AsesorMinOrderByAggregateInput
  }

  export type AsesorScalarWhereWithAggregatesInput = {
    AND?: AsesorScalarWhereWithAggregatesInput | AsesorScalarWhereWithAggregatesInput[]
    OR?: AsesorScalarWhereWithAggregatesInput[]
    NOT?: AsesorScalarWhereWithAggregatesInput | AsesorScalarWhereWithAggregatesInput[]
    AsesorId?: StringWithAggregatesFilter<"Asesor"> | string
    TipeAsesorId?: StringWithAggregatesFilter<"Asesor"> | string
    UserId?: StringWithAggregatesFilter<"Asesor"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"Asesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"Asesor"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"Asesor"> | Date | string | null
  }

  export type AsesorAkademikWhereInput = {
    AND?: AsesorAkademikWhereInput | AsesorAkademikWhereInput[]
    OR?: AsesorAkademikWhereInput[]
    NOT?: AsesorAkademikWhereInput | AsesorAkademikWhereInput[]
    AsesorAkademikId?: StringFilter<"AsesorAkademik"> | string
    AsesorId?: StringFilter<"AsesorAkademik"> | string
    Pangkat?: StringFilter<"AsesorAkademik"> | string
    JabatanFungsionalAkademik?: StringFilter<"AsesorAkademik"> | string
    NipNidn?: StringFilter<"AsesorAkademik"> | string
    NamaPerguruanTinggi?: StringFilter<"AsesorAkademik"> | string
    AlamatPerguruanTinggi?: StringNullableFilter<"AsesorAkademik"> | string | null
    PendidikanTerakhirBidangKeilmuan?: StringNullableFilter<"AsesorAkademik"> | string | null
    CreatedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    Asesor?: XOR<AsesorScalarRelationFilter, AsesorWhereInput>
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiListRelationFilter
  }

  export type AsesorAkademikOrderByWithRelationInput = {
    AsesorAkademikId?: SortOrder
    AsesorId?: SortOrder
    Pangkat?: SortOrder
    JabatanFungsionalAkademik?: SortOrder
    NipNidn?: SortOrder
    NamaPerguruanTinggi?: SortOrder
    AlamatPerguruanTinggi?: SortOrderInput | SortOrder
    PendidikanTerakhirBidangKeilmuan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    Asesor?: AsesorOrderByWithRelationInput
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiOrderByRelationAggregateInput
  }

  export type AsesorAkademikWhereUniqueInput = Prisma.AtLeast<{
    AsesorAkademikId?: string
    AND?: AsesorAkademikWhereInput | AsesorAkademikWhereInput[]
    OR?: AsesorAkademikWhereInput[]
    NOT?: AsesorAkademikWhereInput | AsesorAkademikWhereInput[]
    AsesorId?: StringFilter<"AsesorAkademik"> | string
    Pangkat?: StringFilter<"AsesorAkademik"> | string
    JabatanFungsionalAkademik?: StringFilter<"AsesorAkademik"> | string
    NipNidn?: StringFilter<"AsesorAkademik"> | string
    NamaPerguruanTinggi?: StringFilter<"AsesorAkademik"> | string
    AlamatPerguruanTinggi?: StringNullableFilter<"AsesorAkademik"> | string | null
    PendidikanTerakhirBidangKeilmuan?: StringNullableFilter<"AsesorAkademik"> | string | null
    CreatedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    Asesor?: XOR<AsesorScalarRelationFilter, AsesorWhereInput>
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiListRelationFilter
  }, "AsesorAkademikId">

  export type AsesorAkademikOrderByWithAggregationInput = {
    AsesorAkademikId?: SortOrder
    AsesorId?: SortOrder
    Pangkat?: SortOrder
    JabatanFungsionalAkademik?: SortOrder
    NipNidn?: SortOrder
    NamaPerguruanTinggi?: SortOrder
    AlamatPerguruanTinggi?: SortOrderInput | SortOrder
    PendidikanTerakhirBidangKeilmuan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: AsesorAkademikCountOrderByAggregateInput
    _max?: AsesorAkademikMaxOrderByAggregateInput
    _min?: AsesorAkademikMinOrderByAggregateInput
  }

  export type AsesorAkademikScalarWhereWithAggregatesInput = {
    AND?: AsesorAkademikScalarWhereWithAggregatesInput | AsesorAkademikScalarWhereWithAggregatesInput[]
    OR?: AsesorAkademikScalarWhereWithAggregatesInput[]
    NOT?: AsesorAkademikScalarWhereWithAggregatesInput | AsesorAkademikScalarWhereWithAggregatesInput[]
    AsesorAkademikId?: StringWithAggregatesFilter<"AsesorAkademik"> | string
    AsesorId?: StringWithAggregatesFilter<"AsesorAkademik"> | string
    Pangkat?: StringWithAggregatesFilter<"AsesorAkademik"> | string
    JabatanFungsionalAkademik?: StringWithAggregatesFilter<"AsesorAkademik"> | string
    NipNidn?: StringWithAggregatesFilter<"AsesorAkademik"> | string
    NamaPerguruanTinggi?: StringWithAggregatesFilter<"AsesorAkademik"> | string
    AlamatPerguruanTinggi?: StringNullableWithAggregatesFilter<"AsesorAkademik"> | string | null
    PendidikanTerakhirBidangKeilmuan?: StringNullableWithAggregatesFilter<"AsesorAkademik"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"AsesorAkademik"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"AsesorAkademik"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"AsesorAkademik"> | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiWhereInput = {
    AND?: AsesorAkademikKeanggotaanAsosiasiWhereInput | AsesorAkademikKeanggotaanAsosiasiWhereInput[]
    OR?: AsesorAkademikKeanggotaanAsosiasiWhereInput[]
    NOT?: AsesorAkademikKeanggotaanAsosiasiWhereInput | AsesorAkademikKeanggotaanAsosiasiWhereInput[]
    AsesorAkademikKeanggotaanAsosiasiId?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    AsesorAkademikId?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NamaAsosiasi?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NomorKeanggotaan?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    CreatedAt?: DateTimeNullableFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
    AsesorAkademik?: XOR<AsesorAkademikScalarRelationFilter, AsesorAkademikWhereInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiOrderByWithRelationInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: SortOrder
    AsesorAkademikId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    AsesorAkademik?: AsesorAkademikOrderByWithRelationInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput = Prisma.AtLeast<{
    AsesorAkademikKeanggotaanAsosiasiId?: string
    AND?: AsesorAkademikKeanggotaanAsosiasiWhereInput | AsesorAkademikKeanggotaanAsosiasiWhereInput[]
    OR?: AsesorAkademikKeanggotaanAsosiasiWhereInput[]
    NOT?: AsesorAkademikKeanggotaanAsosiasiWhereInput | AsesorAkademikKeanggotaanAsosiasiWhereInput[]
    AsesorAkademikId?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NamaAsosiasi?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NomorKeanggotaan?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    CreatedAt?: DateTimeNullableFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
    AsesorAkademik?: XOR<AsesorAkademikScalarRelationFilter, AsesorAkademikWhereInput>
  }, "AsesorAkademikKeanggotaanAsosiasiId">

  export type AsesorAkademikKeanggotaanAsosiasiOrderByWithAggregationInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: SortOrder
    AsesorAkademikId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: AsesorAkademikKeanggotaanAsosiasiCountOrderByAggregateInput
    _max?: AsesorAkademikKeanggotaanAsosiasiMaxOrderByAggregateInput
    _min?: AsesorAkademikKeanggotaanAsosiasiMinOrderByAggregateInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput = {
    AND?: AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput | AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput[]
    OR?: AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput[]
    NOT?: AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput | AsesorAkademikKeanggotaanAsosiasiScalarWhereWithAggregatesInput[]
    AsesorAkademikKeanggotaanAsosiasiId?: StringWithAggregatesFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    AsesorAkademikId?: StringWithAggregatesFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NamaAsosiasi?: StringWithAggregatesFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NomorKeanggotaan?: StringWithAggregatesFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
  }

  export type AsesorPraktisiWhereInput = {
    AND?: AsesorPraktisiWhereInput | AsesorPraktisiWhereInput[]
    OR?: AsesorPraktisiWhereInput[]
    NOT?: AsesorPraktisiWhereInput | AsesorPraktisiWhereInput[]
    AsesorPraktisiId?: StringFilter<"AsesorPraktisi"> | string
    AsesorId?: StringFilter<"AsesorPraktisi"> | string
    NamaAsosiasi?: StringFilter<"AsesorPraktisi"> | string
    NomorKeanggotaan?: StringFilter<"AsesorPraktisi"> | string
    Jabatan?: StringFilter<"AsesorPraktisi"> | string
    AlamatKantor?: StringNullableFilter<"AsesorPraktisi"> | string | null
    NamaInstansi?: StringFilter<"AsesorPraktisi"> | string
    JabatanInstansi?: StringFilter<"AsesorPraktisi"> | string
    BidangKeahlian?: StringFilter<"AsesorPraktisi"> | string
    CreatedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    Asesor?: XOR<AsesorScalarRelationFilter, AsesorWhereInput>
  }

  export type AsesorPraktisiOrderByWithRelationInput = {
    AsesorPraktisiId?: SortOrder
    AsesorId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    Jabatan?: SortOrder
    AlamatKantor?: SortOrderInput | SortOrder
    NamaInstansi?: SortOrder
    JabatanInstansi?: SortOrder
    BidangKeahlian?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    Asesor?: AsesorOrderByWithRelationInput
  }

  export type AsesorPraktisiWhereUniqueInput = Prisma.AtLeast<{
    AsesorPraktisiId?: string
    AND?: AsesorPraktisiWhereInput | AsesorPraktisiWhereInput[]
    OR?: AsesorPraktisiWhereInput[]
    NOT?: AsesorPraktisiWhereInput | AsesorPraktisiWhereInput[]
    AsesorId?: StringFilter<"AsesorPraktisi"> | string
    NamaAsosiasi?: StringFilter<"AsesorPraktisi"> | string
    NomorKeanggotaan?: StringFilter<"AsesorPraktisi"> | string
    Jabatan?: StringFilter<"AsesorPraktisi"> | string
    AlamatKantor?: StringNullableFilter<"AsesorPraktisi"> | string | null
    NamaInstansi?: StringFilter<"AsesorPraktisi"> | string
    JabatanInstansi?: StringFilter<"AsesorPraktisi"> | string
    BidangKeahlian?: StringFilter<"AsesorPraktisi"> | string
    CreatedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    Asesor?: XOR<AsesorScalarRelationFilter, AsesorWhereInput>
  }, "AsesorPraktisiId">

  export type AsesorPraktisiOrderByWithAggregationInput = {
    AsesorPraktisiId?: SortOrder
    AsesorId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    Jabatan?: SortOrder
    AlamatKantor?: SortOrderInput | SortOrder
    NamaInstansi?: SortOrder
    JabatanInstansi?: SortOrder
    BidangKeahlian?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: AsesorPraktisiCountOrderByAggregateInput
    _max?: AsesorPraktisiMaxOrderByAggregateInput
    _min?: AsesorPraktisiMinOrderByAggregateInput
  }

  export type AsesorPraktisiScalarWhereWithAggregatesInput = {
    AND?: AsesorPraktisiScalarWhereWithAggregatesInput | AsesorPraktisiScalarWhereWithAggregatesInput[]
    OR?: AsesorPraktisiScalarWhereWithAggregatesInput[]
    NOT?: AsesorPraktisiScalarWhereWithAggregatesInput | AsesorPraktisiScalarWhereWithAggregatesInput[]
    AsesorPraktisiId?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    AsesorId?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    NamaAsosiasi?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    NomorKeanggotaan?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    Jabatan?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    AlamatKantor?: StringNullableWithAggregatesFilter<"AsesorPraktisi"> | string | null
    NamaInstansi?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    JabatanInstansi?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    BidangKeahlian?: StringWithAggregatesFilter<"AsesorPraktisi"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"AsesorPraktisi"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"AsesorPraktisi"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"AsesorPraktisi"> | Date | string | null
  }

  export type AssesorMahasiswaWhereInput = {
    AND?: AssesorMahasiswaWhereInput | AssesorMahasiswaWhereInput[]
    OR?: AssesorMahasiswaWhereInput[]
    NOT?: AssesorMahasiswaWhereInput | AssesorMahasiswaWhereInput[]
    AssesorMahasiswaId?: StringFilter<"AssesorMahasiswa"> | string
    PendaftaranId?: StringFilter<"AssesorMahasiswa"> | string
    AsesorId?: StringFilter<"AssesorMahasiswa"> | string
    Urutan?: IntFilter<"AssesorMahasiswa"> | number
    Confirmation?: BoolFilter<"AssesorMahasiswa"> | boolean
    CreatedAt?: DateTimeNullableFilter<"AssesorMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AssesorMahasiswa"> | Date | string | null
    Asesor?: XOR<AsesorScalarRelationFilter, AsesorWhereInput>
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    SkRektorAssesor?: SkRektorAssesorListRelationFilter
  }

  export type AssesorMahasiswaOrderByWithRelationInput = {
    AssesorMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AsesorId?: SortOrder
    Urutan?: SortOrder
    Confirmation?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Asesor?: AsesorOrderByWithRelationInput
    Pendaftaran?: PendaftaranOrderByWithRelationInput
    SkRektorAssesor?: SkRektorAssesorOrderByRelationAggregateInput
  }

  export type AssesorMahasiswaWhereUniqueInput = Prisma.AtLeast<{
    AssesorMahasiswaId?: string
    AND?: AssesorMahasiswaWhereInput | AssesorMahasiswaWhereInput[]
    OR?: AssesorMahasiswaWhereInput[]
    NOT?: AssesorMahasiswaWhereInput | AssesorMahasiswaWhereInput[]
    PendaftaranId?: StringFilter<"AssesorMahasiswa"> | string
    AsesorId?: StringFilter<"AssesorMahasiswa"> | string
    Urutan?: IntFilter<"AssesorMahasiswa"> | number
    Confirmation?: BoolFilter<"AssesorMahasiswa"> | boolean
    CreatedAt?: DateTimeNullableFilter<"AssesorMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AssesorMahasiswa"> | Date | string | null
    Asesor?: XOR<AsesorScalarRelationFilter, AsesorWhereInput>
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    SkRektorAssesor?: SkRektorAssesorListRelationFilter
  }, "AssesorMahasiswaId">

  export type AssesorMahasiswaOrderByWithAggregationInput = {
    AssesorMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AsesorId?: SortOrder
    Urutan?: SortOrder
    Confirmation?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: AssesorMahasiswaCountOrderByAggregateInput
    _avg?: AssesorMahasiswaAvgOrderByAggregateInput
    _max?: AssesorMahasiswaMaxOrderByAggregateInput
    _min?: AssesorMahasiswaMinOrderByAggregateInput
    _sum?: AssesorMahasiswaSumOrderByAggregateInput
  }

  export type AssesorMahasiswaScalarWhereWithAggregatesInput = {
    AND?: AssesorMahasiswaScalarWhereWithAggregatesInput | AssesorMahasiswaScalarWhereWithAggregatesInput[]
    OR?: AssesorMahasiswaScalarWhereWithAggregatesInput[]
    NOT?: AssesorMahasiswaScalarWhereWithAggregatesInput | AssesorMahasiswaScalarWhereWithAggregatesInput[]
    AssesorMahasiswaId?: StringWithAggregatesFilter<"AssesorMahasiswa"> | string
    PendaftaranId?: StringWithAggregatesFilter<"AssesorMahasiswa"> | string
    AsesorId?: StringWithAggregatesFilter<"AssesorMahasiswa"> | string
    Urutan?: IntWithAggregatesFilter<"AssesorMahasiswa"> | number
    Confirmation?: BoolWithAggregatesFilter<"AssesorMahasiswa"> | boolean
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"AssesorMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"AssesorMahasiswa"> | Date | string | null
  }

  export type BuktiFormWhereInput = {
    AND?: BuktiFormWhereInput | BuktiFormWhereInput[]
    OR?: BuktiFormWhereInput[]
    NOT?: BuktiFormWhereInput | BuktiFormWhereInput[]
    BuktiFormId?: StringFilter<"BuktiForm"> | string
    PendaftaranId?: StringFilter<"BuktiForm"> | string
    JenisDokumenId?: StringFilter<"BuktiForm"> | string
    NamaFile?: StringFilter<"BuktiForm"> | string
    NamaDokumen?: StringFilter<"BuktiForm"> | string
    CreatedAt?: DateTimeNullableFilter<"BuktiForm"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"BuktiForm"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    JenisDokumen?: XOR<JenisDokumenScalarRelationFilter, JenisDokumenWhereInput>
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriListRelationFilter
  }

  export type BuktiFormOrderByWithRelationInput = {
    BuktiFormId?: SortOrder
    PendaftaranId?: SortOrder
    JenisDokumenId?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
    JenisDokumen?: JenisDokumenOrderByWithRelationInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriOrderByRelationAggregateInput
  }

  export type BuktiFormWhereUniqueInput = Prisma.AtLeast<{
    BuktiFormId?: string
    AND?: BuktiFormWhereInput | BuktiFormWhereInput[]
    OR?: BuktiFormWhereInput[]
    NOT?: BuktiFormWhereInput | BuktiFormWhereInput[]
    PendaftaranId?: StringFilter<"BuktiForm"> | string
    JenisDokumenId?: StringFilter<"BuktiForm"> | string
    NamaFile?: StringFilter<"BuktiForm"> | string
    NamaDokumen?: StringFilter<"BuktiForm"> | string
    CreatedAt?: DateTimeNullableFilter<"BuktiForm"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"BuktiForm"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    JenisDokumen?: XOR<JenisDokumenScalarRelationFilter, JenisDokumenWhereInput>
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriListRelationFilter
  }, "BuktiFormId">

  export type BuktiFormOrderByWithAggregationInput = {
    BuktiFormId?: SortOrder
    PendaftaranId?: SortOrder
    JenisDokumenId?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: BuktiFormCountOrderByAggregateInput
    _max?: BuktiFormMaxOrderByAggregateInput
    _min?: BuktiFormMinOrderByAggregateInput
  }

  export type BuktiFormScalarWhereWithAggregatesInput = {
    AND?: BuktiFormScalarWhereWithAggregatesInput | BuktiFormScalarWhereWithAggregatesInput[]
    OR?: BuktiFormScalarWhereWithAggregatesInput[]
    NOT?: BuktiFormScalarWhereWithAggregatesInput | BuktiFormScalarWhereWithAggregatesInput[]
    BuktiFormId?: StringWithAggregatesFilter<"BuktiForm"> | string
    PendaftaranId?: StringWithAggregatesFilter<"BuktiForm"> | string
    JenisDokumenId?: StringWithAggregatesFilter<"BuktiForm"> | string
    NamaFile?: StringWithAggregatesFilter<"BuktiForm"> | string
    NamaDokumen?: StringWithAggregatesFilter<"BuktiForm"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"BuktiForm"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"BuktiForm"> | Date | string | null
  }

  export type BuktiFormEvaluasiDiriWhereInput = {
    AND?: BuktiFormEvaluasiDiriWhereInput | BuktiFormEvaluasiDiriWhereInput[]
    OR?: BuktiFormEvaluasiDiriWhereInput[]
    NOT?: BuktiFormEvaluasiDiriWhereInput | BuktiFormEvaluasiDiriWhereInput[]
    BuktiFormId?: StringFilter<"BuktiFormEvaluasiDiri"> | string
    EvaluasiDiriId?: StringFilter<"BuktiFormEvaluasiDiri"> | string
    BuktiForm?: XOR<BuktiFormScalarRelationFilter, BuktiFormWhereInput>
    EvaluasiDiri?: XOR<EvaluasiDiriScalarRelationFilter, EvaluasiDiriWhereInput>
  }

  export type BuktiFormEvaluasiDiriOrderByWithRelationInput = {
    BuktiFormId?: SortOrder
    EvaluasiDiriId?: SortOrder
    BuktiForm?: BuktiFormOrderByWithRelationInput
    EvaluasiDiri?: EvaluasiDiriOrderByWithRelationInput
  }

  export type BuktiFormEvaluasiDiriWhereUniqueInput = Prisma.AtLeast<{
    BuktiFormId_EvaluasiDiriId?: BuktiFormEvaluasiDiriBuktiFormIdEvaluasiDiriIdCompoundUniqueInput
    AND?: BuktiFormEvaluasiDiriWhereInput | BuktiFormEvaluasiDiriWhereInput[]
    OR?: BuktiFormEvaluasiDiriWhereInput[]
    NOT?: BuktiFormEvaluasiDiriWhereInput | BuktiFormEvaluasiDiriWhereInput[]
    BuktiFormId?: StringFilter<"BuktiFormEvaluasiDiri"> | string
    EvaluasiDiriId?: StringFilter<"BuktiFormEvaluasiDiri"> | string
    BuktiForm?: XOR<BuktiFormScalarRelationFilter, BuktiFormWhereInput>
    EvaluasiDiri?: XOR<EvaluasiDiriScalarRelationFilter, EvaluasiDiriWhereInput>
  }, "BuktiFormId_EvaluasiDiriId">

  export type BuktiFormEvaluasiDiriOrderByWithAggregationInput = {
    BuktiFormId?: SortOrder
    EvaluasiDiriId?: SortOrder
    _count?: BuktiFormEvaluasiDiriCountOrderByAggregateInput
    _max?: BuktiFormEvaluasiDiriMaxOrderByAggregateInput
    _min?: BuktiFormEvaluasiDiriMinOrderByAggregateInput
  }

  export type BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput = {
    AND?: BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput | BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput[]
    OR?: BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput[]
    NOT?: BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput | BuktiFormEvaluasiDiriScalarWhereWithAggregatesInput[]
    BuktiFormId?: StringWithAggregatesFilter<"BuktiFormEvaluasiDiri"> | string
    EvaluasiDiriId?: StringWithAggregatesFilter<"BuktiFormEvaluasiDiri"> | string
  }

  export type CapaianPembelajaranWhereInput = {
    AND?: CapaianPembelajaranWhereInput | CapaianPembelajaranWhereInput[]
    OR?: CapaianPembelajaranWhereInput[]
    NOT?: CapaianPembelajaranWhereInput | CapaianPembelajaranWhereInput[]
    CapaianPembelajaranId?: StringFilter<"CapaianPembelajaran"> | string
    MataKuliahId?: StringFilter<"CapaianPembelajaran"> | string
    Nama?: StringFilter<"CapaianPembelajaran"> | string
    Urutan?: IntFilter<"CapaianPembelajaran"> | number
    Active?: BoolFilter<"CapaianPembelajaran"> | boolean
    CreatedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    MataKuliah?: XOR<MataKuliahScalarRelationFilter, MataKuliahWhereInput>
    EvaluasiDiri?: EvaluasiDiriListRelationFilter
  }

  export type CapaianPembelajaranOrderByWithRelationInput = {
    CapaianPembelajaranId?: SortOrder
    MataKuliahId?: SortOrder
    Nama?: SortOrder
    Urutan?: SortOrder
    Active?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    MataKuliah?: MataKuliahOrderByWithRelationInput
    EvaluasiDiri?: EvaluasiDiriOrderByRelationAggregateInput
  }

  export type CapaianPembelajaranWhereUniqueInput = Prisma.AtLeast<{
    CapaianPembelajaranId?: string
    AND?: CapaianPembelajaranWhereInput | CapaianPembelajaranWhereInput[]
    OR?: CapaianPembelajaranWhereInput[]
    NOT?: CapaianPembelajaranWhereInput | CapaianPembelajaranWhereInput[]
    MataKuliahId?: StringFilter<"CapaianPembelajaran"> | string
    Nama?: StringFilter<"CapaianPembelajaran"> | string
    Urutan?: IntFilter<"CapaianPembelajaran"> | number
    Active?: BoolFilter<"CapaianPembelajaran"> | boolean
    CreatedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    MataKuliah?: XOR<MataKuliahScalarRelationFilter, MataKuliahWhereInput>
    EvaluasiDiri?: EvaluasiDiriListRelationFilter
  }, "CapaianPembelajaranId">

  export type CapaianPembelajaranOrderByWithAggregationInput = {
    CapaianPembelajaranId?: SortOrder
    MataKuliahId?: SortOrder
    Nama?: SortOrder
    Urutan?: SortOrder
    Active?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: CapaianPembelajaranCountOrderByAggregateInput
    _avg?: CapaianPembelajaranAvgOrderByAggregateInput
    _max?: CapaianPembelajaranMaxOrderByAggregateInput
    _min?: CapaianPembelajaranMinOrderByAggregateInput
    _sum?: CapaianPembelajaranSumOrderByAggregateInput
  }

  export type CapaianPembelajaranScalarWhereWithAggregatesInput = {
    AND?: CapaianPembelajaranScalarWhereWithAggregatesInput | CapaianPembelajaranScalarWhereWithAggregatesInput[]
    OR?: CapaianPembelajaranScalarWhereWithAggregatesInput[]
    NOT?: CapaianPembelajaranScalarWhereWithAggregatesInput | CapaianPembelajaranScalarWhereWithAggregatesInput[]
    CapaianPembelajaranId?: StringWithAggregatesFilter<"CapaianPembelajaran"> | string
    MataKuliahId?: StringWithAggregatesFilter<"CapaianPembelajaran"> | string
    Nama?: StringWithAggregatesFilter<"CapaianPembelajaran"> | string
    Urutan?: IntWithAggregatesFilter<"CapaianPembelajaran"> | number
    Active?: BoolWithAggregatesFilter<"CapaianPembelajaran"> | boolean
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"CapaianPembelajaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"CapaianPembelajaran"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"CapaianPembelajaran"> | Date | string | null
  }

  export type CountryWhereInput = {
    AND?: CountryWhereInput | CountryWhereInput[]
    OR?: CountryWhereInput[]
    NOT?: CountryWhereInput | CountryWhereInput[]
    CountryId?: StringFilter<"Country"> | string
    Nama?: StringFilter<"Country"> | string
    Provinsi?: ProvinsiListRelationFilter
  }

  export type CountryOrderByWithRelationInput = {
    CountryId?: SortOrder
    Nama?: SortOrder
    Provinsi?: ProvinsiOrderByRelationAggregateInput
  }

  export type CountryWhereUniqueInput = Prisma.AtLeast<{
    CountryId?: string
    AND?: CountryWhereInput | CountryWhereInput[]
    OR?: CountryWhereInput[]
    NOT?: CountryWhereInput | CountryWhereInput[]
    Nama?: StringFilter<"Country"> | string
    Provinsi?: ProvinsiListRelationFilter
  }, "CountryId">

  export type CountryOrderByWithAggregationInput = {
    CountryId?: SortOrder
    Nama?: SortOrder
    _count?: CountryCountOrderByAggregateInput
    _max?: CountryMaxOrderByAggregateInput
    _min?: CountryMinOrderByAggregateInput
  }

  export type CountryScalarWhereWithAggregatesInput = {
    AND?: CountryScalarWhereWithAggregatesInput | CountryScalarWhereWithAggregatesInput[]
    OR?: CountryScalarWhereWithAggregatesInput[]
    NOT?: CountryScalarWhereWithAggregatesInput | CountryScalarWhereWithAggregatesInput[]
    CountryId?: StringWithAggregatesFilter<"Country"> | string
    Nama?: StringWithAggregatesFilter<"Country"> | string
  }

  export type DaftarUlangWhereInput = {
    AND?: DaftarUlangWhereInput | DaftarUlangWhereInput[]
    OR?: DaftarUlangWhereInput[]
    NOT?: DaftarUlangWhereInput | DaftarUlangWhereInput[]
    DaftarUlangId?: StringFilter<"DaftarUlang"> | string
    PendaftaranId?: StringFilter<"DaftarUlang"> | string
    ProgramStudiId?: StringFilter<"DaftarUlang"> | string
    Nim?: StringNullableFilter<"DaftarUlang"> | string | null
    JenjangKkniDituju?: StringNullableFilter<"DaftarUlang"> | string | null
    KipK?: BoolFilter<"DaftarUlang"> | boolean
    Aktif?: BoolFilter<"DaftarUlang"> | boolean
    MengisiBiodata?: BoolFilter<"DaftarUlang"> | boolean
    Finalisasi?: BoolFilter<"DaftarUlang"> | boolean
    TanggalDaftar?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    TanggalDaftarUlang?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    ProgramStudi?: XOR<ProgramStudiScalarRelationFilter, ProgramStudiWhereInput>
  }

  export type DaftarUlangOrderByWithRelationInput = {
    DaftarUlangId?: SortOrder
    PendaftaranId?: SortOrder
    ProgramStudiId?: SortOrder
    Nim?: SortOrderInput | SortOrder
    JenjangKkniDituju?: SortOrderInput | SortOrder
    KipK?: SortOrder
    Aktif?: SortOrder
    MengisiBiodata?: SortOrder
    Finalisasi?: SortOrder
    TanggalDaftar?: SortOrderInput | SortOrder
    TanggalDaftarUlang?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
    ProgramStudi?: ProgramStudiOrderByWithRelationInput
  }

  export type DaftarUlangWhereUniqueInput = Prisma.AtLeast<{
    DaftarUlangId?: string
    AND?: DaftarUlangWhereInput | DaftarUlangWhereInput[]
    OR?: DaftarUlangWhereInput[]
    NOT?: DaftarUlangWhereInput | DaftarUlangWhereInput[]
    PendaftaranId?: StringFilter<"DaftarUlang"> | string
    ProgramStudiId?: StringFilter<"DaftarUlang"> | string
    Nim?: StringNullableFilter<"DaftarUlang"> | string | null
    JenjangKkniDituju?: StringNullableFilter<"DaftarUlang"> | string | null
    KipK?: BoolFilter<"DaftarUlang"> | boolean
    Aktif?: BoolFilter<"DaftarUlang"> | boolean
    MengisiBiodata?: BoolFilter<"DaftarUlang"> | boolean
    Finalisasi?: BoolFilter<"DaftarUlang"> | boolean
    TanggalDaftar?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    TanggalDaftarUlang?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    ProgramStudi?: XOR<ProgramStudiScalarRelationFilter, ProgramStudiWhereInput>
  }, "DaftarUlangId">

  export type DaftarUlangOrderByWithAggregationInput = {
    DaftarUlangId?: SortOrder
    PendaftaranId?: SortOrder
    ProgramStudiId?: SortOrder
    Nim?: SortOrderInput | SortOrder
    JenjangKkniDituju?: SortOrderInput | SortOrder
    KipK?: SortOrder
    Aktif?: SortOrder
    MengisiBiodata?: SortOrder
    Finalisasi?: SortOrder
    TanggalDaftar?: SortOrderInput | SortOrder
    TanggalDaftarUlang?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: DaftarUlangCountOrderByAggregateInput
    _max?: DaftarUlangMaxOrderByAggregateInput
    _min?: DaftarUlangMinOrderByAggregateInput
  }

  export type DaftarUlangScalarWhereWithAggregatesInput = {
    AND?: DaftarUlangScalarWhereWithAggregatesInput | DaftarUlangScalarWhereWithAggregatesInput[]
    OR?: DaftarUlangScalarWhereWithAggregatesInput[]
    NOT?: DaftarUlangScalarWhereWithAggregatesInput | DaftarUlangScalarWhereWithAggregatesInput[]
    DaftarUlangId?: StringWithAggregatesFilter<"DaftarUlang"> | string
    PendaftaranId?: StringWithAggregatesFilter<"DaftarUlang"> | string
    ProgramStudiId?: StringWithAggregatesFilter<"DaftarUlang"> | string
    Nim?: StringNullableWithAggregatesFilter<"DaftarUlang"> | string | null
    JenjangKkniDituju?: StringNullableWithAggregatesFilter<"DaftarUlang"> | string | null
    KipK?: BoolWithAggregatesFilter<"DaftarUlang"> | boolean
    Aktif?: BoolWithAggregatesFilter<"DaftarUlang"> | boolean
    MengisiBiodata?: BoolWithAggregatesFilter<"DaftarUlang"> | boolean
    Finalisasi?: BoolWithAggregatesFilter<"DaftarUlang"> | boolean
    TanggalDaftar?: DateTimeNullableWithAggregatesFilter<"DaftarUlang"> | Date | string | null
    TanggalDaftarUlang?: DateTimeNullableWithAggregatesFilter<"DaftarUlang"> | Date | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"DaftarUlang"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"DaftarUlang"> | Date | string | null
  }

  export type DesaWhereInput = {
    AND?: DesaWhereInput | DesaWhereInput[]
    OR?: DesaWhereInput[]
    NOT?: DesaWhereInput | DesaWhereInput[]
    DesaId?: StringFilter<"Desa"> | string
    KecamatanId?: StringFilter<"Desa"> | string
    Nama?: StringFilter<"Desa"> | string
    Kecamatan?: XOR<KecamatanScalarRelationFilter, KecamatanWhereInput>
    Alamat?: AlamatListRelationFilter
  }

  export type DesaOrderByWithRelationInput = {
    DesaId?: SortOrder
    KecamatanId?: SortOrder
    Nama?: SortOrder
    Kecamatan?: KecamatanOrderByWithRelationInput
    Alamat?: AlamatOrderByRelationAggregateInput
  }

  export type DesaWhereUniqueInput = Prisma.AtLeast<{
    DesaId?: string
    AND?: DesaWhereInput | DesaWhereInput[]
    OR?: DesaWhereInput[]
    NOT?: DesaWhereInput | DesaWhereInput[]
    KecamatanId?: StringFilter<"Desa"> | string
    Nama?: StringFilter<"Desa"> | string
    Kecamatan?: XOR<KecamatanScalarRelationFilter, KecamatanWhereInput>
    Alamat?: AlamatListRelationFilter
  }, "DesaId">

  export type DesaOrderByWithAggregationInput = {
    DesaId?: SortOrder
    KecamatanId?: SortOrder
    Nama?: SortOrder
    _count?: DesaCountOrderByAggregateInput
    _max?: DesaMaxOrderByAggregateInput
    _min?: DesaMinOrderByAggregateInput
  }

  export type DesaScalarWhereWithAggregatesInput = {
    AND?: DesaScalarWhereWithAggregatesInput | DesaScalarWhereWithAggregatesInput[]
    OR?: DesaScalarWhereWithAggregatesInput[]
    NOT?: DesaScalarWhereWithAggregatesInput | DesaScalarWhereWithAggregatesInput[]
    DesaId?: StringWithAggregatesFilter<"Desa"> | string
    KecamatanId?: StringWithAggregatesFilter<"Desa"> | string
    Nama?: StringWithAggregatesFilter<"Desa"> | string
  }

  export type EvaluasiDiriWhereInput = {
    AND?: EvaluasiDiriWhereInput | EvaluasiDiriWhereInput[]
    OR?: EvaluasiDiriWhereInput[]
    NOT?: EvaluasiDiriWhereInput | EvaluasiDiriWhereInput[]
    EvaluasiDiriId?: StringFilter<"EvaluasiDiri"> | string
    MataKuliahMahasiswaId?: StringFilter<"EvaluasiDiri"> | string
    CapaianPembelajaranId?: StringFilter<"EvaluasiDiri"> | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFilter<"EvaluasiDiri"> | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    MataKuliahMahasiswa?: XOR<MataKuliahMahasiswaScalarRelationFilter, MataKuliahMahasiswaWhereInput>
    CapaianPembelajaran?: XOR<CapaianPembelajaranScalarRelationFilter, CapaianPembelajaranWhereInput>
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriListRelationFilter
    HasilAssesmen?: HasilAssesmenListRelationFilter
  }

  export type EvaluasiDiriOrderByWithRelationInput = {
    EvaluasiDiriId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    CapaianPembelajaranId?: SortOrder
    ProfiensiPengetahuan?: SortOrder
    TanggalPengesahan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    MataKuliahMahasiswa?: MataKuliahMahasiswaOrderByWithRelationInput
    CapaianPembelajaran?: CapaianPembelajaranOrderByWithRelationInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriOrderByRelationAggregateInput
    HasilAssesmen?: HasilAssesmenOrderByRelationAggregateInput
  }

  export type EvaluasiDiriWhereUniqueInput = Prisma.AtLeast<{
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId_CapaianPembelajaranId?: EvaluasiDiriMataKuliahMahasiswaIdCapaianPembelajaranIdCompoundUniqueInput
    AND?: EvaluasiDiriWhereInput | EvaluasiDiriWhereInput[]
    OR?: EvaluasiDiriWhereInput[]
    NOT?: EvaluasiDiriWhereInput | EvaluasiDiriWhereInput[]
    MataKuliahMahasiswaId?: StringFilter<"EvaluasiDiri"> | string
    CapaianPembelajaranId?: StringFilter<"EvaluasiDiri"> | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFilter<"EvaluasiDiri"> | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    MataKuliahMahasiswa?: XOR<MataKuliahMahasiswaScalarRelationFilter, MataKuliahMahasiswaWhereInput>
    CapaianPembelajaran?: XOR<CapaianPembelajaranScalarRelationFilter, CapaianPembelajaranWhereInput>
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriListRelationFilter
    HasilAssesmen?: HasilAssesmenListRelationFilter
  }, "EvaluasiDiriId" | "MataKuliahMahasiswaId_CapaianPembelajaranId">

  export type EvaluasiDiriOrderByWithAggregationInput = {
    EvaluasiDiriId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    CapaianPembelajaranId?: SortOrder
    ProfiensiPengetahuan?: SortOrder
    TanggalPengesahan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: EvaluasiDiriCountOrderByAggregateInput
    _max?: EvaluasiDiriMaxOrderByAggregateInput
    _min?: EvaluasiDiriMinOrderByAggregateInput
  }

  export type EvaluasiDiriScalarWhereWithAggregatesInput = {
    AND?: EvaluasiDiriScalarWhereWithAggregatesInput | EvaluasiDiriScalarWhereWithAggregatesInput[]
    OR?: EvaluasiDiriScalarWhereWithAggregatesInput[]
    NOT?: EvaluasiDiriScalarWhereWithAggregatesInput | EvaluasiDiriScalarWhereWithAggregatesInput[]
    EvaluasiDiriId?: StringWithAggregatesFilter<"EvaluasiDiri"> | string
    MataKuliahMahasiswaId?: StringWithAggregatesFilter<"EvaluasiDiri"> | string
    CapaianPembelajaranId?: StringWithAggregatesFilter<"EvaluasiDiri"> | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanWithAggregatesFilter<"EvaluasiDiri"> | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: DateTimeNullableWithAggregatesFilter<"EvaluasiDiri"> | Date | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"EvaluasiDiri"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"EvaluasiDiri"> | Date | string | null
  }

  export type HasilAssesmenWhereInput = {
    AND?: HasilAssesmenWhereInput | HasilAssesmenWhereInput[]
    OR?: HasilAssesmenWhereInput[]
    NOT?: HasilAssesmenWhereInput | HasilAssesmenWhereInput[]
    HasilAssesmenId?: StringFilter<"HasilAssesmen"> | string
    EvaluasiDiriId?: StringFilter<"HasilAssesmen"> | string
    Valid?: BoolFilter<"HasilAssesmen"> | boolean
    Autentik?: BoolFilter<"HasilAssesmen"> | boolean
    Terkini?: BoolFilter<"HasilAssesmen"> | boolean
    Memadai?: BoolFilter<"HasilAssesmen"> | boolean
    Assesmen?: StringNullableFilter<"HasilAssesmen"> | string | null
    Nilai?: FloatFilter<"HasilAssesmen"> | number
    Diakui?: BoolFilter<"HasilAssesmen"> | boolean
    TanggalAssesmen?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    EvaluasiDiri?: XOR<EvaluasiDiriScalarRelationFilter, EvaluasiDiriWhereInput>
    SkorAssesmen?: SkorAssesmenListRelationFilter
  }

  export type HasilAssesmenOrderByWithRelationInput = {
    HasilAssesmenId?: SortOrder
    EvaluasiDiriId?: SortOrder
    Valid?: SortOrder
    Autentik?: SortOrder
    Terkini?: SortOrder
    Memadai?: SortOrder
    Assesmen?: SortOrderInput | SortOrder
    Nilai?: SortOrder
    Diakui?: SortOrder
    TanggalAssesmen?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    EvaluasiDiri?: EvaluasiDiriOrderByWithRelationInput
    SkorAssesmen?: SkorAssesmenOrderByRelationAggregateInput
  }

  export type HasilAssesmenWhereUniqueInput = Prisma.AtLeast<{
    HasilAssesmenId?: string
    AND?: HasilAssesmenWhereInput | HasilAssesmenWhereInput[]
    OR?: HasilAssesmenWhereInput[]
    NOT?: HasilAssesmenWhereInput | HasilAssesmenWhereInput[]
    EvaluasiDiriId?: StringFilter<"HasilAssesmen"> | string
    Valid?: BoolFilter<"HasilAssesmen"> | boolean
    Autentik?: BoolFilter<"HasilAssesmen"> | boolean
    Terkini?: BoolFilter<"HasilAssesmen"> | boolean
    Memadai?: BoolFilter<"HasilAssesmen"> | boolean
    Assesmen?: StringNullableFilter<"HasilAssesmen"> | string | null
    Nilai?: FloatFilter<"HasilAssesmen"> | number
    Diakui?: BoolFilter<"HasilAssesmen"> | boolean
    TanggalAssesmen?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    EvaluasiDiri?: XOR<EvaluasiDiriScalarRelationFilter, EvaluasiDiriWhereInput>
    SkorAssesmen?: SkorAssesmenListRelationFilter
  }, "HasilAssesmenId">

  export type HasilAssesmenOrderByWithAggregationInput = {
    HasilAssesmenId?: SortOrder
    EvaluasiDiriId?: SortOrder
    Valid?: SortOrder
    Autentik?: SortOrder
    Terkini?: SortOrder
    Memadai?: SortOrder
    Assesmen?: SortOrderInput | SortOrder
    Nilai?: SortOrder
    Diakui?: SortOrder
    TanggalAssesmen?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: HasilAssesmenCountOrderByAggregateInput
    _avg?: HasilAssesmenAvgOrderByAggregateInput
    _max?: HasilAssesmenMaxOrderByAggregateInput
    _min?: HasilAssesmenMinOrderByAggregateInput
    _sum?: HasilAssesmenSumOrderByAggregateInput
  }

  export type HasilAssesmenScalarWhereWithAggregatesInput = {
    AND?: HasilAssesmenScalarWhereWithAggregatesInput | HasilAssesmenScalarWhereWithAggregatesInput[]
    OR?: HasilAssesmenScalarWhereWithAggregatesInput[]
    NOT?: HasilAssesmenScalarWhereWithAggregatesInput | HasilAssesmenScalarWhereWithAggregatesInput[]
    HasilAssesmenId?: StringWithAggregatesFilter<"HasilAssesmen"> | string
    EvaluasiDiriId?: StringWithAggregatesFilter<"HasilAssesmen"> | string
    Valid?: BoolWithAggregatesFilter<"HasilAssesmen"> | boolean
    Autentik?: BoolWithAggregatesFilter<"HasilAssesmen"> | boolean
    Terkini?: BoolWithAggregatesFilter<"HasilAssesmen"> | boolean
    Memadai?: BoolWithAggregatesFilter<"HasilAssesmen"> | boolean
    Assesmen?: StringNullableWithAggregatesFilter<"HasilAssesmen"> | string | null
    Nilai?: FloatWithAggregatesFilter<"HasilAssesmen"> | number
    Diakui?: BoolWithAggregatesFilter<"HasilAssesmen"> | boolean
    TanggalAssesmen?: DateTimeNullableWithAggregatesFilter<"HasilAssesmen"> | Date | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"HasilAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"HasilAssesmen"> | Date | string | null
  }

  export type InformasiKependudukanWhereInput = {
    AND?: InformasiKependudukanWhereInput | InformasiKependudukanWhereInput[]
    OR?: InformasiKependudukanWhereInput[]
    NOT?: InformasiKependudukanWhereInput | InformasiKependudukanWhereInput[]
    InformasiKependudukanId?: StringFilter<"InformasiKependudukan"> | string
    PendaftaranId?: StringFilter<"InformasiKependudukan"> | string
    NoKk?: StringFilter<"InformasiKependudukan"> | string
    NoNik?: StringFilter<"InformasiKependudukan"> | string
    Suku?: StringFilter<"InformasiKependudukan"> | string
    CreatedAt?: DateTimeNullableFilter<"InformasiKependudukan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"InformasiKependudukan"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type InformasiKependudukanOrderByWithRelationInput = {
    InformasiKependudukanId?: SortOrder
    PendaftaranId?: SortOrder
    NoKk?: SortOrder
    NoNik?: SortOrder
    Suku?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type InformasiKependudukanWhereUniqueInput = Prisma.AtLeast<{
    InformasiKependudukanId?: string
    AND?: InformasiKependudukanWhereInput | InformasiKependudukanWhereInput[]
    OR?: InformasiKependudukanWhereInput[]
    NOT?: InformasiKependudukanWhereInput | InformasiKependudukanWhereInput[]
    PendaftaranId?: StringFilter<"InformasiKependudukan"> | string
    NoKk?: StringFilter<"InformasiKependudukan"> | string
    NoNik?: StringFilter<"InformasiKependudukan"> | string
    Suku?: StringFilter<"InformasiKependudukan"> | string
    CreatedAt?: DateTimeNullableFilter<"InformasiKependudukan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"InformasiKependudukan"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "InformasiKependudukanId">

  export type InformasiKependudukanOrderByWithAggregationInput = {
    InformasiKependudukanId?: SortOrder
    PendaftaranId?: SortOrder
    NoKk?: SortOrder
    NoNik?: SortOrder
    Suku?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: InformasiKependudukanCountOrderByAggregateInput
    _max?: InformasiKependudukanMaxOrderByAggregateInput
    _min?: InformasiKependudukanMinOrderByAggregateInput
  }

  export type InformasiKependudukanScalarWhereWithAggregatesInput = {
    AND?: InformasiKependudukanScalarWhereWithAggregatesInput | InformasiKependudukanScalarWhereWithAggregatesInput[]
    OR?: InformasiKependudukanScalarWhereWithAggregatesInput[]
    NOT?: InformasiKependudukanScalarWhereWithAggregatesInput | InformasiKependudukanScalarWhereWithAggregatesInput[]
    InformasiKependudukanId?: StringWithAggregatesFilter<"InformasiKependudukan"> | string
    PendaftaranId?: StringWithAggregatesFilter<"InformasiKependudukan"> | string
    NoKk?: StringWithAggregatesFilter<"InformasiKependudukan"> | string
    NoNik?: StringWithAggregatesFilter<"InformasiKependudukan"> | string
    Suku?: StringWithAggregatesFilter<"InformasiKependudukan"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"InformasiKependudukan"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"InformasiKependudukan"> | Date | string | null
  }

  export type InstitusiLamaWhereInput = {
    AND?: InstitusiLamaWhereInput | InstitusiLamaWhereInput[]
    OR?: InstitusiLamaWhereInput[]
    NOT?: InstitusiLamaWhereInput | InstitusiLamaWhereInput[]
    InstitusiLamaId?: StringFilter<"InstitusiLama"> | string
    PendaftaranId?: StringFilter<"InstitusiLama"> | string
    AlamatId?: StringFilter<"InstitusiLama"> | string
    Jenjang?: EnumJenjangFilter<"InstitusiLama"> | $Enums.Jenjang
    JenisInstitusi?: StringFilter<"InstitusiLama"> | string
    NamaInstitusi?: StringFilter<"InstitusiLama"> | string
    Jurusan?: StringFilter<"InstitusiLama"> | string
    Nisn?: StringFilter<"InstitusiLama"> | string
    Npsn?: StringFilter<"InstitusiLama"> | string
    TahunLulus?: IntFilter<"InstitusiLama"> | number
    NilaiLulusan?: FloatFilter<"InstitusiLama"> | number
    CreatedAt?: DateTimeNullableFilter<"InstitusiLama"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"InstitusiLama"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    Alamat?: XOR<AlamatScalarRelationFilter, AlamatWhereInput>
  }

  export type InstitusiLamaOrderByWithRelationInput = {
    InstitusiLamaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    Jenjang?: SortOrder
    JenisInstitusi?: SortOrder
    NamaInstitusi?: SortOrder
    Jurusan?: SortOrder
    Nisn?: SortOrder
    Npsn?: SortOrder
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
    Alamat?: AlamatOrderByWithRelationInput
  }

  export type InstitusiLamaWhereUniqueInput = Prisma.AtLeast<{
    InstitusiLamaId?: string
    AND?: InstitusiLamaWhereInput | InstitusiLamaWhereInput[]
    OR?: InstitusiLamaWhereInput[]
    NOT?: InstitusiLamaWhereInput | InstitusiLamaWhereInput[]
    PendaftaranId?: StringFilter<"InstitusiLama"> | string
    AlamatId?: StringFilter<"InstitusiLama"> | string
    Jenjang?: EnumJenjangFilter<"InstitusiLama"> | $Enums.Jenjang
    JenisInstitusi?: StringFilter<"InstitusiLama"> | string
    NamaInstitusi?: StringFilter<"InstitusiLama"> | string
    Jurusan?: StringFilter<"InstitusiLama"> | string
    Nisn?: StringFilter<"InstitusiLama"> | string
    Npsn?: StringFilter<"InstitusiLama"> | string
    TahunLulus?: IntFilter<"InstitusiLama"> | number
    NilaiLulusan?: FloatFilter<"InstitusiLama"> | number
    CreatedAt?: DateTimeNullableFilter<"InstitusiLama"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"InstitusiLama"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    Alamat?: XOR<AlamatScalarRelationFilter, AlamatWhereInput>
  }, "InstitusiLamaId">

  export type InstitusiLamaOrderByWithAggregationInput = {
    InstitusiLamaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    Jenjang?: SortOrder
    JenisInstitusi?: SortOrder
    NamaInstitusi?: SortOrder
    Jurusan?: SortOrder
    Nisn?: SortOrder
    Npsn?: SortOrder
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: InstitusiLamaCountOrderByAggregateInput
    _avg?: InstitusiLamaAvgOrderByAggregateInput
    _max?: InstitusiLamaMaxOrderByAggregateInput
    _min?: InstitusiLamaMinOrderByAggregateInput
    _sum?: InstitusiLamaSumOrderByAggregateInput
  }

  export type InstitusiLamaScalarWhereWithAggregatesInput = {
    AND?: InstitusiLamaScalarWhereWithAggregatesInput | InstitusiLamaScalarWhereWithAggregatesInput[]
    OR?: InstitusiLamaScalarWhereWithAggregatesInput[]
    NOT?: InstitusiLamaScalarWhereWithAggregatesInput | InstitusiLamaScalarWhereWithAggregatesInput[]
    InstitusiLamaId?: StringWithAggregatesFilter<"InstitusiLama"> | string
    PendaftaranId?: StringWithAggregatesFilter<"InstitusiLama"> | string
    AlamatId?: StringWithAggregatesFilter<"InstitusiLama"> | string
    Jenjang?: EnumJenjangWithAggregatesFilter<"InstitusiLama"> | $Enums.Jenjang
    JenisInstitusi?: StringWithAggregatesFilter<"InstitusiLama"> | string
    NamaInstitusi?: StringWithAggregatesFilter<"InstitusiLama"> | string
    Jurusan?: StringWithAggregatesFilter<"InstitusiLama"> | string
    Nisn?: StringWithAggregatesFilter<"InstitusiLama"> | string
    Npsn?: StringWithAggregatesFilter<"InstitusiLama"> | string
    TahunLulus?: IntWithAggregatesFilter<"InstitusiLama"> | number
    NilaiLulusan?: FloatWithAggregatesFilter<"InstitusiLama"> | number
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"InstitusiLama"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"InstitusiLama"> | Date | string | null
  }

  export type JenisDokumenWhereInput = {
    AND?: JenisDokumenWhereInput | JenisDokumenWhereInput[]
    OR?: JenisDokumenWhereInput[]
    NOT?: JenisDokumenWhereInput | JenisDokumenWhereInput[]
    JenisDokumenId?: StringFilter<"JenisDokumen"> | string
    Jenis?: StringFilter<"JenisDokumen"> | string
    NomorDokumen?: IntFilter<"JenisDokumen"> | number
    Keterangan?: StringNullableFilter<"JenisDokumen"> | string | null
    BuktiForm?: BuktiFormListRelationFilter
  }

  export type JenisDokumenOrderByWithRelationInput = {
    JenisDokumenId?: SortOrder
    Jenis?: SortOrder
    NomorDokumen?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    BuktiForm?: BuktiFormOrderByRelationAggregateInput
  }

  export type JenisDokumenWhereUniqueInput = Prisma.AtLeast<{
    JenisDokumenId?: string
    AND?: JenisDokumenWhereInput | JenisDokumenWhereInput[]
    OR?: JenisDokumenWhereInput[]
    NOT?: JenisDokumenWhereInput | JenisDokumenWhereInput[]
    Jenis?: StringFilter<"JenisDokumen"> | string
    NomorDokumen?: IntFilter<"JenisDokumen"> | number
    Keterangan?: StringNullableFilter<"JenisDokumen"> | string | null
    BuktiForm?: BuktiFormListRelationFilter
  }, "JenisDokumenId">

  export type JenisDokumenOrderByWithAggregationInput = {
    JenisDokumenId?: SortOrder
    Jenis?: SortOrder
    NomorDokumen?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    _count?: JenisDokumenCountOrderByAggregateInput
    _avg?: JenisDokumenAvgOrderByAggregateInput
    _max?: JenisDokumenMaxOrderByAggregateInput
    _min?: JenisDokumenMinOrderByAggregateInput
    _sum?: JenisDokumenSumOrderByAggregateInput
  }

  export type JenisDokumenScalarWhereWithAggregatesInput = {
    AND?: JenisDokumenScalarWhereWithAggregatesInput | JenisDokumenScalarWhereWithAggregatesInput[]
    OR?: JenisDokumenScalarWhereWithAggregatesInput[]
    NOT?: JenisDokumenScalarWhereWithAggregatesInput | JenisDokumenScalarWhereWithAggregatesInput[]
    JenisDokumenId?: StringWithAggregatesFilter<"JenisDokumen"> | string
    Jenis?: StringWithAggregatesFilter<"JenisDokumen"> | string
    NomorDokumen?: IntWithAggregatesFilter<"JenisDokumen"> | number
    Keterangan?: StringNullableWithAggregatesFilter<"JenisDokumen"> | string | null
  }

  export type KabupatenWhereInput = {
    AND?: KabupatenWhereInput | KabupatenWhereInput[]
    OR?: KabupatenWhereInput[]
    NOT?: KabupatenWhereInput | KabupatenWhereInput[]
    KabupatenId?: StringFilter<"Kabupaten"> | string
    ProvinsiId?: StringFilter<"Kabupaten"> | string
    Nama?: StringFilter<"Kabupaten"> | string
    Provinsi?: XOR<ProvinsiScalarRelationFilter, ProvinsiWhereInput>
    Kecamatan?: KecamatanListRelationFilter
  }

  export type KabupatenOrderByWithRelationInput = {
    KabupatenId?: SortOrder
    ProvinsiId?: SortOrder
    Nama?: SortOrder
    Provinsi?: ProvinsiOrderByWithRelationInput
    Kecamatan?: KecamatanOrderByRelationAggregateInput
  }

  export type KabupatenWhereUniqueInput = Prisma.AtLeast<{
    KabupatenId?: string
    AND?: KabupatenWhereInput | KabupatenWhereInput[]
    OR?: KabupatenWhereInput[]
    NOT?: KabupatenWhereInput | KabupatenWhereInput[]
    ProvinsiId?: StringFilter<"Kabupaten"> | string
    Nama?: StringFilter<"Kabupaten"> | string
    Provinsi?: XOR<ProvinsiScalarRelationFilter, ProvinsiWhereInput>
    Kecamatan?: KecamatanListRelationFilter
  }, "KabupatenId">

  export type KabupatenOrderByWithAggregationInput = {
    KabupatenId?: SortOrder
    ProvinsiId?: SortOrder
    Nama?: SortOrder
    _count?: KabupatenCountOrderByAggregateInput
    _max?: KabupatenMaxOrderByAggregateInput
    _min?: KabupatenMinOrderByAggregateInput
  }

  export type KabupatenScalarWhereWithAggregatesInput = {
    AND?: KabupatenScalarWhereWithAggregatesInput | KabupatenScalarWhereWithAggregatesInput[]
    OR?: KabupatenScalarWhereWithAggregatesInput[]
    NOT?: KabupatenScalarWhereWithAggregatesInput | KabupatenScalarWhereWithAggregatesInput[]
    KabupatenId?: StringWithAggregatesFilter<"Kabupaten"> | string
    ProvinsiId?: StringWithAggregatesFilter<"Kabupaten"> | string
    Nama?: StringWithAggregatesFilter<"Kabupaten"> | string
  }

  export type KecamatanWhereInput = {
    AND?: KecamatanWhereInput | KecamatanWhereInput[]
    OR?: KecamatanWhereInput[]
    NOT?: KecamatanWhereInput | KecamatanWhereInput[]
    KecamatanId?: StringFilter<"Kecamatan"> | string
    KabupatenId?: StringFilter<"Kecamatan"> | string
    Nama?: StringFilter<"Kecamatan"> | string
    Kabupaten?: XOR<KabupatenScalarRelationFilter, KabupatenWhereInput>
    Desa?: DesaListRelationFilter
  }

  export type KecamatanOrderByWithRelationInput = {
    KecamatanId?: SortOrder
    KabupatenId?: SortOrder
    Nama?: SortOrder
    Kabupaten?: KabupatenOrderByWithRelationInput
    Desa?: DesaOrderByRelationAggregateInput
  }

  export type KecamatanWhereUniqueInput = Prisma.AtLeast<{
    KecamatanId?: string
    AND?: KecamatanWhereInput | KecamatanWhereInput[]
    OR?: KecamatanWhereInput[]
    NOT?: KecamatanWhereInput | KecamatanWhereInput[]
    KabupatenId?: StringFilter<"Kecamatan"> | string
    Nama?: StringFilter<"Kecamatan"> | string
    Kabupaten?: XOR<KabupatenScalarRelationFilter, KabupatenWhereInput>
    Desa?: DesaListRelationFilter
  }, "KecamatanId">

  export type KecamatanOrderByWithAggregationInput = {
    KecamatanId?: SortOrder
    KabupatenId?: SortOrder
    Nama?: SortOrder
    _count?: KecamatanCountOrderByAggregateInput
    _max?: KecamatanMaxOrderByAggregateInput
    _min?: KecamatanMinOrderByAggregateInput
  }

  export type KecamatanScalarWhereWithAggregatesInput = {
    AND?: KecamatanScalarWhereWithAggregatesInput | KecamatanScalarWhereWithAggregatesInput[]
    OR?: KecamatanScalarWhereWithAggregatesInput[]
    NOT?: KecamatanScalarWhereWithAggregatesInput | KecamatanScalarWhereWithAggregatesInput[]
    KecamatanId?: StringWithAggregatesFilter<"Kecamatan"> | string
    KabupatenId?: StringWithAggregatesFilter<"Kecamatan"> | string
    Nama?: StringWithAggregatesFilter<"Kecamatan"> | string
  }

  export type MahasiswaWhereInput = {
    AND?: MahasiswaWhereInput | MahasiswaWhereInput[]
    OR?: MahasiswaWhereInput[]
    NOT?: MahasiswaWhereInput | MahasiswaWhereInput[]
    MahasiswaId?: StringFilter<"Mahasiswa"> | string
    UserId?: StringFilter<"Mahasiswa"> | string
    StatusPerkawinan?: EnumStatusPerkawinanFilter<"Mahasiswa"> | $Enums.StatusPerkawinan
    CreatedAt?: DateTimeNullableFilter<"Mahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Mahasiswa"> | Date | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    Pendaftaran?: PendaftaranListRelationFilter
  }

  export type MahasiswaOrderByWithRelationInput = {
    MahasiswaId?: SortOrder
    UserId?: SortOrder
    StatusPerkawinan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    User?: UserOrderByWithRelationInput
    Pendaftaran?: PendaftaranOrderByRelationAggregateInput
  }

  export type MahasiswaWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaId?: string
    AND?: MahasiswaWhereInput | MahasiswaWhereInput[]
    OR?: MahasiswaWhereInput[]
    NOT?: MahasiswaWhereInput | MahasiswaWhereInput[]
    UserId?: StringFilter<"Mahasiswa"> | string
    StatusPerkawinan?: EnumStatusPerkawinanFilter<"Mahasiswa"> | $Enums.StatusPerkawinan
    CreatedAt?: DateTimeNullableFilter<"Mahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Mahasiswa"> | Date | string | null
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
    Pendaftaran?: PendaftaranListRelationFilter
  }, "MahasiswaId">

  export type MahasiswaOrderByWithAggregationInput = {
    MahasiswaId?: SortOrder
    UserId?: SortOrder
    StatusPerkawinan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaCountOrderByAggregateInput
    _max?: MahasiswaMaxOrderByAggregateInput
    _min?: MahasiswaMinOrderByAggregateInput
  }

  export type MahasiswaScalarWhereWithAggregatesInput = {
    AND?: MahasiswaScalarWhereWithAggregatesInput | MahasiswaScalarWhereWithAggregatesInput[]
    OR?: MahasiswaScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaScalarWhereWithAggregatesInput | MahasiswaScalarWhereWithAggregatesInput[]
    MahasiswaId?: StringWithAggregatesFilter<"Mahasiswa"> | string
    UserId?: StringWithAggregatesFilter<"Mahasiswa"> | string
    StatusPerkawinan?: EnumStatusPerkawinanWithAggregatesFilter<"Mahasiswa"> | $Enums.StatusPerkawinan
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"Mahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"Mahasiswa"> | Date | string | null
  }

  export type MahasiswaKonferensiWhereInput = {
    AND?: MahasiswaKonferensiWhereInput | MahasiswaKonferensiWhereInput[]
    OR?: MahasiswaKonferensiWhereInput[]
    NOT?: MahasiswaKonferensiWhereInput | MahasiswaKonferensiWhereInput[]
    MahasiswaKonferensiId?: StringFilter<"MahasiswaKonferensi"> | string
    PendaftaranId?: StringFilter<"MahasiswaKonferensi"> | string
    Tahun?: IntFilter<"MahasiswaKonferensi"> | number
    JudulSeminar?: StringFilter<"MahasiswaKonferensi"> | string
    Penyelenggara?: StringFilter<"MahasiswaKonferensi"> | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFilter<"MahasiswaKonferensi"> | $Enums.StatusKeikutsertaan
    CreatedAt?: DateTimeNullableFilter<"MahasiswaKonferensi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaKonferensi"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type MahasiswaKonferensiOrderByWithRelationInput = {
    MahasiswaKonferensiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    JudulSeminar?: SortOrder
    Penyelenggara?: SortOrder
    StatusKeikutsertaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type MahasiswaKonferensiWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaKonferensiId?: string
    AND?: MahasiswaKonferensiWhereInput | MahasiswaKonferensiWhereInput[]
    OR?: MahasiswaKonferensiWhereInput[]
    NOT?: MahasiswaKonferensiWhereInput | MahasiswaKonferensiWhereInput[]
    PendaftaranId?: StringFilter<"MahasiswaKonferensi"> | string
    Tahun?: IntFilter<"MahasiswaKonferensi"> | number
    JudulSeminar?: StringFilter<"MahasiswaKonferensi"> | string
    Penyelenggara?: StringFilter<"MahasiswaKonferensi"> | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFilter<"MahasiswaKonferensi"> | $Enums.StatusKeikutsertaan
    CreatedAt?: DateTimeNullableFilter<"MahasiswaKonferensi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaKonferensi"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "MahasiswaKonferensiId">

  export type MahasiswaKonferensiOrderByWithAggregationInput = {
    MahasiswaKonferensiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    JudulSeminar?: SortOrder
    Penyelenggara?: SortOrder
    StatusKeikutsertaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaKonferensiCountOrderByAggregateInput
    _avg?: MahasiswaKonferensiAvgOrderByAggregateInput
    _max?: MahasiswaKonferensiMaxOrderByAggregateInput
    _min?: MahasiswaKonferensiMinOrderByAggregateInput
    _sum?: MahasiswaKonferensiSumOrderByAggregateInput
  }

  export type MahasiswaKonferensiScalarWhereWithAggregatesInput = {
    AND?: MahasiswaKonferensiScalarWhereWithAggregatesInput | MahasiswaKonferensiScalarWhereWithAggregatesInput[]
    OR?: MahasiswaKonferensiScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaKonferensiScalarWhereWithAggregatesInput | MahasiswaKonferensiScalarWhereWithAggregatesInput[]
    MahasiswaKonferensiId?: StringWithAggregatesFilter<"MahasiswaKonferensi"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MahasiswaKonferensi"> | string
    Tahun?: IntWithAggregatesFilter<"MahasiswaKonferensi"> | number
    JudulSeminar?: StringWithAggregatesFilter<"MahasiswaKonferensi"> | string
    Penyelenggara?: StringWithAggregatesFilter<"MahasiswaKonferensi"> | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanWithAggregatesFilter<"MahasiswaKonferensi"> | $Enums.StatusKeikutsertaan
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaKonferensi"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaKonferensi"> | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiWhereInput = {
    AND?: MahasiswaOrganisasiProfesiWhereInput | MahasiswaOrganisasiProfesiWhereInput[]
    OR?: MahasiswaOrganisasiProfesiWhereInput[]
    NOT?: MahasiswaOrganisasiProfesiWhereInput | MahasiswaOrganisasiProfesiWhereInput[]
    MahasiswaOrganisasiProfesiId?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    PendaftaranId?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    Tahun?: IntFilter<"MahasiswaOrganisasiProfesi"> | number
    NamaOrganisasi?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    JenjangAnggotaJabatan?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type MahasiswaOrganisasiProfesiOrderByWithRelationInput = {
    MahasiswaOrganisasiProfesiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    NamaOrganisasi?: SortOrder
    JenjangAnggotaJabatan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type MahasiswaOrganisasiProfesiWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaOrganisasiProfesiId?: string
    AND?: MahasiswaOrganisasiProfesiWhereInput | MahasiswaOrganisasiProfesiWhereInput[]
    OR?: MahasiswaOrganisasiProfesiWhereInput[]
    NOT?: MahasiswaOrganisasiProfesiWhereInput | MahasiswaOrganisasiProfesiWhereInput[]
    PendaftaranId?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    Tahun?: IntFilter<"MahasiswaOrganisasiProfesi"> | number
    NamaOrganisasi?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    JenjangAnggotaJabatan?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "MahasiswaOrganisasiProfesiId">

  export type MahasiswaOrganisasiProfesiOrderByWithAggregationInput = {
    MahasiswaOrganisasiProfesiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    NamaOrganisasi?: SortOrder
    JenjangAnggotaJabatan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaOrganisasiProfesiCountOrderByAggregateInput
    _avg?: MahasiswaOrganisasiProfesiAvgOrderByAggregateInput
    _max?: MahasiswaOrganisasiProfesiMaxOrderByAggregateInput
    _min?: MahasiswaOrganisasiProfesiMinOrderByAggregateInput
    _sum?: MahasiswaOrganisasiProfesiSumOrderByAggregateInput
  }

  export type MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput = {
    AND?: MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput | MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput[]
    OR?: MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput | MahasiswaOrganisasiProfesiScalarWhereWithAggregatesInput[]
    MahasiswaOrganisasiProfesiId?: StringWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | string
    Tahun?: IntWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | number
    NamaOrganisasi?: StringWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | string
    JenjangAnggotaJabatan?: StringWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalWhereInput = {
    AND?: MahasiswaPelatihanProfessionalWhereInput | MahasiswaPelatihanProfessionalWhereInput[]
    OR?: MahasiswaPelatihanProfessionalWhereInput[]
    NOT?: MahasiswaPelatihanProfessionalWhereInput | MahasiswaPelatihanProfessionalWhereInput[]
    MahasiswaPelatihanProfessionalId?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    PendaftaranId?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    NamaPelatihan?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    Penyelenggara?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    Mulai?: DateTimeFilter<"MahasiswaPelatihanProfessional"> | Date | string
    Selesai?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type MahasiswaPelatihanProfessionalOrderByWithRelationInput = {
    MahasiswaPelatihanProfessionalId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPelatihan?: SortOrder
    Penyelenggara?: SortOrder
    Mulai?: SortOrder
    Selesai?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type MahasiswaPelatihanProfessionalWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaPelatihanProfessionalId?: string
    AND?: MahasiswaPelatihanProfessionalWhereInput | MahasiswaPelatihanProfessionalWhereInput[]
    OR?: MahasiswaPelatihanProfessionalWhereInput[]
    NOT?: MahasiswaPelatihanProfessionalWhereInput | MahasiswaPelatihanProfessionalWhereInput[]
    PendaftaranId?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    NamaPelatihan?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    Penyelenggara?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    Mulai?: DateTimeFilter<"MahasiswaPelatihanProfessional"> | Date | string
    Selesai?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "MahasiswaPelatihanProfessionalId">

  export type MahasiswaPelatihanProfessionalOrderByWithAggregationInput = {
    MahasiswaPelatihanProfessionalId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPelatihan?: SortOrder
    Penyelenggara?: SortOrder
    Mulai?: SortOrder
    Selesai?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaPelatihanProfessionalCountOrderByAggregateInput
    _max?: MahasiswaPelatihanProfessionalMaxOrderByAggregateInput
    _min?: MahasiswaPelatihanProfessionalMinOrderByAggregateInput
  }

  export type MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput = {
    AND?: MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput | MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput[]
    OR?: MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput | MahasiswaPelatihanProfessionalScalarWhereWithAggregatesInput[]
    MahasiswaPelatihanProfessionalId?: StringWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | string
    NamaPelatihan?: StringWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | string
    Penyelenggara?: StringWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | string
    Mulai?: DateTimeWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | Date | string
    Selesai?: DateTimeNullableWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
  }

  export type MahasiswaPendidikanWhereInput = {
    AND?: MahasiswaPendidikanWhereInput | MahasiswaPendidikanWhereInput[]
    OR?: MahasiswaPendidikanWhereInput[]
    NOT?: MahasiswaPendidikanWhereInput | MahasiswaPendidikanWhereInput[]
    MahasiswaPendidikanId?: StringFilter<"MahasiswaPendidikan"> | string
    PendaftaranId?: StringFilter<"MahasiswaPendidikan"> | string
    NamaSekolah?: StringFilter<"MahasiswaPendidikan"> | string
    TahunLulus?: IntFilter<"MahasiswaPendidikan"> | number
    Jurusan?: StringFilter<"MahasiswaPendidikan"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPendidikan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPendidikan"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type MahasiswaPendidikanOrderByWithRelationInput = {
    MahasiswaPendidikanId?: SortOrder
    PendaftaranId?: SortOrder
    NamaSekolah?: SortOrder
    TahunLulus?: SortOrder
    Jurusan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type MahasiswaPendidikanWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaPendidikanId?: string
    AND?: MahasiswaPendidikanWhereInput | MahasiswaPendidikanWhereInput[]
    OR?: MahasiswaPendidikanWhereInput[]
    NOT?: MahasiswaPendidikanWhereInput | MahasiswaPendidikanWhereInput[]
    PendaftaranId?: StringFilter<"MahasiswaPendidikan"> | string
    NamaSekolah?: StringFilter<"MahasiswaPendidikan"> | string
    TahunLulus?: IntFilter<"MahasiswaPendidikan"> | number
    Jurusan?: StringFilter<"MahasiswaPendidikan"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPendidikan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPendidikan"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "MahasiswaPendidikanId">

  export type MahasiswaPendidikanOrderByWithAggregationInput = {
    MahasiswaPendidikanId?: SortOrder
    PendaftaranId?: SortOrder
    NamaSekolah?: SortOrder
    TahunLulus?: SortOrder
    Jurusan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaPendidikanCountOrderByAggregateInput
    _avg?: MahasiswaPendidikanAvgOrderByAggregateInput
    _max?: MahasiswaPendidikanMaxOrderByAggregateInput
    _min?: MahasiswaPendidikanMinOrderByAggregateInput
    _sum?: MahasiswaPendidikanSumOrderByAggregateInput
  }

  export type MahasiswaPendidikanScalarWhereWithAggregatesInput = {
    AND?: MahasiswaPendidikanScalarWhereWithAggregatesInput | MahasiswaPendidikanScalarWhereWithAggregatesInput[]
    OR?: MahasiswaPendidikanScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaPendidikanScalarWhereWithAggregatesInput | MahasiswaPendidikanScalarWhereWithAggregatesInput[]
    MahasiswaPendidikanId?: StringWithAggregatesFilter<"MahasiswaPendidikan"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MahasiswaPendidikan"> | string
    NamaSekolah?: StringWithAggregatesFilter<"MahasiswaPendidikan"> | string
    TahunLulus?: IntWithAggregatesFilter<"MahasiswaPendidikan"> | number
    Jurusan?: StringWithAggregatesFilter<"MahasiswaPendidikan"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaPendidikan"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaPendidikan"> | Date | string | null
  }

  export type MahasiswaPiagamWhereInput = {
    AND?: MahasiswaPiagamWhereInput | MahasiswaPiagamWhereInput[]
    OR?: MahasiswaPiagamWhereInput[]
    NOT?: MahasiswaPiagamWhereInput | MahasiswaPiagamWhereInput[]
    MahasiswaPiagamId?: StringFilter<"MahasiswaPiagam"> | string
    PendaftaranId?: StringFilter<"MahasiswaPiagam"> | string
    Tahun?: IntFilter<"MahasiswaPiagam"> | number
    BentukPenghargaan?: StringFilter<"MahasiswaPiagam"> | string
    PemberiPenghargaan?: StringFilter<"MahasiswaPiagam"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPiagam"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPiagam"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type MahasiswaPiagamOrderByWithRelationInput = {
    MahasiswaPiagamId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    BentukPenghargaan?: SortOrder
    PemberiPenghargaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type MahasiswaPiagamWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaPiagamId?: string
    AND?: MahasiswaPiagamWhereInput | MahasiswaPiagamWhereInput[]
    OR?: MahasiswaPiagamWhereInput[]
    NOT?: MahasiswaPiagamWhereInput | MahasiswaPiagamWhereInput[]
    PendaftaranId?: StringFilter<"MahasiswaPiagam"> | string
    Tahun?: IntFilter<"MahasiswaPiagam"> | number
    BentukPenghargaan?: StringFilter<"MahasiswaPiagam"> | string
    PemberiPenghargaan?: StringFilter<"MahasiswaPiagam"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPiagam"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPiagam"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "MahasiswaPiagamId">

  export type MahasiswaPiagamOrderByWithAggregationInput = {
    MahasiswaPiagamId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    BentukPenghargaan?: SortOrder
    PemberiPenghargaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaPiagamCountOrderByAggregateInput
    _avg?: MahasiswaPiagamAvgOrderByAggregateInput
    _max?: MahasiswaPiagamMaxOrderByAggregateInput
    _min?: MahasiswaPiagamMinOrderByAggregateInput
    _sum?: MahasiswaPiagamSumOrderByAggregateInput
  }

  export type MahasiswaPiagamScalarWhereWithAggregatesInput = {
    AND?: MahasiswaPiagamScalarWhereWithAggregatesInput | MahasiswaPiagamScalarWhereWithAggregatesInput[]
    OR?: MahasiswaPiagamScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaPiagamScalarWhereWithAggregatesInput | MahasiswaPiagamScalarWhereWithAggregatesInput[]
    MahasiswaPiagamId?: StringWithAggregatesFilter<"MahasiswaPiagam"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MahasiswaPiagam"> | string
    Tahun?: IntWithAggregatesFilter<"MahasiswaPiagam"> | number
    BentukPenghargaan?: StringWithAggregatesFilter<"MahasiswaPiagam"> | string
    PemberiPenghargaan?: StringWithAggregatesFilter<"MahasiswaPiagam"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaPiagam"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaPiagam"> | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanWhereInput = {
    AND?: MahasiswaRiwayatPekerjaanWhereInput | MahasiswaRiwayatPekerjaanWhereInput[]
    OR?: MahasiswaRiwayatPekerjaanWhereInput[]
    NOT?: MahasiswaRiwayatPekerjaanWhereInput | MahasiswaRiwayatPekerjaanWhereInput[]
    MahasiswaRiwayatPekerjaanId?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    PendaftaranId?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    Nama?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    PosisiJabatan?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    Alamat?: StringNullableFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    UraianTugas?: StringNullableFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    MulaiBekerja?: DateTimeFilter<"MahasiswaRiwayatPekerjaan"> | Date | string
    SelesaiBekerja?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type MahasiswaRiwayatPekerjaanOrderByWithRelationInput = {
    MahasiswaRiwayatPekerjaanId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    PosisiJabatan?: SortOrder
    Alamat?: SortOrderInput | SortOrder
    UraianTugas?: SortOrderInput | SortOrder
    MulaiBekerja?: SortOrder
    SelesaiBekerja?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type MahasiswaRiwayatPekerjaanWhereUniqueInput = Prisma.AtLeast<{
    MahasiswaRiwayatPekerjaanId?: string
    AND?: MahasiswaRiwayatPekerjaanWhereInput | MahasiswaRiwayatPekerjaanWhereInput[]
    OR?: MahasiswaRiwayatPekerjaanWhereInput[]
    NOT?: MahasiswaRiwayatPekerjaanWhereInput | MahasiswaRiwayatPekerjaanWhereInput[]
    PendaftaranId?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    Nama?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    PosisiJabatan?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    Alamat?: StringNullableFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    UraianTugas?: StringNullableFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    MulaiBekerja?: DateTimeFilter<"MahasiswaRiwayatPekerjaan"> | Date | string
    SelesaiBekerja?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "MahasiswaRiwayatPekerjaanId">

  export type MahasiswaRiwayatPekerjaanOrderByWithAggregationInput = {
    MahasiswaRiwayatPekerjaanId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    PosisiJabatan?: SortOrder
    Alamat?: SortOrderInput | SortOrder
    UraianTugas?: SortOrderInput | SortOrder
    MulaiBekerja?: SortOrder
    SelesaiBekerja?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MahasiswaRiwayatPekerjaanCountOrderByAggregateInput
    _max?: MahasiswaRiwayatPekerjaanMaxOrderByAggregateInput
    _min?: MahasiswaRiwayatPekerjaanMinOrderByAggregateInput
  }

  export type MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput = {
    AND?: MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput | MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput[]
    OR?: MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput | MahasiswaRiwayatPekerjaanScalarWhereWithAggregatesInput[]
    MahasiswaRiwayatPekerjaanId?: StringWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | string
    Nama?: StringWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | string
    PosisiJabatan?: StringWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | string
    Alamat?: StringNullableWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    UraianTugas?: StringNullableWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    MulaiBekerja?: DateTimeWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | Date | string
    SelesaiBekerja?: DateTimeNullableWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
  }

  export type MataKuliahWhereInput = {
    AND?: MataKuliahWhereInput | MataKuliahWhereInput[]
    OR?: MataKuliahWhereInput[]
    NOT?: MataKuliahWhereInput | MataKuliahWhereInput[]
    MataKuliahId?: StringFilter<"MataKuliah"> | string
    ProgramStudiId?: StringFilter<"MataKuliah"> | string
    Kode?: StringFilter<"MataKuliah"> | string
    Nama?: StringFilter<"MataKuliah"> | string
    Sks?: IntFilter<"MataKuliah"> | number
    Semester?: StringNullableFilter<"MataKuliah"> | string | null
    Silabus?: StringNullableFilter<"MataKuliah"> | string | null
    CreatedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    ProgramStudi?: XOR<ProgramStudiScalarRelationFilter, ProgramStudiWhereInput>
    CapaianPembelajaran?: CapaianPembelajaranListRelationFilter
    MataKuliahMahasiswa?: MataKuliahMahasiswaListRelationFilter
  }

  export type MataKuliahOrderByWithRelationInput = {
    MataKuliahId?: SortOrder
    ProgramStudiId?: SortOrder
    Kode?: SortOrder
    Nama?: SortOrder
    Sks?: SortOrder
    Semester?: SortOrderInput | SortOrder
    Silabus?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    ProgramStudi?: ProgramStudiOrderByWithRelationInput
    CapaianPembelajaran?: CapaianPembelajaranOrderByRelationAggregateInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaOrderByRelationAggregateInput
  }

  export type MataKuliahWhereUniqueInput = Prisma.AtLeast<{
    MataKuliahId?: string
    AND?: MataKuliahWhereInput | MataKuliahWhereInput[]
    OR?: MataKuliahWhereInput[]
    NOT?: MataKuliahWhereInput | MataKuliahWhereInput[]
    ProgramStudiId?: StringFilter<"MataKuliah"> | string
    Kode?: StringFilter<"MataKuliah"> | string
    Nama?: StringFilter<"MataKuliah"> | string
    Sks?: IntFilter<"MataKuliah"> | number
    Semester?: StringNullableFilter<"MataKuliah"> | string | null
    Silabus?: StringNullableFilter<"MataKuliah"> | string | null
    CreatedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    ProgramStudi?: XOR<ProgramStudiScalarRelationFilter, ProgramStudiWhereInput>
    CapaianPembelajaran?: CapaianPembelajaranListRelationFilter
    MataKuliahMahasiswa?: MataKuliahMahasiswaListRelationFilter
  }, "MataKuliahId">

  export type MataKuliahOrderByWithAggregationInput = {
    MataKuliahId?: SortOrder
    ProgramStudiId?: SortOrder
    Kode?: SortOrder
    Nama?: SortOrder
    Sks?: SortOrder
    Semester?: SortOrderInput | SortOrder
    Silabus?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: MataKuliahCountOrderByAggregateInput
    _avg?: MataKuliahAvgOrderByAggregateInput
    _max?: MataKuliahMaxOrderByAggregateInput
    _min?: MataKuliahMinOrderByAggregateInput
    _sum?: MataKuliahSumOrderByAggregateInput
  }

  export type MataKuliahScalarWhereWithAggregatesInput = {
    AND?: MataKuliahScalarWhereWithAggregatesInput | MataKuliahScalarWhereWithAggregatesInput[]
    OR?: MataKuliahScalarWhereWithAggregatesInput[]
    NOT?: MataKuliahScalarWhereWithAggregatesInput | MataKuliahScalarWhereWithAggregatesInput[]
    MataKuliahId?: StringWithAggregatesFilter<"MataKuliah"> | string
    ProgramStudiId?: StringWithAggregatesFilter<"MataKuliah"> | string
    Kode?: StringWithAggregatesFilter<"MataKuliah"> | string
    Nama?: StringWithAggregatesFilter<"MataKuliah"> | string
    Sks?: IntWithAggregatesFilter<"MataKuliah"> | number
    Semester?: StringNullableWithAggregatesFilter<"MataKuliah"> | string | null
    Silabus?: StringNullableWithAggregatesFilter<"MataKuliah"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MataKuliah"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MataKuliah"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"MataKuliah"> | Date | string | null
  }

  export type MataKuliahMahasiswaWhereInput = {
    AND?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    OR?: MataKuliahMahasiswaWhereInput[]
    NOT?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    MataKuliahMahasiswaId?: StringFilter<"MataKuliahMahasiswa"> | string
    PendaftaranId?: StringFilter<"MataKuliahMahasiswa"> | string
    MataKuliahId?: StringFilter<"MataKuliahMahasiswa"> | string
    Rpl?: BoolFilter<"MataKuliahMahasiswa"> | boolean
    Keterangan?: EnumKeteranganMataKuliahNullableFilter<"MataKuliahMahasiswa"> | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: EnumStatusMataKuliahMahasiswaNullableFilter<"MataKuliahMahasiswa"> | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: DateTimeNullableFilter<"MataKuliahMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MataKuliahMahasiswa"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    MataKuliah?: XOR<MataKuliahScalarRelationFilter, MataKuliahWhereInput>
    EvaluasiDiri?: EvaluasiDiriListRelationFilter
    SanggahanAssesmenMk?: SanggahanAssesmenMkListRelationFilter
  }

  export type MataKuliahMahasiswaOrderByWithRelationInput = {
    MataKuliahMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    MataKuliahId?: SortOrder
    Rpl?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    StatusMataKuliahMahasiswa?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
    MataKuliah?: MataKuliahOrderByWithRelationInput
    EvaluasiDiri?: EvaluasiDiriOrderByRelationAggregateInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkOrderByRelationAggregateInput
  }

  export type MataKuliahMahasiswaWhereUniqueInput = Prisma.AtLeast<{
    MataKuliahMahasiswaId?: string
    PendaftaranId_MataKuliahId?: MataKuliahMahasiswaPendaftaranIdMataKuliahIdCompoundUniqueInput
    AND?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    OR?: MataKuliahMahasiswaWhereInput[]
    NOT?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    PendaftaranId?: StringFilter<"MataKuliahMahasiswa"> | string
    MataKuliahId?: StringFilter<"MataKuliahMahasiswa"> | string
    Rpl?: BoolFilter<"MataKuliahMahasiswa"> | boolean
    Keterangan?: EnumKeteranganMataKuliahNullableFilter<"MataKuliahMahasiswa"> | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: EnumStatusMataKuliahMahasiswaNullableFilter<"MataKuliahMahasiswa"> | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: DateTimeNullableFilter<"MataKuliahMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MataKuliahMahasiswa"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    MataKuliah?: XOR<MataKuliahScalarRelationFilter, MataKuliahWhereInput>
    EvaluasiDiri?: EvaluasiDiriListRelationFilter
    SanggahanAssesmenMk?: SanggahanAssesmenMkListRelationFilter
  }, "MataKuliahMahasiswaId" | "PendaftaranId_MataKuliahId">

  export type MataKuliahMahasiswaOrderByWithAggregationInput = {
    MataKuliahMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    MataKuliahId?: SortOrder
    Rpl?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    StatusMataKuliahMahasiswa?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: MataKuliahMahasiswaCountOrderByAggregateInput
    _max?: MataKuliahMahasiswaMaxOrderByAggregateInput
    _min?: MataKuliahMahasiswaMinOrderByAggregateInput
  }

  export type MataKuliahMahasiswaScalarWhereWithAggregatesInput = {
    AND?: MataKuliahMahasiswaScalarWhereWithAggregatesInput | MataKuliahMahasiswaScalarWhereWithAggregatesInput[]
    OR?: MataKuliahMahasiswaScalarWhereWithAggregatesInput[]
    NOT?: MataKuliahMahasiswaScalarWhereWithAggregatesInput | MataKuliahMahasiswaScalarWhereWithAggregatesInput[]
    MataKuliahMahasiswaId?: StringWithAggregatesFilter<"MataKuliahMahasiswa"> | string
    PendaftaranId?: StringWithAggregatesFilter<"MataKuliahMahasiswa"> | string
    MataKuliahId?: StringWithAggregatesFilter<"MataKuliahMahasiswa"> | string
    Rpl?: BoolWithAggregatesFilter<"MataKuliahMahasiswa"> | boolean
    Keterangan?: EnumKeteranganMataKuliahNullableWithAggregatesFilter<"MataKuliahMahasiswa"> | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: EnumStatusMataKuliahMahasiswaNullableWithAggregatesFilter<"MataKuliahMahasiswa"> | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"MataKuliahMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"MataKuliahMahasiswa"> | Date | string | null
  }

  export type UserHasPermissionsWhereInput = {
    AND?: UserHasPermissionsWhereInput | UserHasPermissionsWhereInput[]
    OR?: UserHasPermissionsWhereInput[]
    NOT?: UserHasPermissionsWhereInput | UserHasPermissionsWhereInput[]
    PermissionId?: StringFilter<"UserHasPermissions"> | string
    UserId?: StringFilter<"UserHasPermissions"> | string
    Permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserHasPermissionsOrderByWithRelationInput = {
    PermissionId?: SortOrder
    UserId?: SortOrder
    Permission?: PermissionOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type UserHasPermissionsWhereUniqueInput = Prisma.AtLeast<{
    PermissionId_UserId?: UserHasPermissionsPermissionIdUserIdCompoundUniqueInput
    AND?: UserHasPermissionsWhereInput | UserHasPermissionsWhereInput[]
    OR?: UserHasPermissionsWhereInput[]
    NOT?: UserHasPermissionsWhereInput | UserHasPermissionsWhereInput[]
    PermissionId?: StringFilter<"UserHasPermissions"> | string
    UserId?: StringFilter<"UserHasPermissions"> | string
    Permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "PermissionId_UserId">

  export type UserHasPermissionsOrderByWithAggregationInput = {
    PermissionId?: SortOrder
    UserId?: SortOrder
    _count?: UserHasPermissionsCountOrderByAggregateInput
    _max?: UserHasPermissionsMaxOrderByAggregateInput
    _min?: UserHasPermissionsMinOrderByAggregateInput
  }

  export type UserHasPermissionsScalarWhereWithAggregatesInput = {
    AND?: UserHasPermissionsScalarWhereWithAggregatesInput | UserHasPermissionsScalarWhereWithAggregatesInput[]
    OR?: UserHasPermissionsScalarWhereWithAggregatesInput[]
    NOT?: UserHasPermissionsScalarWhereWithAggregatesInput | UserHasPermissionsScalarWhereWithAggregatesInput[]
    PermissionId?: StringWithAggregatesFilter<"UserHasPermissions"> | string
    UserId?: StringWithAggregatesFilter<"UserHasPermissions"> | string
  }

  export type UserHasRolesWhereInput = {
    AND?: UserHasRolesWhereInput | UserHasRolesWhereInput[]
    OR?: UserHasRolesWhereInput[]
    NOT?: UserHasRolesWhereInput | UserHasRolesWhereInput[]
    RoleId?: StringFilter<"UserHasRoles"> | string
    UserId?: StringFilter<"UserHasRoles"> | string
    Role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserHasRolesOrderByWithRelationInput = {
    RoleId?: SortOrder
    UserId?: SortOrder
    Role?: RoleOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type UserHasRolesWhereUniqueInput = Prisma.AtLeast<{
    RoleId_UserId?: UserHasRolesRoleIdUserIdCompoundUniqueInput
    AND?: UserHasRolesWhereInput | UserHasRolesWhereInput[]
    OR?: UserHasRolesWhereInput[]
    NOT?: UserHasRolesWhereInput | UserHasRolesWhereInput[]
    RoleId?: StringFilter<"UserHasRoles"> | string
    UserId?: StringFilter<"UserHasRoles"> | string
    Role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "RoleId_UserId">

  export type UserHasRolesOrderByWithAggregationInput = {
    RoleId?: SortOrder
    UserId?: SortOrder
    _count?: UserHasRolesCountOrderByAggregateInput
    _max?: UserHasRolesMaxOrderByAggregateInput
    _min?: UserHasRolesMinOrderByAggregateInput
  }

  export type UserHasRolesScalarWhereWithAggregatesInput = {
    AND?: UserHasRolesScalarWhereWithAggregatesInput | UserHasRolesScalarWhereWithAggregatesInput[]
    OR?: UserHasRolesScalarWhereWithAggregatesInput[]
    NOT?: UserHasRolesScalarWhereWithAggregatesInput | UserHasRolesScalarWhereWithAggregatesInput[]
    RoleId?: StringWithAggregatesFilter<"UserHasRoles"> | string
    UserId?: StringWithAggregatesFilter<"UserHasRoles"> | string
  }

  export type OrangTuaWhereInput = {
    AND?: OrangTuaWhereInput | OrangTuaWhereInput[]
    OR?: OrangTuaWhereInput[]
    NOT?: OrangTuaWhereInput | OrangTuaWhereInput[]
    OrangTuaId?: StringFilter<"OrangTua"> | string
    PendaftaranId?: StringFilter<"OrangTua"> | string
    Nama?: StringFilter<"OrangTua"> | string
    Pekerjaan?: StringNullableFilter<"OrangTua"> | string | null
    JenisOrtu?: EnumJenisOrtuFilter<"OrangTua"> | $Enums.JenisOrtu
    Penghasilan?: FloatFilter<"OrangTua"> | number
    Email?: StringFilter<"OrangTua"> | string
    NomorHp?: StringFilter<"OrangTua"> | string
    CreatedAt?: DateTimeNullableFilter<"OrangTua"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"OrangTua"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type OrangTuaOrderByWithRelationInput = {
    OrangTuaId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    Pekerjaan?: SortOrderInput | SortOrder
    JenisOrtu?: SortOrder
    Penghasilan?: SortOrder
    Email?: SortOrder
    NomorHp?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type OrangTuaWhereUniqueInput = Prisma.AtLeast<{
    OrangTuaId?: string
    AND?: OrangTuaWhereInput | OrangTuaWhereInput[]
    OR?: OrangTuaWhereInput[]
    NOT?: OrangTuaWhereInput | OrangTuaWhereInput[]
    PendaftaranId?: StringFilter<"OrangTua"> | string
    Nama?: StringFilter<"OrangTua"> | string
    Pekerjaan?: StringNullableFilter<"OrangTua"> | string | null
    JenisOrtu?: EnumJenisOrtuFilter<"OrangTua"> | $Enums.JenisOrtu
    Penghasilan?: FloatFilter<"OrangTua"> | number
    Email?: StringFilter<"OrangTua"> | string
    NomorHp?: StringFilter<"OrangTua"> | string
    CreatedAt?: DateTimeNullableFilter<"OrangTua"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"OrangTua"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "OrangTuaId">

  export type OrangTuaOrderByWithAggregationInput = {
    OrangTuaId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    Pekerjaan?: SortOrderInput | SortOrder
    JenisOrtu?: SortOrder
    Penghasilan?: SortOrder
    Email?: SortOrder
    NomorHp?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: OrangTuaCountOrderByAggregateInput
    _avg?: OrangTuaAvgOrderByAggregateInput
    _max?: OrangTuaMaxOrderByAggregateInput
    _min?: OrangTuaMinOrderByAggregateInput
    _sum?: OrangTuaSumOrderByAggregateInput
  }

  export type OrangTuaScalarWhereWithAggregatesInput = {
    AND?: OrangTuaScalarWhereWithAggregatesInput | OrangTuaScalarWhereWithAggregatesInput[]
    OR?: OrangTuaScalarWhereWithAggregatesInput[]
    NOT?: OrangTuaScalarWhereWithAggregatesInput | OrangTuaScalarWhereWithAggregatesInput[]
    OrangTuaId?: StringWithAggregatesFilter<"OrangTua"> | string
    PendaftaranId?: StringWithAggregatesFilter<"OrangTua"> | string
    Nama?: StringWithAggregatesFilter<"OrangTua"> | string
    Pekerjaan?: StringNullableWithAggregatesFilter<"OrangTua"> | string | null
    JenisOrtu?: EnumJenisOrtuWithAggregatesFilter<"OrangTua"> | $Enums.JenisOrtu
    Penghasilan?: FloatWithAggregatesFilter<"OrangTua"> | number
    Email?: StringWithAggregatesFilter<"OrangTua"> | string
    NomorHp?: StringWithAggregatesFilter<"OrangTua"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"OrangTua"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"OrangTua"> | Date | string | null
  }

  export type PasswordResetTokensWhereInput = {
    AND?: PasswordResetTokensWhereInput | PasswordResetTokensWhereInput[]
    OR?: PasswordResetTokensWhereInput[]
    NOT?: PasswordResetTokensWhereInput | PasswordResetTokensWhereInput[]
    Email?: StringFilter<"PasswordResetTokens"> | string
    Token?: StringFilter<"PasswordResetTokens"> | string
    CreatedAt?: DateTimeNullableFilter<"PasswordResetTokens"> | Date | string | null
  }

  export type PasswordResetTokensOrderByWithRelationInput = {
    Email?: SortOrder
    Token?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
  }

  export type PasswordResetTokensWhereUniqueInput = Prisma.AtLeast<{
    Email?: string
    AND?: PasswordResetTokensWhereInput | PasswordResetTokensWhereInput[]
    OR?: PasswordResetTokensWhereInput[]
    NOT?: PasswordResetTokensWhereInput | PasswordResetTokensWhereInput[]
    Token?: StringFilter<"PasswordResetTokens"> | string
    CreatedAt?: DateTimeNullableFilter<"PasswordResetTokens"> | Date | string | null
  }, "Email">

  export type PasswordResetTokensOrderByWithAggregationInput = {
    Email?: SortOrder
    Token?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    _count?: PasswordResetTokensCountOrderByAggregateInput
    _max?: PasswordResetTokensMaxOrderByAggregateInput
    _min?: PasswordResetTokensMinOrderByAggregateInput
  }

  export type PasswordResetTokensScalarWhereWithAggregatesInput = {
    AND?: PasswordResetTokensScalarWhereWithAggregatesInput | PasswordResetTokensScalarWhereWithAggregatesInput[]
    OR?: PasswordResetTokensScalarWhereWithAggregatesInput[]
    NOT?: PasswordResetTokensScalarWhereWithAggregatesInput | PasswordResetTokensScalarWhereWithAggregatesInput[]
    Email?: StringWithAggregatesFilter<"PasswordResetTokens"> | string
    Token?: StringWithAggregatesFilter<"PasswordResetTokens"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"PasswordResetTokens"> | Date | string | null
  }

  export type PekerjaanMahasiswaWhereInput = {
    AND?: PekerjaanMahasiswaWhereInput | PekerjaanMahasiswaWhereInput[]
    OR?: PekerjaanMahasiswaWhereInput[]
    NOT?: PekerjaanMahasiswaWhereInput | PekerjaanMahasiswaWhereInput[]
    PekerjaanMahasiswaId?: StringFilter<"PekerjaanMahasiswa"> | string
    PendaftaranId?: StringFilter<"PekerjaanMahasiswa"> | string
    AlamatId?: StringFilter<"PekerjaanMahasiswa"> | string
    InstitusiTempatBekerja?: StringFilter<"PekerjaanMahasiswa"> | string
    Jabatan?: StringFilter<"PekerjaanMahasiswa"> | string
    StatusPekerjaan?: EnumStatusPekerjaanFilter<"PekerjaanMahasiswa"> | $Enums.StatusPekerjaan
    CreatedAt?: DateTimeNullableFilter<"PekerjaanMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"PekerjaanMahasiswa"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type PekerjaanMahasiswaOrderByWithRelationInput = {
    PekerjaanMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    InstitusiTempatBekerja?: SortOrder
    Jabatan?: SortOrder
    StatusPekerjaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type PekerjaanMahasiswaWhereUniqueInput = Prisma.AtLeast<{
    PekerjaanMahasiswaId?: string
    AND?: PekerjaanMahasiswaWhereInput | PekerjaanMahasiswaWhereInput[]
    OR?: PekerjaanMahasiswaWhereInput[]
    NOT?: PekerjaanMahasiswaWhereInput | PekerjaanMahasiswaWhereInput[]
    PendaftaranId?: StringFilter<"PekerjaanMahasiswa"> | string
    AlamatId?: StringFilter<"PekerjaanMahasiswa"> | string
    InstitusiTempatBekerja?: StringFilter<"PekerjaanMahasiswa"> | string
    Jabatan?: StringFilter<"PekerjaanMahasiswa"> | string
    StatusPekerjaan?: EnumStatusPekerjaanFilter<"PekerjaanMahasiswa"> | $Enums.StatusPekerjaan
    CreatedAt?: DateTimeNullableFilter<"PekerjaanMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"PekerjaanMahasiswa"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "PekerjaanMahasiswaId">

  export type PekerjaanMahasiswaOrderByWithAggregationInput = {
    PekerjaanMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    InstitusiTempatBekerja?: SortOrder
    Jabatan?: SortOrder
    StatusPekerjaan?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: PekerjaanMahasiswaCountOrderByAggregateInput
    _max?: PekerjaanMahasiswaMaxOrderByAggregateInput
    _min?: PekerjaanMahasiswaMinOrderByAggregateInput
  }

  export type PekerjaanMahasiswaScalarWhereWithAggregatesInput = {
    AND?: PekerjaanMahasiswaScalarWhereWithAggregatesInput | PekerjaanMahasiswaScalarWhereWithAggregatesInput[]
    OR?: PekerjaanMahasiswaScalarWhereWithAggregatesInput[]
    NOT?: PekerjaanMahasiswaScalarWhereWithAggregatesInput | PekerjaanMahasiswaScalarWhereWithAggregatesInput[]
    PekerjaanMahasiswaId?: StringWithAggregatesFilter<"PekerjaanMahasiswa"> | string
    PendaftaranId?: StringWithAggregatesFilter<"PekerjaanMahasiswa"> | string
    AlamatId?: StringWithAggregatesFilter<"PekerjaanMahasiswa"> | string
    InstitusiTempatBekerja?: StringWithAggregatesFilter<"PekerjaanMahasiswa"> | string
    Jabatan?: StringWithAggregatesFilter<"PekerjaanMahasiswa"> | string
    StatusPekerjaan?: EnumStatusPekerjaanWithAggregatesFilter<"PekerjaanMahasiswa"> | $Enums.StatusPekerjaan
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"PekerjaanMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"PekerjaanMahasiswa"> | Date | string | null
  }

  export type PendaftaranWhereInput = {
    AND?: PendaftaranWhereInput | PendaftaranWhereInput[]
    OR?: PendaftaranWhereInput[]
    NOT?: PendaftaranWhereInput | PendaftaranWhereInput[]
    PendaftaranId?: StringFilter<"Pendaftaran"> | string
    MahasiswaId?: StringFilter<"Pendaftaran"> | string
    KodePendaftar?: StringFilter<"Pendaftaran"> | string
    NoUjian?: StringFilter<"Pendaftaran"> | string
    Periode?: StringFilter<"Pendaftaran"> | string
    Gelombang?: StringFilter<"Pendaftaran"> | string
    SistemKuliah?: EnumSistemKuliahFilter<"Pendaftaran"> | $Enums.SistemKuliah
    JalurPendaftaran?: StringFilter<"Pendaftaran"> | string
    CreatedAt?: DateTimeNullableFilter<"Pendaftaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Pendaftaran"> | Date | string | null
    Mahasiswa?: XOR<MahasiswaScalarRelationFilter, MahasiswaWhereInput>
    AssesorMahasiswa?: AssesorMahasiswaListRelationFilter
    BuktiForm?: BuktiFormListRelationFilter
    DaftarUlang?: DaftarUlangListRelationFilter
    InformasiKependudukan?: InformasiKependudukanListRelationFilter
    InstitusiLama?: InstitusiLamaListRelationFilter
    MahasiswaKonferensi?: MahasiswaKonferensiListRelationFilter
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiListRelationFilter
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalListRelationFilter
    MahasiswaPendidikan?: MahasiswaPendidikanListRelationFilter
    MahasiswaPiagam?: MahasiswaPiagamListRelationFilter
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanListRelationFilter
    MataKuliahMahasiswa?: MataKuliahMahasiswaListRelationFilter
    OrangTua?: OrangTuaListRelationFilter
    PekerjaanMahasiswa?: PekerjaanMahasiswaListRelationFilter
    Pesantren?: PesantrenListRelationFilter
    SanggahanAssesmen?: SanggahanAssesmenListRelationFilter
    SkRektorMahasiswa?: SkRektorMahasiswaListRelationFilter
  }

  export type PendaftaranOrderByWithRelationInput = {
    PendaftaranId?: SortOrder
    MahasiswaId?: SortOrder
    KodePendaftar?: SortOrder
    NoUjian?: SortOrder
    Periode?: SortOrder
    Gelombang?: SortOrder
    SistemKuliah?: SortOrder
    JalurPendaftaran?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Mahasiswa?: MahasiswaOrderByWithRelationInput
    AssesorMahasiswa?: AssesorMahasiswaOrderByRelationAggregateInput
    BuktiForm?: BuktiFormOrderByRelationAggregateInput
    DaftarUlang?: DaftarUlangOrderByRelationAggregateInput
    InformasiKependudukan?: InformasiKependudukanOrderByRelationAggregateInput
    InstitusiLama?: InstitusiLamaOrderByRelationAggregateInput
    MahasiswaKonferensi?: MahasiswaKonferensiOrderByRelationAggregateInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiOrderByRelationAggregateInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalOrderByRelationAggregateInput
    MahasiswaPendidikan?: MahasiswaPendidikanOrderByRelationAggregateInput
    MahasiswaPiagam?: MahasiswaPiagamOrderByRelationAggregateInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanOrderByRelationAggregateInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaOrderByRelationAggregateInput
    OrangTua?: OrangTuaOrderByRelationAggregateInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaOrderByRelationAggregateInput
    Pesantren?: PesantrenOrderByRelationAggregateInput
    SanggahanAssesmen?: SanggahanAssesmenOrderByRelationAggregateInput
    SkRektorMahasiswa?: SkRektorMahasiswaOrderByRelationAggregateInput
  }

  export type PendaftaranWhereUniqueInput = Prisma.AtLeast<{
    PendaftaranId?: string
    AND?: PendaftaranWhereInput | PendaftaranWhereInput[]
    OR?: PendaftaranWhereInput[]
    NOT?: PendaftaranWhereInput | PendaftaranWhereInput[]
    MahasiswaId?: StringFilter<"Pendaftaran"> | string
    KodePendaftar?: StringFilter<"Pendaftaran"> | string
    NoUjian?: StringFilter<"Pendaftaran"> | string
    Periode?: StringFilter<"Pendaftaran"> | string
    Gelombang?: StringFilter<"Pendaftaran"> | string
    SistemKuliah?: EnumSistemKuliahFilter<"Pendaftaran"> | $Enums.SistemKuliah
    JalurPendaftaran?: StringFilter<"Pendaftaran"> | string
    CreatedAt?: DateTimeNullableFilter<"Pendaftaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Pendaftaran"> | Date | string | null
    Mahasiswa?: XOR<MahasiswaScalarRelationFilter, MahasiswaWhereInput>
    AssesorMahasiswa?: AssesorMahasiswaListRelationFilter
    BuktiForm?: BuktiFormListRelationFilter
    DaftarUlang?: DaftarUlangListRelationFilter
    InformasiKependudukan?: InformasiKependudukanListRelationFilter
    InstitusiLama?: InstitusiLamaListRelationFilter
    MahasiswaKonferensi?: MahasiswaKonferensiListRelationFilter
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiListRelationFilter
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalListRelationFilter
    MahasiswaPendidikan?: MahasiswaPendidikanListRelationFilter
    MahasiswaPiagam?: MahasiswaPiagamListRelationFilter
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanListRelationFilter
    MataKuliahMahasiswa?: MataKuliahMahasiswaListRelationFilter
    OrangTua?: OrangTuaListRelationFilter
    PekerjaanMahasiswa?: PekerjaanMahasiswaListRelationFilter
    Pesantren?: PesantrenListRelationFilter
    SanggahanAssesmen?: SanggahanAssesmenListRelationFilter
    SkRektorMahasiswa?: SkRektorMahasiswaListRelationFilter
  }, "PendaftaranId">

  export type PendaftaranOrderByWithAggregationInput = {
    PendaftaranId?: SortOrder
    MahasiswaId?: SortOrder
    KodePendaftar?: SortOrder
    NoUjian?: SortOrder
    Periode?: SortOrder
    Gelombang?: SortOrder
    SistemKuliah?: SortOrder
    JalurPendaftaran?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: PendaftaranCountOrderByAggregateInput
    _max?: PendaftaranMaxOrderByAggregateInput
    _min?: PendaftaranMinOrderByAggregateInput
  }

  export type PendaftaranScalarWhereWithAggregatesInput = {
    AND?: PendaftaranScalarWhereWithAggregatesInput | PendaftaranScalarWhereWithAggregatesInput[]
    OR?: PendaftaranScalarWhereWithAggregatesInput[]
    NOT?: PendaftaranScalarWhereWithAggregatesInput | PendaftaranScalarWhereWithAggregatesInput[]
    PendaftaranId?: StringWithAggregatesFilter<"Pendaftaran"> | string
    MahasiswaId?: StringWithAggregatesFilter<"Pendaftaran"> | string
    KodePendaftar?: StringWithAggregatesFilter<"Pendaftaran"> | string
    NoUjian?: StringWithAggregatesFilter<"Pendaftaran"> | string
    Periode?: StringWithAggregatesFilter<"Pendaftaran"> | string
    Gelombang?: StringWithAggregatesFilter<"Pendaftaran"> | string
    SistemKuliah?: EnumSistemKuliahWithAggregatesFilter<"Pendaftaran"> | $Enums.SistemKuliah
    JalurPendaftaran?: StringWithAggregatesFilter<"Pendaftaran"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"Pendaftaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"Pendaftaran"> | Date | string | null
  }

  export type PermissionWhereInput = {
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    PermissionId?: StringFilter<"Permission"> | string
    Name?: StringFilter<"Permission"> | string
    GuardName?: StringFilter<"Permission"> | string
    CreatedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    UserHasPermissions?: UserHasPermissionsListRelationFilter
    RoleHasPermissions?: RoleHasPermissionsListRelationFilter
  }

  export type PermissionOrderByWithRelationInput = {
    PermissionId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    UserHasPermissions?: UserHasPermissionsOrderByRelationAggregateInput
    RoleHasPermissions?: RoleHasPermissionsOrderByRelationAggregateInput
  }

  export type PermissionWhereUniqueInput = Prisma.AtLeast<{
    PermissionId?: string
    Name_GuardName?: PermissionNameGuardNameCompoundUniqueInput
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    Name?: StringFilter<"Permission"> | string
    GuardName?: StringFilter<"Permission"> | string
    CreatedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    UserHasPermissions?: UserHasPermissionsListRelationFilter
    RoleHasPermissions?: RoleHasPermissionsListRelationFilter
  }, "PermissionId" | "Name_GuardName">

  export type PermissionOrderByWithAggregationInput = {
    PermissionId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: PermissionCountOrderByAggregateInput
    _max?: PermissionMaxOrderByAggregateInput
    _min?: PermissionMinOrderByAggregateInput
  }

  export type PermissionScalarWhereWithAggregatesInput = {
    AND?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    OR?: PermissionScalarWhereWithAggregatesInput[]
    NOT?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    PermissionId?: StringWithAggregatesFilter<"Permission"> | string
    Name?: StringWithAggregatesFilter<"Permission"> | string
    GuardName?: StringWithAggregatesFilter<"Permission"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"Permission"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"Permission"> | Date | string | null
  }

  export type PesantrenWhereInput = {
    AND?: PesantrenWhereInput | PesantrenWhereInput[]
    OR?: PesantrenWhereInput[]
    NOT?: PesantrenWhereInput | PesantrenWhereInput[]
    PesantrenId?: StringFilter<"Pesantren"> | string
    PendaftaranId?: StringFilter<"Pesantren"> | string
    NamaPesantren?: StringFilter<"Pesantren"> | string
    LamaPesantren?: StringFilter<"Pesantren"> | string
    CreatedAt?: DateTimeNullableFilter<"Pesantren"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Pesantren"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type PesantrenOrderByWithRelationInput = {
    PesantrenId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPesantren?: SortOrder
    LamaPesantren?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type PesantrenWhereUniqueInput = Prisma.AtLeast<{
    PesantrenId?: string
    AND?: PesantrenWhereInput | PesantrenWhereInput[]
    OR?: PesantrenWhereInput[]
    NOT?: PesantrenWhereInput | PesantrenWhereInput[]
    PendaftaranId?: StringFilter<"Pesantren"> | string
    NamaPesantren?: StringFilter<"Pesantren"> | string
    LamaPesantren?: StringFilter<"Pesantren"> | string
    CreatedAt?: DateTimeNullableFilter<"Pesantren"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Pesantren"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "PesantrenId">

  export type PesantrenOrderByWithAggregationInput = {
    PesantrenId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPesantren?: SortOrder
    LamaPesantren?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: PesantrenCountOrderByAggregateInput
    _max?: PesantrenMaxOrderByAggregateInput
    _min?: PesantrenMinOrderByAggregateInput
  }

  export type PesantrenScalarWhereWithAggregatesInput = {
    AND?: PesantrenScalarWhereWithAggregatesInput | PesantrenScalarWhereWithAggregatesInput[]
    OR?: PesantrenScalarWhereWithAggregatesInput[]
    NOT?: PesantrenScalarWhereWithAggregatesInput | PesantrenScalarWhereWithAggregatesInput[]
    PesantrenId?: StringWithAggregatesFilter<"Pesantren"> | string
    PendaftaranId?: StringWithAggregatesFilter<"Pesantren"> | string
    NamaPesantren?: StringWithAggregatesFilter<"Pesantren"> | string
    LamaPesantren?: StringWithAggregatesFilter<"Pesantren"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"Pesantren"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"Pesantren"> | Date | string | null
  }

  export type ProgramStudiWhereInput = {
    AND?: ProgramStudiWhereInput | ProgramStudiWhereInput[]
    OR?: ProgramStudiWhereInput[]
    NOT?: ProgramStudiWhereInput | ProgramStudiWhereInput[]
    ProgramStudiId?: StringFilter<"ProgramStudi"> | string
    UniversityId?: StringFilter<"ProgramStudi"> | string
    Nama?: StringFilter<"ProgramStudi"> | string
    Jenjang?: StringNullableFilter<"ProgramStudi"> | string | null
    Akreditasi?: StringFilter<"ProgramStudi"> | string
    CreatedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    DaftarUlang?: DaftarUlangListRelationFilter
    MataKuliah?: MataKuliahListRelationFilter
  }

  export type ProgramStudiOrderByWithRelationInput = {
    ProgramStudiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Jenjang?: SortOrderInput | SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    University?: UniversityOrderByWithRelationInput
    DaftarUlang?: DaftarUlangOrderByRelationAggregateInput
    MataKuliah?: MataKuliahOrderByRelationAggregateInput
  }

  export type ProgramStudiWhereUniqueInput = Prisma.AtLeast<{
    ProgramStudiId?: string
    AND?: ProgramStudiWhereInput | ProgramStudiWhereInput[]
    OR?: ProgramStudiWhereInput[]
    NOT?: ProgramStudiWhereInput | ProgramStudiWhereInput[]
    UniversityId?: StringFilter<"ProgramStudi"> | string
    Nama?: StringFilter<"ProgramStudi"> | string
    Jenjang?: StringNullableFilter<"ProgramStudi"> | string | null
    Akreditasi?: StringFilter<"ProgramStudi"> | string
    CreatedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    DaftarUlang?: DaftarUlangListRelationFilter
    MataKuliah?: MataKuliahListRelationFilter
  }, "ProgramStudiId">

  export type ProgramStudiOrderByWithAggregationInput = {
    ProgramStudiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Jenjang?: SortOrderInput | SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: ProgramStudiCountOrderByAggregateInput
    _max?: ProgramStudiMaxOrderByAggregateInput
    _min?: ProgramStudiMinOrderByAggregateInput
  }

  export type ProgramStudiScalarWhereWithAggregatesInput = {
    AND?: ProgramStudiScalarWhereWithAggregatesInput | ProgramStudiScalarWhereWithAggregatesInput[]
    OR?: ProgramStudiScalarWhereWithAggregatesInput[]
    NOT?: ProgramStudiScalarWhereWithAggregatesInput | ProgramStudiScalarWhereWithAggregatesInput[]
    ProgramStudiId?: StringWithAggregatesFilter<"ProgramStudi"> | string
    UniversityId?: StringWithAggregatesFilter<"ProgramStudi"> | string
    Nama?: StringWithAggregatesFilter<"ProgramStudi"> | string
    Jenjang?: StringNullableWithAggregatesFilter<"ProgramStudi"> | string | null
    Akreditasi?: StringWithAggregatesFilter<"ProgramStudi"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"ProgramStudi"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"ProgramStudi"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"ProgramStudi"> | Date | string | null
  }

  export type ProvinsiWhereInput = {
    AND?: ProvinsiWhereInput | ProvinsiWhereInput[]
    OR?: ProvinsiWhereInput[]
    NOT?: ProvinsiWhereInput | ProvinsiWhereInput[]
    ProvinsiId?: StringFilter<"Provinsi"> | string
    CountryId?: StringFilter<"Provinsi"> | string
    Nama?: StringFilter<"Provinsi"> | string
    Country?: XOR<CountryScalarRelationFilter, CountryWhereInput>
    Kabupaten?: KabupatenListRelationFilter
  }

  export type ProvinsiOrderByWithRelationInput = {
    ProvinsiId?: SortOrder
    CountryId?: SortOrder
    Nama?: SortOrder
    Country?: CountryOrderByWithRelationInput
    Kabupaten?: KabupatenOrderByRelationAggregateInput
  }

  export type ProvinsiWhereUniqueInput = Prisma.AtLeast<{
    ProvinsiId?: string
    AND?: ProvinsiWhereInput | ProvinsiWhereInput[]
    OR?: ProvinsiWhereInput[]
    NOT?: ProvinsiWhereInput | ProvinsiWhereInput[]
    CountryId?: StringFilter<"Provinsi"> | string
    Nama?: StringFilter<"Provinsi"> | string
    Country?: XOR<CountryScalarRelationFilter, CountryWhereInput>
    Kabupaten?: KabupatenListRelationFilter
  }, "ProvinsiId">

  export type ProvinsiOrderByWithAggregationInput = {
    ProvinsiId?: SortOrder
    CountryId?: SortOrder
    Nama?: SortOrder
    _count?: ProvinsiCountOrderByAggregateInput
    _max?: ProvinsiMaxOrderByAggregateInput
    _min?: ProvinsiMinOrderByAggregateInput
  }

  export type ProvinsiScalarWhereWithAggregatesInput = {
    AND?: ProvinsiScalarWhereWithAggregatesInput | ProvinsiScalarWhereWithAggregatesInput[]
    OR?: ProvinsiScalarWhereWithAggregatesInput[]
    NOT?: ProvinsiScalarWhereWithAggregatesInput | ProvinsiScalarWhereWithAggregatesInput[]
    ProvinsiId?: StringWithAggregatesFilter<"Provinsi"> | string
    CountryId?: StringWithAggregatesFilter<"Provinsi"> | string
    Nama?: StringWithAggregatesFilter<"Provinsi"> | string
  }

  export type RoleHasPermissionsWhereInput = {
    AND?: RoleHasPermissionsWhereInput | RoleHasPermissionsWhereInput[]
    OR?: RoleHasPermissionsWhereInput[]
    NOT?: RoleHasPermissionsWhereInput | RoleHasPermissionsWhereInput[]
    PermissionId?: StringFilter<"RoleHasPermissions"> | string
    RoleId?: StringFilter<"RoleHasPermissions"> | string
    Permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
    Role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }

  export type RoleHasPermissionsOrderByWithRelationInput = {
    PermissionId?: SortOrder
    RoleId?: SortOrder
    Permission?: PermissionOrderByWithRelationInput
    Role?: RoleOrderByWithRelationInput
  }

  export type RoleHasPermissionsWhereUniqueInput = Prisma.AtLeast<{
    PermissionId_RoleId?: RoleHasPermissionsPermissionIdRoleIdCompoundUniqueInput
    AND?: RoleHasPermissionsWhereInput | RoleHasPermissionsWhereInput[]
    OR?: RoleHasPermissionsWhereInput[]
    NOT?: RoleHasPermissionsWhereInput | RoleHasPermissionsWhereInput[]
    PermissionId?: StringFilter<"RoleHasPermissions"> | string
    RoleId?: StringFilter<"RoleHasPermissions"> | string
    Permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
    Role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
  }, "PermissionId_RoleId">

  export type RoleHasPermissionsOrderByWithAggregationInput = {
    PermissionId?: SortOrder
    RoleId?: SortOrder
    _count?: RoleHasPermissionsCountOrderByAggregateInput
    _max?: RoleHasPermissionsMaxOrderByAggregateInput
    _min?: RoleHasPermissionsMinOrderByAggregateInput
  }

  export type RoleHasPermissionsScalarWhereWithAggregatesInput = {
    AND?: RoleHasPermissionsScalarWhereWithAggregatesInput | RoleHasPermissionsScalarWhereWithAggregatesInput[]
    OR?: RoleHasPermissionsScalarWhereWithAggregatesInput[]
    NOT?: RoleHasPermissionsScalarWhereWithAggregatesInput | RoleHasPermissionsScalarWhereWithAggregatesInput[]
    PermissionId?: StringWithAggregatesFilter<"RoleHasPermissions"> | string
    RoleId?: StringWithAggregatesFilter<"RoleHasPermissions"> | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    RoleId?: StringFilter<"Role"> | string
    Name?: StringFilter<"Role"> | string
    GuardName?: StringFilter<"Role"> | string
    Icon?: StringNullableFilter<"Role"> | string | null
    CreatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    UserHasRoles?: UserHasRolesListRelationFilter
    RoleHasPermissions?: RoleHasPermissionsListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    RoleId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    Icon?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    UserHasRoles?: UserHasRolesOrderByRelationAggregateInput
    RoleHasPermissions?: RoleHasPermissionsOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    RoleId?: string
    Name_GuardName?: RoleNameGuardNameCompoundUniqueInput
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    Name?: StringFilter<"Role"> | string
    GuardName?: StringFilter<"Role"> | string
    Icon?: StringNullableFilter<"Role"> | string | null
    CreatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    UserHasRoles?: UserHasRolesListRelationFilter
    RoleHasPermissions?: RoleHasPermissionsListRelationFilter
  }, "RoleId" | "Name_GuardName">

  export type RoleOrderByWithAggregationInput = {
    RoleId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    Icon?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: RoleCountOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    RoleId?: StringWithAggregatesFilter<"Role"> | string
    Name?: StringWithAggregatesFilter<"Role"> | string
    GuardName?: StringWithAggregatesFilter<"Role"> | string
    Icon?: StringNullableWithAggregatesFilter<"Role"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
  }

  export type SanggahanAssesmenWhereInput = {
    AND?: SanggahanAssesmenWhereInput | SanggahanAssesmenWhereInput[]
    OR?: SanggahanAssesmenWhereInput[]
    NOT?: SanggahanAssesmenWhereInput | SanggahanAssesmenWhereInput[]
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmen"> | string
    PendaftaranId?: StringFilter<"SanggahanAssesmen"> | string
    ProsesBanding?: BoolFilter<"SanggahanAssesmen"> | boolean
    DiskusiBanding?: BoolFilter<"SanggahanAssesmen"> | boolean
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmen"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    SanggahanAssesmenMk?: SanggahanAssesmenMkListRelationFilter
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakListRelationFilter
  }

  export type SanggahanAssesmenOrderByWithRelationInput = {
    SanggahanAssesmenId?: SortOrder
    PendaftaranId?: SortOrder
    ProsesBanding?: SortOrder
    DiskusiBanding?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    Pendaftaran?: PendaftaranOrderByWithRelationInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkOrderByRelationAggregateInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakOrderByRelationAggregateInput
  }

  export type SanggahanAssesmenWhereUniqueInput = Prisma.AtLeast<{
    SanggahanAssesmenId?: string
    AND?: SanggahanAssesmenWhereInput | SanggahanAssesmenWhereInput[]
    OR?: SanggahanAssesmenWhereInput[]
    NOT?: SanggahanAssesmenWhereInput | SanggahanAssesmenWhereInput[]
    PendaftaranId?: StringFilter<"SanggahanAssesmen"> | string
    ProsesBanding?: BoolFilter<"SanggahanAssesmen"> | boolean
    DiskusiBanding?: BoolFilter<"SanggahanAssesmen"> | boolean
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmen"> | Date | string | null
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
    SanggahanAssesmenMk?: SanggahanAssesmenMkListRelationFilter
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakListRelationFilter
  }, "SanggahanAssesmenId">

  export type SanggahanAssesmenOrderByWithAggregationInput = {
    SanggahanAssesmenId?: SortOrder
    PendaftaranId?: SortOrder
    ProsesBanding?: SortOrder
    DiskusiBanding?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: SanggahanAssesmenCountOrderByAggregateInput
    _max?: SanggahanAssesmenMaxOrderByAggregateInput
    _min?: SanggahanAssesmenMinOrderByAggregateInput
  }

  export type SanggahanAssesmenScalarWhereWithAggregatesInput = {
    AND?: SanggahanAssesmenScalarWhereWithAggregatesInput | SanggahanAssesmenScalarWhereWithAggregatesInput[]
    OR?: SanggahanAssesmenScalarWhereWithAggregatesInput[]
    NOT?: SanggahanAssesmenScalarWhereWithAggregatesInput | SanggahanAssesmenScalarWhereWithAggregatesInput[]
    SanggahanAssesmenId?: StringWithAggregatesFilter<"SanggahanAssesmen"> | string
    PendaftaranId?: StringWithAggregatesFilter<"SanggahanAssesmen"> | string
    ProsesBanding?: BoolWithAggregatesFilter<"SanggahanAssesmen"> | boolean
    DiskusiBanding?: BoolWithAggregatesFilter<"SanggahanAssesmen"> | boolean
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"SanggahanAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"SanggahanAssesmen"> | Date | string | null
  }

  export type SanggahanAssesmenMkWhereInput = {
    AND?: SanggahanAssesmenMkWhereInput | SanggahanAssesmenMkWhereInput[]
    OR?: SanggahanAssesmenMkWhereInput[]
    NOT?: SanggahanAssesmenMkWhereInput | SanggahanAssesmenMkWhereInput[]
    SanggahanAssesmenMkId?: StringFilter<"SanggahanAssesmenMk"> | string
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmenMk"> | string
    MataKuliahMahasiswaId?: StringFilter<"SanggahanAssesmenMk"> | string
    Keterangan?: StringNullableFilter<"SanggahanAssesmenMk"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmenMk"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmenMk"> | Date | string | null
    SanggahanAssesmen?: XOR<SanggahanAssesmenScalarRelationFilter, SanggahanAssesmenWhereInput>
    MataKuliahMahasiswa?: XOR<MataKuliahMahasiswaScalarRelationFilter, MataKuliahMahasiswaWhereInput>
  }

  export type SanggahanAssesmenMkOrderByWithRelationInput = {
    SanggahanAssesmenMkId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    SanggahanAssesmen?: SanggahanAssesmenOrderByWithRelationInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaOrderByWithRelationInput
  }

  export type SanggahanAssesmenMkWhereUniqueInput = Prisma.AtLeast<{
    SanggahanAssesmenMkId?: string
    AND?: SanggahanAssesmenMkWhereInput | SanggahanAssesmenMkWhereInput[]
    OR?: SanggahanAssesmenMkWhereInput[]
    NOT?: SanggahanAssesmenMkWhereInput | SanggahanAssesmenMkWhereInput[]
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmenMk"> | string
    MataKuliahMahasiswaId?: StringFilter<"SanggahanAssesmenMk"> | string
    Keterangan?: StringNullableFilter<"SanggahanAssesmenMk"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmenMk"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmenMk"> | Date | string | null
    SanggahanAssesmen?: XOR<SanggahanAssesmenScalarRelationFilter, SanggahanAssesmenWhereInput>
    MataKuliahMahasiswa?: XOR<MataKuliahMahasiswaScalarRelationFilter, MataKuliahMahasiswaWhereInput>
  }, "SanggahanAssesmenMkId">

  export type SanggahanAssesmenMkOrderByWithAggregationInput = {
    SanggahanAssesmenMkId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: SanggahanAssesmenMkCountOrderByAggregateInput
    _max?: SanggahanAssesmenMkMaxOrderByAggregateInput
    _min?: SanggahanAssesmenMkMinOrderByAggregateInput
  }

  export type SanggahanAssesmenMkScalarWhereWithAggregatesInput = {
    AND?: SanggahanAssesmenMkScalarWhereWithAggregatesInput | SanggahanAssesmenMkScalarWhereWithAggregatesInput[]
    OR?: SanggahanAssesmenMkScalarWhereWithAggregatesInput[]
    NOT?: SanggahanAssesmenMkScalarWhereWithAggregatesInput | SanggahanAssesmenMkScalarWhereWithAggregatesInput[]
    SanggahanAssesmenMkId?: StringWithAggregatesFilter<"SanggahanAssesmenMk"> | string
    SanggahanAssesmenId?: StringWithAggregatesFilter<"SanggahanAssesmenMk"> | string
    MataKuliahMahasiswaId?: StringWithAggregatesFilter<"SanggahanAssesmenMk"> | string
    Keterangan?: StringNullableWithAggregatesFilter<"SanggahanAssesmenMk"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"SanggahanAssesmenMk"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"SanggahanAssesmenMk"> | Date | string | null
  }

  export type SanggahanAssesmenPihakWhereInput = {
    AND?: SanggahanAssesmenPihakWhereInput | SanggahanAssesmenPihakWhereInput[]
    OR?: SanggahanAssesmenPihakWhereInput[]
    NOT?: SanggahanAssesmenPihakWhereInput | SanggahanAssesmenPihakWhereInput[]
    SanggahanAssesmenPihakId?: StringFilter<"SanggahanAssesmenPihak"> | string
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmenPihak"> | string
    NamaPihak?: StringFilter<"SanggahanAssesmenPihak"> | string
    JabatanPihak?: StringNullableFilter<"SanggahanAssesmenPihak"> | string | null
    InstansiPihak?: StringNullableFilter<"SanggahanAssesmenPihak"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmenPihak"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmenPihak"> | Date | string | null
    SanggahanAssesmen?: XOR<SanggahanAssesmenScalarRelationFilter, SanggahanAssesmenWhereInput>
  }

  export type SanggahanAssesmenPihakOrderByWithRelationInput = {
    SanggahanAssesmenPihakId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    NamaPihak?: SortOrder
    JabatanPihak?: SortOrderInput | SortOrder
    InstansiPihak?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    SanggahanAssesmen?: SanggahanAssesmenOrderByWithRelationInput
  }

  export type SanggahanAssesmenPihakWhereUniqueInput = Prisma.AtLeast<{
    SanggahanAssesmenPihakId?: string
    AND?: SanggahanAssesmenPihakWhereInput | SanggahanAssesmenPihakWhereInput[]
    OR?: SanggahanAssesmenPihakWhereInput[]
    NOT?: SanggahanAssesmenPihakWhereInput | SanggahanAssesmenPihakWhereInput[]
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmenPihak"> | string
    NamaPihak?: StringFilter<"SanggahanAssesmenPihak"> | string
    JabatanPihak?: StringNullableFilter<"SanggahanAssesmenPihak"> | string | null
    InstansiPihak?: StringNullableFilter<"SanggahanAssesmenPihak"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmenPihak"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmenPihak"> | Date | string | null
    SanggahanAssesmen?: XOR<SanggahanAssesmenScalarRelationFilter, SanggahanAssesmenWhereInput>
  }, "SanggahanAssesmenPihakId">

  export type SanggahanAssesmenPihakOrderByWithAggregationInput = {
    SanggahanAssesmenPihakId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    NamaPihak?: SortOrder
    JabatanPihak?: SortOrderInput | SortOrder
    InstansiPihak?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: SanggahanAssesmenPihakCountOrderByAggregateInput
    _max?: SanggahanAssesmenPihakMaxOrderByAggregateInput
    _min?: SanggahanAssesmenPihakMinOrderByAggregateInput
  }

  export type SanggahanAssesmenPihakScalarWhereWithAggregatesInput = {
    AND?: SanggahanAssesmenPihakScalarWhereWithAggregatesInput | SanggahanAssesmenPihakScalarWhereWithAggregatesInput[]
    OR?: SanggahanAssesmenPihakScalarWhereWithAggregatesInput[]
    NOT?: SanggahanAssesmenPihakScalarWhereWithAggregatesInput | SanggahanAssesmenPihakScalarWhereWithAggregatesInput[]
    SanggahanAssesmenPihakId?: StringWithAggregatesFilter<"SanggahanAssesmenPihak"> | string
    SanggahanAssesmenId?: StringWithAggregatesFilter<"SanggahanAssesmenPihak"> | string
    NamaPihak?: StringWithAggregatesFilter<"SanggahanAssesmenPihak"> | string
    JabatanPihak?: StringNullableWithAggregatesFilter<"SanggahanAssesmenPihak"> | string | null
    InstansiPihak?: StringNullableWithAggregatesFilter<"SanggahanAssesmenPihak"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"SanggahanAssesmenPihak"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"SanggahanAssesmenPihak"> | Date | string | null
  }

  export type SkRektorWhereInput = {
    AND?: SkRektorWhereInput | SkRektorWhereInput[]
    OR?: SkRektorWhereInput[]
    NOT?: SkRektorWhereInput | SkRektorWhereInput[]
    SkRektorId?: StringFilter<"SkRektor"> | string
    NamaSk?: StringFilter<"SkRektor"> | string
    TahunSk?: IntFilter<"SkRektor"> | number
    NomorSk?: StringFilter<"SkRektor"> | string
    NamaFile?: StringFilter<"SkRektor"> | string
    NamaDokumen?: StringFilter<"SkRektor"> | string
    CreatedAt?: DateTimeNullableFilter<"SkRektor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SkRektor"> | Date | string | null
    SkRektorAssesor?: SkRektorAssesorListRelationFilter
    SkRektorMahasiswa?: SkRektorMahasiswaListRelationFilter
  }

  export type SkRektorOrderByWithRelationInput = {
    SkRektorId?: SortOrder
    NamaSk?: SortOrder
    TahunSk?: SortOrder
    NomorSk?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    SkRektorAssesor?: SkRektorAssesorOrderByRelationAggregateInput
    SkRektorMahasiswa?: SkRektorMahasiswaOrderByRelationAggregateInput
  }

  export type SkRektorWhereUniqueInput = Prisma.AtLeast<{
    SkRektorId?: string
    AND?: SkRektorWhereInput | SkRektorWhereInput[]
    OR?: SkRektorWhereInput[]
    NOT?: SkRektorWhereInput | SkRektorWhereInput[]
    NamaSk?: StringFilter<"SkRektor"> | string
    TahunSk?: IntFilter<"SkRektor"> | number
    NomorSk?: StringFilter<"SkRektor"> | string
    NamaFile?: StringFilter<"SkRektor"> | string
    NamaDokumen?: StringFilter<"SkRektor"> | string
    CreatedAt?: DateTimeNullableFilter<"SkRektor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SkRektor"> | Date | string | null
    SkRektorAssesor?: SkRektorAssesorListRelationFilter
    SkRektorMahasiswa?: SkRektorMahasiswaListRelationFilter
  }, "SkRektorId">

  export type SkRektorOrderByWithAggregationInput = {
    SkRektorId?: SortOrder
    NamaSk?: SortOrder
    TahunSk?: SortOrder
    NomorSk?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: SkRektorCountOrderByAggregateInput
    _avg?: SkRektorAvgOrderByAggregateInput
    _max?: SkRektorMaxOrderByAggregateInput
    _min?: SkRektorMinOrderByAggregateInput
    _sum?: SkRektorSumOrderByAggregateInput
  }

  export type SkRektorScalarWhereWithAggregatesInput = {
    AND?: SkRektorScalarWhereWithAggregatesInput | SkRektorScalarWhereWithAggregatesInput[]
    OR?: SkRektorScalarWhereWithAggregatesInput[]
    NOT?: SkRektorScalarWhereWithAggregatesInput | SkRektorScalarWhereWithAggregatesInput[]
    SkRektorId?: StringWithAggregatesFilter<"SkRektor"> | string
    NamaSk?: StringWithAggregatesFilter<"SkRektor"> | string
    TahunSk?: IntWithAggregatesFilter<"SkRektor"> | number
    NomorSk?: StringWithAggregatesFilter<"SkRektor"> | string
    NamaFile?: StringWithAggregatesFilter<"SkRektor"> | string
    NamaDokumen?: StringWithAggregatesFilter<"SkRektor"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"SkRektor"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"SkRektor"> | Date | string | null
  }

  export type SkRektorAssesorWhereInput = {
    AND?: SkRektorAssesorWhereInput | SkRektorAssesorWhereInput[]
    OR?: SkRektorAssesorWhereInput[]
    NOT?: SkRektorAssesorWhereInput | SkRektorAssesorWhereInput[]
    SkRektorId?: StringFilter<"SkRektorAssesor"> | string
    AssesorMahasiswaId?: StringFilter<"SkRektorAssesor"> | string
    SkRektor?: XOR<SkRektorScalarRelationFilter, SkRektorWhereInput>
    AssesorMahasiswa?: XOR<AssesorMahasiswaScalarRelationFilter, AssesorMahasiswaWhereInput>
  }

  export type SkRektorAssesorOrderByWithRelationInput = {
    SkRektorId?: SortOrder
    AssesorMahasiswaId?: SortOrder
    SkRektor?: SkRektorOrderByWithRelationInput
    AssesorMahasiswa?: AssesorMahasiswaOrderByWithRelationInput
  }

  export type SkRektorAssesorWhereUniqueInput = Prisma.AtLeast<{
    SkRektorId_AssesorMahasiswaId?: SkRektorAssesorSkRektorIdAssesorMahasiswaIdCompoundUniqueInput
    AND?: SkRektorAssesorWhereInput | SkRektorAssesorWhereInput[]
    OR?: SkRektorAssesorWhereInput[]
    NOT?: SkRektorAssesorWhereInput | SkRektorAssesorWhereInput[]
    SkRektorId?: StringFilter<"SkRektorAssesor"> | string
    AssesorMahasiswaId?: StringFilter<"SkRektorAssesor"> | string
    SkRektor?: XOR<SkRektorScalarRelationFilter, SkRektorWhereInput>
    AssesorMahasiswa?: XOR<AssesorMahasiswaScalarRelationFilter, AssesorMahasiswaWhereInput>
  }, "SkRektorId_AssesorMahasiswaId">

  export type SkRektorAssesorOrderByWithAggregationInput = {
    SkRektorId?: SortOrder
    AssesorMahasiswaId?: SortOrder
    _count?: SkRektorAssesorCountOrderByAggregateInput
    _max?: SkRektorAssesorMaxOrderByAggregateInput
    _min?: SkRektorAssesorMinOrderByAggregateInput
  }

  export type SkRektorAssesorScalarWhereWithAggregatesInput = {
    AND?: SkRektorAssesorScalarWhereWithAggregatesInput | SkRektorAssesorScalarWhereWithAggregatesInput[]
    OR?: SkRektorAssesorScalarWhereWithAggregatesInput[]
    NOT?: SkRektorAssesorScalarWhereWithAggregatesInput | SkRektorAssesorScalarWhereWithAggregatesInput[]
    SkRektorId?: StringWithAggregatesFilter<"SkRektorAssesor"> | string
    AssesorMahasiswaId?: StringWithAggregatesFilter<"SkRektorAssesor"> | string
  }

  export type SkRektorMahasiswaWhereInput = {
    AND?: SkRektorMahasiswaWhereInput | SkRektorMahasiswaWhereInput[]
    OR?: SkRektorMahasiswaWhereInput[]
    NOT?: SkRektorMahasiswaWhereInput | SkRektorMahasiswaWhereInput[]
    SkRektorId?: StringFilter<"SkRektorMahasiswa"> | string
    PendaftaranId?: StringFilter<"SkRektorMahasiswa"> | string
    SkRektor?: XOR<SkRektorScalarRelationFilter, SkRektorWhereInput>
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }

  export type SkRektorMahasiswaOrderByWithRelationInput = {
    SkRektorId?: SortOrder
    PendaftaranId?: SortOrder
    SkRektor?: SkRektorOrderByWithRelationInput
    Pendaftaran?: PendaftaranOrderByWithRelationInput
  }

  export type SkRektorMahasiswaWhereUniqueInput = Prisma.AtLeast<{
    SkRektorId_PendaftaranId?: SkRektorMahasiswaSkRektorIdPendaftaranIdCompoundUniqueInput
    AND?: SkRektorMahasiswaWhereInput | SkRektorMahasiswaWhereInput[]
    OR?: SkRektorMahasiswaWhereInput[]
    NOT?: SkRektorMahasiswaWhereInput | SkRektorMahasiswaWhereInput[]
    SkRektorId?: StringFilter<"SkRektorMahasiswa"> | string
    PendaftaranId?: StringFilter<"SkRektorMahasiswa"> | string
    SkRektor?: XOR<SkRektorScalarRelationFilter, SkRektorWhereInput>
    Pendaftaran?: XOR<PendaftaranScalarRelationFilter, PendaftaranWhereInput>
  }, "SkRektorId_PendaftaranId">

  export type SkRektorMahasiswaOrderByWithAggregationInput = {
    SkRektorId?: SortOrder
    PendaftaranId?: SortOrder
    _count?: SkRektorMahasiswaCountOrderByAggregateInput
    _max?: SkRektorMahasiswaMaxOrderByAggregateInput
    _min?: SkRektorMahasiswaMinOrderByAggregateInput
  }

  export type SkRektorMahasiswaScalarWhereWithAggregatesInput = {
    AND?: SkRektorMahasiswaScalarWhereWithAggregatesInput | SkRektorMahasiswaScalarWhereWithAggregatesInput[]
    OR?: SkRektorMahasiswaScalarWhereWithAggregatesInput[]
    NOT?: SkRektorMahasiswaScalarWhereWithAggregatesInput | SkRektorMahasiswaScalarWhereWithAggregatesInput[]
    SkRektorId?: StringWithAggregatesFilter<"SkRektorMahasiswa"> | string
    PendaftaranId?: StringWithAggregatesFilter<"SkRektorMahasiswa"> | string
  }

  export type SkorAssesmenWhereInput = {
    AND?: SkorAssesmenWhereInput | SkorAssesmenWhereInput[]
    OR?: SkorAssesmenWhereInput[]
    NOT?: SkorAssesmenWhereInput | SkorAssesmenWhereInput[]
    SkorAssesmenId?: StringFilter<"SkorAssesmen"> | string
    HasilAssesmenId?: StringFilter<"SkorAssesmen"> | string
    Portofolio?: FloatFilter<"SkorAssesmen"> | number
    Tulis?: FloatFilter<"SkorAssesmen"> | number
    Wawancara?: FloatFilter<"SkorAssesmen"> | number
    Demo?: FloatFilter<"SkorAssesmen"> | number
    SkorRataRata?: FloatFilter<"SkorAssesmen"> | number
    NilaiHuruf?: StringNullableFilter<"SkorAssesmen"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SkorAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SkorAssesmen"> | Date | string | null
    HasilAssesmen?: XOR<HasilAssesmenScalarRelationFilter, HasilAssesmenWhereInput>
  }

  export type SkorAssesmenOrderByWithRelationInput = {
    SkorAssesmenId?: SortOrder
    HasilAssesmenId?: SortOrder
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
    NilaiHuruf?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    HasilAssesmen?: HasilAssesmenOrderByWithRelationInput
  }

  export type SkorAssesmenWhereUniqueInput = Prisma.AtLeast<{
    SkorAssesmenId?: string
    AND?: SkorAssesmenWhereInput | SkorAssesmenWhereInput[]
    OR?: SkorAssesmenWhereInput[]
    NOT?: SkorAssesmenWhereInput | SkorAssesmenWhereInput[]
    HasilAssesmenId?: StringFilter<"SkorAssesmen"> | string
    Portofolio?: FloatFilter<"SkorAssesmen"> | number
    Tulis?: FloatFilter<"SkorAssesmen"> | number
    Wawancara?: FloatFilter<"SkorAssesmen"> | number
    Demo?: FloatFilter<"SkorAssesmen"> | number
    SkorRataRata?: FloatFilter<"SkorAssesmen"> | number
    NilaiHuruf?: StringNullableFilter<"SkorAssesmen"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SkorAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SkorAssesmen"> | Date | string | null
    HasilAssesmen?: XOR<HasilAssesmenScalarRelationFilter, HasilAssesmenWhereInput>
  }, "SkorAssesmenId">

  export type SkorAssesmenOrderByWithAggregationInput = {
    SkorAssesmenId?: SortOrder
    HasilAssesmenId?: SortOrder
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
    NilaiHuruf?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    _count?: SkorAssesmenCountOrderByAggregateInput
    _avg?: SkorAssesmenAvgOrderByAggregateInput
    _max?: SkorAssesmenMaxOrderByAggregateInput
    _min?: SkorAssesmenMinOrderByAggregateInput
    _sum?: SkorAssesmenSumOrderByAggregateInput
  }

  export type SkorAssesmenScalarWhereWithAggregatesInput = {
    AND?: SkorAssesmenScalarWhereWithAggregatesInput | SkorAssesmenScalarWhereWithAggregatesInput[]
    OR?: SkorAssesmenScalarWhereWithAggregatesInput[]
    NOT?: SkorAssesmenScalarWhereWithAggregatesInput | SkorAssesmenScalarWhereWithAggregatesInput[]
    SkorAssesmenId?: StringWithAggregatesFilter<"SkorAssesmen"> | string
    HasilAssesmenId?: StringWithAggregatesFilter<"SkorAssesmen"> | string
    Portofolio?: FloatWithAggregatesFilter<"SkorAssesmen"> | number
    Tulis?: FloatWithAggregatesFilter<"SkorAssesmen"> | number
    Wawancara?: FloatWithAggregatesFilter<"SkorAssesmen"> | number
    Demo?: FloatWithAggregatesFilter<"SkorAssesmen"> | number
    SkorRataRata?: FloatWithAggregatesFilter<"SkorAssesmen"> | number
    NilaiHuruf?: StringNullableWithAggregatesFilter<"SkorAssesmen"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"SkorAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"SkorAssesmen"> | Date | string | null
  }

  export type StatusMahasiswaAssesmentWhereInput = {
    AND?: StatusMahasiswaAssesmentWhereInput | StatusMahasiswaAssesmentWhereInput[]
    OR?: StatusMahasiswaAssesmentWhereInput[]
    NOT?: StatusMahasiswaAssesmentWhereInput | StatusMahasiswaAssesmentWhereInput[]
    StatusMahasiswaAssesmentId?: StringFilter<"StatusMahasiswaAssesment"> | string
    NamaStatus?: StringFilter<"StatusMahasiswaAssesment"> | string
    Icon?: StringFilter<"StatusMahasiswaAssesment"> | string
    Urutan?: IntFilter<"StatusMahasiswaAssesment"> | number
    Keterangan?: StringNullableFilter<"StatusMahasiswaAssesment"> | string | null
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryListRelationFilter
  }

  export type StatusMahasiswaAssesmentOrderByWithRelationInput = {
    StatusMahasiswaAssesmentId?: SortOrder
    NamaStatus?: SortOrder
    Icon?: SortOrder
    Urutan?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryOrderByRelationAggregateInput
  }

  export type StatusMahasiswaAssesmentWhereUniqueInput = Prisma.AtLeast<{
    StatusMahasiswaAssesmentId?: string
    AND?: StatusMahasiswaAssesmentWhereInput | StatusMahasiswaAssesmentWhereInput[]
    OR?: StatusMahasiswaAssesmentWhereInput[]
    NOT?: StatusMahasiswaAssesmentWhereInput | StatusMahasiswaAssesmentWhereInput[]
    NamaStatus?: StringFilter<"StatusMahasiswaAssesment"> | string
    Icon?: StringFilter<"StatusMahasiswaAssesment"> | string
    Urutan?: IntFilter<"StatusMahasiswaAssesment"> | number
    Keterangan?: StringNullableFilter<"StatusMahasiswaAssesment"> | string | null
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryListRelationFilter
  }, "StatusMahasiswaAssesmentId">

  export type StatusMahasiswaAssesmentOrderByWithAggregationInput = {
    StatusMahasiswaAssesmentId?: SortOrder
    NamaStatus?: SortOrder
    Icon?: SortOrder
    Urutan?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    _count?: StatusMahasiswaAssesmentCountOrderByAggregateInput
    _avg?: StatusMahasiswaAssesmentAvgOrderByAggregateInput
    _max?: StatusMahasiswaAssesmentMaxOrderByAggregateInput
    _min?: StatusMahasiswaAssesmentMinOrderByAggregateInput
    _sum?: StatusMahasiswaAssesmentSumOrderByAggregateInput
  }

  export type StatusMahasiswaAssesmentScalarWhereWithAggregatesInput = {
    AND?: StatusMahasiswaAssesmentScalarWhereWithAggregatesInput | StatusMahasiswaAssesmentScalarWhereWithAggregatesInput[]
    OR?: StatusMahasiswaAssesmentScalarWhereWithAggregatesInput[]
    NOT?: StatusMahasiswaAssesmentScalarWhereWithAggregatesInput | StatusMahasiswaAssesmentScalarWhereWithAggregatesInput[]
    StatusMahasiswaAssesmentId?: StringWithAggregatesFilter<"StatusMahasiswaAssesment"> | string
    NamaStatus?: StringWithAggregatesFilter<"StatusMahasiswaAssesment"> | string
    Icon?: StringWithAggregatesFilter<"StatusMahasiswaAssesment"> | string
    Urutan?: IntWithAggregatesFilter<"StatusMahasiswaAssesment"> | number
    Keterangan?: StringNullableWithAggregatesFilter<"StatusMahasiswaAssesment"> | string | null
  }

  export type StatusMahasiswaAssesmentHistoryWhereInput = {
    AND?: StatusMahasiswaAssesmentHistoryWhereInput | StatusMahasiswaAssesmentHistoryWhereInput[]
    OR?: StatusMahasiswaAssesmentHistoryWhereInput[]
    NOT?: StatusMahasiswaAssesmentHistoryWhereInput | StatusMahasiswaAssesmentHistoryWhereInput[]
    StatusMahasiswaAssesmentHistoryId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    StatusMahasiswaAssesmentId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    DaftarUlangId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    Tanggal?: DateTimeNullableFilter<"StatusMahasiswaAssesmentHistory"> | Date | string | null
    Keterangan?: StringNullableFilter<"StatusMahasiswaAssesmentHistory"> | string | null
    StatusMahasiswaAssesment?: XOR<StatusMahasiswaAssesmentScalarRelationFilter, StatusMahasiswaAssesmentWhereInput>
  }

  export type StatusMahasiswaAssesmentHistoryOrderByWithRelationInput = {
    StatusMahasiswaAssesmentHistoryId?: SortOrder
    StatusMahasiswaAssesmentId?: SortOrder
    DaftarUlangId?: SortOrder
    Tanggal?: SortOrderInput | SortOrder
    Keterangan?: SortOrderInput | SortOrder
    StatusMahasiswaAssesment?: StatusMahasiswaAssesmentOrderByWithRelationInput
  }

  export type StatusMahasiswaAssesmentHistoryWhereUniqueInput = Prisma.AtLeast<{
    StatusMahasiswaAssesmentHistoryId?: string
    AND?: StatusMahasiswaAssesmentHistoryWhereInput | StatusMahasiswaAssesmentHistoryWhereInput[]
    OR?: StatusMahasiswaAssesmentHistoryWhereInput[]
    NOT?: StatusMahasiswaAssesmentHistoryWhereInput | StatusMahasiswaAssesmentHistoryWhereInput[]
    StatusMahasiswaAssesmentId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    DaftarUlangId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    Tanggal?: DateTimeNullableFilter<"StatusMahasiswaAssesmentHistory"> | Date | string | null
    Keterangan?: StringNullableFilter<"StatusMahasiswaAssesmentHistory"> | string | null
    StatusMahasiswaAssesment?: XOR<StatusMahasiswaAssesmentScalarRelationFilter, StatusMahasiswaAssesmentWhereInput>
  }, "StatusMahasiswaAssesmentHistoryId">

  export type StatusMahasiswaAssesmentHistoryOrderByWithAggregationInput = {
    StatusMahasiswaAssesmentHistoryId?: SortOrder
    StatusMahasiswaAssesmentId?: SortOrder
    DaftarUlangId?: SortOrder
    Tanggal?: SortOrderInput | SortOrder
    Keterangan?: SortOrderInput | SortOrder
    _count?: StatusMahasiswaAssesmentHistoryCountOrderByAggregateInput
    _max?: StatusMahasiswaAssesmentHistoryMaxOrderByAggregateInput
    _min?: StatusMahasiswaAssesmentHistoryMinOrderByAggregateInput
  }

  export type StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput = {
    AND?: StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput | StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput[]
    OR?: StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput[]
    NOT?: StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput | StatusMahasiswaAssesmentHistoryScalarWhereWithAggregatesInput[]
    StatusMahasiswaAssesmentHistoryId?: StringWithAggregatesFilter<"StatusMahasiswaAssesmentHistory"> | string
    StatusMahasiswaAssesmentId?: StringWithAggregatesFilter<"StatusMahasiswaAssesmentHistory"> | string
    DaftarUlangId?: StringWithAggregatesFilter<"StatusMahasiswaAssesmentHistory"> | string
    Tanggal?: DateTimeNullableWithAggregatesFilter<"StatusMahasiswaAssesmentHistory"> | Date | string | null
    Keterangan?: StringNullableWithAggregatesFilter<"StatusMahasiswaAssesmentHistory"> | string | null
  }

  export type TipeAsesorWhereInput = {
    AND?: TipeAsesorWhereInput | TipeAsesorWhereInput[]
    OR?: TipeAsesorWhereInput[]
    NOT?: TipeAsesorWhereInput | TipeAsesorWhereInput[]
    TipeAsesorId?: StringFilter<"TipeAsesor"> | string
    Nama?: StringFilter<"TipeAsesor"> | string
    Icon?: StringNullableFilter<"TipeAsesor"> | string | null
    Deskripsi?: StringNullableFilter<"TipeAsesor"> | string | null
    CreatedAt?: DateTimeNullableFilter<"TipeAsesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"TipeAsesor"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"TipeAsesor"> | Date | string | null
    Asesor?: AsesorListRelationFilter
  }

  export type TipeAsesorOrderByWithRelationInput = {
    TipeAsesorId?: SortOrder
    Nama?: SortOrder
    Icon?: SortOrderInput | SortOrder
    Deskripsi?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    Asesor?: AsesorOrderByRelationAggregateInput
  }

  export type TipeAsesorWhereUniqueInput = Prisma.AtLeast<{
    TipeAsesorId?: string
    AND?: TipeAsesorWhereInput | TipeAsesorWhereInput[]
    OR?: TipeAsesorWhereInput[]
    NOT?: TipeAsesorWhereInput | TipeAsesorWhereInput[]
    Nama?: StringFilter<"TipeAsesor"> | string
    Icon?: StringNullableFilter<"TipeAsesor"> | string | null
    Deskripsi?: StringNullableFilter<"TipeAsesor"> | string | null
    CreatedAt?: DateTimeNullableFilter<"TipeAsesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"TipeAsesor"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"TipeAsesor"> | Date | string | null
    Asesor?: AsesorListRelationFilter
  }, "TipeAsesorId">

  export type TipeAsesorOrderByWithAggregationInput = {
    TipeAsesorId?: SortOrder
    Nama?: SortOrder
    Icon?: SortOrderInput | SortOrder
    Deskripsi?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: TipeAsesorCountOrderByAggregateInput
    _max?: TipeAsesorMaxOrderByAggregateInput
    _min?: TipeAsesorMinOrderByAggregateInput
  }

  export type TipeAsesorScalarWhereWithAggregatesInput = {
    AND?: TipeAsesorScalarWhereWithAggregatesInput | TipeAsesorScalarWhereWithAggregatesInput[]
    OR?: TipeAsesorScalarWhereWithAggregatesInput[]
    NOT?: TipeAsesorScalarWhereWithAggregatesInput | TipeAsesorScalarWhereWithAggregatesInput[]
    TipeAsesorId?: StringWithAggregatesFilter<"TipeAsesor"> | string
    Nama?: StringWithAggregatesFilter<"TipeAsesor"> | string
    Icon?: StringNullableWithAggregatesFilter<"TipeAsesor"> | string | null
    Deskripsi?: StringNullableWithAggregatesFilter<"TipeAsesor"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"TipeAsesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"TipeAsesor"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"TipeAsesor"> | Date | string | null
  }

  export type UniversityWhereInput = {
    AND?: UniversityWhereInput | UniversityWhereInput[]
    OR?: UniversityWhereInput[]
    NOT?: UniversityWhereInput | UniversityWhereInput[]
    UniversityId?: StringFilter<"University"> | string
    AlamatId?: StringFilter<"University"> | string
    Nama?: StringFilter<"University"> | string
    Akreditasi?: StringFilter<"University"> | string
    CreatedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    Alamat?: XOR<AlamatScalarRelationFilter, AlamatWhereInput>
    ProgramStudi?: ProgramStudiListRelationFilter
    UniversityJabatan?: UniversityJabatanListRelationFilter
    UniversitySosialMedia?: UniversitySosialMediaListRelationFilter
    UniversityInformasi?: UniversityInformasiListRelationFilter
  }

  export type UniversityOrderByWithRelationInput = {
    UniversityId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    Alamat?: AlamatOrderByWithRelationInput
    ProgramStudi?: ProgramStudiOrderByRelationAggregateInput
    UniversityJabatan?: UniversityJabatanOrderByRelationAggregateInput
    UniversitySosialMedia?: UniversitySosialMediaOrderByRelationAggregateInput
    UniversityInformasi?: UniversityInformasiOrderByRelationAggregateInput
  }

  export type UniversityWhereUniqueInput = Prisma.AtLeast<{
    UniversityId?: string
    AND?: UniversityWhereInput | UniversityWhereInput[]
    OR?: UniversityWhereInput[]
    NOT?: UniversityWhereInput | UniversityWhereInput[]
    AlamatId?: StringFilter<"University"> | string
    Nama?: StringFilter<"University"> | string
    Akreditasi?: StringFilter<"University"> | string
    CreatedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    Alamat?: XOR<AlamatScalarRelationFilter, AlamatWhereInput>
    ProgramStudi?: ProgramStudiListRelationFilter
    UniversityJabatan?: UniversityJabatanListRelationFilter
    UniversitySosialMedia?: UniversitySosialMediaListRelationFilter
    UniversityInformasi?: UniversityInformasiListRelationFilter
  }, "UniversityId">

  export type UniversityOrderByWithAggregationInput = {
    UniversityId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: UniversityCountOrderByAggregateInput
    _max?: UniversityMaxOrderByAggregateInput
    _min?: UniversityMinOrderByAggregateInput
  }

  export type UniversityScalarWhereWithAggregatesInput = {
    AND?: UniversityScalarWhereWithAggregatesInput | UniversityScalarWhereWithAggregatesInput[]
    OR?: UniversityScalarWhereWithAggregatesInput[]
    NOT?: UniversityScalarWhereWithAggregatesInput | UniversityScalarWhereWithAggregatesInput[]
    UniversityId?: StringWithAggregatesFilter<"University"> | string
    AlamatId?: StringWithAggregatesFilter<"University"> | string
    Nama?: StringWithAggregatesFilter<"University"> | string
    Akreditasi?: StringWithAggregatesFilter<"University"> | string
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"University"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"University"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"University"> | Date | string | null
  }

  export type UniversitySosialMediaWhereInput = {
    AND?: UniversitySosialMediaWhereInput | UniversitySosialMediaWhereInput[]
    OR?: UniversitySosialMediaWhereInput[]
    NOT?: UniversitySosialMediaWhereInput | UniversitySosialMediaWhereInput[]
    UniversitySosialMediaId?: StringFilter<"UniversitySosialMedia"> | string
    UniversityId?: StringFilter<"UniversitySosialMedia"> | string
    Nama?: StringFilter<"UniversitySosialMedia"> | string
    Username?: StringNullableFilter<"UniversitySosialMedia"> | string | null
    Icon?: StringNullableFilter<"UniversitySosialMedia"> | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
  }

  export type UniversitySosialMediaOrderByWithRelationInput = {
    UniversitySosialMediaId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Username?: SortOrderInput | SortOrder
    Icon?: SortOrderInput | SortOrder
    University?: UniversityOrderByWithRelationInput
  }

  export type UniversitySosialMediaWhereUniqueInput = Prisma.AtLeast<{
    UniversitySosialMediaId?: string
    AND?: UniversitySosialMediaWhereInput | UniversitySosialMediaWhereInput[]
    OR?: UniversitySosialMediaWhereInput[]
    NOT?: UniversitySosialMediaWhereInput | UniversitySosialMediaWhereInput[]
    UniversityId?: StringFilter<"UniversitySosialMedia"> | string
    Nama?: StringFilter<"UniversitySosialMedia"> | string
    Username?: StringNullableFilter<"UniversitySosialMedia"> | string | null
    Icon?: StringNullableFilter<"UniversitySosialMedia"> | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
  }, "UniversitySosialMediaId">

  export type UniversitySosialMediaOrderByWithAggregationInput = {
    UniversitySosialMediaId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Username?: SortOrderInput | SortOrder
    Icon?: SortOrderInput | SortOrder
    _count?: UniversitySosialMediaCountOrderByAggregateInput
    _max?: UniversitySosialMediaMaxOrderByAggregateInput
    _min?: UniversitySosialMediaMinOrderByAggregateInput
  }

  export type UniversitySosialMediaScalarWhereWithAggregatesInput = {
    AND?: UniversitySosialMediaScalarWhereWithAggregatesInput | UniversitySosialMediaScalarWhereWithAggregatesInput[]
    OR?: UniversitySosialMediaScalarWhereWithAggregatesInput[]
    NOT?: UniversitySosialMediaScalarWhereWithAggregatesInput | UniversitySosialMediaScalarWhereWithAggregatesInput[]
    UniversitySosialMediaId?: StringWithAggregatesFilter<"UniversitySosialMedia"> | string
    UniversityId?: StringWithAggregatesFilter<"UniversitySosialMedia"> | string
    Nama?: StringWithAggregatesFilter<"UniversitySosialMedia"> | string
    Username?: StringNullableWithAggregatesFilter<"UniversitySosialMedia"> | string | null
    Icon?: StringNullableWithAggregatesFilter<"UniversitySosialMedia"> | string | null
  }

  export type UniversityInformasiWhereInput = {
    AND?: UniversityInformasiWhereInput | UniversityInformasiWhereInput[]
    OR?: UniversityInformasiWhereInput[]
    NOT?: UniversityInformasiWhereInput | UniversityInformasiWhereInput[]
    UniversityInformasiId?: StringFilter<"UniversityInformasi"> | string
    UniversityId?: StringFilter<"UniversityInformasi"> | string
    Nama?: StringFilter<"UniversityInformasi"> | string
    Informasi?: StringNullableFilter<"UniversityInformasi"> | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
  }

  export type UniversityInformasiOrderByWithRelationInput = {
    UniversityInformasiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Informasi?: SortOrderInput | SortOrder
    University?: UniversityOrderByWithRelationInput
  }

  export type UniversityInformasiWhereUniqueInput = Prisma.AtLeast<{
    UniversityInformasiId?: string
    AND?: UniversityInformasiWhereInput | UniversityInformasiWhereInput[]
    OR?: UniversityInformasiWhereInput[]
    NOT?: UniversityInformasiWhereInput | UniversityInformasiWhereInput[]
    UniversityId?: StringFilter<"UniversityInformasi"> | string
    Nama?: StringFilter<"UniversityInformasi"> | string
    Informasi?: StringNullableFilter<"UniversityInformasi"> | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
  }, "UniversityInformasiId">

  export type UniversityInformasiOrderByWithAggregationInput = {
    UniversityInformasiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Informasi?: SortOrderInput | SortOrder
    _count?: UniversityInformasiCountOrderByAggregateInput
    _max?: UniversityInformasiMaxOrderByAggregateInput
    _min?: UniversityInformasiMinOrderByAggregateInput
  }

  export type UniversityInformasiScalarWhereWithAggregatesInput = {
    AND?: UniversityInformasiScalarWhereWithAggregatesInput | UniversityInformasiScalarWhereWithAggregatesInput[]
    OR?: UniversityInformasiScalarWhereWithAggregatesInput[]
    NOT?: UniversityInformasiScalarWhereWithAggregatesInput | UniversityInformasiScalarWhereWithAggregatesInput[]
    UniversityInformasiId?: StringWithAggregatesFilter<"UniversityInformasi"> | string
    UniversityId?: StringWithAggregatesFilter<"UniversityInformasi"> | string
    Nama?: StringWithAggregatesFilter<"UniversityInformasi"> | string
    Informasi?: StringNullableWithAggregatesFilter<"UniversityInformasi"> | string | null
  }

  export type UniversityJabatanWhereInput = {
    AND?: UniversityJabatanWhereInput | UniversityJabatanWhereInput[]
    OR?: UniversityJabatanWhereInput[]
    NOT?: UniversityJabatanWhereInput | UniversityJabatanWhereInput[]
    UniversityJabatanId?: StringFilter<"UniversityJabatan"> | string
    UniversityId?: StringFilter<"UniversityJabatan"> | string
    Nama?: StringFilter<"UniversityJabatan"> | string
    Keterangan?: StringNullableFilter<"UniversityJabatan"> | string | null
    CreatedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    UniversityJabatanOrang?: UniversityJabatanOrangListRelationFilter
  }

  export type UniversityJabatanOrderByWithRelationInput = {
    UniversityJabatanId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    University?: UniversityOrderByWithRelationInput
    UniversityJabatanOrang?: UniversityJabatanOrangOrderByRelationAggregateInput
  }

  export type UniversityJabatanWhereUniqueInput = Prisma.AtLeast<{
    UniversityJabatanId?: string
    AND?: UniversityJabatanWhereInput | UniversityJabatanWhereInput[]
    OR?: UniversityJabatanWhereInput[]
    NOT?: UniversityJabatanWhereInput | UniversityJabatanWhereInput[]
    UniversityId?: StringFilter<"UniversityJabatan"> | string
    Nama?: StringFilter<"UniversityJabatan"> | string
    Keterangan?: StringNullableFilter<"UniversityJabatan"> | string | null
    CreatedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    University?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    UniversityJabatanOrang?: UniversityJabatanOrangListRelationFilter
  }, "UniversityJabatanId">

  export type UniversityJabatanOrderByWithAggregationInput = {
    UniversityJabatanId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: UniversityJabatanCountOrderByAggregateInput
    _max?: UniversityJabatanMaxOrderByAggregateInput
    _min?: UniversityJabatanMinOrderByAggregateInput
  }

  export type UniversityJabatanScalarWhereWithAggregatesInput = {
    AND?: UniversityJabatanScalarWhereWithAggregatesInput | UniversityJabatanScalarWhereWithAggregatesInput[]
    OR?: UniversityJabatanScalarWhereWithAggregatesInput[]
    NOT?: UniversityJabatanScalarWhereWithAggregatesInput | UniversityJabatanScalarWhereWithAggregatesInput[]
    UniversityJabatanId?: StringWithAggregatesFilter<"UniversityJabatan"> | string
    UniversityId?: StringWithAggregatesFilter<"UniversityJabatan"> | string
    Nama?: StringWithAggregatesFilter<"UniversityJabatan"> | string
    Keterangan?: StringNullableWithAggregatesFilter<"UniversityJabatan"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"UniversityJabatan"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"UniversityJabatan"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"UniversityJabatan"> | Date | string | null
  }

  export type UniversityJabatanOrangWhereInput = {
    AND?: UniversityJabatanOrangWhereInput | UniversityJabatanOrangWhereInput[]
    OR?: UniversityJabatanOrangWhereInput[]
    NOT?: UniversityJabatanOrangWhereInput | UniversityJabatanOrangWhereInput[]
    UniversityJabatanOrangId?: StringFilter<"UniversityJabatanOrang"> | string
    UniversityJabatanId?: StringFilter<"UniversityJabatanOrang"> | string
    Nama?: StringFilter<"UniversityJabatanOrang"> | string
    Keterangan?: StringNullableFilter<"UniversityJabatanOrang"> | string | null
    CreatedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    UniversityJabatan?: XOR<UniversityJabatanScalarRelationFilter, UniversityJabatanWhereInput>
  }

  export type UniversityJabatanOrangOrderByWithRelationInput = {
    UniversityJabatanOrangId?: SortOrder
    UniversityJabatanId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    UniversityJabatan?: UniversityJabatanOrderByWithRelationInput
  }

  export type UniversityJabatanOrangWhereUniqueInput = Prisma.AtLeast<{
    UniversityJabatanOrangId?: string
    AND?: UniversityJabatanOrangWhereInput | UniversityJabatanOrangWhereInput[]
    OR?: UniversityJabatanOrangWhereInput[]
    NOT?: UniversityJabatanOrangWhereInput | UniversityJabatanOrangWhereInput[]
    UniversityJabatanId?: StringFilter<"UniversityJabatanOrang"> | string
    Nama?: StringFilter<"UniversityJabatanOrang"> | string
    Keterangan?: StringNullableFilter<"UniversityJabatanOrang"> | string | null
    CreatedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    UniversityJabatan?: XOR<UniversityJabatanScalarRelationFilter, UniversityJabatanWhereInput>
  }, "UniversityJabatanOrangId">

  export type UniversityJabatanOrangOrderByWithAggregationInput = {
    UniversityJabatanOrangId?: SortOrder
    UniversityJabatanId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: UniversityJabatanOrangCountOrderByAggregateInput
    _max?: UniversityJabatanOrangMaxOrderByAggregateInput
    _min?: UniversityJabatanOrangMinOrderByAggregateInput
  }

  export type UniversityJabatanOrangScalarWhereWithAggregatesInput = {
    AND?: UniversityJabatanOrangScalarWhereWithAggregatesInput | UniversityJabatanOrangScalarWhereWithAggregatesInput[]
    OR?: UniversityJabatanOrangScalarWhereWithAggregatesInput[]
    NOT?: UniversityJabatanOrangScalarWhereWithAggregatesInput | UniversityJabatanOrangScalarWhereWithAggregatesInput[]
    UniversityJabatanOrangId?: StringWithAggregatesFilter<"UniversityJabatanOrang"> | string
    UniversityJabatanId?: StringWithAggregatesFilter<"UniversityJabatanOrang"> | string
    Nama?: StringWithAggregatesFilter<"UniversityJabatanOrang"> | string
    Keterangan?: StringNullableWithAggregatesFilter<"UniversityJabatanOrang"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"UniversityJabatanOrang"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"UniversityJabatanOrang"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"UniversityJabatanOrang"> | Date | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    UserId?: StringFilter<"User"> | string
    AlamatId?: StringFilter<"User"> | string
    Nama?: StringFilter<"User"> | string
    Email?: StringFilter<"User"> | string
    EmailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    TempatLahir?: StringNullableFilter<"User"> | string | null
    TanggalLahir?: DateTimeNullableFilter<"User"> | Date | string | null
    JenisKelamin?: EnumJenisKelaminFilter<"User"> | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFilter<"User"> | $Enums.Jenjang
    Avatar?: StringNullableFilter<"User"> | string | null
    Agama?: StringNullableFilter<"User"> | string | null
    Telepon?: StringNullableFilter<"User"> | string | null
    NomorWa?: StringNullableFilter<"User"> | string | null
    NomorHp?: StringNullableFilter<"User"> | string | null
    RememberToken?: StringNullableFilter<"User"> | string | null
    CreatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    Alamat?: XOR<AlamatScalarRelationFilter, AlamatWhereInput>
    Mahasiswa?: MahasiswaListRelationFilter
    UserHasPermissions?: UserHasPermissionsListRelationFilter
    UserHasRoles?: UserHasRolesListRelationFilter
    Userlogin?: UserloginListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    UserId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Email?: SortOrder
    EmailVerifiedAt?: SortOrderInput | SortOrder
    TempatLahir?: SortOrderInput | SortOrder
    TanggalLahir?: SortOrderInput | SortOrder
    JenisKelamin?: SortOrder
    PendidikanTerakhir?: SortOrder
    Avatar?: SortOrderInput | SortOrder
    Agama?: SortOrderInput | SortOrder
    Telepon?: SortOrderInput | SortOrder
    NomorWa?: SortOrderInput | SortOrder
    NomorHp?: SortOrderInput | SortOrder
    RememberToken?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    Alamat?: AlamatOrderByWithRelationInput
    Mahasiswa?: MahasiswaOrderByRelationAggregateInput
    UserHasPermissions?: UserHasPermissionsOrderByRelationAggregateInput
    UserHasRoles?: UserHasRolesOrderByRelationAggregateInput
    Userlogin?: UserloginOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    UserId?: string
    Email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    AlamatId?: StringFilter<"User"> | string
    Nama?: StringFilter<"User"> | string
    EmailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    TempatLahir?: StringNullableFilter<"User"> | string | null
    TanggalLahir?: DateTimeNullableFilter<"User"> | Date | string | null
    JenisKelamin?: EnumJenisKelaminFilter<"User"> | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFilter<"User"> | $Enums.Jenjang
    Avatar?: StringNullableFilter<"User"> | string | null
    Agama?: StringNullableFilter<"User"> | string | null
    Telepon?: StringNullableFilter<"User"> | string | null
    NomorWa?: StringNullableFilter<"User"> | string | null
    NomorHp?: StringNullableFilter<"User"> | string | null
    RememberToken?: StringNullableFilter<"User"> | string | null
    CreatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    Alamat?: XOR<AlamatScalarRelationFilter, AlamatWhereInput>
    Mahasiswa?: MahasiswaListRelationFilter
    UserHasPermissions?: UserHasPermissionsListRelationFilter
    UserHasRoles?: UserHasRolesListRelationFilter
    Userlogin?: UserloginListRelationFilter
  }, "UserId" | "Email">

  export type UserOrderByWithAggregationInput = {
    UserId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Email?: SortOrder
    EmailVerifiedAt?: SortOrderInput | SortOrder
    TempatLahir?: SortOrderInput | SortOrder
    TanggalLahir?: SortOrderInput | SortOrder
    JenisKelamin?: SortOrder
    PendidikanTerakhir?: SortOrder
    Avatar?: SortOrderInput | SortOrder
    Agama?: SortOrderInput | SortOrder
    Telepon?: SortOrderInput | SortOrder
    NomorWa?: SortOrderInput | SortOrder
    NomorHp?: SortOrderInput | SortOrder
    RememberToken?: SortOrderInput | SortOrder
    CreatedAt?: SortOrderInput | SortOrder
    UpdatedAt?: SortOrderInput | SortOrder
    DeletedAt?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    UserId?: StringWithAggregatesFilter<"User"> | string
    AlamatId?: StringWithAggregatesFilter<"User"> | string
    Nama?: StringWithAggregatesFilter<"User"> | string
    Email?: StringWithAggregatesFilter<"User"> | string
    EmailVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    TempatLahir?: StringNullableWithAggregatesFilter<"User"> | string | null
    TanggalLahir?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    JenisKelamin?: EnumJenisKelaminWithAggregatesFilter<"User"> | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangWithAggregatesFilter<"User"> | $Enums.Jenjang
    Avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    Agama?: StringNullableWithAggregatesFilter<"User"> | string | null
    Telepon?: StringNullableWithAggregatesFilter<"User"> | string | null
    NomorWa?: StringNullableWithAggregatesFilter<"User"> | string | null
    NomorHp?: StringNullableWithAggregatesFilter<"User"> | string | null
    RememberToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    CreatedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    UpdatedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    DeletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type UserloginWhereInput = {
    AND?: UserloginWhereInput | UserloginWhereInput[]
    OR?: UserloginWhereInput[]
    NOT?: UserloginWhereInput | UserloginWhereInput[]
    UserloginId?: StringFilter<"Userlogin"> | string
    UserId?: StringFilter<"Userlogin"> | string
    Username?: StringFilter<"Userlogin"> | string
    Password?: StringFilter<"Userlogin"> | string
    Credential?: StringFilter<"Userlogin"> | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserloginOrderByWithRelationInput = {
    UserloginId?: SortOrder
    UserId?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Credential?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type UserloginWhereUniqueInput = Prisma.AtLeast<{
    UserloginId?: string
    AND?: UserloginWhereInput | UserloginWhereInput[]
    OR?: UserloginWhereInput[]
    NOT?: UserloginWhereInput | UserloginWhereInput[]
    UserId?: StringFilter<"Userlogin"> | string
    Username?: StringFilter<"Userlogin"> | string
    Password?: StringFilter<"Userlogin"> | string
    Credential?: StringFilter<"Userlogin"> | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "UserloginId">

  export type UserloginOrderByWithAggregationInput = {
    UserloginId?: SortOrder
    UserId?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Credential?: SortOrder
    _count?: UserloginCountOrderByAggregateInput
    _max?: UserloginMaxOrderByAggregateInput
    _min?: UserloginMinOrderByAggregateInput
  }

  export type UserloginScalarWhereWithAggregatesInput = {
    AND?: UserloginScalarWhereWithAggregatesInput | UserloginScalarWhereWithAggregatesInput[]
    OR?: UserloginScalarWhereWithAggregatesInput[]
    NOT?: UserloginScalarWhereWithAggregatesInput | UserloginScalarWhereWithAggregatesInput[]
    UserloginId?: StringWithAggregatesFilter<"Userlogin"> | string
    UserId?: StringWithAggregatesFilter<"Userlogin"> | string
    Username?: StringWithAggregatesFilter<"Userlogin"> | string
    Password?: StringWithAggregatesFilter<"Userlogin"> | string
    Credential?: StringWithAggregatesFilter<"Userlogin"> | string
  }

  export type AlamatCreateInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
    Desa: DesaCreateNestedOneWithoutAlamatInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutAlamatInput
    University?: UniversityCreateNestedManyWithoutAlamatInput
    User?: UserCreateNestedManyWithoutAlamatInput
  }

  export type AlamatUncheckedCreateInput = {
    AlamatId?: string
    DesaId: string
    Alamat: string
    KodePos: string
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutAlamatInput
    University?: UniversityUncheckedCreateNestedManyWithoutAlamatInput
    User?: UserUncheckedCreateNestedManyWithoutAlamatInput
  }

  export type AlamatUpdateInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutAlamatNestedInput
    University?: UniversityUpdateManyWithoutAlamatNestedInput
    User?: UserUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    DesaId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutAlamatNestedInput
    University?: UniversityUncheckedUpdateManyWithoutAlamatNestedInput
    User?: UserUncheckedUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatCreateManyInput = {
    AlamatId?: string
    DesaId: string
    Alamat: string
    KodePos: string
  }

  export type AlamatUpdateManyMutationInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
  }

  export type AlamatUncheckedUpdateManyInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    DesaId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
  }

  export type AsesorCreateInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    TipeAsesor: TipeAsesorCreateNestedOneWithoutAsesorInput
    AsesorAkademik?: AsesorAkademikCreateNestedManyWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutAsesorInput
  }

  export type AsesorUncheckedCreateInput = {
    AsesorId?: string
    TipeAsesorId: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedCreateNestedManyWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiUncheckedCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutAsesorInput
  }

  export type AsesorUpdateInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TipeAsesor?: TipeAsesorUpdateOneRequiredWithoutAsesorNestedInput
    AsesorAkademik?: AsesorAkademikUpdateManyWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorUncheckedUpdateInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedUpdateManyWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUncheckedUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorCreateManyInput = {
    AsesorId?: string
    TipeAsesorId: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorUpdateManyMutationInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorUncheckedUpdateManyInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikCreateInput = {
    AsesorAkademikId?: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Asesor: AsesorCreateNestedOneWithoutAsesorAkademikInput
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiCreateNestedManyWithoutAsesorAkademikInput
  }

  export type AsesorAkademikUncheckedCreateInput = {
    AsesorAkademikId?: string
    AsesorId: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiUncheckedCreateNestedManyWithoutAsesorAkademikInput
  }

  export type AsesorAkademikUpdateInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateOneRequiredWithoutAsesorAkademikNestedInput
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiUpdateManyWithoutAsesorAkademikNestedInput
  }

  export type AsesorAkademikUncheckedUpdateInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyWithoutAsesorAkademikNestedInput
  }

  export type AsesorAkademikCreateManyInput = {
    AsesorAkademikId?: string
    AsesorId: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorAkademikUpdateManyMutationInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikUncheckedUpdateManyInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AsesorAkademik: AsesorAkademikCreateNestedOneWithoutAsesorAkademikKeanggotaanAsosiasiInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedCreateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: string
    AsesorAkademikId: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpdateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademik?: AsesorAkademikUpdateOneRequiredWithoutAsesorAkademikKeanggotaanAsosiasiNestedInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateManyInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: string
    AsesorAkademikId: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpdateManyMutationInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorPraktisiCreateInput = {
    AsesorPraktisiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor?: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Asesor: AsesorCreateNestedOneWithoutAsesorPraktisiInput
  }

  export type AsesorPraktisiUncheckedCreateInput = {
    AsesorPraktisiId?: string
    AsesorId: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor?: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorPraktisiUpdateInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateOneRequiredWithoutAsesorPraktisiNestedInput
  }

  export type AsesorPraktisiUncheckedUpdateInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorPraktisiCreateManyInput = {
    AsesorPraktisiId?: string
    AsesorId: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor?: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorPraktisiUpdateManyMutationInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorPraktisiUncheckedUpdateManyInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AssesorMahasiswaCreateInput = {
    AssesorMahasiswaId?: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Asesor: AsesorCreateNestedOneWithoutAssesorMahasiswaInput
    Pendaftaran: PendaftaranCreateNestedOneWithoutAssesorMahasiswaInput
    SkRektorAssesor?: SkRektorAssesorCreateNestedManyWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaUncheckedCreateInput = {
    AssesorMahasiswaId?: string
    PendaftaranId: string
    AsesorId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedCreateNestedManyWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaUpdateInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateOneRequiredWithoutAssesorMahasiswaNestedInput
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutAssesorMahasiswaNestedInput
    SkRektorAssesor?: SkRektorAssesorUpdateManyWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaUncheckedUpdateInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedUpdateManyWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaCreateManyInput = {
    AssesorMahasiswaId?: string
    PendaftaranId: string
    AsesorId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AssesorMahasiswaUpdateManyMutationInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AssesorMahasiswaUncheckedUpdateManyInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BuktiFormCreateInput = {
    BuktiFormId?: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutBuktiFormInput
    JenisDokumen: JenisDokumenCreateNestedOneWithoutBuktiFormInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutBuktiFormInput
  }

  export type BuktiFormUncheckedCreateInput = {
    BuktiFormId?: string
    PendaftaranId: string
    JenisDokumenId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutBuktiFormInput
  }

  export type BuktiFormUpdateInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutBuktiFormNestedInput
    JenisDokumen?: JenisDokumenUpdateOneRequiredWithoutBuktiFormNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutBuktiFormNestedInput
  }

  export type BuktiFormUncheckedUpdateInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutBuktiFormNestedInput
  }

  export type BuktiFormCreateManyInput = {
    BuktiFormId?: string
    PendaftaranId: string
    JenisDokumenId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type BuktiFormUpdateManyMutationInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BuktiFormUncheckedUpdateManyInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BuktiFormEvaluasiDiriCreateInput = {
    BuktiForm: BuktiFormCreateNestedOneWithoutBuktiFormEvaluasiDiriInput
    EvaluasiDiri: EvaluasiDiriCreateNestedOneWithoutBuktiFormEvaluasiDiriInput
  }

  export type BuktiFormEvaluasiDiriUncheckedCreateInput = {
    BuktiFormId: string
    EvaluasiDiriId: string
  }

  export type BuktiFormEvaluasiDiriUpdateInput = {
    BuktiForm?: BuktiFormUpdateOneRequiredWithoutBuktiFormEvaluasiDiriNestedInput
    EvaluasiDiri?: EvaluasiDiriUpdateOneRequiredWithoutBuktiFormEvaluasiDiriNestedInput
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
  }

  export type BuktiFormEvaluasiDiriCreateManyInput = {
    BuktiFormId: string
    EvaluasiDiriId: string
  }

  export type BuktiFormEvaluasiDiriUpdateManyMutationInput = {

  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateManyInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
  }

  export type CapaianPembelajaranCreateInput = {
    CapaianPembelajaranId?: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    MataKuliah: MataKuliahCreateNestedOneWithoutCapaianPembelajaranInput
    EvaluasiDiri?: EvaluasiDiriCreateNestedManyWithoutCapaianPembelajaranInput
  }

  export type CapaianPembelajaranUncheckedCreateInput = {
    CapaianPembelajaranId?: string
    MataKuliahId: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedCreateNestedManyWithoutCapaianPembelajaranInput
  }

  export type CapaianPembelajaranUpdateInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliah?: MataKuliahUpdateOneRequiredWithoutCapaianPembelajaranNestedInput
    EvaluasiDiri?: EvaluasiDiriUpdateManyWithoutCapaianPembelajaranNestedInput
  }

  export type CapaianPembelajaranUncheckedUpdateInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedUpdateManyWithoutCapaianPembelajaranNestedInput
  }

  export type CapaianPembelajaranCreateManyInput = {
    CapaianPembelajaranId?: string
    MataKuliahId: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type CapaianPembelajaranUpdateManyMutationInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CapaianPembelajaranUncheckedUpdateManyInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CountryCreateInput = {
    CountryId?: string
    Nama: string
    Provinsi?: ProvinsiCreateNestedManyWithoutCountryInput
  }

  export type CountryUncheckedCreateInput = {
    CountryId?: string
    Nama: string
    Provinsi?: ProvinsiUncheckedCreateNestedManyWithoutCountryInput
  }

  export type CountryUpdateInput = {
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Provinsi?: ProvinsiUpdateManyWithoutCountryNestedInput
  }

  export type CountryUncheckedUpdateInput = {
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Provinsi?: ProvinsiUncheckedUpdateManyWithoutCountryNestedInput
  }

  export type CountryCreateManyInput = {
    CountryId?: string
    Nama: string
  }

  export type CountryUpdateManyMutationInput = {
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type CountryUncheckedUpdateManyInput = {
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type DaftarUlangCreateInput = {
    DaftarUlangId?: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutDaftarUlangInput
    ProgramStudi: ProgramStudiCreateNestedOneWithoutDaftarUlangInput
  }

  export type DaftarUlangUncheckedCreateInput = {
    DaftarUlangId?: string
    PendaftaranId: string
    ProgramStudiId: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type DaftarUlangUpdateInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutDaftarUlangNestedInput
    ProgramStudi?: ProgramStudiUpdateOneRequiredWithoutDaftarUlangNestedInput
  }

  export type DaftarUlangUncheckedUpdateInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DaftarUlangCreateManyInput = {
    DaftarUlangId?: string
    PendaftaranId: string
    ProgramStudiId: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type DaftarUlangUpdateManyMutationInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DaftarUlangUncheckedUpdateManyInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DesaCreateInput = {
    DesaId?: string
    Nama: string
    Kecamatan: KecamatanCreateNestedOneWithoutDesaInput
    Alamat?: AlamatCreateNestedManyWithoutDesaInput
  }

  export type DesaUncheckedCreateInput = {
    DesaId?: string
    KecamatanId: string
    Nama: string
    Alamat?: AlamatUncheckedCreateNestedManyWithoutDesaInput
  }

  export type DesaUpdateInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kecamatan?: KecamatanUpdateOneRequiredWithoutDesaNestedInput
    Alamat?: AlamatUpdateManyWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Alamat?: AlamatUncheckedUpdateManyWithoutDesaNestedInput
  }

  export type DesaCreateManyInput = {
    DesaId?: string
    KecamatanId: string
    Nama: string
  }

  export type DesaUpdateManyMutationInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type DesaUncheckedUpdateManyInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluasiDiriCreateInput = {
    EvaluasiDiriId?: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    MataKuliahMahasiswa: MataKuliahMahasiswaCreateNestedOneWithoutEvaluasiDiriInput
    CapaianPembelajaran: CapaianPembelajaranCreateNestedOneWithoutEvaluasiDiriInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriUncheckedCreateInput = {
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenUncheckedCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriUpdateInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    CapaianPembelajaran?: CapaianPembelajaranUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriCreateManyInput = {
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type EvaluasiDiriUpdateManyMutationInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EvaluasiDiriUncheckedUpdateManyInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HasilAssesmenCreateInput = {
    HasilAssesmenId?: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    EvaluasiDiri: EvaluasiDiriCreateNestedOneWithoutHasilAssesmenInput
    SkorAssesmen?: SkorAssesmenCreateNestedManyWithoutHasilAssesmenInput
  }

  export type HasilAssesmenUncheckedCreateInput = {
    HasilAssesmenId?: string
    EvaluasiDiriId: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkorAssesmen?: SkorAssesmenUncheckedCreateNestedManyWithoutHasilAssesmenInput
  }

  export type HasilAssesmenUpdateInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUpdateOneRequiredWithoutHasilAssesmenNestedInput
    SkorAssesmen?: SkorAssesmenUpdateManyWithoutHasilAssesmenNestedInput
  }

  export type HasilAssesmenUncheckedUpdateInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkorAssesmen?: SkorAssesmenUncheckedUpdateManyWithoutHasilAssesmenNestedInput
  }

  export type HasilAssesmenCreateManyInput = {
    HasilAssesmenId?: string
    EvaluasiDiriId: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type HasilAssesmenUpdateManyMutationInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HasilAssesmenUncheckedUpdateManyInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InformasiKependudukanCreateInput = {
    InformasiKependudukanId?: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutInformasiKependudukanInput
  }

  export type InformasiKependudukanUncheckedCreateInput = {
    InformasiKependudukanId?: string
    PendaftaranId: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InformasiKependudukanUpdateInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutInformasiKependudukanNestedInput
  }

  export type InformasiKependudukanUncheckedUpdateInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InformasiKependudukanCreateManyInput = {
    InformasiKependudukanId?: string
    PendaftaranId: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InformasiKependudukanUpdateManyMutationInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InformasiKependudukanUncheckedUpdateManyInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitusiLamaCreateInput = {
    InstitusiLamaId?: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutInstitusiLamaInput
    Alamat: AlamatCreateNestedOneWithoutInstitusiLamaInput
  }

  export type InstitusiLamaUncheckedCreateInput = {
    InstitusiLamaId?: string
    PendaftaranId: string
    AlamatId: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InstitusiLamaUpdateInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutInstitusiLamaNestedInput
    Alamat?: AlamatUpdateOneRequiredWithoutInstitusiLamaNestedInput
  }

  export type InstitusiLamaUncheckedUpdateInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitusiLamaCreateManyInput = {
    InstitusiLamaId?: string
    PendaftaranId: string
    AlamatId: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InstitusiLamaUpdateManyMutationInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitusiLamaUncheckedUpdateManyInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JenisDokumenCreateInput = {
    JenisDokumenId?: string
    Jenis: string
    NomorDokumen: number
    Keterangan?: string | null
    BuktiForm?: BuktiFormCreateNestedManyWithoutJenisDokumenInput
  }

  export type JenisDokumenUncheckedCreateInput = {
    JenisDokumenId?: string
    Jenis: string
    NomorDokumen: number
    Keterangan?: string | null
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutJenisDokumenInput
  }

  export type JenisDokumenUpdateInput = {
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    Jenis?: StringFieldUpdateOperationsInput | string
    NomorDokumen?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    BuktiForm?: BuktiFormUpdateManyWithoutJenisDokumenNestedInput
  }

  export type JenisDokumenUncheckedUpdateInput = {
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    Jenis?: StringFieldUpdateOperationsInput | string
    NomorDokumen?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutJenisDokumenNestedInput
  }

  export type JenisDokumenCreateManyInput = {
    JenisDokumenId?: string
    Jenis: string
    NomorDokumen: number
    Keterangan?: string | null
  }

  export type JenisDokumenUpdateManyMutationInput = {
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    Jenis?: StringFieldUpdateOperationsInput | string
    NomorDokumen?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JenisDokumenUncheckedUpdateManyInput = {
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    Jenis?: StringFieldUpdateOperationsInput | string
    NomorDokumen?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type KabupatenCreateInput = {
    KabupatenId?: string
    Nama: string
    Provinsi: ProvinsiCreateNestedOneWithoutKabupatenInput
    Kecamatan?: KecamatanCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateInput = {
    KabupatenId?: string
    ProvinsiId: string
    Nama: string
    Kecamatan?: KecamatanUncheckedCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUpdateInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Provinsi?: ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput
    Kecamatan?: KecamatanUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kecamatan?: KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenCreateManyInput = {
    KabupatenId?: string
    ProvinsiId: string
    Nama: string
  }

  export type KabupatenUpdateManyMutationInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type KabupatenUncheckedUpdateManyInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type KecamatanCreateInput = {
    KecamatanId?: string
    Nama: string
    Kabupaten: KabupatenCreateNestedOneWithoutKecamatanInput
    Desa?: DesaCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateInput = {
    KecamatanId?: string
    KabupatenId: string
    Nama: string
    Desa?: DesaUncheckedCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUpdateInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kabupaten?: KabupatenUpdateOneRequiredWithoutKecamatanNestedInput
    Desa?: DesaUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUncheckedUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanCreateManyInput = {
    KecamatanId?: string
    KabupatenId: string
    Nama: string
  }

  export type KecamatanUpdateManyMutationInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type KecamatanUncheckedUpdateManyInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type MahasiswaCreateInput = {
    MahasiswaId?: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    User: UserCreateNestedOneWithoutMahasiswaInput
    Pendaftaran?: PendaftaranCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaUncheckedCreateInput = {
    MahasiswaId?: string
    UserId: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran?: PendaftaranUncheckedCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaUpdateInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutMahasiswaNestedInput
    Pendaftaran?: PendaftaranUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaUncheckedUpdateInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUncheckedUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaCreateManyInput = {
    MahasiswaId?: string
    UserId: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaUpdateManyMutationInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaUncheckedUpdateManyInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaKonferensiCreateInput = {
    MahasiswaKonferensiId?: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan?: $Enums.StatusKeikutsertaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMahasiswaKonferensiInput
  }

  export type MahasiswaKonferensiUncheckedCreateInput = {
    MahasiswaKonferensiId?: string
    PendaftaranId: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan?: $Enums.StatusKeikutsertaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaKonferensiUpdateInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMahasiswaKonferensiNestedInput
  }

  export type MahasiswaKonferensiUncheckedUpdateInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaKonferensiCreateManyInput = {
    MahasiswaKonferensiId?: string
    PendaftaranId: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan?: $Enums.StatusKeikutsertaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaKonferensiUpdateManyMutationInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaKonferensiUncheckedUpdateManyInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiCreateInput = {
    MahasiswaOrganisasiProfesiId?: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMahasiswaOrganisasiProfesiInput
  }

  export type MahasiswaOrganisasiProfesiUncheckedCreateInput = {
    MahasiswaOrganisasiProfesiId?: string
    PendaftaranId: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUpdateInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMahasiswaOrganisasiProfesiNestedInput
  }

  export type MahasiswaOrganisasiProfesiUncheckedUpdateInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiCreateManyInput = {
    MahasiswaOrganisasiProfesiId?: string
    PendaftaranId: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUpdateManyMutationInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUncheckedUpdateManyInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalCreateInput = {
    MahasiswaPelatihanProfessionalId?: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date | string
    Selesai?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMahasiswaPelatihanProfessionalInput
  }

  export type MahasiswaPelatihanProfessionalUncheckedCreateInput = {
    MahasiswaPelatihanProfessionalId?: string
    PendaftaranId: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date | string
    Selesai?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUpdateInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMahasiswaPelatihanProfessionalNestedInput
  }

  export type MahasiswaPelatihanProfessionalUncheckedUpdateInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalCreateManyInput = {
    MahasiswaPelatihanProfessionalId?: string
    PendaftaranId: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date | string
    Selesai?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUpdateManyMutationInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUncheckedUpdateManyInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPendidikanCreateInput = {
    MahasiswaPendidikanId?: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMahasiswaPendidikanInput
  }

  export type MahasiswaPendidikanUncheckedCreateInput = {
    MahasiswaPendidikanId?: string
    PendaftaranId: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPendidikanUpdateInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMahasiswaPendidikanNestedInput
  }

  export type MahasiswaPendidikanUncheckedUpdateInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPendidikanCreateManyInput = {
    MahasiswaPendidikanId?: string
    PendaftaranId: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPendidikanUpdateManyMutationInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPendidikanUncheckedUpdateManyInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPiagamCreateInput = {
    MahasiswaPiagamId?: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMahasiswaPiagamInput
  }

  export type MahasiswaPiagamUncheckedCreateInput = {
    MahasiswaPiagamId?: string
    PendaftaranId: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPiagamUpdateInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMahasiswaPiagamNestedInput
  }

  export type MahasiswaPiagamUncheckedUpdateInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPiagamCreateManyInput = {
    MahasiswaPiagamId?: string
    PendaftaranId: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPiagamUpdateManyMutationInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPiagamUncheckedUpdateManyInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanCreateInput = {
    MahasiswaRiwayatPekerjaanId?: string
    Nama: string
    PosisiJabatan: string
    Alamat?: string | null
    UraianTugas?: string | null
    MulaiBekerja: Date | string
    SelesaiBekerja?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMahasiswaRiwayatPekerjaanInput
  }

  export type MahasiswaRiwayatPekerjaanUncheckedCreateInput = {
    MahasiswaRiwayatPekerjaanId?: string
    PendaftaranId: string
    Nama: string
    PosisiJabatan: string
    Alamat?: string | null
    UraianTugas?: string | null
    MulaiBekerja: Date | string
    SelesaiBekerja?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUpdateInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMahasiswaRiwayatPekerjaanNestedInput
  }

  export type MahasiswaRiwayatPekerjaanUncheckedUpdateInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanCreateManyInput = {
    MahasiswaRiwayatPekerjaanId?: string
    PendaftaranId: string
    Nama: string
    PosisiJabatan: string
    Alamat?: string | null
    UraianTugas?: string | null
    MulaiBekerja: Date | string
    SelesaiBekerja?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUpdateManyMutationInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUncheckedUpdateManyInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahCreateInput = {
    MataKuliahId?: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi: ProgramStudiCreateNestedOneWithoutMataKuliahInput
    CapaianPembelajaran?: CapaianPembelajaranCreateNestedManyWithoutMataKuliahInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahUncheckedCreateInput = {
    MataKuliahId?: string
    ProgramStudiId: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUncheckedCreateNestedManyWithoutMataKuliahInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahUpdateInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUpdateOneRequiredWithoutMataKuliahNestedInput
    CapaianPembelajaran?: CapaianPembelajaranUpdateManyWithoutMataKuliahNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutMataKuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUncheckedUpdateManyWithoutMataKuliahNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMataKuliahNestedInput
  }

  export type MataKuliahCreateManyInput = {
    MataKuliahId?: string
    ProgramStudiId: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type MataKuliahUpdateManyMutationInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahUncheckedUpdateManyInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahMahasiswaCreateInput = {
    MataKuliahMahasiswaId?: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMataKuliahMahasiswaInput
    MataKuliah: MataKuliahCreateNestedOneWithoutMataKuliahMahasiswaInput
    EvaluasiDiri?: EvaluasiDiriCreateNestedManyWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaUncheckedCreateInput = {
    MataKuliahMahasiswaId?: string
    PendaftaranId: string
    MataKuliahId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaUpdateInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    MataKuliah?: MataKuliahUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    EvaluasiDiri?: EvaluasiDiriUpdateManyWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaCreateManyInput = {
    MataKuliahMahasiswaId?: string
    PendaftaranId: string
    MataKuliahId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MataKuliahMahasiswaUpdateManyMutationInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserHasPermissionsCreateInput = {
    Permission: PermissionCreateNestedOneWithoutUserHasPermissionsInput
    User: UserCreateNestedOneWithoutUserHasPermissionsInput
  }

  export type UserHasPermissionsUncheckedCreateInput = {
    PermissionId: string
    UserId: string
  }

  export type UserHasPermissionsUpdateInput = {
    Permission?: PermissionUpdateOneRequiredWithoutUserHasPermissionsNestedInput
    User?: UserUpdateOneRequiredWithoutUserHasPermissionsNestedInput
  }

  export type UserHasPermissionsUncheckedUpdateInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasPermissionsCreateManyInput = {
    PermissionId: string
    UserId: string
  }

  export type UserHasPermissionsUpdateManyMutationInput = {

  }

  export type UserHasPermissionsUncheckedUpdateManyInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasRolesCreateInput = {
    Role: RoleCreateNestedOneWithoutUserHasRolesInput
    User: UserCreateNestedOneWithoutUserHasRolesInput
  }

  export type UserHasRolesUncheckedCreateInput = {
    RoleId: string
    UserId: string
  }

  export type UserHasRolesUpdateInput = {
    Role?: RoleUpdateOneRequiredWithoutUserHasRolesNestedInput
    User?: UserUpdateOneRequiredWithoutUserHasRolesNestedInput
  }

  export type UserHasRolesUncheckedUpdateInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasRolesCreateManyInput = {
    RoleId: string
    UserId: string
  }

  export type UserHasRolesUpdateManyMutationInput = {

  }

  export type UserHasRolesUncheckedUpdateManyInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type OrangTuaCreateInput = {
    OrangTuaId?: string
    Nama: string
    Pekerjaan?: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutOrangTuaInput
  }

  export type OrangTuaUncheckedCreateInput = {
    OrangTuaId?: string
    PendaftaranId: string
    Nama: string
    Pekerjaan?: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type OrangTuaUpdateInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutOrangTuaNestedInput
  }

  export type OrangTuaUncheckedUpdateInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrangTuaCreateManyInput = {
    OrangTuaId?: string
    PendaftaranId: string
    Nama: string
    Pekerjaan?: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type OrangTuaUpdateManyMutationInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrangTuaUncheckedUpdateManyInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PasswordResetTokensCreateInput = {
    Email: string
    Token: string
    CreatedAt?: Date | string | null
  }

  export type PasswordResetTokensUncheckedCreateInput = {
    Email: string
    Token: string
    CreatedAt?: Date | string | null
  }

  export type PasswordResetTokensUpdateInput = {
    Email?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PasswordResetTokensUncheckedUpdateInput = {
    Email?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PasswordResetTokensCreateManyInput = {
    Email: string
    Token: string
    CreatedAt?: Date | string | null
  }

  export type PasswordResetTokensUpdateManyMutationInput = {
    Email?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PasswordResetTokensUncheckedUpdateManyInput = {
    Email?: StringFieldUpdateOperationsInput | string
    Token?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PekerjaanMahasiswaCreateInput = {
    PekerjaanMahasiswaId?: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan?: $Enums.StatusPekerjaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutPekerjaanMahasiswaInput
  }

  export type PekerjaanMahasiswaUncheckedCreateInput = {
    PekerjaanMahasiswaId?: string
    PendaftaranId: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan?: $Enums.StatusPekerjaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PekerjaanMahasiswaUpdateInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutPekerjaanMahasiswaNestedInput
  }

  export type PekerjaanMahasiswaUncheckedUpdateInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PekerjaanMahasiswaCreateManyInput = {
    PekerjaanMahasiswaId?: string
    PendaftaranId: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan?: $Enums.StatusPekerjaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PekerjaanMahasiswaUpdateManyMutationInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PekerjaanMahasiswaUncheckedUpdateManyInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PendaftaranCreateInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUpdateInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateManyInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PendaftaranUpdateManyMutationInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PendaftaranUncheckedUpdateManyInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermissionCreateInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutPermissionInput
    RoleHasPermissions?: RoleHasPermissionsCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutPermissionInput
    RoleHasPermissions?: RoleHasPermissionsUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUpdateInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutPermissionNestedInput
    RoleHasPermissions?: RoleHasPermissionsUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutPermissionNestedInput
    RoleHasPermissions?: RoleHasPermissionsUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionCreateManyInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PermissionUpdateManyMutationInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermissionUncheckedUpdateManyInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PesantrenCreateInput = {
    PesantrenId?: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutPesantrenInput
  }

  export type PesantrenUncheckedCreateInput = {
    PesantrenId?: string
    PendaftaranId: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PesantrenUpdateInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutPesantrenNestedInput
  }

  export type PesantrenUncheckedUpdateInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PesantrenCreateManyInput = {
    PesantrenId?: string
    PendaftaranId: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PesantrenUpdateManyMutationInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PesantrenUncheckedUpdateManyInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgramStudiCreateInput = {
    ProgramStudiId?: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    University: UniversityCreateNestedOneWithoutProgramStudiInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutProgramStudiInput
    MataKuliah?: MataKuliahCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiUncheckedCreateInput = {
    ProgramStudiId?: string
    UniversityId: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutProgramStudiInput
    MataKuliah?: MataKuliahUncheckedCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiUpdateInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    University?: UniversityUpdateOneRequiredWithoutProgramStudiNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutProgramStudiNestedInput
    MataKuliah?: MataKuliahUpdateManyWithoutProgramStudiNestedInput
  }

  export type ProgramStudiUncheckedUpdateInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutProgramStudiNestedInput
    MataKuliah?: MataKuliahUncheckedUpdateManyWithoutProgramStudiNestedInput
  }

  export type ProgramStudiCreateManyInput = {
    ProgramStudiId?: string
    UniversityId: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type ProgramStudiUpdateManyMutationInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgramStudiUncheckedUpdateManyInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProvinsiCreateInput = {
    ProvinsiId?: string
    Nama: string
    Country: CountryCreateNestedOneWithoutProvinsiInput
    Kabupaten?: KabupatenCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUncheckedCreateInput = {
    ProvinsiId?: string
    CountryId: string
    Nama: string
    Kabupaten?: KabupatenUncheckedCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUpdateInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Country?: CountryUpdateOneRequiredWithoutProvinsiNestedInput
    Kabupaten?: KabupatenUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kabupaten?: KabupatenUncheckedUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiCreateManyInput = {
    ProvinsiId?: string
    CountryId: string
    Nama: string
  }

  export type ProvinsiUpdateManyMutationInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type ProvinsiUncheckedUpdateManyInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type RoleHasPermissionsCreateInput = {
    Permission: PermissionCreateNestedOneWithoutRoleHasPermissionsInput
    Role: RoleCreateNestedOneWithoutRoleHasPermissionsInput
  }

  export type RoleHasPermissionsUncheckedCreateInput = {
    PermissionId: string
    RoleId: string
  }

  export type RoleHasPermissionsUpdateInput = {
    Permission?: PermissionUpdateOneRequiredWithoutRoleHasPermissionsNestedInput
    Role?: RoleUpdateOneRequiredWithoutRoleHasPermissionsNestedInput
  }

  export type RoleHasPermissionsUncheckedUpdateInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    RoleId?: StringFieldUpdateOperationsInput | string
  }

  export type RoleHasPermissionsCreateManyInput = {
    PermissionId: string
    RoleId: string
  }

  export type RoleHasPermissionsUpdateManyMutationInput = {

  }

  export type RoleHasPermissionsUncheckedUpdateManyInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    RoleId?: StringFieldUpdateOperationsInput | string
  }

  export type RoleCreateInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutRoleInput
    RoleHasPermissions?: RoleHasPermissionsCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutRoleInput
    RoleHasPermissions?: RoleHasPermissionsUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasRoles?: UserHasRolesUpdateManyWithoutRoleNestedInput
    RoleHasPermissions?: RoleHasPermissionsUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutRoleNestedInput
    RoleHasPermissions?: RoleHasPermissionsUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type RoleUpdateManyMutationInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type RoleUncheckedUpdateManyInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenCreateInput = {
    SanggahanAssesmenId?: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutSanggahanAssesmenInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutSanggahanAssesmenInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenUncheckedCreateInput = {
    SanggahanAssesmenId?: string
    PendaftaranId: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutSanggahanAssesmenInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUncheckedCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenUpdateInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SanggahanAssesmenUncheckedUpdateInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SanggahanAssesmenCreateManyInput = {
    SanggahanAssesmenId?: string
    PendaftaranId: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenUpdateManyMutationInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenUncheckedUpdateManyInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenMkCreateInput = {
    SanggahanAssesmenMkId?: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmen: SanggahanAssesmenCreateNestedOneWithoutSanggahanAssesmenMkInput
    MataKuliahMahasiswa: MataKuliahMahasiswaCreateNestedOneWithoutSanggahanAssesmenMkInput
  }

  export type SanggahanAssesmenMkUncheckedCreateInput = {
    SanggahanAssesmenMkId?: string
    SanggahanAssesmenId: string
    MataKuliahMahasiswaId: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenMkUpdateInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmen?: SanggahanAssesmenUpdateOneRequiredWithoutSanggahanAssesmenMkNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateOneRequiredWithoutSanggahanAssesmenMkNestedInput
  }

  export type SanggahanAssesmenMkUncheckedUpdateInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenMkCreateManyInput = {
    SanggahanAssesmenMkId?: string
    SanggahanAssesmenId: string
    MataKuliahMahasiswaId: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenMkUpdateManyMutationInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenMkUncheckedUpdateManyInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenPihakCreateInput = {
    SanggahanAssesmenPihakId?: string
    NamaPihak: string
    JabatanPihak?: string | null
    InstansiPihak?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmen: SanggahanAssesmenCreateNestedOneWithoutSanggahanAssesmenPihakInput
  }

  export type SanggahanAssesmenPihakUncheckedCreateInput = {
    SanggahanAssesmenPihakId?: string
    SanggahanAssesmenId: string
    NamaPihak: string
    JabatanPihak?: string | null
    InstansiPihak?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenPihakUpdateInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmen?: SanggahanAssesmenUpdateOneRequiredWithoutSanggahanAssesmenPihakNestedInput
  }

  export type SanggahanAssesmenPihakUncheckedUpdateInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenPihakCreateManyInput = {
    SanggahanAssesmenPihakId?: string
    SanggahanAssesmenId: string
    NamaPihak: string
    JabatanPihak?: string | null
    InstansiPihak?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenPihakUpdateManyMutationInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenPihakUncheckedUpdateManyInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorCreateInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorCreateNestedManyWithoutSkRektorInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutSkRektorInput
  }

  export type SkRektorUncheckedCreateInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedCreateNestedManyWithoutSkRektorInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutSkRektorInput
  }

  export type SkRektorUpdateInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUpdateManyWithoutSkRektorNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutSkRektorNestedInput
  }

  export type SkRektorUncheckedUpdateInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedUpdateManyWithoutSkRektorNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutSkRektorNestedInput
  }

  export type SkRektorCreateManyInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkRektorUpdateManyMutationInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorUncheckedUpdateManyInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorAssesorCreateInput = {
    SkRektor: SkRektorCreateNestedOneWithoutSkRektorAssesorInput
    AssesorMahasiswa: AssesorMahasiswaCreateNestedOneWithoutSkRektorAssesorInput
  }

  export type SkRektorAssesorUncheckedCreateInput = {
    SkRektorId: string
    AssesorMahasiswaId: string
  }

  export type SkRektorAssesorUpdateInput = {
    SkRektor?: SkRektorUpdateOneRequiredWithoutSkRektorAssesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateOneRequiredWithoutSkRektorAssesorNestedInput
  }

  export type SkRektorAssesorUncheckedUpdateInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorAssesorCreateManyInput = {
    SkRektorId: string
    AssesorMahasiswaId: string
  }

  export type SkRektorAssesorUpdateManyMutationInput = {

  }

  export type SkRektorAssesorUncheckedUpdateManyInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorMahasiswaCreateInput = {
    SkRektor: SkRektorCreateNestedOneWithoutSkRektorMahasiswaInput
    Pendaftaran: PendaftaranCreateNestedOneWithoutSkRektorMahasiswaInput
  }

  export type SkRektorMahasiswaUncheckedCreateInput = {
    SkRektorId: string
    PendaftaranId: string
  }

  export type SkRektorMahasiswaUpdateInput = {
    SkRektor?: SkRektorUpdateOneRequiredWithoutSkRektorMahasiswaNestedInput
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutSkRektorMahasiswaNestedInput
  }

  export type SkRektorMahasiswaUncheckedUpdateInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorMahasiswaCreateManyInput = {
    SkRektorId: string
    PendaftaranId: string
  }

  export type SkRektorMahasiswaUpdateManyMutationInput = {

  }

  export type SkRektorMahasiswaUncheckedUpdateManyInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
  }

  export type SkorAssesmenCreateInput = {
    SkorAssesmenId?: string
    Portofolio?: number
    Tulis?: number
    Wawancara?: number
    Demo?: number
    SkorRataRata?: number
    NilaiHuruf?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    HasilAssesmen: HasilAssesmenCreateNestedOneWithoutSkorAssesmenInput
  }

  export type SkorAssesmenUncheckedCreateInput = {
    SkorAssesmenId?: string
    HasilAssesmenId: string
    Portofolio?: number
    Tulis?: number
    Wawancara?: number
    Demo?: number
    SkorRataRata?: number
    NilaiHuruf?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkorAssesmenUpdateInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HasilAssesmen?: HasilAssesmenUpdateOneRequiredWithoutSkorAssesmenNestedInput
  }

  export type SkorAssesmenUncheckedUpdateInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkorAssesmenCreateManyInput = {
    SkorAssesmenId?: string
    HasilAssesmenId: string
    Portofolio?: number
    Tulis?: number
    Wawancara?: number
    Demo?: number
    SkorRataRata?: number
    NilaiHuruf?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkorAssesmenUpdateManyMutationInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkorAssesmenUncheckedUpdateManyInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StatusMahasiswaAssesmentCreateInput = {
    StatusMahasiswaAssesmentId?: string
    NamaStatus: string
    Icon: string
    Urutan: number
    Keterangan?: string | null
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryCreateNestedManyWithoutStatusMahasiswaAssesmentInput
  }

  export type StatusMahasiswaAssesmentUncheckedCreateInput = {
    StatusMahasiswaAssesmentId?: string
    NamaStatus: string
    Icon: string
    Urutan: number
    Keterangan?: string | null
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryUncheckedCreateNestedManyWithoutStatusMahasiswaAssesmentInput
  }

  export type StatusMahasiswaAssesmentUpdateInput = {
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    NamaStatus?: StringFieldUpdateOperationsInput | string
    Icon?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryUpdateManyWithoutStatusMahasiswaAssesmentNestedInput
  }

  export type StatusMahasiswaAssesmentUncheckedUpdateInput = {
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    NamaStatus?: StringFieldUpdateOperationsInput | string
    Icon?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    StatusMahasiswaAssesmentHistory?: StatusMahasiswaAssesmentHistoryUncheckedUpdateManyWithoutStatusMahasiswaAssesmentNestedInput
  }

  export type StatusMahasiswaAssesmentCreateManyInput = {
    StatusMahasiswaAssesmentId?: string
    NamaStatus: string
    Icon: string
    Urutan: number
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentUpdateManyMutationInput = {
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    NamaStatus?: StringFieldUpdateOperationsInput | string
    Icon?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentUncheckedUpdateManyInput = {
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    NamaStatus?: StringFieldUpdateOperationsInput | string
    Icon?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentHistoryCreateInput = {
    StatusMahasiswaAssesmentHistoryId?: string
    DaftarUlangId: string
    Tanggal?: Date | string | null
    Keterangan?: string | null
    StatusMahasiswaAssesment: StatusMahasiswaAssesmentCreateNestedOneWithoutStatusMahasiswaAssesmentHistoryInput
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedCreateInput = {
    StatusMahasiswaAssesmentHistoryId?: string
    StatusMahasiswaAssesmentId: string
    DaftarUlangId: string
    Tanggal?: Date | string | null
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentHistoryUpdateInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    StatusMahasiswaAssesment?: StatusMahasiswaAssesmentUpdateOneRequiredWithoutStatusMahasiswaAssesmentHistoryNestedInput
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedUpdateInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentHistoryCreateManyInput = {
    StatusMahasiswaAssesmentHistoryId?: string
    StatusMahasiswaAssesmentId: string
    DaftarUlangId: string
    Tanggal?: Date | string | null
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentHistoryUpdateManyMutationInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedUpdateManyInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TipeAsesorCreateInput = {
    TipeAsesorId?: string
    Nama: string
    Icon?: string | null
    Deskripsi?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Asesor?: AsesorCreateNestedManyWithoutTipeAsesorInput
  }

  export type TipeAsesorUncheckedCreateInput = {
    TipeAsesorId?: string
    Nama: string
    Icon?: string | null
    Deskripsi?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Asesor?: AsesorUncheckedCreateNestedManyWithoutTipeAsesorInput
  }

  export type TipeAsesorUpdateInput = {
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    Deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateManyWithoutTipeAsesorNestedInput
  }

  export type TipeAsesorUncheckedUpdateInput = {
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    Deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUncheckedUpdateManyWithoutTipeAsesorNestedInput
  }

  export type TipeAsesorCreateManyInput = {
    TipeAsesorId?: string
    Nama: string
    Icon?: string | null
    Deskripsi?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type TipeAsesorUpdateManyMutationInput = {
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    Deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TipeAsesorUncheckedUpdateManyInput = {
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    Deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityCreateInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUniversityInput
    ProgramStudi?: ProgramStudiCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateInput = {
    UniversityId?: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi?: ProgramStudiUncheckedCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanUncheckedCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUpdateInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUniversityNestedInput
    ProgramStudi?: ProgramStudiUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUncheckedUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityCreateManyInput = {
    UniversityId?: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityUpdateManyMutationInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityUncheckedUpdateManyInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversitySosialMediaCreateInput = {
    UniversitySosialMediaId?: string
    Nama: string
    Username?: string | null
    Icon?: string | null
    University: UniversityCreateNestedOneWithoutUniversitySosialMediaInput
  }

  export type UniversitySosialMediaUncheckedCreateInput = {
    UniversitySosialMediaId?: string
    UniversityId: string
    Nama: string
    Username?: string | null
    Icon?: string | null
  }

  export type UniversitySosialMediaUpdateInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    University?: UniversityUpdateOneRequiredWithoutUniversitySosialMediaNestedInput
  }

  export type UniversitySosialMediaUncheckedUpdateInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversitySosialMediaCreateManyInput = {
    UniversitySosialMediaId?: string
    UniversityId: string
    Nama: string
    Username?: string | null
    Icon?: string | null
  }

  export type UniversitySosialMediaUpdateManyMutationInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversitySosialMediaUncheckedUpdateManyInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityInformasiCreateInput = {
    UniversityInformasiId?: string
    Nama: string
    Informasi?: string | null
    University: UniversityCreateNestedOneWithoutUniversityInformasiInput
  }

  export type UniversityInformasiUncheckedCreateInput = {
    UniversityInformasiId?: string
    UniversityId: string
    Nama: string
    Informasi?: string | null
  }

  export type UniversityInformasiUpdateInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
    University?: UniversityUpdateOneRequiredWithoutUniversityInformasiNestedInput
  }

  export type UniversityInformasiUncheckedUpdateInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityInformasiCreateManyInput = {
    UniversityInformasiId?: string
    UniversityId: string
    Nama: string
    Informasi?: string | null
  }

  export type UniversityInformasiUpdateManyMutationInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityInformasiUncheckedUpdateManyInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityJabatanCreateInput = {
    UniversityJabatanId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    University: UniversityCreateNestedOneWithoutUniversityJabatanInput
    UniversityJabatanOrang?: UniversityJabatanOrangCreateNestedManyWithoutUniversityJabatanInput
  }

  export type UniversityJabatanUncheckedCreateInput = {
    UniversityJabatanId?: string
    UniversityId: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    UniversityJabatanOrang?: UniversityJabatanOrangUncheckedCreateNestedManyWithoutUniversityJabatanInput
  }

  export type UniversityJabatanUpdateInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    University?: UniversityUpdateOneRequiredWithoutUniversityJabatanNestedInput
    UniversityJabatanOrang?: UniversityJabatanOrangUpdateManyWithoutUniversityJabatanNestedInput
  }

  export type UniversityJabatanUncheckedUpdateInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UniversityJabatanOrang?: UniversityJabatanOrangUncheckedUpdateManyWithoutUniversityJabatanNestedInput
  }

  export type UniversityJabatanCreateManyInput = {
    UniversityJabatanId?: string
    UniversityId: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanUpdateManyMutationInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanUncheckedUpdateManyInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanOrangCreateInput = {
    UniversityJabatanOrangId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    UniversityJabatan: UniversityJabatanCreateNestedOneWithoutUniversityJabatanOrangInput
  }

  export type UniversityJabatanOrangUncheckedCreateInput = {
    UniversityJabatanOrangId?: string
    UniversityJabatanId: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanOrangUpdateInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UniversityJabatan?: UniversityJabatanUpdateOneRequiredWithoutUniversityJabatanOrangNestedInput
  }

  export type UniversityJabatanOrangUncheckedUpdateInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanOrangCreateManyInput = {
    UniversityJabatanOrangId?: string
    UniversityJabatanId: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanOrangUpdateManyMutationInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanOrangUncheckedUpdateManyInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserCreateInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUserInput
    Mahasiswa?: MahasiswaCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutUserInput
    Userlogin?: UserloginCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    UserId?: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Mahasiswa?: MahasiswaUncheckedCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutUserInput
    Userlogin?: UserloginUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUserNestedInput
    Mahasiswa?: MahasiswaUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUncheckedUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    UserId?: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserloginCreateInput = {
    UserloginId?: string
    Username: string
    Password: string
    Credential: string
    User: UserCreateNestedOneWithoutUserloginInput
  }

  export type UserloginUncheckedCreateInput = {
    UserloginId?: string
    UserId: string
    Username: string
    Password: string
    Credential: string
  }

  export type UserloginUpdateInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
    User?: UserUpdateOneRequiredWithoutUserloginNestedInput
  }

  export type UserloginUncheckedUpdateInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
  }

  export type UserloginCreateManyInput = {
    UserloginId?: string
    UserId: string
    Username: string
    Password: string
    Credential: string
  }

  export type UserloginUpdateManyMutationInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
  }

  export type UserloginUncheckedUpdateManyInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DesaScalarRelationFilter = {
    is?: DesaWhereInput
    isNot?: DesaWhereInput
  }

  export type InstitusiLamaListRelationFilter = {
    every?: InstitusiLamaWhereInput
    some?: InstitusiLamaWhereInput
    none?: InstitusiLamaWhereInput
  }

  export type UniversityListRelationFilter = {
    every?: UniversityWhereInput
    some?: UniversityWhereInput
    none?: UniversityWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type InstitusiLamaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlamatCountOrderByAggregateInput = {
    AlamatId?: SortOrder
    DesaId?: SortOrder
    Alamat?: SortOrder
    KodePos?: SortOrder
  }

  export type AlamatMaxOrderByAggregateInput = {
    AlamatId?: SortOrder
    DesaId?: SortOrder
    Alamat?: SortOrder
    KodePos?: SortOrder
  }

  export type AlamatMinOrderByAggregateInput = {
    AlamatId?: SortOrder
    DesaId?: SortOrder
    Alamat?: SortOrder
    KodePos?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TipeAsesorScalarRelationFilter = {
    is?: TipeAsesorWhereInput
    isNot?: TipeAsesorWhereInput
  }

  export type AsesorAkademikListRelationFilter = {
    every?: AsesorAkademikWhereInput
    some?: AsesorAkademikWhereInput
    none?: AsesorAkademikWhereInput
  }

  export type AsesorPraktisiListRelationFilter = {
    every?: AsesorPraktisiWhereInput
    some?: AsesorPraktisiWhereInput
    none?: AsesorPraktisiWhereInput
  }

  export type AssesorMahasiswaListRelationFilter = {
    every?: AssesorMahasiswaWhereInput
    some?: AssesorMahasiswaWhereInput
    none?: AssesorMahasiswaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AsesorAkademikOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AsesorPraktisiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssesorMahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AsesorCountOrderByAggregateInput = {
    AsesorId?: SortOrder
    TipeAsesorId?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type AsesorMaxOrderByAggregateInput = {
    AsesorId?: SortOrder
    TipeAsesorId?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type AsesorMinOrderByAggregateInput = {
    AsesorId?: SortOrder
    TipeAsesorId?: SortOrder
    UserId?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type AsesorScalarRelationFilter = {
    is?: AsesorWhereInput
    isNot?: AsesorWhereInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiListRelationFilter = {
    every?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    some?: AsesorAkademikKeanggotaanAsosiasiWhereInput
    none?: AsesorAkademikKeanggotaanAsosiasiWhereInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AsesorAkademikCountOrderByAggregateInput = {
    AsesorAkademikId?: SortOrder
    AsesorId?: SortOrder
    Pangkat?: SortOrder
    JabatanFungsionalAkademik?: SortOrder
    NipNidn?: SortOrder
    NamaPerguruanTinggi?: SortOrder
    AlamatPerguruanTinggi?: SortOrder
    PendidikanTerakhirBidangKeilmuan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type AsesorAkademikMaxOrderByAggregateInput = {
    AsesorAkademikId?: SortOrder
    AsesorId?: SortOrder
    Pangkat?: SortOrder
    JabatanFungsionalAkademik?: SortOrder
    NipNidn?: SortOrder
    NamaPerguruanTinggi?: SortOrder
    AlamatPerguruanTinggi?: SortOrder
    PendidikanTerakhirBidangKeilmuan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type AsesorAkademikMinOrderByAggregateInput = {
    AsesorAkademikId?: SortOrder
    AsesorId?: SortOrder
    Pangkat?: SortOrder
    JabatanFungsionalAkademik?: SortOrder
    NipNidn?: SortOrder
    NamaPerguruanTinggi?: SortOrder
    AlamatPerguruanTinggi?: SortOrder
    PendidikanTerakhirBidangKeilmuan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type AsesorAkademikScalarRelationFilter = {
    is?: AsesorAkademikWhereInput
    isNot?: AsesorAkademikWhereInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiCountOrderByAggregateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: SortOrder
    AsesorAkademikId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AsesorAkademikKeanggotaanAsosiasiMaxOrderByAggregateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: SortOrder
    AsesorAkademikId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AsesorAkademikKeanggotaanAsosiasiMinOrderByAggregateInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: SortOrder
    AsesorAkademikId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AsesorPraktisiCountOrderByAggregateInput = {
    AsesorPraktisiId?: SortOrder
    AsesorId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    Jabatan?: SortOrder
    AlamatKantor?: SortOrder
    NamaInstansi?: SortOrder
    JabatanInstansi?: SortOrder
    BidangKeahlian?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type AsesorPraktisiMaxOrderByAggregateInput = {
    AsesorPraktisiId?: SortOrder
    AsesorId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    Jabatan?: SortOrder
    AlamatKantor?: SortOrder
    NamaInstansi?: SortOrder
    JabatanInstansi?: SortOrder
    BidangKeahlian?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type AsesorPraktisiMinOrderByAggregateInput = {
    AsesorPraktisiId?: SortOrder
    AsesorId?: SortOrder
    NamaAsosiasi?: SortOrder
    NomorKeanggotaan?: SortOrder
    Jabatan?: SortOrder
    AlamatKantor?: SortOrder
    NamaInstansi?: SortOrder
    JabatanInstansi?: SortOrder
    BidangKeahlian?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type PendaftaranScalarRelationFilter = {
    is?: PendaftaranWhereInput
    isNot?: PendaftaranWhereInput
  }

  export type SkRektorAssesorListRelationFilter = {
    every?: SkRektorAssesorWhereInput
    some?: SkRektorAssesorWhereInput
    none?: SkRektorAssesorWhereInput
  }

  export type SkRektorAssesorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssesorMahasiswaCountOrderByAggregateInput = {
    AssesorMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AsesorId?: SortOrder
    Urutan?: SortOrder
    Confirmation?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AssesorMahasiswaAvgOrderByAggregateInput = {
    Urutan?: SortOrder
  }

  export type AssesorMahasiswaMaxOrderByAggregateInput = {
    AssesorMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AsesorId?: SortOrder
    Urutan?: SortOrder
    Confirmation?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AssesorMahasiswaMinOrderByAggregateInput = {
    AssesorMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AsesorId?: SortOrder
    Urutan?: SortOrder
    Confirmation?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type AssesorMahasiswaSumOrderByAggregateInput = {
    Urutan?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type JenisDokumenScalarRelationFilter = {
    is?: JenisDokumenWhereInput
    isNot?: JenisDokumenWhereInput
  }

  export type BuktiFormEvaluasiDiriListRelationFilter = {
    every?: BuktiFormEvaluasiDiriWhereInput
    some?: BuktiFormEvaluasiDiriWhereInput
    none?: BuktiFormEvaluasiDiriWhereInput
  }

  export type BuktiFormEvaluasiDiriOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BuktiFormCountOrderByAggregateInput = {
    BuktiFormId?: SortOrder
    PendaftaranId?: SortOrder
    JenisDokumenId?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type BuktiFormMaxOrderByAggregateInput = {
    BuktiFormId?: SortOrder
    PendaftaranId?: SortOrder
    JenisDokumenId?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type BuktiFormMinOrderByAggregateInput = {
    BuktiFormId?: SortOrder
    PendaftaranId?: SortOrder
    JenisDokumenId?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type BuktiFormScalarRelationFilter = {
    is?: BuktiFormWhereInput
    isNot?: BuktiFormWhereInput
  }

  export type EvaluasiDiriScalarRelationFilter = {
    is?: EvaluasiDiriWhereInput
    isNot?: EvaluasiDiriWhereInput
  }

  export type BuktiFormEvaluasiDiriBuktiFormIdEvaluasiDiriIdCompoundUniqueInput = {
    BuktiFormId: string
    EvaluasiDiriId: string
  }

  export type BuktiFormEvaluasiDiriCountOrderByAggregateInput = {
    BuktiFormId?: SortOrder
    EvaluasiDiriId?: SortOrder
  }

  export type BuktiFormEvaluasiDiriMaxOrderByAggregateInput = {
    BuktiFormId?: SortOrder
    EvaluasiDiriId?: SortOrder
  }

  export type BuktiFormEvaluasiDiriMinOrderByAggregateInput = {
    BuktiFormId?: SortOrder
    EvaluasiDiriId?: SortOrder
  }

  export type MataKuliahScalarRelationFilter = {
    is?: MataKuliahWhereInput
    isNot?: MataKuliahWhereInput
  }

  export type EvaluasiDiriListRelationFilter = {
    every?: EvaluasiDiriWhereInput
    some?: EvaluasiDiriWhereInput
    none?: EvaluasiDiriWhereInput
  }

  export type EvaluasiDiriOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CapaianPembelajaranCountOrderByAggregateInput = {
    CapaianPembelajaranId?: SortOrder
    MataKuliahId?: SortOrder
    Nama?: SortOrder
    Urutan?: SortOrder
    Active?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type CapaianPembelajaranAvgOrderByAggregateInput = {
    Urutan?: SortOrder
  }

  export type CapaianPembelajaranMaxOrderByAggregateInput = {
    CapaianPembelajaranId?: SortOrder
    MataKuliahId?: SortOrder
    Nama?: SortOrder
    Urutan?: SortOrder
    Active?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type CapaianPembelajaranMinOrderByAggregateInput = {
    CapaianPembelajaranId?: SortOrder
    MataKuliahId?: SortOrder
    Nama?: SortOrder
    Urutan?: SortOrder
    Active?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type CapaianPembelajaranSumOrderByAggregateInput = {
    Urutan?: SortOrder
  }

  export type ProvinsiListRelationFilter = {
    every?: ProvinsiWhereInput
    some?: ProvinsiWhereInput
    none?: ProvinsiWhereInput
  }

  export type ProvinsiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CountryCountOrderByAggregateInput = {
    CountryId?: SortOrder
    Nama?: SortOrder
  }

  export type CountryMaxOrderByAggregateInput = {
    CountryId?: SortOrder
    Nama?: SortOrder
  }

  export type CountryMinOrderByAggregateInput = {
    CountryId?: SortOrder
    Nama?: SortOrder
  }

  export type ProgramStudiScalarRelationFilter = {
    is?: ProgramStudiWhereInput
    isNot?: ProgramStudiWhereInput
  }

  export type DaftarUlangCountOrderByAggregateInput = {
    DaftarUlangId?: SortOrder
    PendaftaranId?: SortOrder
    ProgramStudiId?: SortOrder
    Nim?: SortOrder
    JenjangKkniDituju?: SortOrder
    KipK?: SortOrder
    Aktif?: SortOrder
    MengisiBiodata?: SortOrder
    Finalisasi?: SortOrder
    TanggalDaftar?: SortOrder
    TanggalDaftarUlang?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DaftarUlangMaxOrderByAggregateInput = {
    DaftarUlangId?: SortOrder
    PendaftaranId?: SortOrder
    ProgramStudiId?: SortOrder
    Nim?: SortOrder
    JenjangKkniDituju?: SortOrder
    KipK?: SortOrder
    Aktif?: SortOrder
    MengisiBiodata?: SortOrder
    Finalisasi?: SortOrder
    TanggalDaftar?: SortOrder
    TanggalDaftarUlang?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DaftarUlangMinOrderByAggregateInput = {
    DaftarUlangId?: SortOrder
    PendaftaranId?: SortOrder
    ProgramStudiId?: SortOrder
    Nim?: SortOrder
    JenjangKkniDituju?: SortOrder
    KipK?: SortOrder
    Aktif?: SortOrder
    MengisiBiodata?: SortOrder
    Finalisasi?: SortOrder
    TanggalDaftar?: SortOrder
    TanggalDaftarUlang?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type KecamatanScalarRelationFilter = {
    is?: KecamatanWhereInput
    isNot?: KecamatanWhereInput
  }

  export type AlamatListRelationFilter = {
    every?: AlamatWhereInput
    some?: AlamatWhereInput
    none?: AlamatWhereInput
  }

  export type AlamatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DesaCountOrderByAggregateInput = {
    DesaId?: SortOrder
    KecamatanId?: SortOrder
    Nama?: SortOrder
  }

  export type DesaMaxOrderByAggregateInput = {
    DesaId?: SortOrder
    KecamatanId?: SortOrder
    Nama?: SortOrder
  }

  export type DesaMinOrderByAggregateInput = {
    DesaId?: SortOrder
    KecamatanId?: SortOrder
    Nama?: SortOrder
  }

  export type EnumProfiensiPengetahuanFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfiensiPengetahuan | EnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    in?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    not?: NestedEnumProfiensiPengetahuanFilter<$PrismaModel> | $Enums.ProfiensiPengetahuan
  }

  export type MataKuliahMahasiswaScalarRelationFilter = {
    is?: MataKuliahMahasiswaWhereInput
    isNot?: MataKuliahMahasiswaWhereInput
  }

  export type CapaianPembelajaranScalarRelationFilter = {
    is?: CapaianPembelajaranWhereInput
    isNot?: CapaianPembelajaranWhereInput
  }

  export type HasilAssesmenListRelationFilter = {
    every?: HasilAssesmenWhereInput
    some?: HasilAssesmenWhereInput
    none?: HasilAssesmenWhereInput
  }

  export type HasilAssesmenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EvaluasiDiriMataKuliahMahasiswaIdCapaianPembelajaranIdCompoundUniqueInput = {
    MataKuliahMahasiswaId: string
    CapaianPembelajaranId: string
  }

  export type EvaluasiDiriCountOrderByAggregateInput = {
    EvaluasiDiriId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    CapaianPembelajaranId?: SortOrder
    ProfiensiPengetahuan?: SortOrder
    TanggalPengesahan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EvaluasiDiriMaxOrderByAggregateInput = {
    EvaluasiDiriId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    CapaianPembelajaranId?: SortOrder
    ProfiensiPengetahuan?: SortOrder
    TanggalPengesahan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EvaluasiDiriMinOrderByAggregateInput = {
    EvaluasiDiriId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    CapaianPembelajaranId?: SortOrder
    ProfiensiPengetahuan?: SortOrder
    TanggalPengesahan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumProfiensiPengetahuanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfiensiPengetahuan | EnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    in?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    not?: NestedEnumProfiensiPengetahuanWithAggregatesFilter<$PrismaModel> | $Enums.ProfiensiPengetahuan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProfiensiPengetahuanFilter<$PrismaModel>
    _max?: NestedEnumProfiensiPengetahuanFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type SkorAssesmenListRelationFilter = {
    every?: SkorAssesmenWhereInput
    some?: SkorAssesmenWhereInput
    none?: SkorAssesmenWhereInput
  }

  export type SkorAssesmenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HasilAssesmenCountOrderByAggregateInput = {
    HasilAssesmenId?: SortOrder
    EvaluasiDiriId?: SortOrder
    Valid?: SortOrder
    Autentik?: SortOrder
    Terkini?: SortOrder
    Memadai?: SortOrder
    Assesmen?: SortOrder
    Nilai?: SortOrder
    Diakui?: SortOrder
    TanggalAssesmen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type HasilAssesmenAvgOrderByAggregateInput = {
    Nilai?: SortOrder
  }

  export type HasilAssesmenMaxOrderByAggregateInput = {
    HasilAssesmenId?: SortOrder
    EvaluasiDiriId?: SortOrder
    Valid?: SortOrder
    Autentik?: SortOrder
    Terkini?: SortOrder
    Memadai?: SortOrder
    Assesmen?: SortOrder
    Nilai?: SortOrder
    Diakui?: SortOrder
    TanggalAssesmen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type HasilAssesmenMinOrderByAggregateInput = {
    HasilAssesmenId?: SortOrder
    EvaluasiDiriId?: SortOrder
    Valid?: SortOrder
    Autentik?: SortOrder
    Terkini?: SortOrder
    Memadai?: SortOrder
    Assesmen?: SortOrder
    Nilai?: SortOrder
    Diakui?: SortOrder
    TanggalAssesmen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type HasilAssesmenSumOrderByAggregateInput = {
    Nilai?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type InformasiKependudukanCountOrderByAggregateInput = {
    InformasiKependudukanId?: SortOrder
    PendaftaranId?: SortOrder
    NoKk?: SortOrder
    NoNik?: SortOrder
    Suku?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InformasiKependudukanMaxOrderByAggregateInput = {
    InformasiKependudukanId?: SortOrder
    PendaftaranId?: SortOrder
    NoKk?: SortOrder
    NoNik?: SortOrder
    Suku?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InformasiKependudukanMinOrderByAggregateInput = {
    InformasiKependudukanId?: SortOrder
    PendaftaranId?: SortOrder
    NoKk?: SortOrder
    NoNik?: SortOrder
    Suku?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumJenjangFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenjang | EnumJenjangFieldRefInput<$PrismaModel>
    in?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    notIn?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    not?: NestedEnumJenjangFilter<$PrismaModel> | $Enums.Jenjang
  }

  export type AlamatScalarRelationFilter = {
    is?: AlamatWhereInput
    isNot?: AlamatWhereInput
  }

  export type InstitusiLamaCountOrderByAggregateInput = {
    InstitusiLamaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    Jenjang?: SortOrder
    JenisInstitusi?: SortOrder
    NamaInstitusi?: SortOrder
    Jurusan?: SortOrder
    Nisn?: SortOrder
    Npsn?: SortOrder
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InstitusiLamaAvgOrderByAggregateInput = {
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
  }

  export type InstitusiLamaMaxOrderByAggregateInput = {
    InstitusiLamaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    Jenjang?: SortOrder
    JenisInstitusi?: SortOrder
    NamaInstitusi?: SortOrder
    Jurusan?: SortOrder
    Nisn?: SortOrder
    Npsn?: SortOrder
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InstitusiLamaMinOrderByAggregateInput = {
    InstitusiLamaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    Jenjang?: SortOrder
    JenisInstitusi?: SortOrder
    NamaInstitusi?: SortOrder
    Jurusan?: SortOrder
    Nisn?: SortOrder
    Npsn?: SortOrder
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type InstitusiLamaSumOrderByAggregateInput = {
    TahunLulus?: SortOrder
    NilaiLulusan?: SortOrder
  }

  export type EnumJenjangWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenjang | EnumJenjangFieldRefInput<$PrismaModel>
    in?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    notIn?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    not?: NestedEnumJenjangWithAggregatesFilter<$PrismaModel> | $Enums.Jenjang
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenjangFilter<$PrismaModel>
    _max?: NestedEnumJenjangFilter<$PrismaModel>
  }

  export type BuktiFormListRelationFilter = {
    every?: BuktiFormWhereInput
    some?: BuktiFormWhereInput
    none?: BuktiFormWhereInput
  }

  export type BuktiFormOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JenisDokumenCountOrderByAggregateInput = {
    JenisDokumenId?: SortOrder
    Jenis?: SortOrder
    NomorDokumen?: SortOrder
    Keterangan?: SortOrder
  }

  export type JenisDokumenAvgOrderByAggregateInput = {
    NomorDokumen?: SortOrder
  }

  export type JenisDokumenMaxOrderByAggregateInput = {
    JenisDokumenId?: SortOrder
    Jenis?: SortOrder
    NomorDokumen?: SortOrder
    Keterangan?: SortOrder
  }

  export type JenisDokumenMinOrderByAggregateInput = {
    JenisDokumenId?: SortOrder
    Jenis?: SortOrder
    NomorDokumen?: SortOrder
    Keterangan?: SortOrder
  }

  export type JenisDokumenSumOrderByAggregateInput = {
    NomorDokumen?: SortOrder
  }

  export type ProvinsiScalarRelationFilter = {
    is?: ProvinsiWhereInput
    isNot?: ProvinsiWhereInput
  }

  export type KecamatanListRelationFilter = {
    every?: KecamatanWhereInput
    some?: KecamatanWhereInput
    none?: KecamatanWhereInput
  }

  export type KecamatanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KabupatenCountOrderByAggregateInput = {
    KabupatenId?: SortOrder
    ProvinsiId?: SortOrder
    Nama?: SortOrder
  }

  export type KabupatenMaxOrderByAggregateInput = {
    KabupatenId?: SortOrder
    ProvinsiId?: SortOrder
    Nama?: SortOrder
  }

  export type KabupatenMinOrderByAggregateInput = {
    KabupatenId?: SortOrder
    ProvinsiId?: SortOrder
    Nama?: SortOrder
  }

  export type KabupatenScalarRelationFilter = {
    is?: KabupatenWhereInput
    isNot?: KabupatenWhereInput
  }

  export type DesaListRelationFilter = {
    every?: DesaWhereInput
    some?: DesaWhereInput
    none?: DesaWhereInput
  }

  export type DesaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type KecamatanCountOrderByAggregateInput = {
    KecamatanId?: SortOrder
    KabupatenId?: SortOrder
    Nama?: SortOrder
  }

  export type KecamatanMaxOrderByAggregateInput = {
    KecamatanId?: SortOrder
    KabupatenId?: SortOrder
    Nama?: SortOrder
  }

  export type KecamatanMinOrderByAggregateInput = {
    KecamatanId?: SortOrder
    KabupatenId?: SortOrder
    Nama?: SortOrder
  }

  export type EnumStatusPerkawinanFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPerkawinan | EnumStatusPerkawinanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPerkawinanFilter<$PrismaModel> | $Enums.StatusPerkawinan
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type PendaftaranListRelationFilter = {
    every?: PendaftaranWhereInput
    some?: PendaftaranWhereInput
    none?: PendaftaranWhereInput
  }

  export type PendaftaranOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaCountOrderByAggregateInput = {
    MahasiswaId?: SortOrder
    UserId?: SortOrder
    StatusPerkawinan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaMaxOrderByAggregateInput = {
    MahasiswaId?: SortOrder
    UserId?: SortOrder
    StatusPerkawinan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaMinOrderByAggregateInput = {
    MahasiswaId?: SortOrder
    UserId?: SortOrder
    StatusPerkawinan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumStatusPerkawinanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPerkawinan | EnumStatusPerkawinanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPerkawinanWithAggregatesFilter<$PrismaModel> | $Enums.StatusPerkawinan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusPerkawinanFilter<$PrismaModel>
    _max?: NestedEnumStatusPerkawinanFilter<$PrismaModel>
  }

  export type EnumStatusKeikutsertaanFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusKeikutsertaan | EnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusKeikutsertaanFilter<$PrismaModel> | $Enums.StatusKeikutsertaan
  }

  export type MahasiswaKonferensiCountOrderByAggregateInput = {
    MahasiswaKonferensiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    JudulSeminar?: SortOrder
    Penyelenggara?: SortOrder
    StatusKeikutsertaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaKonferensiAvgOrderByAggregateInput = {
    Tahun?: SortOrder
  }

  export type MahasiswaKonferensiMaxOrderByAggregateInput = {
    MahasiswaKonferensiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    JudulSeminar?: SortOrder
    Penyelenggara?: SortOrder
    StatusKeikutsertaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaKonferensiMinOrderByAggregateInput = {
    MahasiswaKonferensiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    JudulSeminar?: SortOrder
    Penyelenggara?: SortOrder
    StatusKeikutsertaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaKonferensiSumOrderByAggregateInput = {
    Tahun?: SortOrder
  }

  export type EnumStatusKeikutsertaanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusKeikutsertaan | EnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusKeikutsertaanWithAggregatesFilter<$PrismaModel> | $Enums.StatusKeikutsertaan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusKeikutsertaanFilter<$PrismaModel>
    _max?: NestedEnumStatusKeikutsertaanFilter<$PrismaModel>
  }

  export type MahasiswaOrganisasiProfesiCountOrderByAggregateInput = {
    MahasiswaOrganisasiProfesiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    NamaOrganisasi?: SortOrder
    JenjangAnggotaJabatan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaOrganisasiProfesiAvgOrderByAggregateInput = {
    Tahun?: SortOrder
  }

  export type MahasiswaOrganisasiProfesiMaxOrderByAggregateInput = {
    MahasiswaOrganisasiProfesiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    NamaOrganisasi?: SortOrder
    JenjangAnggotaJabatan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaOrganisasiProfesiMinOrderByAggregateInput = {
    MahasiswaOrganisasiProfesiId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    NamaOrganisasi?: SortOrder
    JenjangAnggotaJabatan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaOrganisasiProfesiSumOrderByAggregateInput = {
    Tahun?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type MahasiswaPelatihanProfessionalCountOrderByAggregateInput = {
    MahasiswaPelatihanProfessionalId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPelatihan?: SortOrder
    Penyelenggara?: SortOrder
    Mulai?: SortOrder
    Selesai?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPelatihanProfessionalMaxOrderByAggregateInput = {
    MahasiswaPelatihanProfessionalId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPelatihan?: SortOrder
    Penyelenggara?: SortOrder
    Mulai?: SortOrder
    Selesai?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPelatihanProfessionalMinOrderByAggregateInput = {
    MahasiswaPelatihanProfessionalId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPelatihan?: SortOrder
    Penyelenggara?: SortOrder
    Mulai?: SortOrder
    Selesai?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type MahasiswaPendidikanCountOrderByAggregateInput = {
    MahasiswaPendidikanId?: SortOrder
    PendaftaranId?: SortOrder
    NamaSekolah?: SortOrder
    TahunLulus?: SortOrder
    Jurusan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPendidikanAvgOrderByAggregateInput = {
    TahunLulus?: SortOrder
  }

  export type MahasiswaPendidikanMaxOrderByAggregateInput = {
    MahasiswaPendidikanId?: SortOrder
    PendaftaranId?: SortOrder
    NamaSekolah?: SortOrder
    TahunLulus?: SortOrder
    Jurusan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPendidikanMinOrderByAggregateInput = {
    MahasiswaPendidikanId?: SortOrder
    PendaftaranId?: SortOrder
    NamaSekolah?: SortOrder
    TahunLulus?: SortOrder
    Jurusan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPendidikanSumOrderByAggregateInput = {
    TahunLulus?: SortOrder
  }

  export type MahasiswaPiagamCountOrderByAggregateInput = {
    MahasiswaPiagamId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    BentukPenghargaan?: SortOrder
    PemberiPenghargaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPiagamAvgOrderByAggregateInput = {
    Tahun?: SortOrder
  }

  export type MahasiswaPiagamMaxOrderByAggregateInput = {
    MahasiswaPiagamId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    BentukPenghargaan?: SortOrder
    PemberiPenghargaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPiagamMinOrderByAggregateInput = {
    MahasiswaPiagamId?: SortOrder
    PendaftaranId?: SortOrder
    Tahun?: SortOrder
    BentukPenghargaan?: SortOrder
    PemberiPenghargaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaPiagamSumOrderByAggregateInput = {
    Tahun?: SortOrder
  }

  export type MahasiswaRiwayatPekerjaanCountOrderByAggregateInput = {
    MahasiswaRiwayatPekerjaanId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    PosisiJabatan?: SortOrder
    Alamat?: SortOrder
    UraianTugas?: SortOrder
    MulaiBekerja?: SortOrder
    SelesaiBekerja?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaRiwayatPekerjaanMaxOrderByAggregateInput = {
    MahasiswaRiwayatPekerjaanId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    PosisiJabatan?: SortOrder
    Alamat?: SortOrder
    UraianTugas?: SortOrder
    MulaiBekerja?: SortOrder
    SelesaiBekerja?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MahasiswaRiwayatPekerjaanMinOrderByAggregateInput = {
    MahasiswaRiwayatPekerjaanId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    PosisiJabatan?: SortOrder
    Alamat?: SortOrder
    UraianTugas?: SortOrder
    MulaiBekerja?: SortOrder
    SelesaiBekerja?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type CapaianPembelajaranListRelationFilter = {
    every?: CapaianPembelajaranWhereInput
    some?: CapaianPembelajaranWhereInput
    none?: CapaianPembelajaranWhereInput
  }

  export type MataKuliahMahasiswaListRelationFilter = {
    every?: MataKuliahMahasiswaWhereInput
    some?: MataKuliahMahasiswaWhereInput
    none?: MataKuliahMahasiswaWhereInput
  }

  export type CapaianPembelajaranOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MataKuliahMahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MataKuliahCountOrderByAggregateInput = {
    MataKuliahId?: SortOrder
    ProgramStudiId?: SortOrder
    Kode?: SortOrder
    Nama?: SortOrder
    Sks?: SortOrder
    Semester?: SortOrder
    Silabus?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type MataKuliahAvgOrderByAggregateInput = {
    Sks?: SortOrder
  }

  export type MataKuliahMaxOrderByAggregateInput = {
    MataKuliahId?: SortOrder
    ProgramStudiId?: SortOrder
    Kode?: SortOrder
    Nama?: SortOrder
    Sks?: SortOrder
    Semester?: SortOrder
    Silabus?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type MataKuliahMinOrderByAggregateInput = {
    MataKuliahId?: SortOrder
    ProgramStudiId?: SortOrder
    Kode?: SortOrder
    Nama?: SortOrder
    Sks?: SortOrder
    Semester?: SortOrder
    Silabus?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type MataKuliahSumOrderByAggregateInput = {
    Sks?: SortOrder
  }

  export type EnumKeteranganMataKuliahNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.KeteranganMataKuliah | EnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    in?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    not?: NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel> | $Enums.KeteranganMataKuliah | null
  }

  export type EnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusMataKuliahMahasiswa | EnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    in?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel> | $Enums.StatusMataKuliahMahasiswa | null
  }

  export type SanggahanAssesmenMkListRelationFilter = {
    every?: SanggahanAssesmenMkWhereInput
    some?: SanggahanAssesmenMkWhereInput
    none?: SanggahanAssesmenMkWhereInput
  }

  export type SanggahanAssesmenMkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MataKuliahMahasiswaPendaftaranIdMataKuliahIdCompoundUniqueInput = {
    PendaftaranId: string
    MataKuliahId: string
  }

  export type MataKuliahMahasiswaCountOrderByAggregateInput = {
    MataKuliahMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    MataKuliahId?: SortOrder
    Rpl?: SortOrder
    Keterangan?: SortOrder
    StatusMataKuliahMahasiswa?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MataKuliahMahasiswaMaxOrderByAggregateInput = {
    MataKuliahMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    MataKuliahId?: SortOrder
    Rpl?: SortOrder
    Keterangan?: SortOrder
    StatusMataKuliahMahasiswa?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type MataKuliahMahasiswaMinOrderByAggregateInput = {
    MataKuliahMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    MataKuliahId?: SortOrder
    Rpl?: SortOrder
    Keterangan?: SortOrder
    StatusMataKuliahMahasiswa?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumKeteranganMataKuliahNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KeteranganMataKuliah | EnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    in?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    not?: NestedEnumKeteranganMataKuliahNullableWithAggregatesFilter<$PrismaModel> | $Enums.KeteranganMataKuliah | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel>
    _max?: NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel>
  }

  export type EnumStatusMataKuliahMahasiswaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusMataKuliahMahasiswa | EnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    in?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStatusMataKuliahMahasiswaNullableWithAggregatesFilter<$PrismaModel> | $Enums.StatusMataKuliahMahasiswa | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel>
    _max?: NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel>
  }

  export type PermissionScalarRelationFilter = {
    is?: PermissionWhereInput
    isNot?: PermissionWhereInput
  }

  export type UserHasPermissionsPermissionIdUserIdCompoundUniqueInput = {
    PermissionId: string
    UserId: string
  }

  export type UserHasPermissionsCountOrderByAggregateInput = {
    PermissionId?: SortOrder
    UserId?: SortOrder
  }

  export type UserHasPermissionsMaxOrderByAggregateInput = {
    PermissionId?: SortOrder
    UserId?: SortOrder
  }

  export type UserHasPermissionsMinOrderByAggregateInput = {
    PermissionId?: SortOrder
    UserId?: SortOrder
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type UserHasRolesRoleIdUserIdCompoundUniqueInput = {
    RoleId: string
    UserId: string
  }

  export type UserHasRolesCountOrderByAggregateInput = {
    RoleId?: SortOrder
    UserId?: SortOrder
  }

  export type UserHasRolesMaxOrderByAggregateInput = {
    RoleId?: SortOrder
    UserId?: SortOrder
  }

  export type UserHasRolesMinOrderByAggregateInput = {
    RoleId?: SortOrder
    UserId?: SortOrder
  }

  export type EnumJenisOrtuFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisOrtu | EnumJenisOrtuFieldRefInput<$PrismaModel>
    in?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisOrtuFilter<$PrismaModel> | $Enums.JenisOrtu
  }

  export type OrangTuaCountOrderByAggregateInput = {
    OrangTuaId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    Pekerjaan?: SortOrder
    JenisOrtu?: SortOrder
    Penghasilan?: SortOrder
    Email?: SortOrder
    NomorHp?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type OrangTuaAvgOrderByAggregateInput = {
    Penghasilan?: SortOrder
  }

  export type OrangTuaMaxOrderByAggregateInput = {
    OrangTuaId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    Pekerjaan?: SortOrder
    JenisOrtu?: SortOrder
    Penghasilan?: SortOrder
    Email?: SortOrder
    NomorHp?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type OrangTuaMinOrderByAggregateInput = {
    OrangTuaId?: SortOrder
    PendaftaranId?: SortOrder
    Nama?: SortOrder
    Pekerjaan?: SortOrder
    JenisOrtu?: SortOrder
    Penghasilan?: SortOrder
    Email?: SortOrder
    NomorHp?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type OrangTuaSumOrderByAggregateInput = {
    Penghasilan?: SortOrder
  }

  export type EnumJenisOrtuWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisOrtu | EnumJenisOrtuFieldRefInput<$PrismaModel>
    in?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisOrtuWithAggregatesFilter<$PrismaModel> | $Enums.JenisOrtu
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenisOrtuFilter<$PrismaModel>
    _max?: NestedEnumJenisOrtuFilter<$PrismaModel>
  }

  export type PasswordResetTokensCountOrderByAggregateInput = {
    Email?: SortOrder
    Token?: SortOrder
    CreatedAt?: SortOrder
  }

  export type PasswordResetTokensMaxOrderByAggregateInput = {
    Email?: SortOrder
    Token?: SortOrder
    CreatedAt?: SortOrder
  }

  export type PasswordResetTokensMinOrderByAggregateInput = {
    Email?: SortOrder
    Token?: SortOrder
    CreatedAt?: SortOrder
  }

  export type EnumStatusPekerjaanFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPekerjaan | EnumStatusPekerjaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPekerjaanFilter<$PrismaModel> | $Enums.StatusPekerjaan
  }

  export type PekerjaanMahasiswaCountOrderByAggregateInput = {
    PekerjaanMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    InstitusiTempatBekerja?: SortOrder
    Jabatan?: SortOrder
    StatusPekerjaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PekerjaanMahasiswaMaxOrderByAggregateInput = {
    PekerjaanMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    InstitusiTempatBekerja?: SortOrder
    Jabatan?: SortOrder
    StatusPekerjaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PekerjaanMahasiswaMinOrderByAggregateInput = {
    PekerjaanMahasiswaId?: SortOrder
    PendaftaranId?: SortOrder
    AlamatId?: SortOrder
    InstitusiTempatBekerja?: SortOrder
    Jabatan?: SortOrder
    StatusPekerjaan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumStatusPekerjaanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPekerjaan | EnumStatusPekerjaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPekerjaanWithAggregatesFilter<$PrismaModel> | $Enums.StatusPekerjaan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusPekerjaanFilter<$PrismaModel>
    _max?: NestedEnumStatusPekerjaanFilter<$PrismaModel>
  }

  export type EnumSistemKuliahFilter<$PrismaModel = never> = {
    equals?: $Enums.SistemKuliah | EnumSistemKuliahFieldRefInput<$PrismaModel>
    in?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    notIn?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    not?: NestedEnumSistemKuliahFilter<$PrismaModel> | $Enums.SistemKuliah
  }

  export type MahasiswaScalarRelationFilter = {
    is?: MahasiswaWhereInput
    isNot?: MahasiswaWhereInput
  }

  export type DaftarUlangListRelationFilter = {
    every?: DaftarUlangWhereInput
    some?: DaftarUlangWhereInput
    none?: DaftarUlangWhereInput
  }

  export type InformasiKependudukanListRelationFilter = {
    every?: InformasiKependudukanWhereInput
    some?: InformasiKependudukanWhereInput
    none?: InformasiKependudukanWhereInput
  }

  export type MahasiswaKonferensiListRelationFilter = {
    every?: MahasiswaKonferensiWhereInput
    some?: MahasiswaKonferensiWhereInput
    none?: MahasiswaKonferensiWhereInput
  }

  export type MahasiswaOrganisasiProfesiListRelationFilter = {
    every?: MahasiswaOrganisasiProfesiWhereInput
    some?: MahasiswaOrganisasiProfesiWhereInput
    none?: MahasiswaOrganisasiProfesiWhereInput
  }

  export type MahasiswaPelatihanProfessionalListRelationFilter = {
    every?: MahasiswaPelatihanProfessionalWhereInput
    some?: MahasiswaPelatihanProfessionalWhereInput
    none?: MahasiswaPelatihanProfessionalWhereInput
  }

  export type MahasiswaPendidikanListRelationFilter = {
    every?: MahasiswaPendidikanWhereInput
    some?: MahasiswaPendidikanWhereInput
    none?: MahasiswaPendidikanWhereInput
  }

  export type MahasiswaPiagamListRelationFilter = {
    every?: MahasiswaPiagamWhereInput
    some?: MahasiswaPiagamWhereInput
    none?: MahasiswaPiagamWhereInput
  }

  export type MahasiswaRiwayatPekerjaanListRelationFilter = {
    every?: MahasiswaRiwayatPekerjaanWhereInput
    some?: MahasiswaRiwayatPekerjaanWhereInput
    none?: MahasiswaRiwayatPekerjaanWhereInput
  }

  export type OrangTuaListRelationFilter = {
    every?: OrangTuaWhereInput
    some?: OrangTuaWhereInput
    none?: OrangTuaWhereInput
  }

  export type PekerjaanMahasiswaListRelationFilter = {
    every?: PekerjaanMahasiswaWhereInput
    some?: PekerjaanMahasiswaWhereInput
    none?: PekerjaanMahasiswaWhereInput
  }

  export type PesantrenListRelationFilter = {
    every?: PesantrenWhereInput
    some?: PesantrenWhereInput
    none?: PesantrenWhereInput
  }

  export type SanggahanAssesmenListRelationFilter = {
    every?: SanggahanAssesmenWhereInput
    some?: SanggahanAssesmenWhereInput
    none?: SanggahanAssesmenWhereInput
  }

  export type SkRektorMahasiswaListRelationFilter = {
    every?: SkRektorMahasiswaWhereInput
    some?: SkRektorMahasiswaWhereInput
    none?: SkRektorMahasiswaWhereInput
  }

  export type DaftarUlangOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InformasiKependudukanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaKonferensiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaOrganisasiProfesiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaPelatihanProfessionalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaPendidikanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaPiagamOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaRiwayatPekerjaanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrangTuaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PekerjaanMahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PesantrenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SanggahanAssesmenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SkRektorMahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PendaftaranCountOrderByAggregateInput = {
    PendaftaranId?: SortOrder
    MahasiswaId?: SortOrder
    KodePendaftar?: SortOrder
    NoUjian?: SortOrder
    Periode?: SortOrder
    Gelombang?: SortOrder
    SistemKuliah?: SortOrder
    JalurPendaftaran?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PendaftaranMaxOrderByAggregateInput = {
    PendaftaranId?: SortOrder
    MahasiswaId?: SortOrder
    KodePendaftar?: SortOrder
    NoUjian?: SortOrder
    Periode?: SortOrder
    Gelombang?: SortOrder
    SistemKuliah?: SortOrder
    JalurPendaftaran?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PendaftaranMinOrderByAggregateInput = {
    PendaftaranId?: SortOrder
    MahasiswaId?: SortOrder
    KodePendaftar?: SortOrder
    NoUjian?: SortOrder
    Periode?: SortOrder
    Gelombang?: SortOrder
    SistemKuliah?: SortOrder
    JalurPendaftaran?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type EnumSistemKuliahWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SistemKuliah | EnumSistemKuliahFieldRefInput<$PrismaModel>
    in?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    notIn?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    not?: NestedEnumSistemKuliahWithAggregatesFilter<$PrismaModel> | $Enums.SistemKuliah
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSistemKuliahFilter<$PrismaModel>
    _max?: NestedEnumSistemKuliahFilter<$PrismaModel>
  }

  export type UserHasPermissionsListRelationFilter = {
    every?: UserHasPermissionsWhereInput
    some?: UserHasPermissionsWhereInput
    none?: UserHasPermissionsWhereInput
  }

  export type RoleHasPermissionsListRelationFilter = {
    every?: RoleHasPermissionsWhereInput
    some?: RoleHasPermissionsWhereInput
    none?: RoleHasPermissionsWhereInput
  }

  export type UserHasPermissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleHasPermissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissionNameGuardNameCompoundUniqueInput = {
    Name: string
    GuardName: string
  }

  export type PermissionCountOrderByAggregateInput = {
    PermissionId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PermissionMaxOrderByAggregateInput = {
    PermissionId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PermissionMinOrderByAggregateInput = {
    PermissionId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PesantrenCountOrderByAggregateInput = {
    PesantrenId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPesantren?: SortOrder
    LamaPesantren?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PesantrenMaxOrderByAggregateInput = {
    PesantrenId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPesantren?: SortOrder
    LamaPesantren?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type PesantrenMinOrderByAggregateInput = {
    PesantrenId?: SortOrder
    PendaftaranId?: SortOrder
    NamaPesantren?: SortOrder
    LamaPesantren?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type UniversityScalarRelationFilter = {
    is?: UniversityWhereInput
    isNot?: UniversityWhereInput
  }

  export type MataKuliahListRelationFilter = {
    every?: MataKuliahWhereInput
    some?: MataKuliahWhereInput
    none?: MataKuliahWhereInput
  }

  export type MataKuliahOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProgramStudiCountOrderByAggregateInput = {
    ProgramStudiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Jenjang?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type ProgramStudiMaxOrderByAggregateInput = {
    ProgramStudiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Jenjang?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type ProgramStudiMinOrderByAggregateInput = {
    ProgramStudiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Jenjang?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type CountryScalarRelationFilter = {
    is?: CountryWhereInput
    isNot?: CountryWhereInput
  }

  export type KabupatenListRelationFilter = {
    every?: KabupatenWhereInput
    some?: KabupatenWhereInput
    none?: KabupatenWhereInput
  }

  export type KabupatenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProvinsiCountOrderByAggregateInput = {
    ProvinsiId?: SortOrder
    CountryId?: SortOrder
    Nama?: SortOrder
  }

  export type ProvinsiMaxOrderByAggregateInput = {
    ProvinsiId?: SortOrder
    CountryId?: SortOrder
    Nama?: SortOrder
  }

  export type ProvinsiMinOrderByAggregateInput = {
    ProvinsiId?: SortOrder
    CountryId?: SortOrder
    Nama?: SortOrder
  }

  export type RoleHasPermissionsPermissionIdRoleIdCompoundUniqueInput = {
    PermissionId: string
    RoleId: string
  }

  export type RoleHasPermissionsCountOrderByAggregateInput = {
    PermissionId?: SortOrder
    RoleId?: SortOrder
  }

  export type RoleHasPermissionsMaxOrderByAggregateInput = {
    PermissionId?: SortOrder
    RoleId?: SortOrder
  }

  export type RoleHasPermissionsMinOrderByAggregateInput = {
    PermissionId?: SortOrder
    RoleId?: SortOrder
  }

  export type UserHasRolesListRelationFilter = {
    every?: UserHasRolesWhereInput
    some?: UserHasRolesWhereInput
    none?: UserHasRolesWhereInput
  }

  export type UserHasRolesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleNameGuardNameCompoundUniqueInput = {
    Name: string
    GuardName: string
  }

  export type RoleCountOrderByAggregateInput = {
    RoleId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    Icon?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    RoleId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    Icon?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    RoleId?: SortOrder
    Name?: SortOrder
    GuardName?: SortOrder
    Icon?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenPihakListRelationFilter = {
    every?: SanggahanAssesmenPihakWhereInput
    some?: SanggahanAssesmenPihakWhereInput
    none?: SanggahanAssesmenPihakWhereInput
  }

  export type SanggahanAssesmenPihakOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SanggahanAssesmenCountOrderByAggregateInput = {
    SanggahanAssesmenId?: SortOrder
    PendaftaranId?: SortOrder
    ProsesBanding?: SortOrder
    DiskusiBanding?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenMaxOrderByAggregateInput = {
    SanggahanAssesmenId?: SortOrder
    PendaftaranId?: SortOrder
    ProsesBanding?: SortOrder
    DiskusiBanding?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenMinOrderByAggregateInput = {
    SanggahanAssesmenId?: SortOrder
    PendaftaranId?: SortOrder
    ProsesBanding?: SortOrder
    DiskusiBanding?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenScalarRelationFilter = {
    is?: SanggahanAssesmenWhereInput
    isNot?: SanggahanAssesmenWhereInput
  }

  export type SanggahanAssesmenMkCountOrderByAggregateInput = {
    SanggahanAssesmenMkId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenMkMaxOrderByAggregateInput = {
    SanggahanAssesmenMkId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenMkMinOrderByAggregateInput = {
    SanggahanAssesmenMkId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    MataKuliahMahasiswaId?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenPihakCountOrderByAggregateInput = {
    SanggahanAssesmenPihakId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    NamaPihak?: SortOrder
    JabatanPihak?: SortOrder
    InstansiPihak?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenPihakMaxOrderByAggregateInput = {
    SanggahanAssesmenPihakId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    NamaPihak?: SortOrder
    JabatanPihak?: SortOrder
    InstansiPihak?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SanggahanAssesmenPihakMinOrderByAggregateInput = {
    SanggahanAssesmenPihakId?: SortOrder
    SanggahanAssesmenId?: SortOrder
    NamaPihak?: SortOrder
    JabatanPihak?: SortOrder
    InstansiPihak?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkRektorCountOrderByAggregateInput = {
    SkRektorId?: SortOrder
    NamaSk?: SortOrder
    TahunSk?: SortOrder
    NomorSk?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkRektorAvgOrderByAggregateInput = {
    TahunSk?: SortOrder
  }

  export type SkRektorMaxOrderByAggregateInput = {
    SkRektorId?: SortOrder
    NamaSk?: SortOrder
    TahunSk?: SortOrder
    NomorSk?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkRektorMinOrderByAggregateInput = {
    SkRektorId?: SortOrder
    NamaSk?: SortOrder
    TahunSk?: SortOrder
    NomorSk?: SortOrder
    NamaFile?: SortOrder
    NamaDokumen?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkRektorSumOrderByAggregateInput = {
    TahunSk?: SortOrder
  }

  export type SkRektorScalarRelationFilter = {
    is?: SkRektorWhereInput
    isNot?: SkRektorWhereInput
  }

  export type AssesorMahasiswaScalarRelationFilter = {
    is?: AssesorMahasiswaWhereInput
    isNot?: AssesorMahasiswaWhereInput
  }

  export type SkRektorAssesorSkRektorIdAssesorMahasiswaIdCompoundUniqueInput = {
    SkRektorId: string
    AssesorMahasiswaId: string
  }

  export type SkRektorAssesorCountOrderByAggregateInput = {
    SkRektorId?: SortOrder
    AssesorMahasiswaId?: SortOrder
  }

  export type SkRektorAssesorMaxOrderByAggregateInput = {
    SkRektorId?: SortOrder
    AssesorMahasiswaId?: SortOrder
  }

  export type SkRektorAssesorMinOrderByAggregateInput = {
    SkRektorId?: SortOrder
    AssesorMahasiswaId?: SortOrder
  }

  export type SkRektorMahasiswaSkRektorIdPendaftaranIdCompoundUniqueInput = {
    SkRektorId: string
    PendaftaranId: string
  }

  export type SkRektorMahasiswaCountOrderByAggregateInput = {
    SkRektorId?: SortOrder
    PendaftaranId?: SortOrder
  }

  export type SkRektorMahasiswaMaxOrderByAggregateInput = {
    SkRektorId?: SortOrder
    PendaftaranId?: SortOrder
  }

  export type SkRektorMahasiswaMinOrderByAggregateInput = {
    SkRektorId?: SortOrder
    PendaftaranId?: SortOrder
  }

  export type HasilAssesmenScalarRelationFilter = {
    is?: HasilAssesmenWhereInput
    isNot?: HasilAssesmenWhereInput
  }

  export type SkorAssesmenCountOrderByAggregateInput = {
    SkorAssesmenId?: SortOrder
    HasilAssesmenId?: SortOrder
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
    NilaiHuruf?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkorAssesmenAvgOrderByAggregateInput = {
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
  }

  export type SkorAssesmenMaxOrderByAggregateInput = {
    SkorAssesmenId?: SortOrder
    HasilAssesmenId?: SortOrder
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
    NilaiHuruf?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkorAssesmenMinOrderByAggregateInput = {
    SkorAssesmenId?: SortOrder
    HasilAssesmenId?: SortOrder
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
    NilaiHuruf?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
  }

  export type SkorAssesmenSumOrderByAggregateInput = {
    Portofolio?: SortOrder
    Tulis?: SortOrder
    Wawancara?: SortOrder
    Demo?: SortOrder
    SkorRataRata?: SortOrder
  }

  export type StatusMahasiswaAssesmentHistoryListRelationFilter = {
    every?: StatusMahasiswaAssesmentHistoryWhereInput
    some?: StatusMahasiswaAssesmentHistoryWhereInput
    none?: StatusMahasiswaAssesmentHistoryWhereInput
  }

  export type StatusMahasiswaAssesmentHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StatusMahasiswaAssesmentCountOrderByAggregateInput = {
    StatusMahasiswaAssesmentId?: SortOrder
    NamaStatus?: SortOrder
    Icon?: SortOrder
    Urutan?: SortOrder
    Keterangan?: SortOrder
  }

  export type StatusMahasiswaAssesmentAvgOrderByAggregateInput = {
    Urutan?: SortOrder
  }

  export type StatusMahasiswaAssesmentMaxOrderByAggregateInput = {
    StatusMahasiswaAssesmentId?: SortOrder
    NamaStatus?: SortOrder
    Icon?: SortOrder
    Urutan?: SortOrder
    Keterangan?: SortOrder
  }

  export type StatusMahasiswaAssesmentMinOrderByAggregateInput = {
    StatusMahasiswaAssesmentId?: SortOrder
    NamaStatus?: SortOrder
    Icon?: SortOrder
    Urutan?: SortOrder
    Keterangan?: SortOrder
  }

  export type StatusMahasiswaAssesmentSumOrderByAggregateInput = {
    Urutan?: SortOrder
  }

  export type StatusMahasiswaAssesmentScalarRelationFilter = {
    is?: StatusMahasiswaAssesmentWhereInput
    isNot?: StatusMahasiswaAssesmentWhereInput
  }

  export type StatusMahasiswaAssesmentHistoryCountOrderByAggregateInput = {
    StatusMahasiswaAssesmentHistoryId?: SortOrder
    StatusMahasiswaAssesmentId?: SortOrder
    DaftarUlangId?: SortOrder
    Tanggal?: SortOrder
    Keterangan?: SortOrder
  }

  export type StatusMahasiswaAssesmentHistoryMaxOrderByAggregateInput = {
    StatusMahasiswaAssesmentHistoryId?: SortOrder
    StatusMahasiswaAssesmentId?: SortOrder
    DaftarUlangId?: SortOrder
    Tanggal?: SortOrder
    Keterangan?: SortOrder
  }

  export type StatusMahasiswaAssesmentHistoryMinOrderByAggregateInput = {
    StatusMahasiswaAssesmentHistoryId?: SortOrder
    StatusMahasiswaAssesmentId?: SortOrder
    DaftarUlangId?: SortOrder
    Tanggal?: SortOrder
    Keterangan?: SortOrder
  }

  export type AsesorListRelationFilter = {
    every?: AsesorWhereInput
    some?: AsesorWhereInput
    none?: AsesorWhereInput
  }

  export type AsesorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TipeAsesorCountOrderByAggregateInput = {
    TipeAsesorId?: SortOrder
    Nama?: SortOrder
    Icon?: SortOrder
    Deskripsi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type TipeAsesorMaxOrderByAggregateInput = {
    TipeAsesorId?: SortOrder
    Nama?: SortOrder
    Icon?: SortOrder
    Deskripsi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type TipeAsesorMinOrderByAggregateInput = {
    TipeAsesorId?: SortOrder
    Nama?: SortOrder
    Icon?: SortOrder
    Deskripsi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type ProgramStudiListRelationFilter = {
    every?: ProgramStudiWhereInput
    some?: ProgramStudiWhereInput
    none?: ProgramStudiWhereInput
  }

  export type UniversityJabatanListRelationFilter = {
    every?: UniversityJabatanWhereInput
    some?: UniversityJabatanWhereInput
    none?: UniversityJabatanWhereInput
  }

  export type UniversitySosialMediaListRelationFilter = {
    every?: UniversitySosialMediaWhereInput
    some?: UniversitySosialMediaWhereInput
    none?: UniversitySosialMediaWhereInput
  }

  export type UniversityInformasiListRelationFilter = {
    every?: UniversityInformasiWhereInput
    some?: UniversityInformasiWhereInput
    none?: UniversityInformasiWhereInput
  }

  export type ProgramStudiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityJabatanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversitySosialMediaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityInformasiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityCountOrderByAggregateInput = {
    UniversityId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityMaxOrderByAggregateInput = {
    UniversityId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityMinOrderByAggregateInput = {
    UniversityId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Akreditasi?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversitySosialMediaCountOrderByAggregateInput = {
    UniversitySosialMediaId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Username?: SortOrder
    Icon?: SortOrder
  }

  export type UniversitySosialMediaMaxOrderByAggregateInput = {
    UniversitySosialMediaId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Username?: SortOrder
    Icon?: SortOrder
  }

  export type UniversitySosialMediaMinOrderByAggregateInput = {
    UniversitySosialMediaId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Username?: SortOrder
    Icon?: SortOrder
  }

  export type UniversityInformasiCountOrderByAggregateInput = {
    UniversityInformasiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Informasi?: SortOrder
  }

  export type UniversityInformasiMaxOrderByAggregateInput = {
    UniversityInformasiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Informasi?: SortOrder
  }

  export type UniversityInformasiMinOrderByAggregateInput = {
    UniversityInformasiId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Informasi?: SortOrder
  }

  export type UniversityJabatanOrangListRelationFilter = {
    every?: UniversityJabatanOrangWhereInput
    some?: UniversityJabatanOrangWhereInput
    none?: UniversityJabatanOrangWhereInput
  }

  export type UniversityJabatanOrangOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityJabatanCountOrderByAggregateInput = {
    UniversityJabatanId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityJabatanMaxOrderByAggregateInput = {
    UniversityJabatanId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityJabatanMinOrderByAggregateInput = {
    UniversityJabatanId?: SortOrder
    UniversityId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityJabatanScalarRelationFilter = {
    is?: UniversityJabatanWhereInput
    isNot?: UniversityJabatanWhereInput
  }

  export type UniversityJabatanOrangCountOrderByAggregateInput = {
    UniversityJabatanOrangId?: SortOrder
    UniversityJabatanId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityJabatanOrangMaxOrderByAggregateInput = {
    UniversityJabatanOrangId?: SortOrder
    UniversityJabatanId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UniversityJabatanOrangMinOrderByAggregateInput = {
    UniversityJabatanOrangId?: SortOrder
    UniversityJabatanId?: SortOrder
    Nama?: SortOrder
    Keterangan?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type EnumJenisKelaminFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisKelamin | EnumJenisKelaminFieldRefInput<$PrismaModel>
    in?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisKelaminFilter<$PrismaModel> | $Enums.JenisKelamin
  }

  export type MahasiswaListRelationFilter = {
    every?: MahasiswaWhereInput
    some?: MahasiswaWhereInput
    none?: MahasiswaWhereInput
  }

  export type UserloginListRelationFilter = {
    every?: UserloginWhereInput
    some?: UserloginWhereInput
    none?: UserloginWhereInput
  }

  export type MahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserloginOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    UserId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Email?: SortOrder
    EmailVerifiedAt?: SortOrder
    TempatLahir?: SortOrder
    TanggalLahir?: SortOrder
    JenisKelamin?: SortOrder
    PendidikanTerakhir?: SortOrder
    Avatar?: SortOrder
    Agama?: SortOrder
    Telepon?: SortOrder
    NomorWa?: SortOrder
    NomorHp?: SortOrder
    RememberToken?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    UserId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Email?: SortOrder
    EmailVerifiedAt?: SortOrder
    TempatLahir?: SortOrder
    TanggalLahir?: SortOrder
    JenisKelamin?: SortOrder
    PendidikanTerakhir?: SortOrder
    Avatar?: SortOrder
    Agama?: SortOrder
    Telepon?: SortOrder
    NomorWa?: SortOrder
    NomorHp?: SortOrder
    RememberToken?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    UserId?: SortOrder
    AlamatId?: SortOrder
    Nama?: SortOrder
    Email?: SortOrder
    EmailVerifiedAt?: SortOrder
    TempatLahir?: SortOrder
    TanggalLahir?: SortOrder
    JenisKelamin?: SortOrder
    PendidikanTerakhir?: SortOrder
    Avatar?: SortOrder
    Agama?: SortOrder
    Telepon?: SortOrder
    NomorWa?: SortOrder
    NomorHp?: SortOrder
    RememberToken?: SortOrder
    CreatedAt?: SortOrder
    UpdatedAt?: SortOrder
    DeletedAt?: SortOrder
  }

  export type EnumJenisKelaminWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisKelamin | EnumJenisKelaminFieldRefInput<$PrismaModel>
    in?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisKelaminWithAggregatesFilter<$PrismaModel> | $Enums.JenisKelamin
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenisKelaminFilter<$PrismaModel>
    _max?: NestedEnumJenisKelaminFilter<$PrismaModel>
  }

  export type UserloginCountOrderByAggregateInput = {
    UserloginId?: SortOrder
    UserId?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Credential?: SortOrder
  }

  export type UserloginMaxOrderByAggregateInput = {
    UserloginId?: SortOrder
    UserId?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Credential?: SortOrder
  }

  export type UserloginMinOrderByAggregateInput = {
    UserloginId?: SortOrder
    UserId?: SortOrder
    Username?: SortOrder
    Password?: SortOrder
    Credential?: SortOrder
  }

  export type DesaCreateNestedOneWithoutAlamatInput = {
    create?: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: DesaCreateOrConnectWithoutAlamatInput
    connect?: DesaWhereUniqueInput
  }

  export type InstitusiLamaCreateNestedManyWithoutAlamatInput = {
    create?: XOR<InstitusiLamaCreateWithoutAlamatInput, InstitusiLamaUncheckedCreateWithoutAlamatInput> | InstitusiLamaCreateWithoutAlamatInput[] | InstitusiLamaUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutAlamatInput | InstitusiLamaCreateOrConnectWithoutAlamatInput[]
    createMany?: InstitusiLamaCreateManyAlamatInputEnvelope
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
  }

  export type UniversityCreateNestedManyWithoutAlamatInput = {
    create?: XOR<UniversityCreateWithoutAlamatInput, UniversityUncheckedCreateWithoutAlamatInput> | UniversityCreateWithoutAlamatInput[] | UniversityUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutAlamatInput | UniversityCreateOrConnectWithoutAlamatInput[]
    createMany?: UniversityCreateManyAlamatInputEnvelope
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutAlamatInput = {
    create?: XOR<UserCreateWithoutAlamatInput, UserUncheckedCreateWithoutAlamatInput> | UserCreateWithoutAlamatInput[] | UserUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAlamatInput | UserCreateOrConnectWithoutAlamatInput[]
    createMany?: UserCreateManyAlamatInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type InstitusiLamaUncheckedCreateNestedManyWithoutAlamatInput = {
    create?: XOR<InstitusiLamaCreateWithoutAlamatInput, InstitusiLamaUncheckedCreateWithoutAlamatInput> | InstitusiLamaCreateWithoutAlamatInput[] | InstitusiLamaUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutAlamatInput | InstitusiLamaCreateOrConnectWithoutAlamatInput[]
    createMany?: InstitusiLamaCreateManyAlamatInputEnvelope
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
  }

  export type UniversityUncheckedCreateNestedManyWithoutAlamatInput = {
    create?: XOR<UniversityCreateWithoutAlamatInput, UniversityUncheckedCreateWithoutAlamatInput> | UniversityCreateWithoutAlamatInput[] | UniversityUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutAlamatInput | UniversityCreateOrConnectWithoutAlamatInput[]
    createMany?: UniversityCreateManyAlamatInputEnvelope
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutAlamatInput = {
    create?: XOR<UserCreateWithoutAlamatInput, UserUncheckedCreateWithoutAlamatInput> | UserCreateWithoutAlamatInput[] | UserUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAlamatInput | UserCreateOrConnectWithoutAlamatInput[]
    createMany?: UserCreateManyAlamatInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DesaUpdateOneRequiredWithoutAlamatNestedInput = {
    create?: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
    connectOrCreate?: DesaCreateOrConnectWithoutAlamatInput
    upsert?: DesaUpsertWithoutAlamatInput
    connect?: DesaWhereUniqueInput
    update?: XOR<XOR<DesaUpdateToOneWithWhereWithoutAlamatInput, DesaUpdateWithoutAlamatInput>, DesaUncheckedUpdateWithoutAlamatInput>
  }

  export type InstitusiLamaUpdateManyWithoutAlamatNestedInput = {
    create?: XOR<InstitusiLamaCreateWithoutAlamatInput, InstitusiLamaUncheckedCreateWithoutAlamatInput> | InstitusiLamaCreateWithoutAlamatInput[] | InstitusiLamaUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutAlamatInput | InstitusiLamaCreateOrConnectWithoutAlamatInput[]
    upsert?: InstitusiLamaUpsertWithWhereUniqueWithoutAlamatInput | InstitusiLamaUpsertWithWhereUniqueWithoutAlamatInput[]
    createMany?: InstitusiLamaCreateManyAlamatInputEnvelope
    set?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    disconnect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    delete?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    update?: InstitusiLamaUpdateWithWhereUniqueWithoutAlamatInput | InstitusiLamaUpdateWithWhereUniqueWithoutAlamatInput[]
    updateMany?: InstitusiLamaUpdateManyWithWhereWithoutAlamatInput | InstitusiLamaUpdateManyWithWhereWithoutAlamatInput[]
    deleteMany?: InstitusiLamaScalarWhereInput | InstitusiLamaScalarWhereInput[]
  }

  export type UniversityUpdateManyWithoutAlamatNestedInput = {
    create?: XOR<UniversityCreateWithoutAlamatInput, UniversityUncheckedCreateWithoutAlamatInput> | UniversityCreateWithoutAlamatInput[] | UniversityUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutAlamatInput | UniversityCreateOrConnectWithoutAlamatInput[]
    upsert?: UniversityUpsertWithWhereUniqueWithoutAlamatInput | UniversityUpsertWithWhereUniqueWithoutAlamatInput[]
    createMany?: UniversityCreateManyAlamatInputEnvelope
    set?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    disconnect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    delete?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    update?: UniversityUpdateWithWhereUniqueWithoutAlamatInput | UniversityUpdateWithWhereUniqueWithoutAlamatInput[]
    updateMany?: UniversityUpdateManyWithWhereWithoutAlamatInput | UniversityUpdateManyWithWhereWithoutAlamatInput[]
    deleteMany?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
  }

  export type UserUpdateManyWithoutAlamatNestedInput = {
    create?: XOR<UserCreateWithoutAlamatInput, UserUncheckedCreateWithoutAlamatInput> | UserCreateWithoutAlamatInput[] | UserUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAlamatInput | UserCreateOrConnectWithoutAlamatInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAlamatInput | UserUpsertWithWhereUniqueWithoutAlamatInput[]
    createMany?: UserCreateManyAlamatInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAlamatInput | UserUpdateWithWhereUniqueWithoutAlamatInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAlamatInput | UserUpdateManyWithWhereWithoutAlamatInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type InstitusiLamaUncheckedUpdateManyWithoutAlamatNestedInput = {
    create?: XOR<InstitusiLamaCreateWithoutAlamatInput, InstitusiLamaUncheckedCreateWithoutAlamatInput> | InstitusiLamaCreateWithoutAlamatInput[] | InstitusiLamaUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutAlamatInput | InstitusiLamaCreateOrConnectWithoutAlamatInput[]
    upsert?: InstitusiLamaUpsertWithWhereUniqueWithoutAlamatInput | InstitusiLamaUpsertWithWhereUniqueWithoutAlamatInput[]
    createMany?: InstitusiLamaCreateManyAlamatInputEnvelope
    set?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    disconnect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    delete?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    update?: InstitusiLamaUpdateWithWhereUniqueWithoutAlamatInput | InstitusiLamaUpdateWithWhereUniqueWithoutAlamatInput[]
    updateMany?: InstitusiLamaUpdateManyWithWhereWithoutAlamatInput | InstitusiLamaUpdateManyWithWhereWithoutAlamatInput[]
    deleteMany?: InstitusiLamaScalarWhereInput | InstitusiLamaScalarWhereInput[]
  }

  export type UniversityUncheckedUpdateManyWithoutAlamatNestedInput = {
    create?: XOR<UniversityCreateWithoutAlamatInput, UniversityUncheckedCreateWithoutAlamatInput> | UniversityCreateWithoutAlamatInput[] | UniversityUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutAlamatInput | UniversityCreateOrConnectWithoutAlamatInput[]
    upsert?: UniversityUpsertWithWhereUniqueWithoutAlamatInput | UniversityUpsertWithWhereUniqueWithoutAlamatInput[]
    createMany?: UniversityCreateManyAlamatInputEnvelope
    set?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    disconnect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    delete?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    update?: UniversityUpdateWithWhereUniqueWithoutAlamatInput | UniversityUpdateWithWhereUniqueWithoutAlamatInput[]
    updateMany?: UniversityUpdateManyWithWhereWithoutAlamatInput | UniversityUpdateManyWithWhereWithoutAlamatInput[]
    deleteMany?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutAlamatNestedInput = {
    create?: XOR<UserCreateWithoutAlamatInput, UserUncheckedCreateWithoutAlamatInput> | UserCreateWithoutAlamatInput[] | UserUncheckedCreateWithoutAlamatInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAlamatInput | UserCreateOrConnectWithoutAlamatInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAlamatInput | UserUpsertWithWhereUniqueWithoutAlamatInput[]
    createMany?: UserCreateManyAlamatInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAlamatInput | UserUpdateWithWhereUniqueWithoutAlamatInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAlamatInput | UserUpdateManyWithWhereWithoutAlamatInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type TipeAsesorCreateNestedOneWithoutAsesorInput = {
    create?: XOR<TipeAsesorCreateWithoutAsesorInput, TipeAsesorUncheckedCreateWithoutAsesorInput>
    connectOrCreate?: TipeAsesorCreateOrConnectWithoutAsesorInput
    connect?: TipeAsesorWhereUniqueInput
  }

  export type AsesorAkademikCreateNestedManyWithoutAsesorInput = {
    create?: XOR<AsesorAkademikCreateWithoutAsesorInput, AsesorAkademikUncheckedCreateWithoutAsesorInput> | AsesorAkademikCreateWithoutAsesorInput[] | AsesorAkademikUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorAkademikCreateOrConnectWithoutAsesorInput | AsesorAkademikCreateOrConnectWithoutAsesorInput[]
    createMany?: AsesorAkademikCreateManyAsesorInputEnvelope
    connect?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
  }

  export type AsesorPraktisiCreateNestedManyWithoutAsesorInput = {
    create?: XOR<AsesorPraktisiCreateWithoutAsesorInput, AsesorPraktisiUncheckedCreateWithoutAsesorInput> | AsesorPraktisiCreateWithoutAsesorInput[] | AsesorPraktisiUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorPraktisiCreateOrConnectWithoutAsesorInput | AsesorPraktisiCreateOrConnectWithoutAsesorInput[]
    createMany?: AsesorPraktisiCreateManyAsesorInputEnvelope
    connect?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
  }

  export type AssesorMahasiswaCreateNestedManyWithoutAsesorInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutAsesorInput, AssesorMahasiswaUncheckedCreateWithoutAsesorInput> | AssesorMahasiswaCreateWithoutAsesorInput[] | AssesorMahasiswaUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutAsesorInput | AssesorMahasiswaCreateOrConnectWithoutAsesorInput[]
    createMany?: AssesorMahasiswaCreateManyAsesorInputEnvelope
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
  }

  export type AsesorAkademikUncheckedCreateNestedManyWithoutAsesorInput = {
    create?: XOR<AsesorAkademikCreateWithoutAsesorInput, AsesorAkademikUncheckedCreateWithoutAsesorInput> | AsesorAkademikCreateWithoutAsesorInput[] | AsesorAkademikUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorAkademikCreateOrConnectWithoutAsesorInput | AsesorAkademikCreateOrConnectWithoutAsesorInput[]
    createMany?: AsesorAkademikCreateManyAsesorInputEnvelope
    connect?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
  }

  export type AsesorPraktisiUncheckedCreateNestedManyWithoutAsesorInput = {
    create?: XOR<AsesorPraktisiCreateWithoutAsesorInput, AsesorPraktisiUncheckedCreateWithoutAsesorInput> | AsesorPraktisiCreateWithoutAsesorInput[] | AsesorPraktisiUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorPraktisiCreateOrConnectWithoutAsesorInput | AsesorPraktisiCreateOrConnectWithoutAsesorInput[]
    createMany?: AsesorPraktisiCreateManyAsesorInputEnvelope
    connect?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
  }

  export type AssesorMahasiswaUncheckedCreateNestedManyWithoutAsesorInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutAsesorInput, AssesorMahasiswaUncheckedCreateWithoutAsesorInput> | AssesorMahasiswaCreateWithoutAsesorInput[] | AssesorMahasiswaUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutAsesorInput | AssesorMahasiswaCreateOrConnectWithoutAsesorInput[]
    createMany?: AssesorMahasiswaCreateManyAsesorInputEnvelope
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type TipeAsesorUpdateOneRequiredWithoutAsesorNestedInput = {
    create?: XOR<TipeAsesorCreateWithoutAsesorInput, TipeAsesorUncheckedCreateWithoutAsesorInput>
    connectOrCreate?: TipeAsesorCreateOrConnectWithoutAsesorInput
    upsert?: TipeAsesorUpsertWithoutAsesorInput
    connect?: TipeAsesorWhereUniqueInput
    update?: XOR<XOR<TipeAsesorUpdateToOneWithWhereWithoutAsesorInput, TipeAsesorUpdateWithoutAsesorInput>, TipeAsesorUncheckedUpdateWithoutAsesorInput>
  }

  export type AsesorAkademikUpdateManyWithoutAsesorNestedInput = {
    create?: XOR<AsesorAkademikCreateWithoutAsesorInput, AsesorAkademikUncheckedCreateWithoutAsesorInput> | AsesorAkademikCreateWithoutAsesorInput[] | AsesorAkademikUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorAkademikCreateOrConnectWithoutAsesorInput | AsesorAkademikCreateOrConnectWithoutAsesorInput[]
    upsert?: AsesorAkademikUpsertWithWhereUniqueWithoutAsesorInput | AsesorAkademikUpsertWithWhereUniqueWithoutAsesorInput[]
    createMany?: AsesorAkademikCreateManyAsesorInputEnvelope
    set?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    disconnect?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    delete?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    connect?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    update?: AsesorAkademikUpdateWithWhereUniqueWithoutAsesorInput | AsesorAkademikUpdateWithWhereUniqueWithoutAsesorInput[]
    updateMany?: AsesorAkademikUpdateManyWithWhereWithoutAsesorInput | AsesorAkademikUpdateManyWithWhereWithoutAsesorInput[]
    deleteMany?: AsesorAkademikScalarWhereInput | AsesorAkademikScalarWhereInput[]
  }

  export type AsesorPraktisiUpdateManyWithoutAsesorNestedInput = {
    create?: XOR<AsesorPraktisiCreateWithoutAsesorInput, AsesorPraktisiUncheckedCreateWithoutAsesorInput> | AsesorPraktisiCreateWithoutAsesorInput[] | AsesorPraktisiUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorPraktisiCreateOrConnectWithoutAsesorInput | AsesorPraktisiCreateOrConnectWithoutAsesorInput[]
    upsert?: AsesorPraktisiUpsertWithWhereUniqueWithoutAsesorInput | AsesorPraktisiUpsertWithWhereUniqueWithoutAsesorInput[]
    createMany?: AsesorPraktisiCreateManyAsesorInputEnvelope
    set?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    disconnect?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    delete?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    connect?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    update?: AsesorPraktisiUpdateWithWhereUniqueWithoutAsesorInput | AsesorPraktisiUpdateWithWhereUniqueWithoutAsesorInput[]
    updateMany?: AsesorPraktisiUpdateManyWithWhereWithoutAsesorInput | AsesorPraktisiUpdateManyWithWhereWithoutAsesorInput[]
    deleteMany?: AsesorPraktisiScalarWhereInput | AsesorPraktisiScalarWhereInput[]
  }

  export type AssesorMahasiswaUpdateManyWithoutAsesorNestedInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutAsesorInput, AssesorMahasiswaUncheckedCreateWithoutAsesorInput> | AssesorMahasiswaCreateWithoutAsesorInput[] | AssesorMahasiswaUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutAsesorInput | AssesorMahasiswaCreateOrConnectWithoutAsesorInput[]
    upsert?: AssesorMahasiswaUpsertWithWhereUniqueWithoutAsesorInput | AssesorMahasiswaUpsertWithWhereUniqueWithoutAsesorInput[]
    createMany?: AssesorMahasiswaCreateManyAsesorInputEnvelope
    set?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    disconnect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    delete?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    update?: AssesorMahasiswaUpdateWithWhereUniqueWithoutAsesorInput | AssesorMahasiswaUpdateWithWhereUniqueWithoutAsesorInput[]
    updateMany?: AssesorMahasiswaUpdateManyWithWhereWithoutAsesorInput | AssesorMahasiswaUpdateManyWithWhereWithoutAsesorInput[]
    deleteMany?: AssesorMahasiswaScalarWhereInput | AssesorMahasiswaScalarWhereInput[]
  }

  export type AsesorAkademikUncheckedUpdateManyWithoutAsesorNestedInput = {
    create?: XOR<AsesorAkademikCreateWithoutAsesorInput, AsesorAkademikUncheckedCreateWithoutAsesorInput> | AsesorAkademikCreateWithoutAsesorInput[] | AsesorAkademikUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorAkademikCreateOrConnectWithoutAsesorInput | AsesorAkademikCreateOrConnectWithoutAsesorInput[]
    upsert?: AsesorAkademikUpsertWithWhereUniqueWithoutAsesorInput | AsesorAkademikUpsertWithWhereUniqueWithoutAsesorInput[]
    createMany?: AsesorAkademikCreateManyAsesorInputEnvelope
    set?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    disconnect?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    delete?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    connect?: AsesorAkademikWhereUniqueInput | AsesorAkademikWhereUniqueInput[]
    update?: AsesorAkademikUpdateWithWhereUniqueWithoutAsesorInput | AsesorAkademikUpdateWithWhereUniqueWithoutAsesorInput[]
    updateMany?: AsesorAkademikUpdateManyWithWhereWithoutAsesorInput | AsesorAkademikUpdateManyWithWhereWithoutAsesorInput[]
    deleteMany?: AsesorAkademikScalarWhereInput | AsesorAkademikScalarWhereInput[]
  }

  export type AsesorPraktisiUncheckedUpdateManyWithoutAsesorNestedInput = {
    create?: XOR<AsesorPraktisiCreateWithoutAsesorInput, AsesorPraktisiUncheckedCreateWithoutAsesorInput> | AsesorPraktisiCreateWithoutAsesorInput[] | AsesorPraktisiUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AsesorPraktisiCreateOrConnectWithoutAsesorInput | AsesorPraktisiCreateOrConnectWithoutAsesorInput[]
    upsert?: AsesorPraktisiUpsertWithWhereUniqueWithoutAsesorInput | AsesorPraktisiUpsertWithWhereUniqueWithoutAsesorInput[]
    createMany?: AsesorPraktisiCreateManyAsesorInputEnvelope
    set?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    disconnect?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    delete?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    connect?: AsesorPraktisiWhereUniqueInput | AsesorPraktisiWhereUniqueInput[]
    update?: AsesorPraktisiUpdateWithWhereUniqueWithoutAsesorInput | AsesorPraktisiUpdateWithWhereUniqueWithoutAsesorInput[]
    updateMany?: AsesorPraktisiUpdateManyWithWhereWithoutAsesorInput | AsesorPraktisiUpdateManyWithWhereWithoutAsesorInput[]
    deleteMany?: AsesorPraktisiScalarWhereInput | AsesorPraktisiScalarWhereInput[]
  }

  export type AssesorMahasiswaUncheckedUpdateManyWithoutAsesorNestedInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutAsesorInput, AssesorMahasiswaUncheckedCreateWithoutAsesorInput> | AssesorMahasiswaCreateWithoutAsesorInput[] | AssesorMahasiswaUncheckedCreateWithoutAsesorInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutAsesorInput | AssesorMahasiswaCreateOrConnectWithoutAsesorInput[]
    upsert?: AssesorMahasiswaUpsertWithWhereUniqueWithoutAsesorInput | AssesorMahasiswaUpsertWithWhereUniqueWithoutAsesorInput[]
    createMany?: AssesorMahasiswaCreateManyAsesorInputEnvelope
    set?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    disconnect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    delete?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    update?: AssesorMahasiswaUpdateWithWhereUniqueWithoutAsesorInput | AssesorMahasiswaUpdateWithWhereUniqueWithoutAsesorInput[]
    updateMany?: AssesorMahasiswaUpdateManyWithWhereWithoutAsesorInput | AssesorMahasiswaUpdateManyWithWhereWithoutAsesorInput[]
    deleteMany?: AssesorMahasiswaScalarWhereInput | AssesorMahasiswaScalarWhereInput[]
  }

  export type AsesorCreateNestedOneWithoutAsesorAkademikInput = {
    create?: XOR<AsesorCreateWithoutAsesorAkademikInput, AsesorUncheckedCreateWithoutAsesorAkademikInput>
    connectOrCreate?: AsesorCreateOrConnectWithoutAsesorAkademikInput
    connect?: AsesorWhereUniqueInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateNestedManyWithoutAsesorAkademikInput = {
    create?: XOR<AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput> | AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput[] | AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput[]
    connectOrCreate?: AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput[]
    createMany?: AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInputEnvelope
    connect?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedCreateNestedManyWithoutAsesorAkademikInput = {
    create?: XOR<AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput> | AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput[] | AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput[]
    connectOrCreate?: AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput[]
    createMany?: AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInputEnvelope
    connect?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type AsesorUpdateOneRequiredWithoutAsesorAkademikNestedInput = {
    create?: XOR<AsesorCreateWithoutAsesorAkademikInput, AsesorUncheckedCreateWithoutAsesorAkademikInput>
    connectOrCreate?: AsesorCreateOrConnectWithoutAsesorAkademikInput
    upsert?: AsesorUpsertWithoutAsesorAkademikInput
    connect?: AsesorWhereUniqueInput
    update?: XOR<XOR<AsesorUpdateToOneWithWhereWithoutAsesorAkademikInput, AsesorUpdateWithoutAsesorAkademikInput>, AsesorUncheckedUpdateWithoutAsesorAkademikInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpdateManyWithoutAsesorAkademikNestedInput = {
    create?: XOR<AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput> | AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput[] | AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput[]
    connectOrCreate?: AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput[]
    upsert?: AsesorAkademikKeanggotaanAsosiasiUpsertWithWhereUniqueWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiUpsertWithWhereUniqueWithoutAsesorAkademikInput[]
    createMany?: AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInputEnvelope
    set?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    disconnect?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    delete?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    connect?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    update?: AsesorAkademikKeanggotaanAsosiasiUpdateWithWhereUniqueWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiUpdateWithWhereUniqueWithoutAsesorAkademikInput[]
    updateMany?: AsesorAkademikKeanggotaanAsosiasiUpdateManyWithWhereWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiUpdateManyWithWhereWithoutAsesorAkademikInput[]
    deleteMany?: AsesorAkademikKeanggotaanAsosiasiScalarWhereInput | AsesorAkademikKeanggotaanAsosiasiScalarWhereInput[]
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyWithoutAsesorAkademikNestedInput = {
    create?: XOR<AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput> | AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput[] | AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput[]
    connectOrCreate?: AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput[]
    upsert?: AsesorAkademikKeanggotaanAsosiasiUpsertWithWhereUniqueWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiUpsertWithWhereUniqueWithoutAsesorAkademikInput[]
    createMany?: AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInputEnvelope
    set?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    disconnect?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    delete?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    connect?: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput | AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput[]
    update?: AsesorAkademikKeanggotaanAsosiasiUpdateWithWhereUniqueWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiUpdateWithWhereUniqueWithoutAsesorAkademikInput[]
    updateMany?: AsesorAkademikKeanggotaanAsosiasiUpdateManyWithWhereWithoutAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiUpdateManyWithWhereWithoutAsesorAkademikInput[]
    deleteMany?: AsesorAkademikKeanggotaanAsosiasiScalarWhereInput | AsesorAkademikKeanggotaanAsosiasiScalarWhereInput[]
  }

  export type AsesorAkademikCreateNestedOneWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    create?: XOR<AsesorAkademikCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUncheckedCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
    connectOrCreate?: AsesorAkademikCreateOrConnectWithoutAsesorAkademikKeanggotaanAsosiasiInput
    connect?: AsesorAkademikWhereUniqueInput
  }

  export type AsesorAkademikUpdateOneRequiredWithoutAsesorAkademikKeanggotaanAsosiasiNestedInput = {
    create?: XOR<AsesorAkademikCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUncheckedCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
    connectOrCreate?: AsesorAkademikCreateOrConnectWithoutAsesorAkademikKeanggotaanAsosiasiInput
    upsert?: AsesorAkademikUpsertWithoutAsesorAkademikKeanggotaanAsosiasiInput
    connect?: AsesorAkademikWhereUniqueInput
    update?: XOR<XOR<AsesorAkademikUpdateToOneWithWhereWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput>, AsesorAkademikUncheckedUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
  }

  export type AsesorCreateNestedOneWithoutAsesorPraktisiInput = {
    create?: XOR<AsesorCreateWithoutAsesorPraktisiInput, AsesorUncheckedCreateWithoutAsesorPraktisiInput>
    connectOrCreate?: AsesorCreateOrConnectWithoutAsesorPraktisiInput
    connect?: AsesorWhereUniqueInput
  }

  export type AsesorUpdateOneRequiredWithoutAsesorPraktisiNestedInput = {
    create?: XOR<AsesorCreateWithoutAsesorPraktisiInput, AsesorUncheckedCreateWithoutAsesorPraktisiInput>
    connectOrCreate?: AsesorCreateOrConnectWithoutAsesorPraktisiInput
    upsert?: AsesorUpsertWithoutAsesorPraktisiInput
    connect?: AsesorWhereUniqueInput
    update?: XOR<XOR<AsesorUpdateToOneWithWhereWithoutAsesorPraktisiInput, AsesorUpdateWithoutAsesorPraktisiInput>, AsesorUncheckedUpdateWithoutAsesorPraktisiInput>
  }

  export type AsesorCreateNestedOneWithoutAssesorMahasiswaInput = {
    create?: XOR<AsesorCreateWithoutAssesorMahasiswaInput, AsesorUncheckedCreateWithoutAssesorMahasiswaInput>
    connectOrCreate?: AsesorCreateOrConnectWithoutAssesorMahasiswaInput
    connect?: AsesorWhereUniqueInput
  }

  export type PendaftaranCreateNestedOneWithoutAssesorMahasiswaInput = {
    create?: XOR<PendaftaranCreateWithoutAssesorMahasiswaInput, PendaftaranUncheckedCreateWithoutAssesorMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutAssesorMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type SkRektorAssesorCreateNestedManyWithoutAssesorMahasiswaInput = {
    create?: XOR<SkRektorAssesorCreateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput> | SkRektorAssesorCreateWithoutAssesorMahasiswaInput[] | SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput | SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput[]
    createMany?: SkRektorAssesorCreateManyAssesorMahasiswaInputEnvelope
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
  }

  export type SkRektorAssesorUncheckedCreateNestedManyWithoutAssesorMahasiswaInput = {
    create?: XOR<SkRektorAssesorCreateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput> | SkRektorAssesorCreateWithoutAssesorMahasiswaInput[] | SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput | SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput[]
    createMany?: SkRektorAssesorCreateManyAssesorMahasiswaInputEnvelope
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type AsesorUpdateOneRequiredWithoutAssesorMahasiswaNestedInput = {
    create?: XOR<AsesorCreateWithoutAssesorMahasiswaInput, AsesorUncheckedCreateWithoutAssesorMahasiswaInput>
    connectOrCreate?: AsesorCreateOrConnectWithoutAssesorMahasiswaInput
    upsert?: AsesorUpsertWithoutAssesorMahasiswaInput
    connect?: AsesorWhereUniqueInput
    update?: XOR<XOR<AsesorUpdateToOneWithWhereWithoutAssesorMahasiswaInput, AsesorUpdateWithoutAssesorMahasiswaInput>, AsesorUncheckedUpdateWithoutAssesorMahasiswaInput>
  }

  export type PendaftaranUpdateOneRequiredWithoutAssesorMahasiswaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutAssesorMahasiswaInput, PendaftaranUncheckedCreateWithoutAssesorMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutAssesorMahasiswaInput
    upsert?: PendaftaranUpsertWithoutAssesorMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutAssesorMahasiswaInput, PendaftaranUpdateWithoutAssesorMahasiswaInput>, PendaftaranUncheckedUpdateWithoutAssesorMahasiswaInput>
  }

  export type SkRektorAssesorUpdateManyWithoutAssesorMahasiswaNestedInput = {
    create?: XOR<SkRektorAssesorCreateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput> | SkRektorAssesorCreateWithoutAssesorMahasiswaInput[] | SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput | SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput[]
    upsert?: SkRektorAssesorUpsertWithWhereUniqueWithoutAssesorMahasiswaInput | SkRektorAssesorUpsertWithWhereUniqueWithoutAssesorMahasiswaInput[]
    createMany?: SkRektorAssesorCreateManyAssesorMahasiswaInputEnvelope
    set?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    disconnect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    delete?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    update?: SkRektorAssesorUpdateWithWhereUniqueWithoutAssesorMahasiswaInput | SkRektorAssesorUpdateWithWhereUniqueWithoutAssesorMahasiswaInput[]
    updateMany?: SkRektorAssesorUpdateManyWithWhereWithoutAssesorMahasiswaInput | SkRektorAssesorUpdateManyWithWhereWithoutAssesorMahasiswaInput[]
    deleteMany?: SkRektorAssesorScalarWhereInput | SkRektorAssesorScalarWhereInput[]
  }

  export type SkRektorAssesorUncheckedUpdateManyWithoutAssesorMahasiswaNestedInput = {
    create?: XOR<SkRektorAssesorCreateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput> | SkRektorAssesorCreateWithoutAssesorMahasiswaInput[] | SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput | SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput[]
    upsert?: SkRektorAssesorUpsertWithWhereUniqueWithoutAssesorMahasiswaInput | SkRektorAssesorUpsertWithWhereUniqueWithoutAssesorMahasiswaInput[]
    createMany?: SkRektorAssesorCreateManyAssesorMahasiswaInputEnvelope
    set?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    disconnect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    delete?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    update?: SkRektorAssesorUpdateWithWhereUniqueWithoutAssesorMahasiswaInput | SkRektorAssesorUpdateWithWhereUniqueWithoutAssesorMahasiswaInput[]
    updateMany?: SkRektorAssesorUpdateManyWithWhereWithoutAssesorMahasiswaInput | SkRektorAssesorUpdateManyWithWhereWithoutAssesorMahasiswaInput[]
    deleteMany?: SkRektorAssesorScalarWhereInput | SkRektorAssesorScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutBuktiFormInput = {
    create?: XOR<PendaftaranCreateWithoutBuktiFormInput, PendaftaranUncheckedCreateWithoutBuktiFormInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutBuktiFormInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type JenisDokumenCreateNestedOneWithoutBuktiFormInput = {
    create?: XOR<JenisDokumenCreateWithoutBuktiFormInput, JenisDokumenUncheckedCreateWithoutBuktiFormInput>
    connectOrCreate?: JenisDokumenCreateOrConnectWithoutBuktiFormInput
    connect?: JenisDokumenWhereUniqueInput
  }

  export type BuktiFormEvaluasiDiriCreateNestedManyWithoutBuktiFormInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput> | BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyBuktiFormInputEnvelope
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
  }

  export type BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutBuktiFormInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput> | BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyBuktiFormInputEnvelope
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
  }

  export type PendaftaranUpdateOneRequiredWithoutBuktiFormNestedInput = {
    create?: XOR<PendaftaranCreateWithoutBuktiFormInput, PendaftaranUncheckedCreateWithoutBuktiFormInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutBuktiFormInput
    upsert?: PendaftaranUpsertWithoutBuktiFormInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutBuktiFormInput, PendaftaranUpdateWithoutBuktiFormInput>, PendaftaranUncheckedUpdateWithoutBuktiFormInput>
  }

  export type JenisDokumenUpdateOneRequiredWithoutBuktiFormNestedInput = {
    create?: XOR<JenisDokumenCreateWithoutBuktiFormInput, JenisDokumenUncheckedCreateWithoutBuktiFormInput>
    connectOrCreate?: JenisDokumenCreateOrConnectWithoutBuktiFormInput
    upsert?: JenisDokumenUpsertWithoutBuktiFormInput
    connect?: JenisDokumenWhereUniqueInput
    update?: XOR<XOR<JenisDokumenUpdateToOneWithWhereWithoutBuktiFormInput, JenisDokumenUpdateWithoutBuktiFormInput>, JenisDokumenUncheckedUpdateWithoutBuktiFormInput>
  }

  export type BuktiFormEvaluasiDiriUpdateManyWithoutBuktiFormNestedInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput> | BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput[]
    upsert?: BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutBuktiFormInput | BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutBuktiFormInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyBuktiFormInputEnvelope
    set?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    disconnect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    delete?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    update?: BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutBuktiFormInput | BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutBuktiFormInput[]
    updateMany?: BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutBuktiFormInput | BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutBuktiFormInput[]
    deleteMany?: BuktiFormEvaluasiDiriScalarWhereInput | BuktiFormEvaluasiDiriScalarWhereInput[]
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutBuktiFormNestedInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput> | BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput[]
    upsert?: BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutBuktiFormInput | BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutBuktiFormInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyBuktiFormInputEnvelope
    set?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    disconnect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    delete?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    update?: BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutBuktiFormInput | BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutBuktiFormInput[]
    updateMany?: BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutBuktiFormInput | BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutBuktiFormInput[]
    deleteMany?: BuktiFormEvaluasiDiriScalarWhereInput | BuktiFormEvaluasiDiriScalarWhereInput[]
  }

  export type BuktiFormCreateNestedOneWithoutBuktiFormEvaluasiDiriInput = {
    create?: XOR<BuktiFormCreateWithoutBuktiFormEvaluasiDiriInput, BuktiFormUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
    connectOrCreate?: BuktiFormCreateOrConnectWithoutBuktiFormEvaluasiDiriInput
    connect?: BuktiFormWhereUniqueInput
  }

  export type EvaluasiDiriCreateNestedOneWithoutBuktiFormEvaluasiDiriInput = {
    create?: XOR<EvaluasiDiriCreateWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutBuktiFormEvaluasiDiriInput
    connect?: EvaluasiDiriWhereUniqueInput
  }

  export type BuktiFormUpdateOneRequiredWithoutBuktiFormEvaluasiDiriNestedInput = {
    create?: XOR<BuktiFormCreateWithoutBuktiFormEvaluasiDiriInput, BuktiFormUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
    connectOrCreate?: BuktiFormCreateOrConnectWithoutBuktiFormEvaluasiDiriInput
    upsert?: BuktiFormUpsertWithoutBuktiFormEvaluasiDiriInput
    connect?: BuktiFormWhereUniqueInput
    update?: XOR<XOR<BuktiFormUpdateToOneWithWhereWithoutBuktiFormEvaluasiDiriInput, BuktiFormUpdateWithoutBuktiFormEvaluasiDiriInput>, BuktiFormUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput>
  }

  export type EvaluasiDiriUpdateOneRequiredWithoutBuktiFormEvaluasiDiriNestedInput = {
    create?: XOR<EvaluasiDiriCreateWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutBuktiFormEvaluasiDiriInput
    upsert?: EvaluasiDiriUpsertWithoutBuktiFormEvaluasiDiriInput
    connect?: EvaluasiDiriWhereUniqueInput
    update?: XOR<XOR<EvaluasiDiriUpdateToOneWithWhereWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUpdateWithoutBuktiFormEvaluasiDiriInput>, EvaluasiDiriUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput>
  }

  export type MataKuliahCreateNestedOneWithoutCapaianPembelajaranInput = {
    create?: XOR<MataKuliahCreateWithoutCapaianPembelajaranInput, MataKuliahUncheckedCreateWithoutCapaianPembelajaranInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutCapaianPembelajaranInput
    connect?: MataKuliahWhereUniqueInput
  }

  export type EvaluasiDiriCreateNestedManyWithoutCapaianPembelajaranInput = {
    create?: XOR<EvaluasiDiriCreateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput> | EvaluasiDiriCreateWithoutCapaianPembelajaranInput[] | EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput | EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput[]
    createMany?: EvaluasiDiriCreateManyCapaianPembelajaranInputEnvelope
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
  }

  export type EvaluasiDiriUncheckedCreateNestedManyWithoutCapaianPembelajaranInput = {
    create?: XOR<EvaluasiDiriCreateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput> | EvaluasiDiriCreateWithoutCapaianPembelajaranInput[] | EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput | EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput[]
    createMany?: EvaluasiDiriCreateManyCapaianPembelajaranInputEnvelope
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
  }

  export type MataKuliahUpdateOneRequiredWithoutCapaianPembelajaranNestedInput = {
    create?: XOR<MataKuliahCreateWithoutCapaianPembelajaranInput, MataKuliahUncheckedCreateWithoutCapaianPembelajaranInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutCapaianPembelajaranInput
    upsert?: MataKuliahUpsertWithoutCapaianPembelajaranInput
    connect?: MataKuliahWhereUniqueInput
    update?: XOR<XOR<MataKuliahUpdateToOneWithWhereWithoutCapaianPembelajaranInput, MataKuliahUpdateWithoutCapaianPembelajaranInput>, MataKuliahUncheckedUpdateWithoutCapaianPembelajaranInput>
  }

  export type EvaluasiDiriUpdateManyWithoutCapaianPembelajaranNestedInput = {
    create?: XOR<EvaluasiDiriCreateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput> | EvaluasiDiriCreateWithoutCapaianPembelajaranInput[] | EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput | EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput[]
    upsert?: EvaluasiDiriUpsertWithWhereUniqueWithoutCapaianPembelajaranInput | EvaluasiDiriUpsertWithWhereUniqueWithoutCapaianPembelajaranInput[]
    createMany?: EvaluasiDiriCreateManyCapaianPembelajaranInputEnvelope
    set?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    disconnect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    delete?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    update?: EvaluasiDiriUpdateWithWhereUniqueWithoutCapaianPembelajaranInput | EvaluasiDiriUpdateWithWhereUniqueWithoutCapaianPembelajaranInput[]
    updateMany?: EvaluasiDiriUpdateManyWithWhereWithoutCapaianPembelajaranInput | EvaluasiDiriUpdateManyWithWhereWithoutCapaianPembelajaranInput[]
    deleteMany?: EvaluasiDiriScalarWhereInput | EvaluasiDiriScalarWhereInput[]
  }

  export type EvaluasiDiriUncheckedUpdateManyWithoutCapaianPembelajaranNestedInput = {
    create?: XOR<EvaluasiDiriCreateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput> | EvaluasiDiriCreateWithoutCapaianPembelajaranInput[] | EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput | EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput[]
    upsert?: EvaluasiDiriUpsertWithWhereUniqueWithoutCapaianPembelajaranInput | EvaluasiDiriUpsertWithWhereUniqueWithoutCapaianPembelajaranInput[]
    createMany?: EvaluasiDiriCreateManyCapaianPembelajaranInputEnvelope
    set?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    disconnect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    delete?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    update?: EvaluasiDiriUpdateWithWhereUniqueWithoutCapaianPembelajaranInput | EvaluasiDiriUpdateWithWhereUniqueWithoutCapaianPembelajaranInput[]
    updateMany?: EvaluasiDiriUpdateManyWithWhereWithoutCapaianPembelajaranInput | EvaluasiDiriUpdateManyWithWhereWithoutCapaianPembelajaranInput[]
    deleteMany?: EvaluasiDiriScalarWhereInput | EvaluasiDiriScalarWhereInput[]
  }

  export type ProvinsiCreateNestedManyWithoutCountryInput = {
    create?: XOR<ProvinsiCreateWithoutCountryInput, ProvinsiUncheckedCreateWithoutCountryInput> | ProvinsiCreateWithoutCountryInput[] | ProvinsiUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: ProvinsiCreateOrConnectWithoutCountryInput | ProvinsiCreateOrConnectWithoutCountryInput[]
    createMany?: ProvinsiCreateManyCountryInputEnvelope
    connect?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
  }

  export type ProvinsiUncheckedCreateNestedManyWithoutCountryInput = {
    create?: XOR<ProvinsiCreateWithoutCountryInput, ProvinsiUncheckedCreateWithoutCountryInput> | ProvinsiCreateWithoutCountryInput[] | ProvinsiUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: ProvinsiCreateOrConnectWithoutCountryInput | ProvinsiCreateOrConnectWithoutCountryInput[]
    createMany?: ProvinsiCreateManyCountryInputEnvelope
    connect?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
  }

  export type ProvinsiUpdateManyWithoutCountryNestedInput = {
    create?: XOR<ProvinsiCreateWithoutCountryInput, ProvinsiUncheckedCreateWithoutCountryInput> | ProvinsiCreateWithoutCountryInput[] | ProvinsiUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: ProvinsiCreateOrConnectWithoutCountryInput | ProvinsiCreateOrConnectWithoutCountryInput[]
    upsert?: ProvinsiUpsertWithWhereUniqueWithoutCountryInput | ProvinsiUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: ProvinsiCreateManyCountryInputEnvelope
    set?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    disconnect?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    delete?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    connect?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    update?: ProvinsiUpdateWithWhereUniqueWithoutCountryInput | ProvinsiUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: ProvinsiUpdateManyWithWhereWithoutCountryInput | ProvinsiUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: ProvinsiScalarWhereInput | ProvinsiScalarWhereInput[]
  }

  export type ProvinsiUncheckedUpdateManyWithoutCountryNestedInput = {
    create?: XOR<ProvinsiCreateWithoutCountryInput, ProvinsiUncheckedCreateWithoutCountryInput> | ProvinsiCreateWithoutCountryInput[] | ProvinsiUncheckedCreateWithoutCountryInput[]
    connectOrCreate?: ProvinsiCreateOrConnectWithoutCountryInput | ProvinsiCreateOrConnectWithoutCountryInput[]
    upsert?: ProvinsiUpsertWithWhereUniqueWithoutCountryInput | ProvinsiUpsertWithWhereUniqueWithoutCountryInput[]
    createMany?: ProvinsiCreateManyCountryInputEnvelope
    set?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    disconnect?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    delete?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    connect?: ProvinsiWhereUniqueInput | ProvinsiWhereUniqueInput[]
    update?: ProvinsiUpdateWithWhereUniqueWithoutCountryInput | ProvinsiUpdateWithWhereUniqueWithoutCountryInput[]
    updateMany?: ProvinsiUpdateManyWithWhereWithoutCountryInput | ProvinsiUpdateManyWithWhereWithoutCountryInput[]
    deleteMany?: ProvinsiScalarWhereInput | ProvinsiScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutDaftarUlangInput = {
    create?: XOR<PendaftaranCreateWithoutDaftarUlangInput, PendaftaranUncheckedCreateWithoutDaftarUlangInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutDaftarUlangInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type ProgramStudiCreateNestedOneWithoutDaftarUlangInput = {
    create?: XOR<ProgramStudiCreateWithoutDaftarUlangInput, ProgramStudiUncheckedCreateWithoutDaftarUlangInput>
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutDaftarUlangInput
    connect?: ProgramStudiWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutDaftarUlangNestedInput = {
    create?: XOR<PendaftaranCreateWithoutDaftarUlangInput, PendaftaranUncheckedCreateWithoutDaftarUlangInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutDaftarUlangInput
    upsert?: PendaftaranUpsertWithoutDaftarUlangInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutDaftarUlangInput, PendaftaranUpdateWithoutDaftarUlangInput>, PendaftaranUncheckedUpdateWithoutDaftarUlangInput>
  }

  export type ProgramStudiUpdateOneRequiredWithoutDaftarUlangNestedInput = {
    create?: XOR<ProgramStudiCreateWithoutDaftarUlangInput, ProgramStudiUncheckedCreateWithoutDaftarUlangInput>
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutDaftarUlangInput
    upsert?: ProgramStudiUpsertWithoutDaftarUlangInput
    connect?: ProgramStudiWhereUniqueInput
    update?: XOR<XOR<ProgramStudiUpdateToOneWithWhereWithoutDaftarUlangInput, ProgramStudiUpdateWithoutDaftarUlangInput>, ProgramStudiUncheckedUpdateWithoutDaftarUlangInput>
  }

  export type KecamatanCreateNestedOneWithoutDesaInput = {
    create?: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
    connectOrCreate?: KecamatanCreateOrConnectWithoutDesaInput
    connect?: KecamatanWhereUniqueInput
  }

  export type AlamatCreateNestedManyWithoutDesaInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type AlamatUncheckedCreateNestedManyWithoutDesaInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
  }

  export type KecamatanUpdateOneRequiredWithoutDesaNestedInput = {
    create?: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
    connectOrCreate?: KecamatanCreateOrConnectWithoutDesaInput
    upsert?: KecamatanUpsertWithoutDesaInput
    connect?: KecamatanWhereUniqueInput
    update?: XOR<XOR<KecamatanUpdateToOneWithWhereWithoutDesaInput, KecamatanUpdateWithoutDesaInput>, KecamatanUncheckedUpdateWithoutDesaInput>
  }

  export type AlamatUpdateManyWithoutDesaNestedInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutDesaInput | AlamatUpsertWithWhereUniqueWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutDesaInput | AlamatUpdateWithWhereUniqueWithoutDesaInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutDesaInput | AlamatUpdateManyWithWhereWithoutDesaInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type AlamatUncheckedUpdateManyWithoutDesaNestedInput = {
    create?: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput> | AlamatCreateWithoutDesaInput[] | AlamatUncheckedCreateWithoutDesaInput[]
    connectOrCreate?: AlamatCreateOrConnectWithoutDesaInput | AlamatCreateOrConnectWithoutDesaInput[]
    upsert?: AlamatUpsertWithWhereUniqueWithoutDesaInput | AlamatUpsertWithWhereUniqueWithoutDesaInput[]
    createMany?: AlamatCreateManyDesaInputEnvelope
    set?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    disconnect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    delete?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    connect?: AlamatWhereUniqueInput | AlamatWhereUniqueInput[]
    update?: AlamatUpdateWithWhereUniqueWithoutDesaInput | AlamatUpdateWithWhereUniqueWithoutDesaInput[]
    updateMany?: AlamatUpdateManyWithWhereWithoutDesaInput | AlamatUpdateManyWithWhereWithoutDesaInput[]
    deleteMany?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
  }

  export type MataKuliahMahasiswaCreateNestedOneWithoutEvaluasiDiriInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutEvaluasiDiriInput, MataKuliahMahasiswaUncheckedCreateWithoutEvaluasiDiriInput>
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutEvaluasiDiriInput
    connect?: MataKuliahMahasiswaWhereUniqueInput
  }

  export type CapaianPembelajaranCreateNestedOneWithoutEvaluasiDiriInput = {
    create?: XOR<CapaianPembelajaranCreateWithoutEvaluasiDiriInput, CapaianPembelajaranUncheckedCreateWithoutEvaluasiDiriInput>
    connectOrCreate?: CapaianPembelajaranCreateOrConnectWithoutEvaluasiDiriInput
    connect?: CapaianPembelajaranWhereUniqueInput
  }

  export type BuktiFormEvaluasiDiriCreateNestedManyWithoutEvaluasiDiriInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput> | BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInputEnvelope
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
  }

  export type HasilAssesmenCreateNestedManyWithoutEvaluasiDiriInput = {
    create?: XOR<HasilAssesmenCreateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput> | HasilAssesmenCreateWithoutEvaluasiDiriInput[] | HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput | HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput[]
    createMany?: HasilAssesmenCreateManyEvaluasiDiriInputEnvelope
    connect?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
  }

  export type BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutEvaluasiDiriInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput> | BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInputEnvelope
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
  }

  export type HasilAssesmenUncheckedCreateNestedManyWithoutEvaluasiDiriInput = {
    create?: XOR<HasilAssesmenCreateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput> | HasilAssesmenCreateWithoutEvaluasiDiriInput[] | HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput | HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput[]
    createMany?: HasilAssesmenCreateManyEvaluasiDiriInputEnvelope
    connect?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
  }

  export type EnumProfiensiPengetahuanFieldUpdateOperationsInput = {
    set?: $Enums.ProfiensiPengetahuan
  }

  export type MataKuliahMahasiswaUpdateOneRequiredWithoutEvaluasiDiriNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutEvaluasiDiriInput, MataKuliahMahasiswaUncheckedCreateWithoutEvaluasiDiriInput>
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutEvaluasiDiriInput
    upsert?: MataKuliahMahasiswaUpsertWithoutEvaluasiDiriInput
    connect?: MataKuliahMahasiswaWhereUniqueInput
    update?: XOR<XOR<MataKuliahMahasiswaUpdateToOneWithWhereWithoutEvaluasiDiriInput, MataKuliahMahasiswaUpdateWithoutEvaluasiDiriInput>, MataKuliahMahasiswaUncheckedUpdateWithoutEvaluasiDiriInput>
  }

  export type CapaianPembelajaranUpdateOneRequiredWithoutEvaluasiDiriNestedInput = {
    create?: XOR<CapaianPembelajaranCreateWithoutEvaluasiDiriInput, CapaianPembelajaranUncheckedCreateWithoutEvaluasiDiriInput>
    connectOrCreate?: CapaianPembelajaranCreateOrConnectWithoutEvaluasiDiriInput
    upsert?: CapaianPembelajaranUpsertWithoutEvaluasiDiriInput
    connect?: CapaianPembelajaranWhereUniqueInput
    update?: XOR<XOR<CapaianPembelajaranUpdateToOneWithWhereWithoutEvaluasiDiriInput, CapaianPembelajaranUpdateWithoutEvaluasiDiriInput>, CapaianPembelajaranUncheckedUpdateWithoutEvaluasiDiriInput>
  }

  export type BuktiFormEvaluasiDiriUpdateManyWithoutEvaluasiDiriNestedInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput> | BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput[]
    upsert?: BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutEvaluasiDiriInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInputEnvelope
    set?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    disconnect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    delete?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    update?: BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutEvaluasiDiriInput[]
    updateMany?: BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutEvaluasiDiriInput[]
    deleteMany?: BuktiFormEvaluasiDiriScalarWhereInput | BuktiFormEvaluasiDiriScalarWhereInput[]
  }

  export type HasilAssesmenUpdateManyWithoutEvaluasiDiriNestedInput = {
    create?: XOR<HasilAssesmenCreateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput> | HasilAssesmenCreateWithoutEvaluasiDiriInput[] | HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput | HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput[]
    upsert?: HasilAssesmenUpsertWithWhereUniqueWithoutEvaluasiDiriInput | HasilAssesmenUpsertWithWhereUniqueWithoutEvaluasiDiriInput[]
    createMany?: HasilAssesmenCreateManyEvaluasiDiriInputEnvelope
    set?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    disconnect?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    delete?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    connect?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    update?: HasilAssesmenUpdateWithWhereUniqueWithoutEvaluasiDiriInput | HasilAssesmenUpdateWithWhereUniqueWithoutEvaluasiDiriInput[]
    updateMany?: HasilAssesmenUpdateManyWithWhereWithoutEvaluasiDiriInput | HasilAssesmenUpdateManyWithWhereWithoutEvaluasiDiriInput[]
    deleteMany?: HasilAssesmenScalarWhereInput | HasilAssesmenScalarWhereInput[]
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriNestedInput = {
    create?: XOR<BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput> | BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput[] | BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput[]
    upsert?: BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutEvaluasiDiriInput[]
    createMany?: BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInputEnvelope
    set?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    disconnect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    delete?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    connect?: BuktiFormEvaluasiDiriWhereUniqueInput | BuktiFormEvaluasiDiriWhereUniqueInput[]
    update?: BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutEvaluasiDiriInput[]
    updateMany?: BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutEvaluasiDiriInput | BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutEvaluasiDiriInput[]
    deleteMany?: BuktiFormEvaluasiDiriScalarWhereInput | BuktiFormEvaluasiDiriScalarWhereInput[]
  }

  export type HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriNestedInput = {
    create?: XOR<HasilAssesmenCreateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput> | HasilAssesmenCreateWithoutEvaluasiDiriInput[] | HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput[]
    connectOrCreate?: HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput | HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput[]
    upsert?: HasilAssesmenUpsertWithWhereUniqueWithoutEvaluasiDiriInput | HasilAssesmenUpsertWithWhereUniqueWithoutEvaluasiDiriInput[]
    createMany?: HasilAssesmenCreateManyEvaluasiDiriInputEnvelope
    set?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    disconnect?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    delete?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    connect?: HasilAssesmenWhereUniqueInput | HasilAssesmenWhereUniqueInput[]
    update?: HasilAssesmenUpdateWithWhereUniqueWithoutEvaluasiDiriInput | HasilAssesmenUpdateWithWhereUniqueWithoutEvaluasiDiriInput[]
    updateMany?: HasilAssesmenUpdateManyWithWhereWithoutEvaluasiDiriInput | HasilAssesmenUpdateManyWithWhereWithoutEvaluasiDiriInput[]
    deleteMany?: HasilAssesmenScalarWhereInput | HasilAssesmenScalarWhereInput[]
  }

  export type EvaluasiDiriCreateNestedOneWithoutHasilAssesmenInput = {
    create?: XOR<EvaluasiDiriCreateWithoutHasilAssesmenInput, EvaluasiDiriUncheckedCreateWithoutHasilAssesmenInput>
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutHasilAssesmenInput
    connect?: EvaluasiDiriWhereUniqueInput
  }

  export type SkorAssesmenCreateNestedManyWithoutHasilAssesmenInput = {
    create?: XOR<SkorAssesmenCreateWithoutHasilAssesmenInput, SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput> | SkorAssesmenCreateWithoutHasilAssesmenInput[] | SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput[]
    connectOrCreate?: SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput | SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput[]
    createMany?: SkorAssesmenCreateManyHasilAssesmenInputEnvelope
    connect?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
  }

  export type SkorAssesmenUncheckedCreateNestedManyWithoutHasilAssesmenInput = {
    create?: XOR<SkorAssesmenCreateWithoutHasilAssesmenInput, SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput> | SkorAssesmenCreateWithoutHasilAssesmenInput[] | SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput[]
    connectOrCreate?: SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput | SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput[]
    createMany?: SkorAssesmenCreateManyHasilAssesmenInputEnvelope
    connect?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EvaluasiDiriUpdateOneRequiredWithoutHasilAssesmenNestedInput = {
    create?: XOR<EvaluasiDiriCreateWithoutHasilAssesmenInput, EvaluasiDiriUncheckedCreateWithoutHasilAssesmenInput>
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutHasilAssesmenInput
    upsert?: EvaluasiDiriUpsertWithoutHasilAssesmenInput
    connect?: EvaluasiDiriWhereUniqueInput
    update?: XOR<XOR<EvaluasiDiriUpdateToOneWithWhereWithoutHasilAssesmenInput, EvaluasiDiriUpdateWithoutHasilAssesmenInput>, EvaluasiDiriUncheckedUpdateWithoutHasilAssesmenInput>
  }

  export type SkorAssesmenUpdateManyWithoutHasilAssesmenNestedInput = {
    create?: XOR<SkorAssesmenCreateWithoutHasilAssesmenInput, SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput> | SkorAssesmenCreateWithoutHasilAssesmenInput[] | SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput[]
    connectOrCreate?: SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput | SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput[]
    upsert?: SkorAssesmenUpsertWithWhereUniqueWithoutHasilAssesmenInput | SkorAssesmenUpsertWithWhereUniqueWithoutHasilAssesmenInput[]
    createMany?: SkorAssesmenCreateManyHasilAssesmenInputEnvelope
    set?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    disconnect?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    delete?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    connect?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    update?: SkorAssesmenUpdateWithWhereUniqueWithoutHasilAssesmenInput | SkorAssesmenUpdateWithWhereUniqueWithoutHasilAssesmenInput[]
    updateMany?: SkorAssesmenUpdateManyWithWhereWithoutHasilAssesmenInput | SkorAssesmenUpdateManyWithWhereWithoutHasilAssesmenInput[]
    deleteMany?: SkorAssesmenScalarWhereInput | SkorAssesmenScalarWhereInput[]
  }

  export type SkorAssesmenUncheckedUpdateManyWithoutHasilAssesmenNestedInput = {
    create?: XOR<SkorAssesmenCreateWithoutHasilAssesmenInput, SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput> | SkorAssesmenCreateWithoutHasilAssesmenInput[] | SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput[]
    connectOrCreate?: SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput | SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput[]
    upsert?: SkorAssesmenUpsertWithWhereUniqueWithoutHasilAssesmenInput | SkorAssesmenUpsertWithWhereUniqueWithoutHasilAssesmenInput[]
    createMany?: SkorAssesmenCreateManyHasilAssesmenInputEnvelope
    set?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    disconnect?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    delete?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    connect?: SkorAssesmenWhereUniqueInput | SkorAssesmenWhereUniqueInput[]
    update?: SkorAssesmenUpdateWithWhereUniqueWithoutHasilAssesmenInput | SkorAssesmenUpdateWithWhereUniqueWithoutHasilAssesmenInput[]
    updateMany?: SkorAssesmenUpdateManyWithWhereWithoutHasilAssesmenInput | SkorAssesmenUpdateManyWithWhereWithoutHasilAssesmenInput[]
    deleteMany?: SkorAssesmenScalarWhereInput | SkorAssesmenScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutInformasiKependudukanInput = {
    create?: XOR<PendaftaranCreateWithoutInformasiKependudukanInput, PendaftaranUncheckedCreateWithoutInformasiKependudukanInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutInformasiKependudukanInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutInformasiKependudukanNestedInput = {
    create?: XOR<PendaftaranCreateWithoutInformasiKependudukanInput, PendaftaranUncheckedCreateWithoutInformasiKependudukanInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutInformasiKependudukanInput
    upsert?: PendaftaranUpsertWithoutInformasiKependudukanInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutInformasiKependudukanInput, PendaftaranUpdateWithoutInformasiKependudukanInput>, PendaftaranUncheckedUpdateWithoutInformasiKependudukanInput>
  }

  export type PendaftaranCreateNestedOneWithoutInstitusiLamaInput = {
    create?: XOR<PendaftaranCreateWithoutInstitusiLamaInput, PendaftaranUncheckedCreateWithoutInstitusiLamaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutInstitusiLamaInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type AlamatCreateNestedOneWithoutInstitusiLamaInput = {
    create?: XOR<AlamatCreateWithoutInstitusiLamaInput, AlamatUncheckedCreateWithoutInstitusiLamaInput>
    connectOrCreate?: AlamatCreateOrConnectWithoutInstitusiLamaInput
    connect?: AlamatWhereUniqueInput
  }

  export type EnumJenjangFieldUpdateOperationsInput = {
    set?: $Enums.Jenjang
  }

  export type PendaftaranUpdateOneRequiredWithoutInstitusiLamaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutInstitusiLamaInput, PendaftaranUncheckedCreateWithoutInstitusiLamaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutInstitusiLamaInput
    upsert?: PendaftaranUpsertWithoutInstitusiLamaInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutInstitusiLamaInput, PendaftaranUpdateWithoutInstitusiLamaInput>, PendaftaranUncheckedUpdateWithoutInstitusiLamaInput>
  }

  export type AlamatUpdateOneRequiredWithoutInstitusiLamaNestedInput = {
    create?: XOR<AlamatCreateWithoutInstitusiLamaInput, AlamatUncheckedCreateWithoutInstitusiLamaInput>
    connectOrCreate?: AlamatCreateOrConnectWithoutInstitusiLamaInput
    upsert?: AlamatUpsertWithoutInstitusiLamaInput
    connect?: AlamatWhereUniqueInput
    update?: XOR<XOR<AlamatUpdateToOneWithWhereWithoutInstitusiLamaInput, AlamatUpdateWithoutInstitusiLamaInput>, AlamatUncheckedUpdateWithoutInstitusiLamaInput>
  }

  export type BuktiFormCreateNestedManyWithoutJenisDokumenInput = {
    create?: XOR<BuktiFormCreateWithoutJenisDokumenInput, BuktiFormUncheckedCreateWithoutJenisDokumenInput> | BuktiFormCreateWithoutJenisDokumenInput[] | BuktiFormUncheckedCreateWithoutJenisDokumenInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutJenisDokumenInput | BuktiFormCreateOrConnectWithoutJenisDokumenInput[]
    createMany?: BuktiFormCreateManyJenisDokumenInputEnvelope
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
  }

  export type BuktiFormUncheckedCreateNestedManyWithoutJenisDokumenInput = {
    create?: XOR<BuktiFormCreateWithoutJenisDokumenInput, BuktiFormUncheckedCreateWithoutJenisDokumenInput> | BuktiFormCreateWithoutJenisDokumenInput[] | BuktiFormUncheckedCreateWithoutJenisDokumenInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutJenisDokumenInput | BuktiFormCreateOrConnectWithoutJenisDokumenInput[]
    createMany?: BuktiFormCreateManyJenisDokumenInputEnvelope
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
  }

  export type BuktiFormUpdateManyWithoutJenisDokumenNestedInput = {
    create?: XOR<BuktiFormCreateWithoutJenisDokumenInput, BuktiFormUncheckedCreateWithoutJenisDokumenInput> | BuktiFormCreateWithoutJenisDokumenInput[] | BuktiFormUncheckedCreateWithoutJenisDokumenInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutJenisDokumenInput | BuktiFormCreateOrConnectWithoutJenisDokumenInput[]
    upsert?: BuktiFormUpsertWithWhereUniqueWithoutJenisDokumenInput | BuktiFormUpsertWithWhereUniqueWithoutJenisDokumenInput[]
    createMany?: BuktiFormCreateManyJenisDokumenInputEnvelope
    set?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    disconnect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    delete?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    update?: BuktiFormUpdateWithWhereUniqueWithoutJenisDokumenInput | BuktiFormUpdateWithWhereUniqueWithoutJenisDokumenInput[]
    updateMany?: BuktiFormUpdateManyWithWhereWithoutJenisDokumenInput | BuktiFormUpdateManyWithWhereWithoutJenisDokumenInput[]
    deleteMany?: BuktiFormScalarWhereInput | BuktiFormScalarWhereInput[]
  }

  export type BuktiFormUncheckedUpdateManyWithoutJenisDokumenNestedInput = {
    create?: XOR<BuktiFormCreateWithoutJenisDokumenInput, BuktiFormUncheckedCreateWithoutJenisDokumenInput> | BuktiFormCreateWithoutJenisDokumenInput[] | BuktiFormUncheckedCreateWithoutJenisDokumenInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutJenisDokumenInput | BuktiFormCreateOrConnectWithoutJenisDokumenInput[]
    upsert?: BuktiFormUpsertWithWhereUniqueWithoutJenisDokumenInput | BuktiFormUpsertWithWhereUniqueWithoutJenisDokumenInput[]
    createMany?: BuktiFormCreateManyJenisDokumenInputEnvelope
    set?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    disconnect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    delete?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    update?: BuktiFormUpdateWithWhereUniqueWithoutJenisDokumenInput | BuktiFormUpdateWithWhereUniqueWithoutJenisDokumenInput[]
    updateMany?: BuktiFormUpdateManyWithWhereWithoutJenisDokumenInput | BuktiFormUpdateManyWithWhereWithoutJenisDokumenInput[]
    deleteMany?: BuktiFormScalarWhereInput | BuktiFormScalarWhereInput[]
  }

  export type ProvinsiCreateNestedOneWithoutKabupatenInput = {
    create?: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
    connectOrCreate?: ProvinsiCreateOrConnectWithoutKabupatenInput
    connect?: ProvinsiWhereUniqueInput
  }

  export type KecamatanCreateNestedManyWithoutKabupatenInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
  }

  export type KecamatanUncheckedCreateNestedManyWithoutKabupatenInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
  }

  export type ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput = {
    create?: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
    connectOrCreate?: ProvinsiCreateOrConnectWithoutKabupatenInput
    upsert?: ProvinsiUpsertWithoutKabupatenInput
    connect?: ProvinsiWhereUniqueInput
    update?: XOR<XOR<ProvinsiUpdateToOneWithWhereWithoutKabupatenInput, ProvinsiUpdateWithoutKabupatenInput>, ProvinsiUncheckedUpdateWithoutKabupatenInput>
  }

  export type KecamatanUpdateManyWithoutKabupatenNestedInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    upsert?: KecamatanUpsertWithWhereUniqueWithoutKabupatenInput | KecamatanUpsertWithWhereUniqueWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    set?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    disconnect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    delete?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    update?: KecamatanUpdateWithWhereUniqueWithoutKabupatenInput | KecamatanUpdateWithWhereUniqueWithoutKabupatenInput[]
    updateMany?: KecamatanUpdateManyWithWhereWithoutKabupatenInput | KecamatanUpdateManyWithWhereWithoutKabupatenInput[]
    deleteMany?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
  }

  export type KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput = {
    create?: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput> | KecamatanCreateWithoutKabupatenInput[] | KecamatanUncheckedCreateWithoutKabupatenInput[]
    connectOrCreate?: KecamatanCreateOrConnectWithoutKabupatenInput | KecamatanCreateOrConnectWithoutKabupatenInput[]
    upsert?: KecamatanUpsertWithWhereUniqueWithoutKabupatenInput | KecamatanUpsertWithWhereUniqueWithoutKabupatenInput[]
    createMany?: KecamatanCreateManyKabupatenInputEnvelope
    set?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    disconnect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    delete?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    connect?: KecamatanWhereUniqueInput | KecamatanWhereUniqueInput[]
    update?: KecamatanUpdateWithWhereUniqueWithoutKabupatenInput | KecamatanUpdateWithWhereUniqueWithoutKabupatenInput[]
    updateMany?: KecamatanUpdateManyWithWhereWithoutKabupatenInput | KecamatanUpdateManyWithWhereWithoutKabupatenInput[]
    deleteMany?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
  }

  export type KabupatenCreateNestedOneWithoutKecamatanInput = {
    create?: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
    connectOrCreate?: KabupatenCreateOrConnectWithoutKecamatanInput
    connect?: KabupatenWhereUniqueInput
  }

  export type DesaCreateNestedManyWithoutKecamatanInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
  }

  export type DesaUncheckedCreateNestedManyWithoutKecamatanInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
  }

  export type KabupatenUpdateOneRequiredWithoutKecamatanNestedInput = {
    create?: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
    connectOrCreate?: KabupatenCreateOrConnectWithoutKecamatanInput
    upsert?: KabupatenUpsertWithoutKecamatanInput
    connect?: KabupatenWhereUniqueInput
    update?: XOR<XOR<KabupatenUpdateToOneWithWhereWithoutKecamatanInput, KabupatenUpdateWithoutKecamatanInput>, KabupatenUncheckedUpdateWithoutKecamatanInput>
  }

  export type DesaUpdateManyWithoutKecamatanNestedInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    upsert?: DesaUpsertWithWhereUniqueWithoutKecamatanInput | DesaUpsertWithWhereUniqueWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    set?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    disconnect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    delete?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    update?: DesaUpdateWithWhereUniqueWithoutKecamatanInput | DesaUpdateWithWhereUniqueWithoutKecamatanInput[]
    updateMany?: DesaUpdateManyWithWhereWithoutKecamatanInput | DesaUpdateManyWithWhereWithoutKecamatanInput[]
    deleteMany?: DesaScalarWhereInput | DesaScalarWhereInput[]
  }

  export type DesaUncheckedUpdateManyWithoutKecamatanNestedInput = {
    create?: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput> | DesaCreateWithoutKecamatanInput[] | DesaUncheckedCreateWithoutKecamatanInput[]
    connectOrCreate?: DesaCreateOrConnectWithoutKecamatanInput | DesaCreateOrConnectWithoutKecamatanInput[]
    upsert?: DesaUpsertWithWhereUniqueWithoutKecamatanInput | DesaUpsertWithWhereUniqueWithoutKecamatanInput[]
    createMany?: DesaCreateManyKecamatanInputEnvelope
    set?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    disconnect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    delete?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    connect?: DesaWhereUniqueInput | DesaWhereUniqueInput[]
    update?: DesaUpdateWithWhereUniqueWithoutKecamatanInput | DesaUpdateWithWhereUniqueWithoutKecamatanInput[]
    updateMany?: DesaUpdateManyWithWhereWithoutKecamatanInput | DesaUpdateManyWithWhereWithoutKecamatanInput[]
    deleteMany?: DesaScalarWhereInput | DesaScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutMahasiswaInput = {
    create?: XOR<UserCreateWithoutMahasiswaInput, UserUncheckedCreateWithoutMahasiswaInput>
    connectOrCreate?: UserCreateOrConnectWithoutMahasiswaInput
    connect?: UserWhereUniqueInput
  }

  export type PendaftaranCreateNestedManyWithoutMahasiswaInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaInput, PendaftaranUncheckedCreateWithoutMahasiswaInput> | PendaftaranCreateWithoutMahasiswaInput[] | PendaftaranUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaInput | PendaftaranCreateOrConnectWithoutMahasiswaInput[]
    createMany?: PendaftaranCreateManyMahasiswaInputEnvelope
    connect?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
  }

  export type PendaftaranUncheckedCreateNestedManyWithoutMahasiswaInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaInput, PendaftaranUncheckedCreateWithoutMahasiswaInput> | PendaftaranCreateWithoutMahasiswaInput[] | PendaftaranUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaInput | PendaftaranCreateOrConnectWithoutMahasiswaInput[]
    createMany?: PendaftaranCreateManyMahasiswaInputEnvelope
    connect?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
  }

  export type EnumStatusPerkawinanFieldUpdateOperationsInput = {
    set?: $Enums.StatusPerkawinan
  }

  export type UserUpdateOneRequiredWithoutMahasiswaNestedInput = {
    create?: XOR<UserCreateWithoutMahasiswaInput, UserUncheckedCreateWithoutMahasiswaInput>
    connectOrCreate?: UserCreateOrConnectWithoutMahasiswaInput
    upsert?: UserUpsertWithoutMahasiswaInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMahasiswaInput, UserUpdateWithoutMahasiswaInput>, UserUncheckedUpdateWithoutMahasiswaInput>
  }

  export type PendaftaranUpdateManyWithoutMahasiswaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaInput, PendaftaranUncheckedCreateWithoutMahasiswaInput> | PendaftaranCreateWithoutMahasiswaInput[] | PendaftaranUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaInput | PendaftaranCreateOrConnectWithoutMahasiswaInput[]
    upsert?: PendaftaranUpsertWithWhereUniqueWithoutMahasiswaInput | PendaftaranUpsertWithWhereUniqueWithoutMahasiswaInput[]
    createMany?: PendaftaranCreateManyMahasiswaInputEnvelope
    set?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    disconnect?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    delete?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    connect?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    update?: PendaftaranUpdateWithWhereUniqueWithoutMahasiswaInput | PendaftaranUpdateWithWhereUniqueWithoutMahasiswaInput[]
    updateMany?: PendaftaranUpdateManyWithWhereWithoutMahasiswaInput | PendaftaranUpdateManyWithWhereWithoutMahasiswaInput[]
    deleteMany?: PendaftaranScalarWhereInput | PendaftaranScalarWhereInput[]
  }

  export type PendaftaranUncheckedUpdateManyWithoutMahasiswaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaInput, PendaftaranUncheckedCreateWithoutMahasiswaInput> | PendaftaranCreateWithoutMahasiswaInput[] | PendaftaranUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaInput | PendaftaranCreateOrConnectWithoutMahasiswaInput[]
    upsert?: PendaftaranUpsertWithWhereUniqueWithoutMahasiswaInput | PendaftaranUpsertWithWhereUniqueWithoutMahasiswaInput[]
    createMany?: PendaftaranCreateManyMahasiswaInputEnvelope
    set?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    disconnect?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    delete?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    connect?: PendaftaranWhereUniqueInput | PendaftaranWhereUniqueInput[]
    update?: PendaftaranUpdateWithWhereUniqueWithoutMahasiswaInput | PendaftaranUpdateWithWhereUniqueWithoutMahasiswaInput[]
    updateMany?: PendaftaranUpdateManyWithWhereWithoutMahasiswaInput | PendaftaranUpdateManyWithWhereWithoutMahasiswaInput[]
    deleteMany?: PendaftaranScalarWhereInput | PendaftaranScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutMahasiswaKonferensiInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaKonferensiInput, PendaftaranUncheckedCreateWithoutMahasiswaKonferensiInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaKonferensiInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type EnumStatusKeikutsertaanFieldUpdateOperationsInput = {
    set?: $Enums.StatusKeikutsertaan
  }

  export type PendaftaranUpdateOneRequiredWithoutMahasiswaKonferensiNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaKonferensiInput, PendaftaranUncheckedCreateWithoutMahasiswaKonferensiInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaKonferensiInput
    upsert?: PendaftaranUpsertWithoutMahasiswaKonferensiInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMahasiswaKonferensiInput, PendaftaranUpdateWithoutMahasiswaKonferensiInput>, PendaftaranUncheckedUpdateWithoutMahasiswaKonferensiInput>
  }

  export type PendaftaranCreateNestedOneWithoutMahasiswaOrganisasiProfesiInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUncheckedCreateWithoutMahasiswaOrganisasiProfesiInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaOrganisasiProfesiInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutMahasiswaOrganisasiProfesiNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUncheckedCreateWithoutMahasiswaOrganisasiProfesiInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaOrganisasiProfesiInput
    upsert?: PendaftaranUpsertWithoutMahasiswaOrganisasiProfesiInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUpdateWithoutMahasiswaOrganisasiProfesiInput>, PendaftaranUncheckedUpdateWithoutMahasiswaOrganisasiProfesiInput>
  }

  export type PendaftaranCreateNestedOneWithoutMahasiswaPelatihanProfessionalInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUncheckedCreateWithoutMahasiswaPelatihanProfessionalInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaPelatihanProfessionalInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type PendaftaranUpdateOneRequiredWithoutMahasiswaPelatihanProfessionalNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUncheckedCreateWithoutMahasiswaPelatihanProfessionalInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaPelatihanProfessionalInput
    upsert?: PendaftaranUpsertWithoutMahasiswaPelatihanProfessionalInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUpdateWithoutMahasiswaPelatihanProfessionalInput>, PendaftaranUncheckedUpdateWithoutMahasiswaPelatihanProfessionalInput>
  }

  export type PendaftaranCreateNestedOneWithoutMahasiswaPendidikanInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaPendidikanInput, PendaftaranUncheckedCreateWithoutMahasiswaPendidikanInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaPendidikanInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutMahasiswaPendidikanNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaPendidikanInput, PendaftaranUncheckedCreateWithoutMahasiswaPendidikanInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaPendidikanInput
    upsert?: PendaftaranUpsertWithoutMahasiswaPendidikanInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMahasiswaPendidikanInput, PendaftaranUpdateWithoutMahasiswaPendidikanInput>, PendaftaranUncheckedUpdateWithoutMahasiswaPendidikanInput>
  }

  export type PendaftaranCreateNestedOneWithoutMahasiswaPiagamInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaPiagamInput, PendaftaranUncheckedCreateWithoutMahasiswaPiagamInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaPiagamInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutMahasiswaPiagamNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaPiagamInput, PendaftaranUncheckedCreateWithoutMahasiswaPiagamInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaPiagamInput
    upsert?: PendaftaranUpsertWithoutMahasiswaPiagamInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMahasiswaPiagamInput, PendaftaranUpdateWithoutMahasiswaPiagamInput>, PendaftaranUncheckedUpdateWithoutMahasiswaPiagamInput>
  }

  export type PendaftaranCreateNestedOneWithoutMahasiswaRiwayatPekerjaanInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUncheckedCreateWithoutMahasiswaRiwayatPekerjaanInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaRiwayatPekerjaanInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutMahasiswaRiwayatPekerjaanNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUncheckedCreateWithoutMahasiswaRiwayatPekerjaanInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMahasiswaRiwayatPekerjaanInput
    upsert?: PendaftaranUpsertWithoutMahasiswaRiwayatPekerjaanInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUpdateWithoutMahasiswaRiwayatPekerjaanInput>, PendaftaranUncheckedUpdateWithoutMahasiswaRiwayatPekerjaanInput>
  }

  export type ProgramStudiCreateNestedOneWithoutMataKuliahInput = {
    create?: XOR<ProgramStudiCreateWithoutMataKuliahInput, ProgramStudiUncheckedCreateWithoutMataKuliahInput>
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutMataKuliahInput
    connect?: ProgramStudiWhereUniqueInput
  }

  export type CapaianPembelajaranCreateNestedManyWithoutMataKuliahInput = {
    create?: XOR<CapaianPembelajaranCreateWithoutMataKuliahInput, CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput> | CapaianPembelajaranCreateWithoutMataKuliahInput[] | CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput | CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput[]
    createMany?: CapaianPembelajaranCreateManyMataKuliahInputEnvelope
    connect?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
  }

  export type MataKuliahMahasiswaCreateNestedManyWithoutMataKuliahInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput> | MataKuliahMahasiswaCreateWithoutMataKuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMataKuliahInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type CapaianPembelajaranUncheckedCreateNestedManyWithoutMataKuliahInput = {
    create?: XOR<CapaianPembelajaranCreateWithoutMataKuliahInput, CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput> | CapaianPembelajaranCreateWithoutMataKuliahInput[] | CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput | CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput[]
    createMany?: CapaianPembelajaranCreateManyMataKuliahInputEnvelope
    connect?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
  }

  export type MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMataKuliahInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput> | MataKuliahMahasiswaCreateWithoutMataKuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMataKuliahInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type ProgramStudiUpdateOneRequiredWithoutMataKuliahNestedInput = {
    create?: XOR<ProgramStudiCreateWithoutMataKuliahInput, ProgramStudiUncheckedCreateWithoutMataKuliahInput>
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutMataKuliahInput
    upsert?: ProgramStudiUpsertWithoutMataKuliahInput
    connect?: ProgramStudiWhereUniqueInput
    update?: XOR<XOR<ProgramStudiUpdateToOneWithWhereWithoutMataKuliahInput, ProgramStudiUpdateWithoutMataKuliahInput>, ProgramStudiUncheckedUpdateWithoutMataKuliahInput>
  }

  export type CapaianPembelajaranUpdateManyWithoutMataKuliahNestedInput = {
    create?: XOR<CapaianPembelajaranCreateWithoutMataKuliahInput, CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput> | CapaianPembelajaranCreateWithoutMataKuliahInput[] | CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput | CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput[]
    upsert?: CapaianPembelajaranUpsertWithWhereUniqueWithoutMataKuliahInput | CapaianPembelajaranUpsertWithWhereUniqueWithoutMataKuliahInput[]
    createMany?: CapaianPembelajaranCreateManyMataKuliahInputEnvelope
    set?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    disconnect?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    delete?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    connect?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    update?: CapaianPembelajaranUpdateWithWhereUniqueWithoutMataKuliahInput | CapaianPembelajaranUpdateWithWhereUniqueWithoutMataKuliahInput[]
    updateMany?: CapaianPembelajaranUpdateManyWithWhereWithoutMataKuliahInput | CapaianPembelajaranUpdateManyWithWhereWithoutMataKuliahInput[]
    deleteMany?: CapaianPembelajaranScalarWhereInput | CapaianPembelajaranScalarWhereInput[]
  }

  export type MataKuliahMahasiswaUpdateManyWithoutMataKuliahNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput> | MataKuliahMahasiswaCreateWithoutMataKuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMataKuliahInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMataKuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMataKuliahInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMataKuliahInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMataKuliahInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutMataKuliahInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutMataKuliahInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type CapaianPembelajaranUncheckedUpdateManyWithoutMataKuliahNestedInput = {
    create?: XOR<CapaianPembelajaranCreateWithoutMataKuliahInput, CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput> | CapaianPembelajaranCreateWithoutMataKuliahInput[] | CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput | CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput[]
    upsert?: CapaianPembelajaranUpsertWithWhereUniqueWithoutMataKuliahInput | CapaianPembelajaranUpsertWithWhereUniqueWithoutMataKuliahInput[]
    createMany?: CapaianPembelajaranCreateManyMataKuliahInputEnvelope
    set?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    disconnect?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    delete?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    connect?: CapaianPembelajaranWhereUniqueInput | CapaianPembelajaranWhereUniqueInput[]
    update?: CapaianPembelajaranUpdateWithWhereUniqueWithoutMataKuliahInput | CapaianPembelajaranUpdateWithWhereUniqueWithoutMataKuliahInput[]
    updateMany?: CapaianPembelajaranUpdateManyWithWhereWithoutMataKuliahInput | CapaianPembelajaranUpdateManyWithWhereWithoutMataKuliahInput[]
    deleteMany?: CapaianPembelajaranScalarWhereInput | CapaianPembelajaranScalarWhereInput[]
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutMataKuliahNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput> | MataKuliahMahasiswaCreateWithoutMataKuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMataKuliahInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMataKuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMataKuliahInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMataKuliahInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMataKuliahInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutMataKuliahInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutMataKuliahInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutMataKuliahMahasiswaInput = {
    create?: XOR<PendaftaranCreateWithoutMataKuliahMahasiswaInput, PendaftaranUncheckedCreateWithoutMataKuliahMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMataKuliahMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type MataKuliahCreateNestedOneWithoutMataKuliahMahasiswaInput = {
    create?: XOR<MataKuliahCreateWithoutMataKuliahMahasiswaInput, MataKuliahUncheckedCreateWithoutMataKuliahMahasiswaInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutMataKuliahMahasiswaInput
    connect?: MataKuliahWhereUniqueInput
  }

  export type EvaluasiDiriCreateNestedManyWithoutMataKuliahMahasiswaInput = {
    create?: XOR<EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput> | EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput[] | EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput | EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    createMany?: EvaluasiDiriCreateManyMataKuliahMahasiswaInputEnvelope
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
  }

  export type SanggahanAssesmenMkCreateNestedManyWithoutMataKuliahMahasiswaInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput> | SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput[] | SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    createMany?: SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInputEnvelope
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
  }

  export type EvaluasiDiriUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput = {
    create?: XOR<EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput> | EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput[] | EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput | EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    createMany?: EvaluasiDiriCreateManyMataKuliahMahasiswaInputEnvelope
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
  }

  export type SanggahanAssesmenMkUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput> | SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput[] | SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    createMany?: SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInputEnvelope
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
  }

  export type NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput = {
    set?: $Enums.KeteranganMataKuliah | null
  }

  export type NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput = {
    set?: $Enums.StatusMataKuliahMahasiswa | null
  }

  export type PendaftaranUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutMataKuliahMahasiswaInput, PendaftaranUncheckedCreateWithoutMataKuliahMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutMataKuliahMahasiswaInput
    upsert?: PendaftaranUpsertWithoutMataKuliahMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutMataKuliahMahasiswaInput, PendaftaranUpdateWithoutMataKuliahMahasiswaInput>, PendaftaranUncheckedUpdateWithoutMataKuliahMahasiswaInput>
  }

  export type MataKuliahUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput = {
    create?: XOR<MataKuliahCreateWithoutMataKuliahMahasiswaInput, MataKuliahUncheckedCreateWithoutMataKuliahMahasiswaInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutMataKuliahMahasiswaInput
    upsert?: MataKuliahUpsertWithoutMataKuliahMahasiswaInput
    connect?: MataKuliahWhereUniqueInput
    update?: XOR<XOR<MataKuliahUpdateToOneWithWhereWithoutMataKuliahMahasiswaInput, MataKuliahUpdateWithoutMataKuliahMahasiswaInput>, MataKuliahUncheckedUpdateWithoutMataKuliahMahasiswaInput>
  }

  export type EvaluasiDiriUpdateManyWithoutMataKuliahMahasiswaNestedInput = {
    create?: XOR<EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput> | EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput[] | EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput | EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    upsert?: EvaluasiDiriUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput | EvaluasiDiriUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    createMany?: EvaluasiDiriCreateManyMataKuliahMahasiswaInputEnvelope
    set?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    disconnect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    delete?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    update?: EvaluasiDiriUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput | EvaluasiDiriUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    updateMany?: EvaluasiDiriUpdateManyWithWhereWithoutMataKuliahMahasiswaInput | EvaluasiDiriUpdateManyWithWhereWithoutMataKuliahMahasiswaInput[]
    deleteMany?: EvaluasiDiriScalarWhereInput | EvaluasiDiriScalarWhereInput[]
  }

  export type SanggahanAssesmenMkUpdateManyWithoutMataKuliahMahasiswaNestedInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput> | SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput[] | SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    upsert?: SanggahanAssesmenMkUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    createMany?: SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInputEnvelope
    set?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    disconnect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    delete?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    update?: SanggahanAssesmenMkUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    updateMany?: SanggahanAssesmenMkUpdateManyWithWhereWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkUpdateManyWithWhereWithoutMataKuliahMahasiswaInput[]
    deleteMany?: SanggahanAssesmenMkScalarWhereInput | SanggahanAssesmenMkScalarWhereInput[]
  }

  export type EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput = {
    create?: XOR<EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput> | EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput[] | EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput | EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    upsert?: EvaluasiDiriUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput | EvaluasiDiriUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    createMany?: EvaluasiDiriCreateManyMataKuliahMahasiswaInputEnvelope
    set?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    disconnect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    delete?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    connect?: EvaluasiDiriWhereUniqueInput | EvaluasiDiriWhereUniqueInput[]
    update?: EvaluasiDiriUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput | EvaluasiDiriUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    updateMany?: EvaluasiDiriUpdateManyWithWhereWithoutMataKuliahMahasiswaInput | EvaluasiDiriUpdateManyWithWhereWithoutMataKuliahMahasiswaInput[]
    deleteMany?: EvaluasiDiriScalarWhereInput | EvaluasiDiriScalarWhereInput[]
  }

  export type SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput> | SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput[] | SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput[]
    upsert?: SanggahanAssesmenMkUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    createMany?: SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInputEnvelope
    set?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    disconnect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    delete?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    update?: SanggahanAssesmenMkUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput[]
    updateMany?: SanggahanAssesmenMkUpdateManyWithWhereWithoutMataKuliahMahasiswaInput | SanggahanAssesmenMkUpdateManyWithWhereWithoutMataKuliahMahasiswaInput[]
    deleteMany?: SanggahanAssesmenMkScalarWhereInput | SanggahanAssesmenMkScalarWhereInput[]
  }

  export type PermissionCreateNestedOneWithoutUserHasPermissionsInput = {
    create?: XOR<PermissionCreateWithoutUserHasPermissionsInput, PermissionUncheckedCreateWithoutUserHasPermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutUserHasPermissionsInput
    connect?: PermissionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserHasPermissionsInput = {
    create?: XOR<UserCreateWithoutUserHasPermissionsInput, UserUncheckedCreateWithoutUserHasPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHasPermissionsInput
    connect?: UserWhereUniqueInput
  }

  export type PermissionUpdateOneRequiredWithoutUserHasPermissionsNestedInput = {
    create?: XOR<PermissionCreateWithoutUserHasPermissionsInput, PermissionUncheckedCreateWithoutUserHasPermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutUserHasPermissionsInput
    upsert?: PermissionUpsertWithoutUserHasPermissionsInput
    connect?: PermissionWhereUniqueInput
    update?: XOR<XOR<PermissionUpdateToOneWithWhereWithoutUserHasPermissionsInput, PermissionUpdateWithoutUserHasPermissionsInput>, PermissionUncheckedUpdateWithoutUserHasPermissionsInput>
  }

  export type UserUpdateOneRequiredWithoutUserHasPermissionsNestedInput = {
    create?: XOR<UserCreateWithoutUserHasPermissionsInput, UserUncheckedCreateWithoutUserHasPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHasPermissionsInput
    upsert?: UserUpsertWithoutUserHasPermissionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserHasPermissionsInput, UserUpdateWithoutUserHasPermissionsInput>, UserUncheckedUpdateWithoutUserHasPermissionsInput>
  }

  export type RoleCreateNestedOneWithoutUserHasRolesInput = {
    create?: XOR<RoleCreateWithoutUserHasRolesInput, RoleUncheckedCreateWithoutUserHasRolesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUserHasRolesInput
    connect?: RoleWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserHasRolesInput = {
    create?: XOR<UserCreateWithoutUserHasRolesInput, UserUncheckedCreateWithoutUserHasRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHasRolesInput
    connect?: UserWhereUniqueInput
  }

  export type RoleUpdateOneRequiredWithoutUserHasRolesNestedInput = {
    create?: XOR<RoleCreateWithoutUserHasRolesInput, RoleUncheckedCreateWithoutUserHasRolesInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUserHasRolesInput
    upsert?: RoleUpsertWithoutUserHasRolesInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUserHasRolesInput, RoleUpdateWithoutUserHasRolesInput>, RoleUncheckedUpdateWithoutUserHasRolesInput>
  }

  export type UserUpdateOneRequiredWithoutUserHasRolesNestedInput = {
    create?: XOR<UserCreateWithoutUserHasRolesInput, UserUncheckedCreateWithoutUserHasRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserHasRolesInput
    upsert?: UserUpsertWithoutUserHasRolesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserHasRolesInput, UserUpdateWithoutUserHasRolesInput>, UserUncheckedUpdateWithoutUserHasRolesInput>
  }

  export type PendaftaranCreateNestedOneWithoutOrangTuaInput = {
    create?: XOR<PendaftaranCreateWithoutOrangTuaInput, PendaftaranUncheckedCreateWithoutOrangTuaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutOrangTuaInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type EnumJenisOrtuFieldUpdateOperationsInput = {
    set?: $Enums.JenisOrtu
  }

  export type PendaftaranUpdateOneRequiredWithoutOrangTuaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutOrangTuaInput, PendaftaranUncheckedCreateWithoutOrangTuaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutOrangTuaInput
    upsert?: PendaftaranUpsertWithoutOrangTuaInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutOrangTuaInput, PendaftaranUpdateWithoutOrangTuaInput>, PendaftaranUncheckedUpdateWithoutOrangTuaInput>
  }

  export type PendaftaranCreateNestedOneWithoutPekerjaanMahasiswaInput = {
    create?: XOR<PendaftaranCreateWithoutPekerjaanMahasiswaInput, PendaftaranUncheckedCreateWithoutPekerjaanMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutPekerjaanMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type EnumStatusPekerjaanFieldUpdateOperationsInput = {
    set?: $Enums.StatusPekerjaan
  }

  export type PendaftaranUpdateOneRequiredWithoutPekerjaanMahasiswaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutPekerjaanMahasiswaInput, PendaftaranUncheckedCreateWithoutPekerjaanMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutPekerjaanMahasiswaInput
    upsert?: PendaftaranUpsertWithoutPekerjaanMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutPekerjaanMahasiswaInput, PendaftaranUpdateWithoutPekerjaanMahasiswaInput>, PendaftaranUncheckedUpdateWithoutPekerjaanMahasiswaInput>
  }

  export type MahasiswaCreateNestedOneWithoutPendaftaranInput = {
    create?: XOR<MahasiswaCreateWithoutPendaftaranInput, MahasiswaUncheckedCreateWithoutPendaftaranInput>
    connectOrCreate?: MahasiswaCreateOrConnectWithoutPendaftaranInput
    connect?: MahasiswaWhereUniqueInput
  }

  export type AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutPendaftaranInput, AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput> | AssesorMahasiswaCreateWithoutPendaftaranInput[] | AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput | AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: AssesorMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
  }

  export type BuktiFormCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<BuktiFormCreateWithoutPendaftaranInput, BuktiFormUncheckedCreateWithoutPendaftaranInput> | BuktiFormCreateWithoutPendaftaranInput[] | BuktiFormUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutPendaftaranInput | BuktiFormCreateOrConnectWithoutPendaftaranInput[]
    createMany?: BuktiFormCreateManyPendaftaranInputEnvelope
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
  }

  export type DaftarUlangCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<DaftarUlangCreateWithoutPendaftaranInput, DaftarUlangUncheckedCreateWithoutPendaftaranInput> | DaftarUlangCreateWithoutPendaftaranInput[] | DaftarUlangUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutPendaftaranInput | DaftarUlangCreateOrConnectWithoutPendaftaranInput[]
    createMany?: DaftarUlangCreateManyPendaftaranInputEnvelope
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
  }

  export type InformasiKependudukanCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<InformasiKependudukanCreateWithoutPendaftaranInput, InformasiKependudukanUncheckedCreateWithoutPendaftaranInput> | InformasiKependudukanCreateWithoutPendaftaranInput[] | InformasiKependudukanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InformasiKependudukanCreateOrConnectWithoutPendaftaranInput | InformasiKependudukanCreateOrConnectWithoutPendaftaranInput[]
    createMany?: InformasiKependudukanCreateManyPendaftaranInputEnvelope
    connect?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
  }

  export type InstitusiLamaCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<InstitusiLamaCreateWithoutPendaftaranInput, InstitusiLamaUncheckedCreateWithoutPendaftaranInput> | InstitusiLamaCreateWithoutPendaftaranInput[] | InstitusiLamaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutPendaftaranInput | InstitusiLamaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: InstitusiLamaCreateManyPendaftaranInputEnvelope
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
  }

  export type MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaKonferensiCreateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput> | MahasiswaKonferensiCreateWithoutPendaftaranInput[] | MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput | MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaKonferensiCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
  }

  export type MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput> | MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput[] | MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput | MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaOrganisasiProfesiCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
  }

  export type MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput> | MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput[] | MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput | MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaPelatihanProfessionalCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
  }

  export type MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaPendidikanCreateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput> | MahasiswaPendidikanCreateWithoutPendaftaranInput[] | MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput | MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaPendidikanCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
  }

  export type MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaPiagamCreateWithoutPendaftaranInput, MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput> | MahasiswaPiagamCreateWithoutPendaftaranInput[] | MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput | MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaPiagamCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
  }

  export type MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput> | MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput[] | MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaRiwayatPekerjaanCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
  }

  export type MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput> | MataKuliahMahasiswaCreateWithoutPendaftaranInput[] | MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput | MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MataKuliahMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type OrangTuaCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<OrangTuaCreateWithoutPendaftaranInput, OrangTuaUncheckedCreateWithoutPendaftaranInput> | OrangTuaCreateWithoutPendaftaranInput[] | OrangTuaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: OrangTuaCreateOrConnectWithoutPendaftaranInput | OrangTuaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: OrangTuaCreateManyPendaftaranInputEnvelope
    connect?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
  }

  export type PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<PekerjaanMahasiswaCreateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput> | PekerjaanMahasiswaCreateWithoutPendaftaranInput[] | PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput | PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: PekerjaanMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
  }

  export type PesantrenCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<PesantrenCreateWithoutPendaftaranInput, PesantrenUncheckedCreateWithoutPendaftaranInput> | PesantrenCreateWithoutPendaftaranInput[] | PesantrenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PesantrenCreateOrConnectWithoutPendaftaranInput | PesantrenCreateOrConnectWithoutPendaftaranInput[]
    createMany?: PesantrenCreateManyPendaftaranInputEnvelope
    connect?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
  }

  export type SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutPendaftaranInput, SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput> | SanggahanAssesmenCreateWithoutPendaftaranInput[] | SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput | SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput[]
    createMany?: SanggahanAssesmenCreateManyPendaftaranInputEnvelope
    connect?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
  }

  export type SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput> | SkRektorMahasiswaCreateWithoutPendaftaranInput[] | SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput | SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: SkRektorMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
  }

  export type AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutPendaftaranInput, AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput> | AssesorMahasiswaCreateWithoutPendaftaranInput[] | AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput | AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: AssesorMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
  }

  export type BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<BuktiFormCreateWithoutPendaftaranInput, BuktiFormUncheckedCreateWithoutPendaftaranInput> | BuktiFormCreateWithoutPendaftaranInput[] | BuktiFormUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutPendaftaranInput | BuktiFormCreateOrConnectWithoutPendaftaranInput[]
    createMany?: BuktiFormCreateManyPendaftaranInputEnvelope
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
  }

  export type DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<DaftarUlangCreateWithoutPendaftaranInput, DaftarUlangUncheckedCreateWithoutPendaftaranInput> | DaftarUlangCreateWithoutPendaftaranInput[] | DaftarUlangUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutPendaftaranInput | DaftarUlangCreateOrConnectWithoutPendaftaranInput[]
    createMany?: DaftarUlangCreateManyPendaftaranInputEnvelope
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
  }

  export type InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<InformasiKependudukanCreateWithoutPendaftaranInput, InformasiKependudukanUncheckedCreateWithoutPendaftaranInput> | InformasiKependudukanCreateWithoutPendaftaranInput[] | InformasiKependudukanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InformasiKependudukanCreateOrConnectWithoutPendaftaranInput | InformasiKependudukanCreateOrConnectWithoutPendaftaranInput[]
    createMany?: InformasiKependudukanCreateManyPendaftaranInputEnvelope
    connect?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
  }

  export type InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<InstitusiLamaCreateWithoutPendaftaranInput, InstitusiLamaUncheckedCreateWithoutPendaftaranInput> | InstitusiLamaCreateWithoutPendaftaranInput[] | InstitusiLamaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutPendaftaranInput | InstitusiLamaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: InstitusiLamaCreateManyPendaftaranInputEnvelope
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
  }

  export type MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaKonferensiCreateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput> | MahasiswaKonferensiCreateWithoutPendaftaranInput[] | MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput | MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaKonferensiCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
  }

  export type MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput> | MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput[] | MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput | MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaOrganisasiProfesiCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
  }

  export type MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput> | MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput[] | MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput | MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaPelatihanProfessionalCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
  }

  export type MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaPendidikanCreateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput> | MahasiswaPendidikanCreateWithoutPendaftaranInput[] | MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput | MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaPendidikanCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
  }

  export type MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaPiagamCreateWithoutPendaftaranInput, MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput> | MahasiswaPiagamCreateWithoutPendaftaranInput[] | MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput | MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaPiagamCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
  }

  export type MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput> | MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput[] | MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MahasiswaRiwayatPekerjaanCreateManyPendaftaranInputEnvelope
    connect?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
  }

  export type MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput> | MataKuliahMahasiswaCreateWithoutPendaftaranInput[] | MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput | MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: MataKuliahMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<OrangTuaCreateWithoutPendaftaranInput, OrangTuaUncheckedCreateWithoutPendaftaranInput> | OrangTuaCreateWithoutPendaftaranInput[] | OrangTuaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: OrangTuaCreateOrConnectWithoutPendaftaranInput | OrangTuaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: OrangTuaCreateManyPendaftaranInputEnvelope
    connect?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
  }

  export type PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<PekerjaanMahasiswaCreateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput> | PekerjaanMahasiswaCreateWithoutPendaftaranInput[] | PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput | PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: PekerjaanMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
  }

  export type PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<PesantrenCreateWithoutPendaftaranInput, PesantrenUncheckedCreateWithoutPendaftaranInput> | PesantrenCreateWithoutPendaftaranInput[] | PesantrenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PesantrenCreateOrConnectWithoutPendaftaranInput | PesantrenCreateOrConnectWithoutPendaftaranInput[]
    createMany?: PesantrenCreateManyPendaftaranInputEnvelope
    connect?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
  }

  export type SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutPendaftaranInput, SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput> | SanggahanAssesmenCreateWithoutPendaftaranInput[] | SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput | SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput[]
    createMany?: SanggahanAssesmenCreateManyPendaftaranInputEnvelope
    connect?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
  }

  export type SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput> | SkRektorMahasiswaCreateWithoutPendaftaranInput[] | SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput | SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    createMany?: SkRektorMahasiswaCreateManyPendaftaranInputEnvelope
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
  }

  export type EnumSistemKuliahFieldUpdateOperationsInput = {
    set?: $Enums.SistemKuliah
  }

  export type MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaCreateWithoutPendaftaranInput, MahasiswaUncheckedCreateWithoutPendaftaranInput>
    connectOrCreate?: MahasiswaCreateOrConnectWithoutPendaftaranInput
    upsert?: MahasiswaUpsertWithoutPendaftaranInput
    connect?: MahasiswaWhereUniqueInput
    update?: XOR<XOR<MahasiswaUpdateToOneWithWhereWithoutPendaftaranInput, MahasiswaUpdateWithoutPendaftaranInput>, MahasiswaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutPendaftaranInput, AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput> | AssesorMahasiswaCreateWithoutPendaftaranInput[] | AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput | AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: AssesorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | AssesorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: AssesorMahasiswaCreateManyPendaftaranInputEnvelope
    set?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    disconnect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    delete?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    update?: AssesorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | AssesorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: AssesorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | AssesorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: AssesorMahasiswaScalarWhereInput | AssesorMahasiswaScalarWhereInput[]
  }

  export type BuktiFormUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<BuktiFormCreateWithoutPendaftaranInput, BuktiFormUncheckedCreateWithoutPendaftaranInput> | BuktiFormCreateWithoutPendaftaranInput[] | BuktiFormUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutPendaftaranInput | BuktiFormCreateOrConnectWithoutPendaftaranInput[]
    upsert?: BuktiFormUpsertWithWhereUniqueWithoutPendaftaranInput | BuktiFormUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: BuktiFormCreateManyPendaftaranInputEnvelope
    set?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    disconnect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    delete?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    update?: BuktiFormUpdateWithWhereUniqueWithoutPendaftaranInput | BuktiFormUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: BuktiFormUpdateManyWithWhereWithoutPendaftaranInput | BuktiFormUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: BuktiFormScalarWhereInput | BuktiFormScalarWhereInput[]
  }

  export type DaftarUlangUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<DaftarUlangCreateWithoutPendaftaranInput, DaftarUlangUncheckedCreateWithoutPendaftaranInput> | DaftarUlangCreateWithoutPendaftaranInput[] | DaftarUlangUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutPendaftaranInput | DaftarUlangCreateOrConnectWithoutPendaftaranInput[]
    upsert?: DaftarUlangUpsertWithWhereUniqueWithoutPendaftaranInput | DaftarUlangUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: DaftarUlangCreateManyPendaftaranInputEnvelope
    set?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    disconnect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    delete?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    update?: DaftarUlangUpdateWithWhereUniqueWithoutPendaftaranInput | DaftarUlangUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: DaftarUlangUpdateManyWithWhereWithoutPendaftaranInput | DaftarUlangUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: DaftarUlangScalarWhereInput | DaftarUlangScalarWhereInput[]
  }

  export type InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<InformasiKependudukanCreateWithoutPendaftaranInput, InformasiKependudukanUncheckedCreateWithoutPendaftaranInput> | InformasiKependudukanCreateWithoutPendaftaranInput[] | InformasiKependudukanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InformasiKependudukanCreateOrConnectWithoutPendaftaranInput | InformasiKependudukanCreateOrConnectWithoutPendaftaranInput[]
    upsert?: InformasiKependudukanUpsertWithWhereUniqueWithoutPendaftaranInput | InformasiKependudukanUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: InformasiKependudukanCreateManyPendaftaranInputEnvelope
    set?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    disconnect?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    delete?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    connect?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    update?: InformasiKependudukanUpdateWithWhereUniqueWithoutPendaftaranInput | InformasiKependudukanUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: InformasiKependudukanUpdateManyWithWhereWithoutPendaftaranInput | InformasiKependudukanUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: InformasiKependudukanScalarWhereInput | InformasiKependudukanScalarWhereInput[]
  }

  export type InstitusiLamaUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<InstitusiLamaCreateWithoutPendaftaranInput, InstitusiLamaUncheckedCreateWithoutPendaftaranInput> | InstitusiLamaCreateWithoutPendaftaranInput[] | InstitusiLamaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutPendaftaranInput | InstitusiLamaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: InstitusiLamaUpsertWithWhereUniqueWithoutPendaftaranInput | InstitusiLamaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: InstitusiLamaCreateManyPendaftaranInputEnvelope
    set?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    disconnect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    delete?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    update?: InstitusiLamaUpdateWithWhereUniqueWithoutPendaftaranInput | InstitusiLamaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: InstitusiLamaUpdateManyWithWhereWithoutPendaftaranInput | InstitusiLamaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: InstitusiLamaScalarWhereInput | InstitusiLamaScalarWhereInput[]
  }

  export type MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaKonferensiCreateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput> | MahasiswaKonferensiCreateWithoutPendaftaranInput[] | MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput | MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaKonferensiUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaKonferensiUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaKonferensiCreateManyPendaftaranInputEnvelope
    set?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    disconnect?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    delete?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    connect?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    update?: MahasiswaKonferensiUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaKonferensiUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaKonferensiUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaKonferensiUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaKonferensiScalarWhereInput | MahasiswaKonferensiScalarWhereInput[]
  }

  export type MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput> | MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput[] | MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput | MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaOrganisasiProfesiUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaOrganisasiProfesiUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaOrganisasiProfesiCreateManyPendaftaranInputEnvelope
    set?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    disconnect?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    delete?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    connect?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    update?: MahasiswaOrganisasiProfesiUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaOrganisasiProfesiUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaOrganisasiProfesiUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaOrganisasiProfesiUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaOrganisasiProfesiScalarWhereInput | MahasiswaOrganisasiProfesiScalarWhereInput[]
  }

  export type MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput> | MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput[] | MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput | MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaPelatihanProfessionalUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaPelatihanProfessionalUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaPelatihanProfessionalCreateManyPendaftaranInputEnvelope
    set?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    disconnect?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    delete?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    connect?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    update?: MahasiswaPelatihanProfessionalUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaPelatihanProfessionalUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaPelatihanProfessionalUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaPelatihanProfessionalUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaPelatihanProfessionalScalarWhereInput | MahasiswaPelatihanProfessionalScalarWhereInput[]
  }

  export type MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaPendidikanCreateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput> | MahasiswaPendidikanCreateWithoutPendaftaranInput[] | MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput | MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaPendidikanUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaPendidikanUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaPendidikanCreateManyPendaftaranInputEnvelope
    set?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    disconnect?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    delete?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    connect?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    update?: MahasiswaPendidikanUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaPendidikanUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaPendidikanUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaPendidikanUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaPendidikanScalarWhereInput | MahasiswaPendidikanScalarWhereInput[]
  }

  export type MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaPiagamCreateWithoutPendaftaranInput, MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput> | MahasiswaPiagamCreateWithoutPendaftaranInput[] | MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput | MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaPiagamUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaPiagamUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaPiagamCreateManyPendaftaranInputEnvelope
    set?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    disconnect?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    delete?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    connect?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    update?: MahasiswaPiagamUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaPiagamUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaPiagamUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaPiagamUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaPiagamScalarWhereInput | MahasiswaPiagamScalarWhereInput[]
  }

  export type MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput> | MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput[] | MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaRiwayatPekerjaanUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaRiwayatPekerjaanCreateManyPendaftaranInputEnvelope
    set?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    disconnect?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    delete?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    connect?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    update?: MahasiswaRiwayatPekerjaanUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaRiwayatPekerjaanUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaRiwayatPekerjaanScalarWhereInput | MahasiswaRiwayatPekerjaanScalarWhereInput[]
  }

  export type MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput> | MataKuliahMahasiswaCreateWithoutPendaftaranInput[] | MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput | MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MataKuliahMahasiswaCreateManyPendaftaranInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type OrangTuaUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<OrangTuaCreateWithoutPendaftaranInput, OrangTuaUncheckedCreateWithoutPendaftaranInput> | OrangTuaCreateWithoutPendaftaranInput[] | OrangTuaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: OrangTuaCreateOrConnectWithoutPendaftaranInput | OrangTuaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: OrangTuaUpsertWithWhereUniqueWithoutPendaftaranInput | OrangTuaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: OrangTuaCreateManyPendaftaranInputEnvelope
    set?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    disconnect?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    delete?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    connect?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    update?: OrangTuaUpdateWithWhereUniqueWithoutPendaftaranInput | OrangTuaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: OrangTuaUpdateManyWithWhereWithoutPendaftaranInput | OrangTuaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: OrangTuaScalarWhereInput | OrangTuaScalarWhereInput[]
  }

  export type PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<PekerjaanMahasiswaCreateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput> | PekerjaanMahasiswaCreateWithoutPendaftaranInput[] | PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput | PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: PekerjaanMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | PekerjaanMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: PekerjaanMahasiswaCreateManyPendaftaranInputEnvelope
    set?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    disconnect?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    delete?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    connect?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    update?: PekerjaanMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | PekerjaanMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: PekerjaanMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | PekerjaanMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: PekerjaanMahasiswaScalarWhereInput | PekerjaanMahasiswaScalarWhereInput[]
  }

  export type PesantrenUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<PesantrenCreateWithoutPendaftaranInput, PesantrenUncheckedCreateWithoutPendaftaranInput> | PesantrenCreateWithoutPendaftaranInput[] | PesantrenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PesantrenCreateOrConnectWithoutPendaftaranInput | PesantrenCreateOrConnectWithoutPendaftaranInput[]
    upsert?: PesantrenUpsertWithWhereUniqueWithoutPendaftaranInput | PesantrenUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: PesantrenCreateManyPendaftaranInputEnvelope
    set?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    disconnect?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    delete?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    connect?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    update?: PesantrenUpdateWithWhereUniqueWithoutPendaftaranInput | PesantrenUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: PesantrenUpdateManyWithWhereWithoutPendaftaranInput | PesantrenUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: PesantrenScalarWhereInput | PesantrenScalarWhereInput[]
  }

  export type SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutPendaftaranInput, SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput> | SanggahanAssesmenCreateWithoutPendaftaranInput[] | SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput | SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput[]
    upsert?: SanggahanAssesmenUpsertWithWhereUniqueWithoutPendaftaranInput | SanggahanAssesmenUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: SanggahanAssesmenCreateManyPendaftaranInputEnvelope
    set?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    disconnect?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    delete?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    connect?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    update?: SanggahanAssesmenUpdateWithWhereUniqueWithoutPendaftaranInput | SanggahanAssesmenUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: SanggahanAssesmenUpdateManyWithWhereWithoutPendaftaranInput | SanggahanAssesmenUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: SanggahanAssesmenScalarWhereInput | SanggahanAssesmenScalarWhereInput[]
  }

  export type SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput> | SkRektorMahasiswaCreateWithoutPendaftaranInput[] | SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput | SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: SkRektorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | SkRektorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: SkRektorMahasiswaCreateManyPendaftaranInputEnvelope
    set?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    disconnect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    delete?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    update?: SkRektorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | SkRektorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: SkRektorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | SkRektorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: SkRektorMahasiswaScalarWhereInput | SkRektorMahasiswaScalarWhereInput[]
  }

  export type AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutPendaftaranInput, AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput> | AssesorMahasiswaCreateWithoutPendaftaranInput[] | AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput | AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: AssesorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | AssesorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: AssesorMahasiswaCreateManyPendaftaranInputEnvelope
    set?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    disconnect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    delete?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    connect?: AssesorMahasiswaWhereUniqueInput | AssesorMahasiswaWhereUniqueInput[]
    update?: AssesorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | AssesorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: AssesorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | AssesorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: AssesorMahasiswaScalarWhereInput | AssesorMahasiswaScalarWhereInput[]
  }

  export type BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<BuktiFormCreateWithoutPendaftaranInput, BuktiFormUncheckedCreateWithoutPendaftaranInput> | BuktiFormCreateWithoutPendaftaranInput[] | BuktiFormUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: BuktiFormCreateOrConnectWithoutPendaftaranInput | BuktiFormCreateOrConnectWithoutPendaftaranInput[]
    upsert?: BuktiFormUpsertWithWhereUniqueWithoutPendaftaranInput | BuktiFormUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: BuktiFormCreateManyPendaftaranInputEnvelope
    set?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    disconnect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    delete?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    connect?: BuktiFormWhereUniqueInput | BuktiFormWhereUniqueInput[]
    update?: BuktiFormUpdateWithWhereUniqueWithoutPendaftaranInput | BuktiFormUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: BuktiFormUpdateManyWithWhereWithoutPendaftaranInput | BuktiFormUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: BuktiFormScalarWhereInput | BuktiFormScalarWhereInput[]
  }

  export type DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<DaftarUlangCreateWithoutPendaftaranInput, DaftarUlangUncheckedCreateWithoutPendaftaranInput> | DaftarUlangCreateWithoutPendaftaranInput[] | DaftarUlangUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutPendaftaranInput | DaftarUlangCreateOrConnectWithoutPendaftaranInput[]
    upsert?: DaftarUlangUpsertWithWhereUniqueWithoutPendaftaranInput | DaftarUlangUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: DaftarUlangCreateManyPendaftaranInputEnvelope
    set?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    disconnect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    delete?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    update?: DaftarUlangUpdateWithWhereUniqueWithoutPendaftaranInput | DaftarUlangUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: DaftarUlangUpdateManyWithWhereWithoutPendaftaranInput | DaftarUlangUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: DaftarUlangScalarWhereInput | DaftarUlangScalarWhereInput[]
  }

  export type InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<InformasiKependudukanCreateWithoutPendaftaranInput, InformasiKependudukanUncheckedCreateWithoutPendaftaranInput> | InformasiKependudukanCreateWithoutPendaftaranInput[] | InformasiKependudukanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InformasiKependudukanCreateOrConnectWithoutPendaftaranInput | InformasiKependudukanCreateOrConnectWithoutPendaftaranInput[]
    upsert?: InformasiKependudukanUpsertWithWhereUniqueWithoutPendaftaranInput | InformasiKependudukanUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: InformasiKependudukanCreateManyPendaftaranInputEnvelope
    set?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    disconnect?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    delete?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    connect?: InformasiKependudukanWhereUniqueInput | InformasiKependudukanWhereUniqueInput[]
    update?: InformasiKependudukanUpdateWithWhereUniqueWithoutPendaftaranInput | InformasiKependudukanUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: InformasiKependudukanUpdateManyWithWhereWithoutPendaftaranInput | InformasiKependudukanUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: InformasiKependudukanScalarWhereInput | InformasiKependudukanScalarWhereInput[]
  }

  export type InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<InstitusiLamaCreateWithoutPendaftaranInput, InstitusiLamaUncheckedCreateWithoutPendaftaranInput> | InstitusiLamaCreateWithoutPendaftaranInput[] | InstitusiLamaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: InstitusiLamaCreateOrConnectWithoutPendaftaranInput | InstitusiLamaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: InstitusiLamaUpsertWithWhereUniqueWithoutPendaftaranInput | InstitusiLamaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: InstitusiLamaCreateManyPendaftaranInputEnvelope
    set?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    disconnect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    delete?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    connect?: InstitusiLamaWhereUniqueInput | InstitusiLamaWhereUniqueInput[]
    update?: InstitusiLamaUpdateWithWhereUniqueWithoutPendaftaranInput | InstitusiLamaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: InstitusiLamaUpdateManyWithWhereWithoutPendaftaranInput | InstitusiLamaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: InstitusiLamaScalarWhereInput | InstitusiLamaScalarWhereInput[]
  }

  export type MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaKonferensiCreateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput> | MahasiswaKonferensiCreateWithoutPendaftaranInput[] | MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput | MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaKonferensiUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaKonferensiUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaKonferensiCreateManyPendaftaranInputEnvelope
    set?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    disconnect?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    delete?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    connect?: MahasiswaKonferensiWhereUniqueInput | MahasiswaKonferensiWhereUniqueInput[]
    update?: MahasiswaKonferensiUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaKonferensiUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaKonferensiUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaKonferensiUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaKonferensiScalarWhereInput | MahasiswaKonferensiScalarWhereInput[]
  }

  export type MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput> | MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput[] | MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput | MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaOrganisasiProfesiUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaOrganisasiProfesiUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaOrganisasiProfesiCreateManyPendaftaranInputEnvelope
    set?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    disconnect?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    delete?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    connect?: MahasiswaOrganisasiProfesiWhereUniqueInput | MahasiswaOrganisasiProfesiWhereUniqueInput[]
    update?: MahasiswaOrganisasiProfesiUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaOrganisasiProfesiUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaOrganisasiProfesiUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaOrganisasiProfesiUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaOrganisasiProfesiScalarWhereInput | MahasiswaOrganisasiProfesiScalarWhereInput[]
  }

  export type MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput> | MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput[] | MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput | MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaPelatihanProfessionalUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaPelatihanProfessionalUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaPelatihanProfessionalCreateManyPendaftaranInputEnvelope
    set?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    disconnect?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    delete?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    connect?: MahasiswaPelatihanProfessionalWhereUniqueInput | MahasiswaPelatihanProfessionalWhereUniqueInput[]
    update?: MahasiswaPelatihanProfessionalUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaPelatihanProfessionalUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaPelatihanProfessionalUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaPelatihanProfessionalUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaPelatihanProfessionalScalarWhereInput | MahasiswaPelatihanProfessionalScalarWhereInput[]
  }

  export type MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaPendidikanCreateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput> | MahasiswaPendidikanCreateWithoutPendaftaranInput[] | MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput | MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaPendidikanUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaPendidikanUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaPendidikanCreateManyPendaftaranInputEnvelope
    set?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    disconnect?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    delete?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    connect?: MahasiswaPendidikanWhereUniqueInput | MahasiswaPendidikanWhereUniqueInput[]
    update?: MahasiswaPendidikanUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaPendidikanUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaPendidikanUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaPendidikanUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaPendidikanScalarWhereInput | MahasiswaPendidikanScalarWhereInput[]
  }

  export type MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaPiagamCreateWithoutPendaftaranInput, MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput> | MahasiswaPiagamCreateWithoutPendaftaranInput[] | MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput | MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaPiagamUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaPiagamUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaPiagamCreateManyPendaftaranInputEnvelope
    set?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    disconnect?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    delete?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    connect?: MahasiswaPiagamWhereUniqueInput | MahasiswaPiagamWhereUniqueInput[]
    update?: MahasiswaPiagamUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaPiagamUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaPiagamUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaPiagamUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaPiagamScalarWhereInput | MahasiswaPiagamScalarWhereInput[]
  }

  export type MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput> | MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput[] | MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MahasiswaRiwayatPekerjaanUpsertWithWhereUniqueWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MahasiswaRiwayatPekerjaanCreateManyPendaftaranInputEnvelope
    set?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    disconnect?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    delete?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    connect?: MahasiswaRiwayatPekerjaanWhereUniqueInput | MahasiswaRiwayatPekerjaanWhereUniqueInput[]
    update?: MahasiswaRiwayatPekerjaanUpdateWithWhereUniqueWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MahasiswaRiwayatPekerjaanUpdateManyWithWhereWithoutPendaftaranInput | MahasiswaRiwayatPekerjaanUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MahasiswaRiwayatPekerjaanScalarWhereInput | MahasiswaRiwayatPekerjaanScalarWhereInput[]
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput> | MataKuliahMahasiswaCreateWithoutPendaftaranInput[] | MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput | MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: MataKuliahMahasiswaCreateManyPendaftaranInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<OrangTuaCreateWithoutPendaftaranInput, OrangTuaUncheckedCreateWithoutPendaftaranInput> | OrangTuaCreateWithoutPendaftaranInput[] | OrangTuaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: OrangTuaCreateOrConnectWithoutPendaftaranInput | OrangTuaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: OrangTuaUpsertWithWhereUniqueWithoutPendaftaranInput | OrangTuaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: OrangTuaCreateManyPendaftaranInputEnvelope
    set?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    disconnect?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    delete?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    connect?: OrangTuaWhereUniqueInput | OrangTuaWhereUniqueInput[]
    update?: OrangTuaUpdateWithWhereUniqueWithoutPendaftaranInput | OrangTuaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: OrangTuaUpdateManyWithWhereWithoutPendaftaranInput | OrangTuaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: OrangTuaScalarWhereInput | OrangTuaScalarWhereInput[]
  }

  export type PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<PekerjaanMahasiswaCreateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput> | PekerjaanMahasiswaCreateWithoutPendaftaranInput[] | PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput | PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: PekerjaanMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | PekerjaanMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: PekerjaanMahasiswaCreateManyPendaftaranInputEnvelope
    set?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    disconnect?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    delete?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    connect?: PekerjaanMahasiswaWhereUniqueInput | PekerjaanMahasiswaWhereUniqueInput[]
    update?: PekerjaanMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | PekerjaanMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: PekerjaanMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | PekerjaanMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: PekerjaanMahasiswaScalarWhereInput | PekerjaanMahasiswaScalarWhereInput[]
  }

  export type PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<PesantrenCreateWithoutPendaftaranInput, PesantrenUncheckedCreateWithoutPendaftaranInput> | PesantrenCreateWithoutPendaftaranInput[] | PesantrenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: PesantrenCreateOrConnectWithoutPendaftaranInput | PesantrenCreateOrConnectWithoutPendaftaranInput[]
    upsert?: PesantrenUpsertWithWhereUniqueWithoutPendaftaranInput | PesantrenUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: PesantrenCreateManyPendaftaranInputEnvelope
    set?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    disconnect?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    delete?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    connect?: PesantrenWhereUniqueInput | PesantrenWhereUniqueInput[]
    update?: PesantrenUpdateWithWhereUniqueWithoutPendaftaranInput | PesantrenUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: PesantrenUpdateManyWithWhereWithoutPendaftaranInput | PesantrenUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: PesantrenScalarWhereInput | PesantrenScalarWhereInput[]
  }

  export type SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutPendaftaranInput, SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput> | SanggahanAssesmenCreateWithoutPendaftaranInput[] | SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput | SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput[]
    upsert?: SanggahanAssesmenUpsertWithWhereUniqueWithoutPendaftaranInput | SanggahanAssesmenUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: SanggahanAssesmenCreateManyPendaftaranInputEnvelope
    set?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    disconnect?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    delete?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    connect?: SanggahanAssesmenWhereUniqueInput | SanggahanAssesmenWhereUniqueInput[]
    update?: SanggahanAssesmenUpdateWithWhereUniqueWithoutPendaftaranInput | SanggahanAssesmenUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: SanggahanAssesmenUpdateManyWithWhereWithoutPendaftaranInput | SanggahanAssesmenUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: SanggahanAssesmenScalarWhereInput | SanggahanAssesmenScalarWhereInput[]
  }

  export type SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput> | SkRektorMahasiswaCreateWithoutPendaftaranInput[] | SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput | SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput[]
    upsert?: SkRektorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput | SkRektorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput[]
    createMany?: SkRektorMahasiswaCreateManyPendaftaranInputEnvelope
    set?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    disconnect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    delete?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    update?: SkRektorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput | SkRektorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput[]
    updateMany?: SkRektorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput | SkRektorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput[]
    deleteMany?: SkRektorMahasiswaScalarWhereInput | SkRektorMahasiswaScalarWhereInput[]
  }

  export type UserHasPermissionsCreateNestedManyWithoutPermissionInput = {
    create?: XOR<UserHasPermissionsCreateWithoutPermissionInput, UserHasPermissionsUncheckedCreateWithoutPermissionInput> | UserHasPermissionsCreateWithoutPermissionInput[] | UserHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutPermissionInput | UserHasPermissionsCreateOrConnectWithoutPermissionInput[]
    createMany?: UserHasPermissionsCreateManyPermissionInputEnvelope
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
  }

  export type RoleHasPermissionsCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutPermissionInput, RoleHasPermissionsUncheckedCreateWithoutPermissionInput> | RoleHasPermissionsCreateWithoutPermissionInput[] | RoleHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutPermissionInput | RoleHasPermissionsCreateOrConnectWithoutPermissionInput[]
    createMany?: RoleHasPermissionsCreateManyPermissionInputEnvelope
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
  }

  export type UserHasPermissionsUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<UserHasPermissionsCreateWithoutPermissionInput, UserHasPermissionsUncheckedCreateWithoutPermissionInput> | UserHasPermissionsCreateWithoutPermissionInput[] | UserHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutPermissionInput | UserHasPermissionsCreateOrConnectWithoutPermissionInput[]
    createMany?: UserHasPermissionsCreateManyPermissionInputEnvelope
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
  }

  export type RoleHasPermissionsUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutPermissionInput, RoleHasPermissionsUncheckedCreateWithoutPermissionInput> | RoleHasPermissionsCreateWithoutPermissionInput[] | RoleHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutPermissionInput | RoleHasPermissionsCreateOrConnectWithoutPermissionInput[]
    createMany?: RoleHasPermissionsCreateManyPermissionInputEnvelope
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
  }

  export type UserHasPermissionsUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<UserHasPermissionsCreateWithoutPermissionInput, UserHasPermissionsUncheckedCreateWithoutPermissionInput> | UserHasPermissionsCreateWithoutPermissionInput[] | UserHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutPermissionInput | UserHasPermissionsCreateOrConnectWithoutPermissionInput[]
    upsert?: UserHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput | UserHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: UserHasPermissionsCreateManyPermissionInputEnvelope
    set?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    disconnect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    delete?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    update?: UserHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput | UserHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: UserHasPermissionsUpdateManyWithWhereWithoutPermissionInput | UserHasPermissionsUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: UserHasPermissionsScalarWhereInput | UserHasPermissionsScalarWhereInput[]
  }

  export type RoleHasPermissionsUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutPermissionInput, RoleHasPermissionsUncheckedCreateWithoutPermissionInput> | RoleHasPermissionsCreateWithoutPermissionInput[] | RoleHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutPermissionInput | RoleHasPermissionsCreateOrConnectWithoutPermissionInput[]
    upsert?: RoleHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput | RoleHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: RoleHasPermissionsCreateManyPermissionInputEnvelope
    set?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    disconnect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    delete?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    update?: RoleHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput | RoleHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RoleHasPermissionsUpdateManyWithWhereWithoutPermissionInput | RoleHasPermissionsUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RoleHasPermissionsScalarWhereInput | RoleHasPermissionsScalarWhereInput[]
  }

  export type UserHasPermissionsUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<UserHasPermissionsCreateWithoutPermissionInput, UserHasPermissionsUncheckedCreateWithoutPermissionInput> | UserHasPermissionsCreateWithoutPermissionInput[] | UserHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutPermissionInput | UserHasPermissionsCreateOrConnectWithoutPermissionInput[]
    upsert?: UserHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput | UserHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: UserHasPermissionsCreateManyPermissionInputEnvelope
    set?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    disconnect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    delete?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    update?: UserHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput | UserHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: UserHasPermissionsUpdateManyWithWhereWithoutPermissionInput | UserHasPermissionsUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: UserHasPermissionsScalarWhereInput | UserHasPermissionsScalarWhereInput[]
  }

  export type RoleHasPermissionsUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutPermissionInput, RoleHasPermissionsUncheckedCreateWithoutPermissionInput> | RoleHasPermissionsCreateWithoutPermissionInput[] | RoleHasPermissionsUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutPermissionInput | RoleHasPermissionsCreateOrConnectWithoutPermissionInput[]
    upsert?: RoleHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput | RoleHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: RoleHasPermissionsCreateManyPermissionInputEnvelope
    set?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    disconnect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    delete?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    update?: RoleHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput | RoleHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RoleHasPermissionsUpdateManyWithWhereWithoutPermissionInput | RoleHasPermissionsUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RoleHasPermissionsScalarWhereInput | RoleHasPermissionsScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutPesantrenInput = {
    create?: XOR<PendaftaranCreateWithoutPesantrenInput, PendaftaranUncheckedCreateWithoutPesantrenInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutPesantrenInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type PendaftaranUpdateOneRequiredWithoutPesantrenNestedInput = {
    create?: XOR<PendaftaranCreateWithoutPesantrenInput, PendaftaranUncheckedCreateWithoutPesantrenInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutPesantrenInput
    upsert?: PendaftaranUpsertWithoutPesantrenInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutPesantrenInput, PendaftaranUpdateWithoutPesantrenInput>, PendaftaranUncheckedUpdateWithoutPesantrenInput>
  }

  export type UniversityCreateNestedOneWithoutProgramStudiInput = {
    create?: XOR<UniversityCreateWithoutProgramStudiInput, UniversityUncheckedCreateWithoutProgramStudiInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutProgramStudiInput
    connect?: UniversityWhereUniqueInput
  }

  export type DaftarUlangCreateNestedManyWithoutProgramStudiInput = {
    create?: XOR<DaftarUlangCreateWithoutProgramStudiInput, DaftarUlangUncheckedCreateWithoutProgramStudiInput> | DaftarUlangCreateWithoutProgramStudiInput[] | DaftarUlangUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutProgramStudiInput | DaftarUlangCreateOrConnectWithoutProgramStudiInput[]
    createMany?: DaftarUlangCreateManyProgramStudiInputEnvelope
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
  }

  export type MataKuliahCreateNestedManyWithoutProgramStudiInput = {
    create?: XOR<MataKuliahCreateWithoutProgramStudiInput, MataKuliahUncheckedCreateWithoutProgramStudiInput> | MataKuliahCreateWithoutProgramStudiInput[] | MataKuliahUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutProgramStudiInput | MataKuliahCreateOrConnectWithoutProgramStudiInput[]
    createMany?: MataKuliahCreateManyProgramStudiInputEnvelope
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
  }

  export type DaftarUlangUncheckedCreateNestedManyWithoutProgramStudiInput = {
    create?: XOR<DaftarUlangCreateWithoutProgramStudiInput, DaftarUlangUncheckedCreateWithoutProgramStudiInput> | DaftarUlangCreateWithoutProgramStudiInput[] | DaftarUlangUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutProgramStudiInput | DaftarUlangCreateOrConnectWithoutProgramStudiInput[]
    createMany?: DaftarUlangCreateManyProgramStudiInputEnvelope
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
  }

  export type MataKuliahUncheckedCreateNestedManyWithoutProgramStudiInput = {
    create?: XOR<MataKuliahCreateWithoutProgramStudiInput, MataKuliahUncheckedCreateWithoutProgramStudiInput> | MataKuliahCreateWithoutProgramStudiInput[] | MataKuliahUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutProgramStudiInput | MataKuliahCreateOrConnectWithoutProgramStudiInput[]
    createMany?: MataKuliahCreateManyProgramStudiInputEnvelope
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutProgramStudiNestedInput = {
    create?: XOR<UniversityCreateWithoutProgramStudiInput, UniversityUncheckedCreateWithoutProgramStudiInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutProgramStudiInput
    upsert?: UniversityUpsertWithoutProgramStudiInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutProgramStudiInput, UniversityUpdateWithoutProgramStudiInput>, UniversityUncheckedUpdateWithoutProgramStudiInput>
  }

  export type DaftarUlangUpdateManyWithoutProgramStudiNestedInput = {
    create?: XOR<DaftarUlangCreateWithoutProgramStudiInput, DaftarUlangUncheckedCreateWithoutProgramStudiInput> | DaftarUlangCreateWithoutProgramStudiInput[] | DaftarUlangUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutProgramStudiInput | DaftarUlangCreateOrConnectWithoutProgramStudiInput[]
    upsert?: DaftarUlangUpsertWithWhereUniqueWithoutProgramStudiInput | DaftarUlangUpsertWithWhereUniqueWithoutProgramStudiInput[]
    createMany?: DaftarUlangCreateManyProgramStudiInputEnvelope
    set?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    disconnect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    delete?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    update?: DaftarUlangUpdateWithWhereUniqueWithoutProgramStudiInput | DaftarUlangUpdateWithWhereUniqueWithoutProgramStudiInput[]
    updateMany?: DaftarUlangUpdateManyWithWhereWithoutProgramStudiInput | DaftarUlangUpdateManyWithWhereWithoutProgramStudiInput[]
    deleteMany?: DaftarUlangScalarWhereInput | DaftarUlangScalarWhereInput[]
  }

  export type MataKuliahUpdateManyWithoutProgramStudiNestedInput = {
    create?: XOR<MataKuliahCreateWithoutProgramStudiInput, MataKuliahUncheckedCreateWithoutProgramStudiInput> | MataKuliahCreateWithoutProgramStudiInput[] | MataKuliahUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutProgramStudiInput | MataKuliahCreateOrConnectWithoutProgramStudiInput[]
    upsert?: MataKuliahUpsertWithWhereUniqueWithoutProgramStudiInput | MataKuliahUpsertWithWhereUniqueWithoutProgramStudiInput[]
    createMany?: MataKuliahCreateManyProgramStudiInputEnvelope
    set?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    disconnect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    delete?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    update?: MataKuliahUpdateWithWhereUniqueWithoutProgramStudiInput | MataKuliahUpdateWithWhereUniqueWithoutProgramStudiInput[]
    updateMany?: MataKuliahUpdateManyWithWhereWithoutProgramStudiInput | MataKuliahUpdateManyWithWhereWithoutProgramStudiInput[]
    deleteMany?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
  }

  export type DaftarUlangUncheckedUpdateManyWithoutProgramStudiNestedInput = {
    create?: XOR<DaftarUlangCreateWithoutProgramStudiInput, DaftarUlangUncheckedCreateWithoutProgramStudiInput> | DaftarUlangCreateWithoutProgramStudiInput[] | DaftarUlangUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: DaftarUlangCreateOrConnectWithoutProgramStudiInput | DaftarUlangCreateOrConnectWithoutProgramStudiInput[]
    upsert?: DaftarUlangUpsertWithWhereUniqueWithoutProgramStudiInput | DaftarUlangUpsertWithWhereUniqueWithoutProgramStudiInput[]
    createMany?: DaftarUlangCreateManyProgramStudiInputEnvelope
    set?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    disconnect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    delete?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    connect?: DaftarUlangWhereUniqueInput | DaftarUlangWhereUniqueInput[]
    update?: DaftarUlangUpdateWithWhereUniqueWithoutProgramStudiInput | DaftarUlangUpdateWithWhereUniqueWithoutProgramStudiInput[]
    updateMany?: DaftarUlangUpdateManyWithWhereWithoutProgramStudiInput | DaftarUlangUpdateManyWithWhereWithoutProgramStudiInput[]
    deleteMany?: DaftarUlangScalarWhereInput | DaftarUlangScalarWhereInput[]
  }

  export type MataKuliahUncheckedUpdateManyWithoutProgramStudiNestedInput = {
    create?: XOR<MataKuliahCreateWithoutProgramStudiInput, MataKuliahUncheckedCreateWithoutProgramStudiInput> | MataKuliahCreateWithoutProgramStudiInput[] | MataKuliahUncheckedCreateWithoutProgramStudiInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutProgramStudiInput | MataKuliahCreateOrConnectWithoutProgramStudiInput[]
    upsert?: MataKuliahUpsertWithWhereUniqueWithoutProgramStudiInput | MataKuliahUpsertWithWhereUniqueWithoutProgramStudiInput[]
    createMany?: MataKuliahCreateManyProgramStudiInputEnvelope
    set?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    disconnect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    delete?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    update?: MataKuliahUpdateWithWhereUniqueWithoutProgramStudiInput | MataKuliahUpdateWithWhereUniqueWithoutProgramStudiInput[]
    updateMany?: MataKuliahUpdateManyWithWhereWithoutProgramStudiInput | MataKuliahUpdateManyWithWhereWithoutProgramStudiInput[]
    deleteMany?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
  }

  export type CountryCreateNestedOneWithoutProvinsiInput = {
    create?: XOR<CountryCreateWithoutProvinsiInput, CountryUncheckedCreateWithoutProvinsiInput>
    connectOrCreate?: CountryCreateOrConnectWithoutProvinsiInput
    connect?: CountryWhereUniqueInput
  }

  export type KabupatenCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
  }

  export type KabupatenUncheckedCreateNestedManyWithoutProvinsiInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
  }

  export type CountryUpdateOneRequiredWithoutProvinsiNestedInput = {
    create?: XOR<CountryCreateWithoutProvinsiInput, CountryUncheckedCreateWithoutProvinsiInput>
    connectOrCreate?: CountryCreateOrConnectWithoutProvinsiInput
    upsert?: CountryUpsertWithoutProvinsiInput
    connect?: CountryWhereUniqueInput
    update?: XOR<XOR<CountryUpdateToOneWithWhereWithoutProvinsiInput, CountryUpdateWithoutProvinsiInput>, CountryUncheckedUpdateWithoutProvinsiInput>
  }

  export type KabupatenUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    upsert?: KabupatenUpsertWithWhereUniqueWithoutProvinsiInput | KabupatenUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    set?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    disconnect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    delete?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    update?: KabupatenUpdateWithWhereUniqueWithoutProvinsiInput | KabupatenUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: KabupatenUpdateManyWithWhereWithoutProvinsiInput | KabupatenUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
  }

  export type KabupatenUncheckedUpdateManyWithoutProvinsiNestedInput = {
    create?: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput> | KabupatenCreateWithoutProvinsiInput[] | KabupatenUncheckedCreateWithoutProvinsiInput[]
    connectOrCreate?: KabupatenCreateOrConnectWithoutProvinsiInput | KabupatenCreateOrConnectWithoutProvinsiInput[]
    upsert?: KabupatenUpsertWithWhereUniqueWithoutProvinsiInput | KabupatenUpsertWithWhereUniqueWithoutProvinsiInput[]
    createMany?: KabupatenCreateManyProvinsiInputEnvelope
    set?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    disconnect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    delete?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    connect?: KabupatenWhereUniqueInput | KabupatenWhereUniqueInput[]
    update?: KabupatenUpdateWithWhereUniqueWithoutProvinsiInput | KabupatenUpdateWithWhereUniqueWithoutProvinsiInput[]
    updateMany?: KabupatenUpdateManyWithWhereWithoutProvinsiInput | KabupatenUpdateManyWithWhereWithoutProvinsiInput[]
    deleteMany?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
  }

  export type PermissionCreateNestedOneWithoutRoleHasPermissionsInput = {
    create?: XOR<PermissionCreateWithoutRoleHasPermissionsInput, PermissionUncheckedCreateWithoutRoleHasPermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutRoleHasPermissionsInput
    connect?: PermissionWhereUniqueInput
  }

  export type RoleCreateNestedOneWithoutRoleHasPermissionsInput = {
    create?: XOR<RoleCreateWithoutRoleHasPermissionsInput, RoleUncheckedCreateWithoutRoleHasPermissionsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleHasPermissionsInput
    connect?: RoleWhereUniqueInput
  }

  export type PermissionUpdateOneRequiredWithoutRoleHasPermissionsNestedInput = {
    create?: XOR<PermissionCreateWithoutRoleHasPermissionsInput, PermissionUncheckedCreateWithoutRoleHasPermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutRoleHasPermissionsInput
    upsert?: PermissionUpsertWithoutRoleHasPermissionsInput
    connect?: PermissionWhereUniqueInput
    update?: XOR<XOR<PermissionUpdateToOneWithWhereWithoutRoleHasPermissionsInput, PermissionUpdateWithoutRoleHasPermissionsInput>, PermissionUncheckedUpdateWithoutRoleHasPermissionsInput>
  }

  export type RoleUpdateOneRequiredWithoutRoleHasPermissionsNestedInput = {
    create?: XOR<RoleCreateWithoutRoleHasPermissionsInput, RoleUncheckedCreateWithoutRoleHasPermissionsInput>
    connectOrCreate?: RoleCreateOrConnectWithoutRoleHasPermissionsInput
    upsert?: RoleUpsertWithoutRoleHasPermissionsInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutRoleHasPermissionsInput, RoleUpdateWithoutRoleHasPermissionsInput>, RoleUncheckedUpdateWithoutRoleHasPermissionsInput>
  }

  export type UserHasRolesCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserHasRolesCreateWithoutRoleInput, UserHasRolesUncheckedCreateWithoutRoleInput> | UserHasRolesCreateWithoutRoleInput[] | UserHasRolesUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutRoleInput | UserHasRolesCreateOrConnectWithoutRoleInput[]
    createMany?: UserHasRolesCreateManyRoleInputEnvelope
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
  }

  export type RoleHasPermissionsCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutRoleInput, RoleHasPermissionsUncheckedCreateWithoutRoleInput> | RoleHasPermissionsCreateWithoutRoleInput[] | RoleHasPermissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutRoleInput | RoleHasPermissionsCreateOrConnectWithoutRoleInput[]
    createMany?: RoleHasPermissionsCreateManyRoleInputEnvelope
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
  }

  export type UserHasRolesUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserHasRolesCreateWithoutRoleInput, UserHasRolesUncheckedCreateWithoutRoleInput> | UserHasRolesCreateWithoutRoleInput[] | UserHasRolesUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutRoleInput | UserHasRolesCreateOrConnectWithoutRoleInput[]
    createMany?: UserHasRolesCreateManyRoleInputEnvelope
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
  }

  export type RoleHasPermissionsUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutRoleInput, RoleHasPermissionsUncheckedCreateWithoutRoleInput> | RoleHasPermissionsCreateWithoutRoleInput[] | RoleHasPermissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutRoleInput | RoleHasPermissionsCreateOrConnectWithoutRoleInput[]
    createMany?: RoleHasPermissionsCreateManyRoleInputEnvelope
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
  }

  export type UserHasRolesUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserHasRolesCreateWithoutRoleInput, UserHasRolesUncheckedCreateWithoutRoleInput> | UserHasRolesCreateWithoutRoleInput[] | UserHasRolesUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutRoleInput | UserHasRolesCreateOrConnectWithoutRoleInput[]
    upsert?: UserHasRolesUpsertWithWhereUniqueWithoutRoleInput | UserHasRolesUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserHasRolesCreateManyRoleInputEnvelope
    set?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    disconnect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    delete?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    update?: UserHasRolesUpdateWithWhereUniqueWithoutRoleInput | UserHasRolesUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserHasRolesUpdateManyWithWhereWithoutRoleInput | UserHasRolesUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserHasRolesScalarWhereInput | UserHasRolesScalarWhereInput[]
  }

  export type RoleHasPermissionsUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutRoleInput, RoleHasPermissionsUncheckedCreateWithoutRoleInput> | RoleHasPermissionsCreateWithoutRoleInput[] | RoleHasPermissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutRoleInput | RoleHasPermissionsCreateOrConnectWithoutRoleInput[]
    upsert?: RoleHasPermissionsUpsertWithWhereUniqueWithoutRoleInput | RoleHasPermissionsUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleHasPermissionsCreateManyRoleInputEnvelope
    set?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    disconnect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    delete?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    update?: RoleHasPermissionsUpdateWithWhereUniqueWithoutRoleInput | RoleHasPermissionsUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleHasPermissionsUpdateManyWithWhereWithoutRoleInput | RoleHasPermissionsUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleHasPermissionsScalarWhereInput | RoleHasPermissionsScalarWhereInput[]
  }

  export type UserHasRolesUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserHasRolesCreateWithoutRoleInput, UserHasRolesUncheckedCreateWithoutRoleInput> | UserHasRolesCreateWithoutRoleInput[] | UserHasRolesUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutRoleInput | UserHasRolesCreateOrConnectWithoutRoleInput[]
    upsert?: UserHasRolesUpsertWithWhereUniqueWithoutRoleInput | UserHasRolesUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserHasRolesCreateManyRoleInputEnvelope
    set?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    disconnect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    delete?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    update?: UserHasRolesUpdateWithWhereUniqueWithoutRoleInput | UserHasRolesUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserHasRolesUpdateManyWithWhereWithoutRoleInput | UserHasRolesUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserHasRolesScalarWhereInput | UserHasRolesScalarWhereInput[]
  }

  export type RoleHasPermissionsUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<RoleHasPermissionsCreateWithoutRoleInput, RoleHasPermissionsUncheckedCreateWithoutRoleInput> | RoleHasPermissionsCreateWithoutRoleInput[] | RoleHasPermissionsUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: RoleHasPermissionsCreateOrConnectWithoutRoleInput | RoleHasPermissionsCreateOrConnectWithoutRoleInput[]
    upsert?: RoleHasPermissionsUpsertWithWhereUniqueWithoutRoleInput | RoleHasPermissionsUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: RoleHasPermissionsCreateManyRoleInputEnvelope
    set?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    disconnect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    delete?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    connect?: RoleHasPermissionsWhereUniqueInput | RoleHasPermissionsWhereUniqueInput[]
    update?: RoleHasPermissionsUpdateWithWhereUniqueWithoutRoleInput | RoleHasPermissionsUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: RoleHasPermissionsUpdateManyWithWhereWithoutRoleInput | RoleHasPermissionsUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: RoleHasPermissionsScalarWhereInput | RoleHasPermissionsScalarWhereInput[]
  }

  export type PendaftaranCreateNestedOneWithoutSanggahanAssesmenInput = {
    create?: XOR<PendaftaranCreateWithoutSanggahanAssesmenInput, PendaftaranUncheckedCreateWithoutSanggahanAssesmenInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutSanggahanAssesmenInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type SanggahanAssesmenMkCreateNestedManyWithoutSanggahanAssesmenInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenMkCreateManySanggahanAssesmenInputEnvelope
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
  }

  export type SanggahanAssesmenPihakCreateNestedManyWithoutSanggahanAssesmenInput = {
    create?: XOR<SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenPihakCreateManySanggahanAssesmenInputEnvelope
    connect?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
  }

  export type SanggahanAssesmenMkUncheckedCreateNestedManyWithoutSanggahanAssesmenInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenMkCreateManySanggahanAssesmenInputEnvelope
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
  }

  export type SanggahanAssesmenPihakUncheckedCreateNestedManyWithoutSanggahanAssesmenInput = {
    create?: XOR<SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenPihakCreateManySanggahanAssesmenInputEnvelope
    connect?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
  }

  export type PendaftaranUpdateOneRequiredWithoutSanggahanAssesmenNestedInput = {
    create?: XOR<PendaftaranCreateWithoutSanggahanAssesmenInput, PendaftaranUncheckedCreateWithoutSanggahanAssesmenInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutSanggahanAssesmenInput
    upsert?: PendaftaranUpsertWithoutSanggahanAssesmenInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutSanggahanAssesmenInput, PendaftaranUpdateWithoutSanggahanAssesmenInput>, PendaftaranUncheckedUpdateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenMkUpdateManyWithoutSanggahanAssesmenNestedInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput[]
    upsert?: SanggahanAssesmenMkUpsertWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenMkUpsertWithWhereUniqueWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenMkCreateManySanggahanAssesmenInputEnvelope
    set?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    disconnect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    delete?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    update?: SanggahanAssesmenMkUpdateWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenMkUpdateWithWhereUniqueWithoutSanggahanAssesmenInput[]
    updateMany?: SanggahanAssesmenMkUpdateManyWithWhereWithoutSanggahanAssesmenInput | SanggahanAssesmenMkUpdateManyWithWhereWithoutSanggahanAssesmenInput[]
    deleteMany?: SanggahanAssesmenMkScalarWhereInput | SanggahanAssesmenMkScalarWhereInput[]
  }

  export type SanggahanAssesmenPihakUpdateManyWithoutSanggahanAssesmenNestedInput = {
    create?: XOR<SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput[]
    upsert?: SanggahanAssesmenPihakUpsertWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakUpsertWithWhereUniqueWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenPihakCreateManySanggahanAssesmenInputEnvelope
    set?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    disconnect?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    delete?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    connect?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    update?: SanggahanAssesmenPihakUpdateWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakUpdateWithWhereUniqueWithoutSanggahanAssesmenInput[]
    updateMany?: SanggahanAssesmenPihakUpdateManyWithWhereWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakUpdateManyWithWhereWithoutSanggahanAssesmenInput[]
    deleteMany?: SanggahanAssesmenPihakScalarWhereInput | SanggahanAssesmenPihakScalarWhereInput[]
  }

  export type SanggahanAssesmenMkUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput = {
    create?: XOR<SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput[]
    upsert?: SanggahanAssesmenMkUpsertWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenMkUpsertWithWhereUniqueWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenMkCreateManySanggahanAssesmenInputEnvelope
    set?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    disconnect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    delete?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    connect?: SanggahanAssesmenMkWhereUniqueInput | SanggahanAssesmenMkWhereUniqueInput[]
    update?: SanggahanAssesmenMkUpdateWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenMkUpdateWithWhereUniqueWithoutSanggahanAssesmenInput[]
    updateMany?: SanggahanAssesmenMkUpdateManyWithWhereWithoutSanggahanAssesmenInput | SanggahanAssesmenMkUpdateManyWithWhereWithoutSanggahanAssesmenInput[]
    deleteMany?: SanggahanAssesmenMkScalarWhereInput | SanggahanAssesmenMkScalarWhereInput[]
  }

  export type SanggahanAssesmenPihakUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput = {
    create?: XOR<SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput> | SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput[] | SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput[]
    connectOrCreate?: SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput[]
    upsert?: SanggahanAssesmenPihakUpsertWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakUpsertWithWhereUniqueWithoutSanggahanAssesmenInput[]
    createMany?: SanggahanAssesmenPihakCreateManySanggahanAssesmenInputEnvelope
    set?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    disconnect?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    delete?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    connect?: SanggahanAssesmenPihakWhereUniqueInput | SanggahanAssesmenPihakWhereUniqueInput[]
    update?: SanggahanAssesmenPihakUpdateWithWhereUniqueWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakUpdateWithWhereUniqueWithoutSanggahanAssesmenInput[]
    updateMany?: SanggahanAssesmenPihakUpdateManyWithWhereWithoutSanggahanAssesmenInput | SanggahanAssesmenPihakUpdateManyWithWhereWithoutSanggahanAssesmenInput[]
    deleteMany?: SanggahanAssesmenPihakScalarWhereInput | SanggahanAssesmenPihakScalarWhereInput[]
  }

  export type SanggahanAssesmenCreateNestedOneWithoutSanggahanAssesmenMkInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenMkInput>
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutSanggahanAssesmenMkInput
    connect?: SanggahanAssesmenWhereUniqueInput
  }

  export type MataKuliahMahasiswaCreateNestedOneWithoutSanggahanAssesmenMkInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUncheckedCreateWithoutSanggahanAssesmenMkInput>
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutSanggahanAssesmenMkInput
    connect?: MataKuliahMahasiswaWhereUniqueInput
  }

  export type SanggahanAssesmenUpdateOneRequiredWithoutSanggahanAssesmenMkNestedInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenMkInput>
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutSanggahanAssesmenMkInput
    upsert?: SanggahanAssesmenUpsertWithoutSanggahanAssesmenMkInput
    connect?: SanggahanAssesmenWhereUniqueInput
    update?: XOR<XOR<SanggahanAssesmenUpdateToOneWithWhereWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUpdateWithoutSanggahanAssesmenMkInput>, SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenMkInput>
  }

  export type MataKuliahMahasiswaUpdateOneRequiredWithoutSanggahanAssesmenMkNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUncheckedCreateWithoutSanggahanAssesmenMkInput>
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutSanggahanAssesmenMkInput
    upsert?: MataKuliahMahasiswaUpsertWithoutSanggahanAssesmenMkInput
    connect?: MataKuliahMahasiswaWhereUniqueInput
    update?: XOR<XOR<MataKuliahMahasiswaUpdateToOneWithWhereWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUpdateWithoutSanggahanAssesmenMkInput>, MataKuliahMahasiswaUncheckedUpdateWithoutSanggahanAssesmenMkInput>
  }

  export type SanggahanAssesmenCreateNestedOneWithoutSanggahanAssesmenPihakInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenPihakInput>
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutSanggahanAssesmenPihakInput
    connect?: SanggahanAssesmenWhereUniqueInput
  }

  export type SanggahanAssesmenUpdateOneRequiredWithoutSanggahanAssesmenPihakNestedInput = {
    create?: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenPihakInput>
    connectOrCreate?: SanggahanAssesmenCreateOrConnectWithoutSanggahanAssesmenPihakInput
    upsert?: SanggahanAssesmenUpsertWithoutSanggahanAssesmenPihakInput
    connect?: SanggahanAssesmenWhereUniqueInput
    update?: XOR<XOR<SanggahanAssesmenUpdateToOneWithWhereWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUpdateWithoutSanggahanAssesmenPihakInput>, SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenPihakInput>
  }

  export type SkRektorAssesorCreateNestedManyWithoutSkRektorInput = {
    create?: XOR<SkRektorAssesorCreateWithoutSkRektorInput, SkRektorAssesorUncheckedCreateWithoutSkRektorInput> | SkRektorAssesorCreateWithoutSkRektorInput[] | SkRektorAssesorUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutSkRektorInput | SkRektorAssesorCreateOrConnectWithoutSkRektorInput[]
    createMany?: SkRektorAssesorCreateManySkRektorInputEnvelope
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
  }

  export type SkRektorMahasiswaCreateNestedManyWithoutSkRektorInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutSkRektorInput, SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput> | SkRektorMahasiswaCreateWithoutSkRektorInput[] | SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput | SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput[]
    createMany?: SkRektorMahasiswaCreateManySkRektorInputEnvelope
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
  }

  export type SkRektorAssesorUncheckedCreateNestedManyWithoutSkRektorInput = {
    create?: XOR<SkRektorAssesorCreateWithoutSkRektorInput, SkRektorAssesorUncheckedCreateWithoutSkRektorInput> | SkRektorAssesorCreateWithoutSkRektorInput[] | SkRektorAssesorUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutSkRektorInput | SkRektorAssesorCreateOrConnectWithoutSkRektorInput[]
    createMany?: SkRektorAssesorCreateManySkRektorInputEnvelope
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
  }

  export type SkRektorMahasiswaUncheckedCreateNestedManyWithoutSkRektorInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutSkRektorInput, SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput> | SkRektorMahasiswaCreateWithoutSkRektorInput[] | SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput | SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput[]
    createMany?: SkRektorMahasiswaCreateManySkRektorInputEnvelope
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
  }

  export type SkRektorAssesorUpdateManyWithoutSkRektorNestedInput = {
    create?: XOR<SkRektorAssesorCreateWithoutSkRektorInput, SkRektorAssesorUncheckedCreateWithoutSkRektorInput> | SkRektorAssesorCreateWithoutSkRektorInput[] | SkRektorAssesorUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutSkRektorInput | SkRektorAssesorCreateOrConnectWithoutSkRektorInput[]
    upsert?: SkRektorAssesorUpsertWithWhereUniqueWithoutSkRektorInput | SkRektorAssesorUpsertWithWhereUniqueWithoutSkRektorInput[]
    createMany?: SkRektorAssesorCreateManySkRektorInputEnvelope
    set?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    disconnect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    delete?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    update?: SkRektorAssesorUpdateWithWhereUniqueWithoutSkRektorInput | SkRektorAssesorUpdateWithWhereUniqueWithoutSkRektorInput[]
    updateMany?: SkRektorAssesorUpdateManyWithWhereWithoutSkRektorInput | SkRektorAssesorUpdateManyWithWhereWithoutSkRektorInput[]
    deleteMany?: SkRektorAssesorScalarWhereInput | SkRektorAssesorScalarWhereInput[]
  }

  export type SkRektorMahasiswaUpdateManyWithoutSkRektorNestedInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutSkRektorInput, SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput> | SkRektorMahasiswaCreateWithoutSkRektorInput[] | SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput | SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput[]
    upsert?: SkRektorMahasiswaUpsertWithWhereUniqueWithoutSkRektorInput | SkRektorMahasiswaUpsertWithWhereUniqueWithoutSkRektorInput[]
    createMany?: SkRektorMahasiswaCreateManySkRektorInputEnvelope
    set?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    disconnect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    delete?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    update?: SkRektorMahasiswaUpdateWithWhereUniqueWithoutSkRektorInput | SkRektorMahasiswaUpdateWithWhereUniqueWithoutSkRektorInput[]
    updateMany?: SkRektorMahasiswaUpdateManyWithWhereWithoutSkRektorInput | SkRektorMahasiswaUpdateManyWithWhereWithoutSkRektorInput[]
    deleteMany?: SkRektorMahasiswaScalarWhereInput | SkRektorMahasiswaScalarWhereInput[]
  }

  export type SkRektorAssesorUncheckedUpdateManyWithoutSkRektorNestedInput = {
    create?: XOR<SkRektorAssesorCreateWithoutSkRektorInput, SkRektorAssesorUncheckedCreateWithoutSkRektorInput> | SkRektorAssesorCreateWithoutSkRektorInput[] | SkRektorAssesorUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorAssesorCreateOrConnectWithoutSkRektorInput | SkRektorAssesorCreateOrConnectWithoutSkRektorInput[]
    upsert?: SkRektorAssesorUpsertWithWhereUniqueWithoutSkRektorInput | SkRektorAssesorUpsertWithWhereUniqueWithoutSkRektorInput[]
    createMany?: SkRektorAssesorCreateManySkRektorInputEnvelope
    set?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    disconnect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    delete?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    connect?: SkRektorAssesorWhereUniqueInput | SkRektorAssesorWhereUniqueInput[]
    update?: SkRektorAssesorUpdateWithWhereUniqueWithoutSkRektorInput | SkRektorAssesorUpdateWithWhereUniqueWithoutSkRektorInput[]
    updateMany?: SkRektorAssesorUpdateManyWithWhereWithoutSkRektorInput | SkRektorAssesorUpdateManyWithWhereWithoutSkRektorInput[]
    deleteMany?: SkRektorAssesorScalarWhereInput | SkRektorAssesorScalarWhereInput[]
  }

  export type SkRektorMahasiswaUncheckedUpdateManyWithoutSkRektorNestedInput = {
    create?: XOR<SkRektorMahasiswaCreateWithoutSkRektorInput, SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput> | SkRektorMahasiswaCreateWithoutSkRektorInput[] | SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput[]
    connectOrCreate?: SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput | SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput[]
    upsert?: SkRektorMahasiswaUpsertWithWhereUniqueWithoutSkRektorInput | SkRektorMahasiswaUpsertWithWhereUniqueWithoutSkRektorInput[]
    createMany?: SkRektorMahasiswaCreateManySkRektorInputEnvelope
    set?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    disconnect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    delete?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    connect?: SkRektorMahasiswaWhereUniqueInput | SkRektorMahasiswaWhereUniqueInput[]
    update?: SkRektorMahasiswaUpdateWithWhereUniqueWithoutSkRektorInput | SkRektorMahasiswaUpdateWithWhereUniqueWithoutSkRektorInput[]
    updateMany?: SkRektorMahasiswaUpdateManyWithWhereWithoutSkRektorInput | SkRektorMahasiswaUpdateManyWithWhereWithoutSkRektorInput[]
    deleteMany?: SkRektorMahasiswaScalarWhereInput | SkRektorMahasiswaScalarWhereInput[]
  }

  export type SkRektorCreateNestedOneWithoutSkRektorAssesorInput = {
    create?: XOR<SkRektorCreateWithoutSkRektorAssesorInput, SkRektorUncheckedCreateWithoutSkRektorAssesorInput>
    connectOrCreate?: SkRektorCreateOrConnectWithoutSkRektorAssesorInput
    connect?: SkRektorWhereUniqueInput
  }

  export type AssesorMahasiswaCreateNestedOneWithoutSkRektorAssesorInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutSkRektorAssesorInput, AssesorMahasiswaUncheckedCreateWithoutSkRektorAssesorInput>
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutSkRektorAssesorInput
    connect?: AssesorMahasiswaWhereUniqueInput
  }

  export type SkRektorUpdateOneRequiredWithoutSkRektorAssesorNestedInput = {
    create?: XOR<SkRektorCreateWithoutSkRektorAssesorInput, SkRektorUncheckedCreateWithoutSkRektorAssesorInput>
    connectOrCreate?: SkRektorCreateOrConnectWithoutSkRektorAssesorInput
    upsert?: SkRektorUpsertWithoutSkRektorAssesorInput
    connect?: SkRektorWhereUniqueInput
    update?: XOR<XOR<SkRektorUpdateToOneWithWhereWithoutSkRektorAssesorInput, SkRektorUpdateWithoutSkRektorAssesorInput>, SkRektorUncheckedUpdateWithoutSkRektorAssesorInput>
  }

  export type AssesorMahasiswaUpdateOneRequiredWithoutSkRektorAssesorNestedInput = {
    create?: XOR<AssesorMahasiswaCreateWithoutSkRektorAssesorInput, AssesorMahasiswaUncheckedCreateWithoutSkRektorAssesorInput>
    connectOrCreate?: AssesorMahasiswaCreateOrConnectWithoutSkRektorAssesorInput
    upsert?: AssesorMahasiswaUpsertWithoutSkRektorAssesorInput
    connect?: AssesorMahasiswaWhereUniqueInput
    update?: XOR<XOR<AssesorMahasiswaUpdateToOneWithWhereWithoutSkRektorAssesorInput, AssesorMahasiswaUpdateWithoutSkRektorAssesorInput>, AssesorMahasiswaUncheckedUpdateWithoutSkRektorAssesorInput>
  }

  export type SkRektorCreateNestedOneWithoutSkRektorMahasiswaInput = {
    create?: XOR<SkRektorCreateWithoutSkRektorMahasiswaInput, SkRektorUncheckedCreateWithoutSkRektorMahasiswaInput>
    connectOrCreate?: SkRektorCreateOrConnectWithoutSkRektorMahasiswaInput
    connect?: SkRektorWhereUniqueInput
  }

  export type PendaftaranCreateNestedOneWithoutSkRektorMahasiswaInput = {
    create?: XOR<PendaftaranCreateWithoutSkRektorMahasiswaInput, PendaftaranUncheckedCreateWithoutSkRektorMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutSkRektorMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
  }

  export type SkRektorUpdateOneRequiredWithoutSkRektorMahasiswaNestedInput = {
    create?: XOR<SkRektorCreateWithoutSkRektorMahasiswaInput, SkRektorUncheckedCreateWithoutSkRektorMahasiswaInput>
    connectOrCreate?: SkRektorCreateOrConnectWithoutSkRektorMahasiswaInput
    upsert?: SkRektorUpsertWithoutSkRektorMahasiswaInput
    connect?: SkRektorWhereUniqueInput
    update?: XOR<XOR<SkRektorUpdateToOneWithWhereWithoutSkRektorMahasiswaInput, SkRektorUpdateWithoutSkRektorMahasiswaInput>, SkRektorUncheckedUpdateWithoutSkRektorMahasiswaInput>
  }

  export type PendaftaranUpdateOneRequiredWithoutSkRektorMahasiswaNestedInput = {
    create?: XOR<PendaftaranCreateWithoutSkRektorMahasiswaInput, PendaftaranUncheckedCreateWithoutSkRektorMahasiswaInput>
    connectOrCreate?: PendaftaranCreateOrConnectWithoutSkRektorMahasiswaInput
    upsert?: PendaftaranUpsertWithoutSkRektorMahasiswaInput
    connect?: PendaftaranWhereUniqueInput
    update?: XOR<XOR<PendaftaranUpdateToOneWithWhereWithoutSkRektorMahasiswaInput, PendaftaranUpdateWithoutSkRektorMahasiswaInput>, PendaftaranUncheckedUpdateWithoutSkRektorMahasiswaInput>
  }

  export type HasilAssesmenCreateNestedOneWithoutSkorAssesmenInput = {
    create?: XOR<HasilAssesmenCreateWithoutSkorAssesmenInput, HasilAssesmenUncheckedCreateWithoutSkorAssesmenInput>
    connectOrCreate?: HasilAssesmenCreateOrConnectWithoutSkorAssesmenInput
    connect?: HasilAssesmenWhereUniqueInput
  }

  export type HasilAssesmenUpdateOneRequiredWithoutSkorAssesmenNestedInput = {
    create?: XOR<HasilAssesmenCreateWithoutSkorAssesmenInput, HasilAssesmenUncheckedCreateWithoutSkorAssesmenInput>
    connectOrCreate?: HasilAssesmenCreateOrConnectWithoutSkorAssesmenInput
    upsert?: HasilAssesmenUpsertWithoutSkorAssesmenInput
    connect?: HasilAssesmenWhereUniqueInput
    update?: XOR<XOR<HasilAssesmenUpdateToOneWithWhereWithoutSkorAssesmenInput, HasilAssesmenUpdateWithoutSkorAssesmenInput>, HasilAssesmenUncheckedUpdateWithoutSkorAssesmenInput>
  }

  export type StatusMahasiswaAssesmentHistoryCreateNestedManyWithoutStatusMahasiswaAssesmentInput = {
    create?: XOR<StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput> | StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput[] | StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput[]
    connectOrCreate?: StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput[]
    createMany?: StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInputEnvelope
    connect?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedCreateNestedManyWithoutStatusMahasiswaAssesmentInput = {
    create?: XOR<StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput> | StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput[] | StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput[]
    connectOrCreate?: StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput[]
    createMany?: StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInputEnvelope
    connect?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
  }

  export type StatusMahasiswaAssesmentHistoryUpdateManyWithoutStatusMahasiswaAssesmentNestedInput = {
    create?: XOR<StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput> | StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput[] | StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput[]
    connectOrCreate?: StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput[]
    upsert?: StatusMahasiswaAssesmentHistoryUpsertWithWhereUniqueWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryUpsertWithWhereUniqueWithoutStatusMahasiswaAssesmentInput[]
    createMany?: StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInputEnvelope
    set?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    disconnect?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    delete?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    connect?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    update?: StatusMahasiswaAssesmentHistoryUpdateWithWhereUniqueWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryUpdateWithWhereUniqueWithoutStatusMahasiswaAssesmentInput[]
    updateMany?: StatusMahasiswaAssesmentHistoryUpdateManyWithWhereWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryUpdateManyWithWhereWithoutStatusMahasiswaAssesmentInput[]
    deleteMany?: StatusMahasiswaAssesmentHistoryScalarWhereInput | StatusMahasiswaAssesmentHistoryScalarWhereInput[]
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedUpdateManyWithoutStatusMahasiswaAssesmentNestedInput = {
    create?: XOR<StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput> | StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput[] | StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput[]
    connectOrCreate?: StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput[]
    upsert?: StatusMahasiswaAssesmentHistoryUpsertWithWhereUniqueWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryUpsertWithWhereUniqueWithoutStatusMahasiswaAssesmentInput[]
    createMany?: StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInputEnvelope
    set?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    disconnect?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    delete?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    connect?: StatusMahasiswaAssesmentHistoryWhereUniqueInput | StatusMahasiswaAssesmentHistoryWhereUniqueInput[]
    update?: StatusMahasiswaAssesmentHistoryUpdateWithWhereUniqueWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryUpdateWithWhereUniqueWithoutStatusMahasiswaAssesmentInput[]
    updateMany?: StatusMahasiswaAssesmentHistoryUpdateManyWithWhereWithoutStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryUpdateManyWithWhereWithoutStatusMahasiswaAssesmentInput[]
    deleteMany?: StatusMahasiswaAssesmentHistoryScalarWhereInput | StatusMahasiswaAssesmentHistoryScalarWhereInput[]
  }

  export type StatusMahasiswaAssesmentCreateNestedOneWithoutStatusMahasiswaAssesmentHistoryInput = {
    create?: XOR<StatusMahasiswaAssesmentCreateWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUncheckedCreateWithoutStatusMahasiswaAssesmentHistoryInput>
    connectOrCreate?: StatusMahasiswaAssesmentCreateOrConnectWithoutStatusMahasiswaAssesmentHistoryInput
    connect?: StatusMahasiswaAssesmentWhereUniqueInput
  }

  export type StatusMahasiswaAssesmentUpdateOneRequiredWithoutStatusMahasiswaAssesmentHistoryNestedInput = {
    create?: XOR<StatusMahasiswaAssesmentCreateWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUncheckedCreateWithoutStatusMahasiswaAssesmentHistoryInput>
    connectOrCreate?: StatusMahasiswaAssesmentCreateOrConnectWithoutStatusMahasiswaAssesmentHistoryInput
    upsert?: StatusMahasiswaAssesmentUpsertWithoutStatusMahasiswaAssesmentHistoryInput
    connect?: StatusMahasiswaAssesmentWhereUniqueInput
    update?: XOR<XOR<StatusMahasiswaAssesmentUpdateToOneWithWhereWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUpdateWithoutStatusMahasiswaAssesmentHistoryInput>, StatusMahasiswaAssesmentUncheckedUpdateWithoutStatusMahasiswaAssesmentHistoryInput>
  }

  export type AsesorCreateNestedManyWithoutTipeAsesorInput = {
    create?: XOR<AsesorCreateWithoutTipeAsesorInput, AsesorUncheckedCreateWithoutTipeAsesorInput> | AsesorCreateWithoutTipeAsesorInput[] | AsesorUncheckedCreateWithoutTipeAsesorInput[]
    connectOrCreate?: AsesorCreateOrConnectWithoutTipeAsesorInput | AsesorCreateOrConnectWithoutTipeAsesorInput[]
    createMany?: AsesorCreateManyTipeAsesorInputEnvelope
    connect?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
  }

  export type AsesorUncheckedCreateNestedManyWithoutTipeAsesorInput = {
    create?: XOR<AsesorCreateWithoutTipeAsesorInput, AsesorUncheckedCreateWithoutTipeAsesorInput> | AsesorCreateWithoutTipeAsesorInput[] | AsesorUncheckedCreateWithoutTipeAsesorInput[]
    connectOrCreate?: AsesorCreateOrConnectWithoutTipeAsesorInput | AsesorCreateOrConnectWithoutTipeAsesorInput[]
    createMany?: AsesorCreateManyTipeAsesorInputEnvelope
    connect?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
  }

  export type AsesorUpdateManyWithoutTipeAsesorNestedInput = {
    create?: XOR<AsesorCreateWithoutTipeAsesorInput, AsesorUncheckedCreateWithoutTipeAsesorInput> | AsesorCreateWithoutTipeAsesorInput[] | AsesorUncheckedCreateWithoutTipeAsesorInput[]
    connectOrCreate?: AsesorCreateOrConnectWithoutTipeAsesorInput | AsesorCreateOrConnectWithoutTipeAsesorInput[]
    upsert?: AsesorUpsertWithWhereUniqueWithoutTipeAsesorInput | AsesorUpsertWithWhereUniqueWithoutTipeAsesorInput[]
    createMany?: AsesorCreateManyTipeAsesorInputEnvelope
    set?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    disconnect?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    delete?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    connect?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    update?: AsesorUpdateWithWhereUniqueWithoutTipeAsesorInput | AsesorUpdateWithWhereUniqueWithoutTipeAsesorInput[]
    updateMany?: AsesorUpdateManyWithWhereWithoutTipeAsesorInput | AsesorUpdateManyWithWhereWithoutTipeAsesorInput[]
    deleteMany?: AsesorScalarWhereInput | AsesorScalarWhereInput[]
  }

  export type AsesorUncheckedUpdateManyWithoutTipeAsesorNestedInput = {
    create?: XOR<AsesorCreateWithoutTipeAsesorInput, AsesorUncheckedCreateWithoutTipeAsesorInput> | AsesorCreateWithoutTipeAsesorInput[] | AsesorUncheckedCreateWithoutTipeAsesorInput[]
    connectOrCreate?: AsesorCreateOrConnectWithoutTipeAsesorInput | AsesorCreateOrConnectWithoutTipeAsesorInput[]
    upsert?: AsesorUpsertWithWhereUniqueWithoutTipeAsesorInput | AsesorUpsertWithWhereUniqueWithoutTipeAsesorInput[]
    createMany?: AsesorCreateManyTipeAsesorInputEnvelope
    set?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    disconnect?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    delete?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    connect?: AsesorWhereUniqueInput | AsesorWhereUniqueInput[]
    update?: AsesorUpdateWithWhereUniqueWithoutTipeAsesorInput | AsesorUpdateWithWhereUniqueWithoutTipeAsesorInput[]
    updateMany?: AsesorUpdateManyWithWhereWithoutTipeAsesorInput | AsesorUpdateManyWithWhereWithoutTipeAsesorInput[]
    deleteMany?: AsesorScalarWhereInput | AsesorScalarWhereInput[]
  }

  export type AlamatCreateNestedOneWithoutUniversityInput = {
    create?: XOR<AlamatCreateWithoutUniversityInput, AlamatUncheckedCreateWithoutUniversityInput>
    connectOrCreate?: AlamatCreateOrConnectWithoutUniversityInput
    connect?: AlamatWhereUniqueInput
  }

  export type ProgramStudiCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ProgramStudiCreateWithoutUniversityInput, ProgramStudiUncheckedCreateWithoutUniversityInput> | ProgramStudiCreateWithoutUniversityInput[] | ProgramStudiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutUniversityInput | ProgramStudiCreateOrConnectWithoutUniversityInput[]
    createMany?: ProgramStudiCreateManyUniversityInputEnvelope
    connect?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
  }

  export type UniversityJabatanCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversityJabatanCreateWithoutUniversityInput, UniversityJabatanUncheckedCreateWithoutUniversityInput> | UniversityJabatanCreateWithoutUniversityInput[] | UniversityJabatanUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityJabatanCreateOrConnectWithoutUniversityInput | UniversityJabatanCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversityJabatanCreateManyUniversityInputEnvelope
    connect?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
  }

  export type UniversitySosialMediaCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversitySosialMediaCreateWithoutUniversityInput, UniversitySosialMediaUncheckedCreateWithoutUniversityInput> | UniversitySosialMediaCreateWithoutUniversityInput[] | UniversitySosialMediaUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversitySosialMediaCreateOrConnectWithoutUniversityInput | UniversitySosialMediaCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversitySosialMediaCreateManyUniversityInputEnvelope
    connect?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
  }

  export type UniversityInformasiCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversityInformasiCreateWithoutUniversityInput, UniversityInformasiUncheckedCreateWithoutUniversityInput> | UniversityInformasiCreateWithoutUniversityInput[] | UniversityInformasiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityInformasiCreateOrConnectWithoutUniversityInput | UniversityInformasiCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversityInformasiCreateManyUniversityInputEnvelope
    connect?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
  }

  export type ProgramStudiUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ProgramStudiCreateWithoutUniversityInput, ProgramStudiUncheckedCreateWithoutUniversityInput> | ProgramStudiCreateWithoutUniversityInput[] | ProgramStudiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutUniversityInput | ProgramStudiCreateOrConnectWithoutUniversityInput[]
    createMany?: ProgramStudiCreateManyUniversityInputEnvelope
    connect?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
  }

  export type UniversityJabatanUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversityJabatanCreateWithoutUniversityInput, UniversityJabatanUncheckedCreateWithoutUniversityInput> | UniversityJabatanCreateWithoutUniversityInput[] | UniversityJabatanUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityJabatanCreateOrConnectWithoutUniversityInput | UniversityJabatanCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversityJabatanCreateManyUniversityInputEnvelope
    connect?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
  }

  export type UniversitySosialMediaUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversitySosialMediaCreateWithoutUniversityInput, UniversitySosialMediaUncheckedCreateWithoutUniversityInput> | UniversitySosialMediaCreateWithoutUniversityInput[] | UniversitySosialMediaUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversitySosialMediaCreateOrConnectWithoutUniversityInput | UniversitySosialMediaCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversitySosialMediaCreateManyUniversityInputEnvelope
    connect?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
  }

  export type UniversityInformasiUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversityInformasiCreateWithoutUniversityInput, UniversityInformasiUncheckedCreateWithoutUniversityInput> | UniversityInformasiCreateWithoutUniversityInput[] | UniversityInformasiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityInformasiCreateOrConnectWithoutUniversityInput | UniversityInformasiCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversityInformasiCreateManyUniversityInputEnvelope
    connect?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
  }

  export type AlamatUpdateOneRequiredWithoutUniversityNestedInput = {
    create?: XOR<AlamatCreateWithoutUniversityInput, AlamatUncheckedCreateWithoutUniversityInput>
    connectOrCreate?: AlamatCreateOrConnectWithoutUniversityInput
    upsert?: AlamatUpsertWithoutUniversityInput
    connect?: AlamatWhereUniqueInput
    update?: XOR<XOR<AlamatUpdateToOneWithWhereWithoutUniversityInput, AlamatUpdateWithoutUniversityInput>, AlamatUncheckedUpdateWithoutUniversityInput>
  }

  export type ProgramStudiUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ProgramStudiCreateWithoutUniversityInput, ProgramStudiUncheckedCreateWithoutUniversityInput> | ProgramStudiCreateWithoutUniversityInput[] | ProgramStudiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutUniversityInput | ProgramStudiCreateOrConnectWithoutUniversityInput[]
    upsert?: ProgramStudiUpsertWithWhereUniqueWithoutUniversityInput | ProgramStudiUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ProgramStudiCreateManyUniversityInputEnvelope
    set?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    disconnect?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    delete?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    connect?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    update?: ProgramStudiUpdateWithWhereUniqueWithoutUniversityInput | ProgramStudiUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ProgramStudiUpdateManyWithWhereWithoutUniversityInput | ProgramStudiUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ProgramStudiScalarWhereInput | ProgramStudiScalarWhereInput[]
  }

  export type UniversityJabatanUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversityJabatanCreateWithoutUniversityInput, UniversityJabatanUncheckedCreateWithoutUniversityInput> | UniversityJabatanCreateWithoutUniversityInput[] | UniversityJabatanUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityJabatanCreateOrConnectWithoutUniversityInput | UniversityJabatanCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversityJabatanUpsertWithWhereUniqueWithoutUniversityInput | UniversityJabatanUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversityJabatanCreateManyUniversityInputEnvelope
    set?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    disconnect?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    delete?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    connect?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    update?: UniversityJabatanUpdateWithWhereUniqueWithoutUniversityInput | UniversityJabatanUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversityJabatanUpdateManyWithWhereWithoutUniversityInput | UniversityJabatanUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversityJabatanScalarWhereInput | UniversityJabatanScalarWhereInput[]
  }

  export type UniversitySosialMediaUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversitySosialMediaCreateWithoutUniversityInput, UniversitySosialMediaUncheckedCreateWithoutUniversityInput> | UniversitySosialMediaCreateWithoutUniversityInput[] | UniversitySosialMediaUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversitySosialMediaCreateOrConnectWithoutUniversityInput | UniversitySosialMediaCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversitySosialMediaUpsertWithWhereUniqueWithoutUniversityInput | UniversitySosialMediaUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversitySosialMediaCreateManyUniversityInputEnvelope
    set?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    disconnect?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    delete?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    connect?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    update?: UniversitySosialMediaUpdateWithWhereUniqueWithoutUniversityInput | UniversitySosialMediaUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversitySosialMediaUpdateManyWithWhereWithoutUniversityInput | UniversitySosialMediaUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversitySosialMediaScalarWhereInput | UniversitySosialMediaScalarWhereInput[]
  }

  export type UniversityInformasiUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversityInformasiCreateWithoutUniversityInput, UniversityInformasiUncheckedCreateWithoutUniversityInput> | UniversityInformasiCreateWithoutUniversityInput[] | UniversityInformasiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityInformasiCreateOrConnectWithoutUniversityInput | UniversityInformasiCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversityInformasiUpsertWithWhereUniqueWithoutUniversityInput | UniversityInformasiUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversityInformasiCreateManyUniversityInputEnvelope
    set?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    disconnect?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    delete?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    connect?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    update?: UniversityInformasiUpdateWithWhereUniqueWithoutUniversityInput | UniversityInformasiUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversityInformasiUpdateManyWithWhereWithoutUniversityInput | UniversityInformasiUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversityInformasiScalarWhereInput | UniversityInformasiScalarWhereInput[]
  }

  export type ProgramStudiUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ProgramStudiCreateWithoutUniversityInput, ProgramStudiUncheckedCreateWithoutUniversityInput> | ProgramStudiCreateWithoutUniversityInput[] | ProgramStudiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramStudiCreateOrConnectWithoutUniversityInput | ProgramStudiCreateOrConnectWithoutUniversityInput[]
    upsert?: ProgramStudiUpsertWithWhereUniqueWithoutUniversityInput | ProgramStudiUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ProgramStudiCreateManyUniversityInputEnvelope
    set?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    disconnect?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    delete?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    connect?: ProgramStudiWhereUniqueInput | ProgramStudiWhereUniqueInput[]
    update?: ProgramStudiUpdateWithWhereUniqueWithoutUniversityInput | ProgramStudiUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ProgramStudiUpdateManyWithWhereWithoutUniversityInput | ProgramStudiUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ProgramStudiScalarWhereInput | ProgramStudiScalarWhereInput[]
  }

  export type UniversityJabatanUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversityJabatanCreateWithoutUniversityInput, UniversityJabatanUncheckedCreateWithoutUniversityInput> | UniversityJabatanCreateWithoutUniversityInput[] | UniversityJabatanUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityJabatanCreateOrConnectWithoutUniversityInput | UniversityJabatanCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversityJabatanUpsertWithWhereUniqueWithoutUniversityInput | UniversityJabatanUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversityJabatanCreateManyUniversityInputEnvelope
    set?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    disconnect?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    delete?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    connect?: UniversityJabatanWhereUniqueInput | UniversityJabatanWhereUniqueInput[]
    update?: UniversityJabatanUpdateWithWhereUniqueWithoutUniversityInput | UniversityJabatanUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversityJabatanUpdateManyWithWhereWithoutUniversityInput | UniversityJabatanUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversityJabatanScalarWhereInput | UniversityJabatanScalarWhereInput[]
  }

  export type UniversitySosialMediaUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversitySosialMediaCreateWithoutUniversityInput, UniversitySosialMediaUncheckedCreateWithoutUniversityInput> | UniversitySosialMediaCreateWithoutUniversityInput[] | UniversitySosialMediaUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversitySosialMediaCreateOrConnectWithoutUniversityInput | UniversitySosialMediaCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversitySosialMediaUpsertWithWhereUniqueWithoutUniversityInput | UniversitySosialMediaUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversitySosialMediaCreateManyUniversityInputEnvelope
    set?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    disconnect?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    delete?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    connect?: UniversitySosialMediaWhereUniqueInput | UniversitySosialMediaWhereUniqueInput[]
    update?: UniversitySosialMediaUpdateWithWhereUniqueWithoutUniversityInput | UniversitySosialMediaUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversitySosialMediaUpdateManyWithWhereWithoutUniversityInput | UniversitySosialMediaUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversitySosialMediaScalarWhereInput | UniversitySosialMediaScalarWhereInput[]
  }

  export type UniversityInformasiUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversityInformasiCreateWithoutUniversityInput, UniversityInformasiUncheckedCreateWithoutUniversityInput> | UniversityInformasiCreateWithoutUniversityInput[] | UniversityInformasiUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityInformasiCreateOrConnectWithoutUniversityInput | UniversityInformasiCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversityInformasiUpsertWithWhereUniqueWithoutUniversityInput | UniversityInformasiUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversityInformasiCreateManyUniversityInputEnvelope
    set?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    disconnect?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    delete?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    connect?: UniversityInformasiWhereUniqueInput | UniversityInformasiWhereUniqueInput[]
    update?: UniversityInformasiUpdateWithWhereUniqueWithoutUniversityInput | UniversityInformasiUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversityInformasiUpdateManyWithWhereWithoutUniversityInput | UniversityInformasiUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversityInformasiScalarWhereInput | UniversityInformasiScalarWhereInput[]
  }

  export type UniversityCreateNestedOneWithoutUniversitySosialMediaInput = {
    create?: XOR<UniversityCreateWithoutUniversitySosialMediaInput, UniversityUncheckedCreateWithoutUniversitySosialMediaInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutUniversitySosialMediaInput
    connect?: UniversityWhereUniqueInput
  }

  export type UniversityUpdateOneRequiredWithoutUniversitySosialMediaNestedInput = {
    create?: XOR<UniversityCreateWithoutUniversitySosialMediaInput, UniversityUncheckedCreateWithoutUniversitySosialMediaInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutUniversitySosialMediaInput
    upsert?: UniversityUpsertWithoutUniversitySosialMediaInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutUniversitySosialMediaInput, UniversityUpdateWithoutUniversitySosialMediaInput>, UniversityUncheckedUpdateWithoutUniversitySosialMediaInput>
  }

  export type UniversityCreateNestedOneWithoutUniversityInformasiInput = {
    create?: XOR<UniversityCreateWithoutUniversityInformasiInput, UniversityUncheckedCreateWithoutUniversityInformasiInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutUniversityInformasiInput
    connect?: UniversityWhereUniqueInput
  }

  export type UniversityUpdateOneRequiredWithoutUniversityInformasiNestedInput = {
    create?: XOR<UniversityCreateWithoutUniversityInformasiInput, UniversityUncheckedCreateWithoutUniversityInformasiInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutUniversityInformasiInput
    upsert?: UniversityUpsertWithoutUniversityInformasiInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutUniversityInformasiInput, UniversityUpdateWithoutUniversityInformasiInput>, UniversityUncheckedUpdateWithoutUniversityInformasiInput>
  }

  export type UniversityCreateNestedOneWithoutUniversityJabatanInput = {
    create?: XOR<UniversityCreateWithoutUniversityJabatanInput, UniversityUncheckedCreateWithoutUniversityJabatanInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutUniversityJabatanInput
    connect?: UniversityWhereUniqueInput
  }

  export type UniversityJabatanOrangCreateNestedManyWithoutUniversityJabatanInput = {
    create?: XOR<UniversityJabatanOrangCreateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput> | UniversityJabatanOrangCreateWithoutUniversityJabatanInput[] | UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput[]
    connectOrCreate?: UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput | UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput[]
    createMany?: UniversityJabatanOrangCreateManyUniversityJabatanInputEnvelope
    connect?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
  }

  export type UniversityJabatanOrangUncheckedCreateNestedManyWithoutUniversityJabatanInput = {
    create?: XOR<UniversityJabatanOrangCreateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput> | UniversityJabatanOrangCreateWithoutUniversityJabatanInput[] | UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput[]
    connectOrCreate?: UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput | UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput[]
    createMany?: UniversityJabatanOrangCreateManyUniversityJabatanInputEnvelope
    connect?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutUniversityJabatanNestedInput = {
    create?: XOR<UniversityCreateWithoutUniversityJabatanInput, UniversityUncheckedCreateWithoutUniversityJabatanInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutUniversityJabatanInput
    upsert?: UniversityUpsertWithoutUniversityJabatanInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutUniversityJabatanInput, UniversityUpdateWithoutUniversityJabatanInput>, UniversityUncheckedUpdateWithoutUniversityJabatanInput>
  }

  export type UniversityJabatanOrangUpdateManyWithoutUniversityJabatanNestedInput = {
    create?: XOR<UniversityJabatanOrangCreateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput> | UniversityJabatanOrangCreateWithoutUniversityJabatanInput[] | UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput[]
    connectOrCreate?: UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput | UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput[]
    upsert?: UniversityJabatanOrangUpsertWithWhereUniqueWithoutUniversityJabatanInput | UniversityJabatanOrangUpsertWithWhereUniqueWithoutUniversityJabatanInput[]
    createMany?: UniversityJabatanOrangCreateManyUniversityJabatanInputEnvelope
    set?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    disconnect?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    delete?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    connect?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    update?: UniversityJabatanOrangUpdateWithWhereUniqueWithoutUniversityJabatanInput | UniversityJabatanOrangUpdateWithWhereUniqueWithoutUniversityJabatanInput[]
    updateMany?: UniversityJabatanOrangUpdateManyWithWhereWithoutUniversityJabatanInput | UniversityJabatanOrangUpdateManyWithWhereWithoutUniversityJabatanInput[]
    deleteMany?: UniversityJabatanOrangScalarWhereInput | UniversityJabatanOrangScalarWhereInput[]
  }

  export type UniversityJabatanOrangUncheckedUpdateManyWithoutUniversityJabatanNestedInput = {
    create?: XOR<UniversityJabatanOrangCreateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput> | UniversityJabatanOrangCreateWithoutUniversityJabatanInput[] | UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput[]
    connectOrCreate?: UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput | UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput[]
    upsert?: UniversityJabatanOrangUpsertWithWhereUniqueWithoutUniversityJabatanInput | UniversityJabatanOrangUpsertWithWhereUniqueWithoutUniversityJabatanInput[]
    createMany?: UniversityJabatanOrangCreateManyUniversityJabatanInputEnvelope
    set?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    disconnect?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    delete?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    connect?: UniversityJabatanOrangWhereUniqueInput | UniversityJabatanOrangWhereUniqueInput[]
    update?: UniversityJabatanOrangUpdateWithWhereUniqueWithoutUniversityJabatanInput | UniversityJabatanOrangUpdateWithWhereUniqueWithoutUniversityJabatanInput[]
    updateMany?: UniversityJabatanOrangUpdateManyWithWhereWithoutUniversityJabatanInput | UniversityJabatanOrangUpdateManyWithWhereWithoutUniversityJabatanInput[]
    deleteMany?: UniversityJabatanOrangScalarWhereInput | UniversityJabatanOrangScalarWhereInput[]
  }

  export type UniversityJabatanCreateNestedOneWithoutUniversityJabatanOrangInput = {
    create?: XOR<UniversityJabatanCreateWithoutUniversityJabatanOrangInput, UniversityJabatanUncheckedCreateWithoutUniversityJabatanOrangInput>
    connectOrCreate?: UniversityJabatanCreateOrConnectWithoutUniversityJabatanOrangInput
    connect?: UniversityJabatanWhereUniqueInput
  }

  export type UniversityJabatanUpdateOneRequiredWithoutUniversityJabatanOrangNestedInput = {
    create?: XOR<UniversityJabatanCreateWithoutUniversityJabatanOrangInput, UniversityJabatanUncheckedCreateWithoutUniversityJabatanOrangInput>
    connectOrCreate?: UniversityJabatanCreateOrConnectWithoutUniversityJabatanOrangInput
    upsert?: UniversityJabatanUpsertWithoutUniversityJabatanOrangInput
    connect?: UniversityJabatanWhereUniqueInput
    update?: XOR<XOR<UniversityJabatanUpdateToOneWithWhereWithoutUniversityJabatanOrangInput, UniversityJabatanUpdateWithoutUniversityJabatanOrangInput>, UniversityJabatanUncheckedUpdateWithoutUniversityJabatanOrangInput>
  }

  export type AlamatCreateNestedOneWithoutUserInput = {
    create?: XOR<AlamatCreateWithoutUserInput, AlamatUncheckedCreateWithoutUserInput>
    connectOrCreate?: AlamatCreateOrConnectWithoutUserInput
    connect?: AlamatWhereUniqueInput
  }

  export type MahasiswaCreateNestedManyWithoutUserInput = {
    create?: XOR<MahasiswaCreateWithoutUserInput, MahasiswaUncheckedCreateWithoutUserInput> | MahasiswaCreateWithoutUserInput[] | MahasiswaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutUserInput | MahasiswaCreateOrConnectWithoutUserInput[]
    createMany?: MahasiswaCreateManyUserInputEnvelope
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
  }

  export type UserHasPermissionsCreateNestedManyWithoutUserInput = {
    create?: XOR<UserHasPermissionsCreateWithoutUserInput, UserHasPermissionsUncheckedCreateWithoutUserInput> | UserHasPermissionsCreateWithoutUserInput[] | UserHasPermissionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutUserInput | UserHasPermissionsCreateOrConnectWithoutUserInput[]
    createMany?: UserHasPermissionsCreateManyUserInputEnvelope
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
  }

  export type UserHasRolesCreateNestedManyWithoutUserInput = {
    create?: XOR<UserHasRolesCreateWithoutUserInput, UserHasRolesUncheckedCreateWithoutUserInput> | UserHasRolesCreateWithoutUserInput[] | UserHasRolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutUserInput | UserHasRolesCreateOrConnectWithoutUserInput[]
    createMany?: UserHasRolesCreateManyUserInputEnvelope
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
  }

  export type UserloginCreateNestedManyWithoutUserInput = {
    create?: XOR<UserloginCreateWithoutUserInput, UserloginUncheckedCreateWithoutUserInput> | UserloginCreateWithoutUserInput[] | UserloginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserloginCreateOrConnectWithoutUserInput | UserloginCreateOrConnectWithoutUserInput[]
    createMany?: UserloginCreateManyUserInputEnvelope
    connect?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
  }

  export type MahasiswaUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MahasiswaCreateWithoutUserInput, MahasiswaUncheckedCreateWithoutUserInput> | MahasiswaCreateWithoutUserInput[] | MahasiswaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutUserInput | MahasiswaCreateOrConnectWithoutUserInput[]
    createMany?: MahasiswaCreateManyUserInputEnvelope
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
  }

  export type UserHasPermissionsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserHasPermissionsCreateWithoutUserInput, UserHasPermissionsUncheckedCreateWithoutUserInput> | UserHasPermissionsCreateWithoutUserInput[] | UserHasPermissionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutUserInput | UserHasPermissionsCreateOrConnectWithoutUserInput[]
    createMany?: UserHasPermissionsCreateManyUserInputEnvelope
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
  }

  export type UserHasRolesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserHasRolesCreateWithoutUserInput, UserHasRolesUncheckedCreateWithoutUserInput> | UserHasRolesCreateWithoutUserInput[] | UserHasRolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutUserInput | UserHasRolesCreateOrConnectWithoutUserInput[]
    createMany?: UserHasRolesCreateManyUserInputEnvelope
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
  }

  export type UserloginUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserloginCreateWithoutUserInput, UserloginUncheckedCreateWithoutUserInput> | UserloginCreateWithoutUserInput[] | UserloginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserloginCreateOrConnectWithoutUserInput | UserloginCreateOrConnectWithoutUserInput[]
    createMany?: UserloginCreateManyUserInputEnvelope
    connect?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
  }

  export type EnumJenisKelaminFieldUpdateOperationsInput = {
    set?: $Enums.JenisKelamin
  }

  export type AlamatUpdateOneRequiredWithoutUserNestedInput = {
    create?: XOR<AlamatCreateWithoutUserInput, AlamatUncheckedCreateWithoutUserInput>
    connectOrCreate?: AlamatCreateOrConnectWithoutUserInput
    upsert?: AlamatUpsertWithoutUserInput
    connect?: AlamatWhereUniqueInput
    update?: XOR<XOR<AlamatUpdateToOneWithWhereWithoutUserInput, AlamatUpdateWithoutUserInput>, AlamatUncheckedUpdateWithoutUserInput>
  }

  export type MahasiswaUpdateManyWithoutUserNestedInput = {
    create?: XOR<MahasiswaCreateWithoutUserInput, MahasiswaUncheckedCreateWithoutUserInput> | MahasiswaCreateWithoutUserInput[] | MahasiswaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutUserInput | MahasiswaCreateOrConnectWithoutUserInput[]
    upsert?: MahasiswaUpsertWithWhereUniqueWithoutUserInput | MahasiswaUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MahasiswaCreateManyUserInputEnvelope
    set?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    disconnect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    delete?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    update?: MahasiswaUpdateWithWhereUniqueWithoutUserInput | MahasiswaUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MahasiswaUpdateManyWithWhereWithoutUserInput | MahasiswaUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
  }

  export type UserHasPermissionsUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserHasPermissionsCreateWithoutUserInput, UserHasPermissionsUncheckedCreateWithoutUserInput> | UserHasPermissionsCreateWithoutUserInput[] | UserHasPermissionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutUserInput | UserHasPermissionsCreateOrConnectWithoutUserInput[]
    upsert?: UserHasPermissionsUpsertWithWhereUniqueWithoutUserInput | UserHasPermissionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserHasPermissionsCreateManyUserInputEnvelope
    set?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    disconnect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    delete?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    update?: UserHasPermissionsUpdateWithWhereUniqueWithoutUserInput | UserHasPermissionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserHasPermissionsUpdateManyWithWhereWithoutUserInput | UserHasPermissionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserHasPermissionsScalarWhereInput | UserHasPermissionsScalarWhereInput[]
  }

  export type UserHasRolesUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserHasRolesCreateWithoutUserInput, UserHasRolesUncheckedCreateWithoutUserInput> | UserHasRolesCreateWithoutUserInput[] | UserHasRolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutUserInput | UserHasRolesCreateOrConnectWithoutUserInput[]
    upsert?: UserHasRolesUpsertWithWhereUniqueWithoutUserInput | UserHasRolesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserHasRolesCreateManyUserInputEnvelope
    set?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    disconnect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    delete?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    update?: UserHasRolesUpdateWithWhereUniqueWithoutUserInput | UserHasRolesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserHasRolesUpdateManyWithWhereWithoutUserInput | UserHasRolesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserHasRolesScalarWhereInput | UserHasRolesScalarWhereInput[]
  }

  export type UserloginUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserloginCreateWithoutUserInput, UserloginUncheckedCreateWithoutUserInput> | UserloginCreateWithoutUserInput[] | UserloginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserloginCreateOrConnectWithoutUserInput | UserloginCreateOrConnectWithoutUserInput[]
    upsert?: UserloginUpsertWithWhereUniqueWithoutUserInput | UserloginUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserloginCreateManyUserInputEnvelope
    set?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    disconnect?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    delete?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    connect?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    update?: UserloginUpdateWithWhereUniqueWithoutUserInput | UserloginUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserloginUpdateManyWithWhereWithoutUserInput | UserloginUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserloginScalarWhereInput | UserloginScalarWhereInput[]
  }

  export type MahasiswaUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MahasiswaCreateWithoutUserInput, MahasiswaUncheckedCreateWithoutUserInput> | MahasiswaCreateWithoutUserInput[] | MahasiswaUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutUserInput | MahasiswaCreateOrConnectWithoutUserInput[]
    upsert?: MahasiswaUpsertWithWhereUniqueWithoutUserInput | MahasiswaUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MahasiswaCreateManyUserInputEnvelope
    set?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    disconnect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    delete?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    update?: MahasiswaUpdateWithWhereUniqueWithoutUserInput | MahasiswaUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MahasiswaUpdateManyWithWhereWithoutUserInput | MahasiswaUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
  }

  export type UserHasPermissionsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserHasPermissionsCreateWithoutUserInput, UserHasPermissionsUncheckedCreateWithoutUserInput> | UserHasPermissionsCreateWithoutUserInput[] | UserHasPermissionsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasPermissionsCreateOrConnectWithoutUserInput | UserHasPermissionsCreateOrConnectWithoutUserInput[]
    upsert?: UserHasPermissionsUpsertWithWhereUniqueWithoutUserInput | UserHasPermissionsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserHasPermissionsCreateManyUserInputEnvelope
    set?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    disconnect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    delete?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    connect?: UserHasPermissionsWhereUniqueInput | UserHasPermissionsWhereUniqueInput[]
    update?: UserHasPermissionsUpdateWithWhereUniqueWithoutUserInput | UserHasPermissionsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserHasPermissionsUpdateManyWithWhereWithoutUserInput | UserHasPermissionsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserHasPermissionsScalarWhereInput | UserHasPermissionsScalarWhereInput[]
  }

  export type UserHasRolesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserHasRolesCreateWithoutUserInput, UserHasRolesUncheckedCreateWithoutUserInput> | UserHasRolesCreateWithoutUserInput[] | UserHasRolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserHasRolesCreateOrConnectWithoutUserInput | UserHasRolesCreateOrConnectWithoutUserInput[]
    upsert?: UserHasRolesUpsertWithWhereUniqueWithoutUserInput | UserHasRolesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserHasRolesCreateManyUserInputEnvelope
    set?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    disconnect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    delete?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    connect?: UserHasRolesWhereUniqueInput | UserHasRolesWhereUniqueInput[]
    update?: UserHasRolesUpdateWithWhereUniqueWithoutUserInput | UserHasRolesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserHasRolesUpdateManyWithWhereWithoutUserInput | UserHasRolesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserHasRolesScalarWhereInput | UserHasRolesScalarWhereInput[]
  }

  export type UserloginUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserloginCreateWithoutUserInput, UserloginUncheckedCreateWithoutUserInput> | UserloginCreateWithoutUserInput[] | UserloginUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserloginCreateOrConnectWithoutUserInput | UserloginCreateOrConnectWithoutUserInput[]
    upsert?: UserloginUpsertWithWhereUniqueWithoutUserInput | UserloginUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserloginCreateManyUserInputEnvelope
    set?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    disconnect?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    delete?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    connect?: UserloginWhereUniqueInput | UserloginWhereUniqueInput[]
    update?: UserloginUpdateWithWhereUniqueWithoutUserInput | UserloginUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserloginUpdateManyWithWhereWithoutUserInput | UserloginUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserloginScalarWhereInput | UserloginScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserloginInput = {
    create?: XOR<UserCreateWithoutUserloginInput, UserUncheckedCreateWithoutUserloginInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserloginInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserloginNestedInput = {
    create?: XOR<UserCreateWithoutUserloginInput, UserUncheckedCreateWithoutUserloginInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserloginInput
    upsert?: UserUpsertWithoutUserloginInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserloginInput, UserUpdateWithoutUserloginInput>, UserUncheckedUpdateWithoutUserloginInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumProfiensiPengetahuanFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfiensiPengetahuan | EnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    in?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    not?: NestedEnumProfiensiPengetahuanFilter<$PrismaModel> | $Enums.ProfiensiPengetahuan
  }

  export type NestedEnumProfiensiPengetahuanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfiensiPengetahuan | EnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    in?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfiensiPengetahuan[] | ListEnumProfiensiPengetahuanFieldRefInput<$PrismaModel>
    not?: NestedEnumProfiensiPengetahuanWithAggregatesFilter<$PrismaModel> | $Enums.ProfiensiPengetahuan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProfiensiPengetahuanFilter<$PrismaModel>
    _max?: NestedEnumProfiensiPengetahuanFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumJenjangFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenjang | EnumJenjangFieldRefInput<$PrismaModel>
    in?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    notIn?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    not?: NestedEnumJenjangFilter<$PrismaModel> | $Enums.Jenjang
  }

  export type NestedEnumJenjangWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Jenjang | EnumJenjangFieldRefInput<$PrismaModel>
    in?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    notIn?: $Enums.Jenjang[] | ListEnumJenjangFieldRefInput<$PrismaModel>
    not?: NestedEnumJenjangWithAggregatesFilter<$PrismaModel> | $Enums.Jenjang
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenjangFilter<$PrismaModel>
    _max?: NestedEnumJenjangFilter<$PrismaModel>
  }

  export type NestedEnumStatusPerkawinanFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPerkawinan | EnumStatusPerkawinanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPerkawinanFilter<$PrismaModel> | $Enums.StatusPerkawinan
  }

  export type NestedEnumStatusPerkawinanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPerkawinan | EnumStatusPerkawinanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPerkawinan[] | ListEnumStatusPerkawinanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPerkawinanWithAggregatesFilter<$PrismaModel> | $Enums.StatusPerkawinan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusPerkawinanFilter<$PrismaModel>
    _max?: NestedEnumStatusPerkawinanFilter<$PrismaModel>
  }

  export type NestedEnumStatusKeikutsertaanFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusKeikutsertaan | EnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusKeikutsertaanFilter<$PrismaModel> | $Enums.StatusKeikutsertaan
  }

  export type NestedEnumStatusKeikutsertaanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusKeikutsertaan | EnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusKeikutsertaan[] | ListEnumStatusKeikutsertaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusKeikutsertaanWithAggregatesFilter<$PrismaModel> | $Enums.StatusKeikutsertaan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusKeikutsertaanFilter<$PrismaModel>
    _max?: NestedEnumStatusKeikutsertaanFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.KeteranganMataKuliah | EnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    in?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    not?: NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel> | $Enums.KeteranganMataKuliah | null
  }

  export type NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusMataKuliahMahasiswa | EnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    in?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel> | $Enums.StatusMataKuliahMahasiswa | null
  }

  export type NestedEnumKeteranganMataKuliahNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.KeteranganMataKuliah | EnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    in?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.KeteranganMataKuliah[] | ListEnumKeteranganMataKuliahFieldRefInput<$PrismaModel> | null
    not?: NestedEnumKeteranganMataKuliahNullableWithAggregatesFilter<$PrismaModel> | $Enums.KeteranganMataKuliah | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel>
    _max?: NestedEnumKeteranganMataKuliahNullableFilter<$PrismaModel>
  }

  export type NestedEnumStatusMataKuliahMahasiswaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusMataKuliahMahasiswa | EnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    in?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StatusMataKuliahMahasiswa[] | ListEnumStatusMataKuliahMahasiswaFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStatusMataKuliahMahasiswaNullableWithAggregatesFilter<$PrismaModel> | $Enums.StatusMataKuliahMahasiswa | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel>
    _max?: NestedEnumStatusMataKuliahMahasiswaNullableFilter<$PrismaModel>
  }

  export type NestedEnumJenisOrtuFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisOrtu | EnumJenisOrtuFieldRefInput<$PrismaModel>
    in?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisOrtuFilter<$PrismaModel> | $Enums.JenisOrtu
  }

  export type NestedEnumJenisOrtuWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisOrtu | EnumJenisOrtuFieldRefInput<$PrismaModel>
    in?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisOrtu[] | ListEnumJenisOrtuFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisOrtuWithAggregatesFilter<$PrismaModel> | $Enums.JenisOrtu
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenisOrtuFilter<$PrismaModel>
    _max?: NestedEnumJenisOrtuFilter<$PrismaModel>
  }

  export type NestedEnumStatusPekerjaanFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPekerjaan | EnumStatusPekerjaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPekerjaanFilter<$PrismaModel> | $Enums.StatusPekerjaan
  }

  export type NestedEnumStatusPekerjaanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusPekerjaan | EnumStatusPekerjaanFieldRefInput<$PrismaModel>
    in?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusPekerjaan[] | ListEnumStatusPekerjaanFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusPekerjaanWithAggregatesFilter<$PrismaModel> | $Enums.StatusPekerjaan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusPekerjaanFilter<$PrismaModel>
    _max?: NestedEnumStatusPekerjaanFilter<$PrismaModel>
  }

  export type NestedEnumSistemKuliahFilter<$PrismaModel = never> = {
    equals?: $Enums.SistemKuliah | EnumSistemKuliahFieldRefInput<$PrismaModel>
    in?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    notIn?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    not?: NestedEnumSistemKuliahFilter<$PrismaModel> | $Enums.SistemKuliah
  }

  export type NestedEnumSistemKuliahWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SistemKuliah | EnumSistemKuliahFieldRefInput<$PrismaModel>
    in?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    notIn?: $Enums.SistemKuliah[] | ListEnumSistemKuliahFieldRefInput<$PrismaModel>
    not?: NestedEnumSistemKuliahWithAggregatesFilter<$PrismaModel> | $Enums.SistemKuliah
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSistemKuliahFilter<$PrismaModel>
    _max?: NestedEnumSistemKuliahFilter<$PrismaModel>
  }

  export type NestedEnumJenisKelaminFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisKelamin | EnumJenisKelaminFieldRefInput<$PrismaModel>
    in?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisKelaminFilter<$PrismaModel> | $Enums.JenisKelamin
  }

  export type NestedEnumJenisKelaminWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.JenisKelamin | EnumJenisKelaminFieldRefInput<$PrismaModel>
    in?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    notIn?: $Enums.JenisKelamin[] | ListEnumJenisKelaminFieldRefInput<$PrismaModel>
    not?: NestedEnumJenisKelaminWithAggregatesFilter<$PrismaModel> | $Enums.JenisKelamin
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumJenisKelaminFilter<$PrismaModel>
    _max?: NestedEnumJenisKelaminFilter<$PrismaModel>
  }

  export type DesaCreateWithoutAlamatInput = {
    DesaId?: string
    Nama: string
    Kecamatan: KecamatanCreateNestedOneWithoutDesaInput
  }

  export type DesaUncheckedCreateWithoutAlamatInput = {
    DesaId?: string
    KecamatanId: string
    Nama: string
  }

  export type DesaCreateOrConnectWithoutAlamatInput = {
    where: DesaWhereUniqueInput
    create: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
  }

  export type InstitusiLamaCreateWithoutAlamatInput = {
    InstitusiLamaId?: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutInstitusiLamaInput
  }

  export type InstitusiLamaUncheckedCreateWithoutAlamatInput = {
    InstitusiLamaId?: string
    PendaftaranId: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InstitusiLamaCreateOrConnectWithoutAlamatInput = {
    where: InstitusiLamaWhereUniqueInput
    create: XOR<InstitusiLamaCreateWithoutAlamatInput, InstitusiLamaUncheckedCreateWithoutAlamatInput>
  }

  export type InstitusiLamaCreateManyAlamatInputEnvelope = {
    data: InstitusiLamaCreateManyAlamatInput | InstitusiLamaCreateManyAlamatInput[]
    skipDuplicates?: boolean
  }

  export type UniversityCreateWithoutAlamatInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi?: ProgramStudiCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutAlamatInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi?: ProgramStudiUncheckedCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanUncheckedCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutAlamatInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutAlamatInput, UniversityUncheckedCreateWithoutAlamatInput>
  }

  export type UniversityCreateManyAlamatInputEnvelope = {
    data: UniversityCreateManyAlamatInput | UniversityCreateManyAlamatInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutAlamatInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Mahasiswa?: MahasiswaCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutUserInput
    Userlogin?: UserloginCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAlamatInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Mahasiswa?: MahasiswaUncheckedCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutUserInput
    Userlogin?: UserloginUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAlamatInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAlamatInput, UserUncheckedCreateWithoutAlamatInput>
  }

  export type UserCreateManyAlamatInputEnvelope = {
    data: UserCreateManyAlamatInput | UserCreateManyAlamatInput[]
    skipDuplicates?: boolean
  }

  export type DesaUpsertWithoutAlamatInput = {
    update: XOR<DesaUpdateWithoutAlamatInput, DesaUncheckedUpdateWithoutAlamatInput>
    create: XOR<DesaCreateWithoutAlamatInput, DesaUncheckedCreateWithoutAlamatInput>
    where?: DesaWhereInput
  }

  export type DesaUpdateToOneWithWhereWithoutAlamatInput = {
    where?: DesaWhereInput
    data: XOR<DesaUpdateWithoutAlamatInput, DesaUncheckedUpdateWithoutAlamatInput>
  }

  export type DesaUpdateWithoutAlamatInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kecamatan?: KecamatanUpdateOneRequiredWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateWithoutAlamatInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type InstitusiLamaUpsertWithWhereUniqueWithoutAlamatInput = {
    where: InstitusiLamaWhereUniqueInput
    update: XOR<InstitusiLamaUpdateWithoutAlamatInput, InstitusiLamaUncheckedUpdateWithoutAlamatInput>
    create: XOR<InstitusiLamaCreateWithoutAlamatInput, InstitusiLamaUncheckedCreateWithoutAlamatInput>
  }

  export type InstitusiLamaUpdateWithWhereUniqueWithoutAlamatInput = {
    where: InstitusiLamaWhereUniqueInput
    data: XOR<InstitusiLamaUpdateWithoutAlamatInput, InstitusiLamaUncheckedUpdateWithoutAlamatInput>
  }

  export type InstitusiLamaUpdateManyWithWhereWithoutAlamatInput = {
    where: InstitusiLamaScalarWhereInput
    data: XOR<InstitusiLamaUpdateManyMutationInput, InstitusiLamaUncheckedUpdateManyWithoutAlamatInput>
  }

  export type InstitusiLamaScalarWhereInput = {
    AND?: InstitusiLamaScalarWhereInput | InstitusiLamaScalarWhereInput[]
    OR?: InstitusiLamaScalarWhereInput[]
    NOT?: InstitusiLamaScalarWhereInput | InstitusiLamaScalarWhereInput[]
    InstitusiLamaId?: StringFilter<"InstitusiLama"> | string
    PendaftaranId?: StringFilter<"InstitusiLama"> | string
    AlamatId?: StringFilter<"InstitusiLama"> | string
    Jenjang?: EnumJenjangFilter<"InstitusiLama"> | $Enums.Jenjang
    JenisInstitusi?: StringFilter<"InstitusiLama"> | string
    NamaInstitusi?: StringFilter<"InstitusiLama"> | string
    Jurusan?: StringFilter<"InstitusiLama"> | string
    Nisn?: StringFilter<"InstitusiLama"> | string
    Npsn?: StringFilter<"InstitusiLama"> | string
    TahunLulus?: IntFilter<"InstitusiLama"> | number
    NilaiLulusan?: FloatFilter<"InstitusiLama"> | number
    CreatedAt?: DateTimeNullableFilter<"InstitusiLama"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"InstitusiLama"> | Date | string | null
  }

  export type UniversityUpsertWithWhereUniqueWithoutAlamatInput = {
    where: UniversityWhereUniqueInput
    update: XOR<UniversityUpdateWithoutAlamatInput, UniversityUncheckedUpdateWithoutAlamatInput>
    create: XOR<UniversityCreateWithoutAlamatInput, UniversityUncheckedCreateWithoutAlamatInput>
  }

  export type UniversityUpdateWithWhereUniqueWithoutAlamatInput = {
    where: UniversityWhereUniqueInput
    data: XOR<UniversityUpdateWithoutAlamatInput, UniversityUncheckedUpdateWithoutAlamatInput>
  }

  export type UniversityUpdateManyWithWhereWithoutAlamatInput = {
    where: UniversityScalarWhereInput
    data: XOR<UniversityUpdateManyMutationInput, UniversityUncheckedUpdateManyWithoutAlamatInput>
  }

  export type UniversityScalarWhereInput = {
    AND?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
    OR?: UniversityScalarWhereInput[]
    NOT?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
    UniversityId?: StringFilter<"University"> | string
    AlamatId?: StringFilter<"University"> | string
    Nama?: StringFilter<"University"> | string
    Akreditasi?: StringFilter<"University"> | string
    CreatedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"University"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"University"> | Date | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutAlamatInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutAlamatInput, UserUncheckedUpdateWithoutAlamatInput>
    create: XOR<UserCreateWithoutAlamatInput, UserUncheckedCreateWithoutAlamatInput>
  }

  export type UserUpdateWithWhereUniqueWithoutAlamatInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutAlamatInput, UserUncheckedUpdateWithoutAlamatInput>
  }

  export type UserUpdateManyWithWhereWithoutAlamatInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAlamatInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    UserId?: StringFilter<"User"> | string
    AlamatId?: StringFilter<"User"> | string
    Nama?: StringFilter<"User"> | string
    Email?: StringFilter<"User"> | string
    EmailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    TempatLahir?: StringNullableFilter<"User"> | string | null
    TanggalLahir?: DateTimeNullableFilter<"User"> | Date | string | null
    JenisKelamin?: EnumJenisKelaminFilter<"User"> | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFilter<"User"> | $Enums.Jenjang
    Avatar?: StringNullableFilter<"User"> | string | null
    Agama?: StringNullableFilter<"User"> | string | null
    Telepon?: StringNullableFilter<"User"> | string | null
    NomorWa?: StringNullableFilter<"User"> | string | null
    NomorHp?: StringNullableFilter<"User"> | string | null
    RememberToken?: StringNullableFilter<"User"> | string | null
    CreatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
  }

  export type TipeAsesorCreateWithoutAsesorInput = {
    TipeAsesorId?: string
    Nama: string
    Icon?: string | null
    Deskripsi?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type TipeAsesorUncheckedCreateWithoutAsesorInput = {
    TipeAsesorId?: string
    Nama: string
    Icon?: string | null
    Deskripsi?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type TipeAsesorCreateOrConnectWithoutAsesorInput = {
    where: TipeAsesorWhereUniqueInput
    create: XOR<TipeAsesorCreateWithoutAsesorInput, TipeAsesorUncheckedCreateWithoutAsesorInput>
  }

  export type AsesorAkademikCreateWithoutAsesorInput = {
    AsesorAkademikId?: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiCreateNestedManyWithoutAsesorAkademikInput
  }

  export type AsesorAkademikUncheckedCreateWithoutAsesorInput = {
    AsesorAkademikId?: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiUncheckedCreateNestedManyWithoutAsesorAkademikInput
  }

  export type AsesorAkademikCreateOrConnectWithoutAsesorInput = {
    where: AsesorAkademikWhereUniqueInput
    create: XOR<AsesorAkademikCreateWithoutAsesorInput, AsesorAkademikUncheckedCreateWithoutAsesorInput>
  }

  export type AsesorAkademikCreateManyAsesorInputEnvelope = {
    data: AsesorAkademikCreateManyAsesorInput | AsesorAkademikCreateManyAsesorInput[]
    skipDuplicates?: boolean
  }

  export type AsesorPraktisiCreateWithoutAsesorInput = {
    AsesorPraktisiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor?: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorPraktisiUncheckedCreateWithoutAsesorInput = {
    AsesorPraktisiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor?: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorPraktisiCreateOrConnectWithoutAsesorInput = {
    where: AsesorPraktisiWhereUniqueInput
    create: XOR<AsesorPraktisiCreateWithoutAsesorInput, AsesorPraktisiUncheckedCreateWithoutAsesorInput>
  }

  export type AsesorPraktisiCreateManyAsesorInputEnvelope = {
    data: AsesorPraktisiCreateManyAsesorInput | AsesorPraktisiCreateManyAsesorInput[]
    skipDuplicates?: boolean
  }

  export type AssesorMahasiswaCreateWithoutAsesorInput = {
    AssesorMahasiswaId?: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutAssesorMahasiswaInput
    SkRektorAssesor?: SkRektorAssesorCreateNestedManyWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaUncheckedCreateWithoutAsesorInput = {
    AssesorMahasiswaId?: string
    PendaftaranId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedCreateNestedManyWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaCreateOrConnectWithoutAsesorInput = {
    where: AssesorMahasiswaWhereUniqueInput
    create: XOR<AssesorMahasiswaCreateWithoutAsesorInput, AssesorMahasiswaUncheckedCreateWithoutAsesorInput>
  }

  export type AssesorMahasiswaCreateManyAsesorInputEnvelope = {
    data: AssesorMahasiswaCreateManyAsesorInput | AssesorMahasiswaCreateManyAsesorInput[]
    skipDuplicates?: boolean
  }

  export type TipeAsesorUpsertWithoutAsesorInput = {
    update: XOR<TipeAsesorUpdateWithoutAsesorInput, TipeAsesorUncheckedUpdateWithoutAsesorInput>
    create: XOR<TipeAsesorCreateWithoutAsesorInput, TipeAsesorUncheckedCreateWithoutAsesorInput>
    where?: TipeAsesorWhereInput
  }

  export type TipeAsesorUpdateToOneWithWhereWithoutAsesorInput = {
    where?: TipeAsesorWhereInput
    data: XOR<TipeAsesorUpdateWithoutAsesorInput, TipeAsesorUncheckedUpdateWithoutAsesorInput>
  }

  export type TipeAsesorUpdateWithoutAsesorInput = {
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    Deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TipeAsesorUncheckedUpdateWithoutAsesorInput = {
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    Deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikUpsertWithWhereUniqueWithoutAsesorInput = {
    where: AsesorAkademikWhereUniqueInput
    update: XOR<AsesorAkademikUpdateWithoutAsesorInput, AsesorAkademikUncheckedUpdateWithoutAsesorInput>
    create: XOR<AsesorAkademikCreateWithoutAsesorInput, AsesorAkademikUncheckedCreateWithoutAsesorInput>
  }

  export type AsesorAkademikUpdateWithWhereUniqueWithoutAsesorInput = {
    where: AsesorAkademikWhereUniqueInput
    data: XOR<AsesorAkademikUpdateWithoutAsesorInput, AsesorAkademikUncheckedUpdateWithoutAsesorInput>
  }

  export type AsesorAkademikUpdateManyWithWhereWithoutAsesorInput = {
    where: AsesorAkademikScalarWhereInput
    data: XOR<AsesorAkademikUpdateManyMutationInput, AsesorAkademikUncheckedUpdateManyWithoutAsesorInput>
  }

  export type AsesorAkademikScalarWhereInput = {
    AND?: AsesorAkademikScalarWhereInput | AsesorAkademikScalarWhereInput[]
    OR?: AsesorAkademikScalarWhereInput[]
    NOT?: AsesorAkademikScalarWhereInput | AsesorAkademikScalarWhereInput[]
    AsesorAkademikId?: StringFilter<"AsesorAkademik"> | string
    AsesorId?: StringFilter<"AsesorAkademik"> | string
    Pangkat?: StringFilter<"AsesorAkademik"> | string
    JabatanFungsionalAkademik?: StringFilter<"AsesorAkademik"> | string
    NipNidn?: StringFilter<"AsesorAkademik"> | string
    NamaPerguruanTinggi?: StringFilter<"AsesorAkademik"> | string
    AlamatPerguruanTinggi?: StringNullableFilter<"AsesorAkademik"> | string | null
    PendidikanTerakhirBidangKeilmuan?: StringNullableFilter<"AsesorAkademik"> | string | null
    CreatedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"AsesorAkademik"> | Date | string | null
  }

  export type AsesorPraktisiUpsertWithWhereUniqueWithoutAsesorInput = {
    where: AsesorPraktisiWhereUniqueInput
    update: XOR<AsesorPraktisiUpdateWithoutAsesorInput, AsesorPraktisiUncheckedUpdateWithoutAsesorInput>
    create: XOR<AsesorPraktisiCreateWithoutAsesorInput, AsesorPraktisiUncheckedCreateWithoutAsesorInput>
  }

  export type AsesorPraktisiUpdateWithWhereUniqueWithoutAsesorInput = {
    where: AsesorPraktisiWhereUniqueInput
    data: XOR<AsesorPraktisiUpdateWithoutAsesorInput, AsesorPraktisiUncheckedUpdateWithoutAsesorInput>
  }

  export type AsesorPraktisiUpdateManyWithWhereWithoutAsesorInput = {
    where: AsesorPraktisiScalarWhereInput
    data: XOR<AsesorPraktisiUpdateManyMutationInput, AsesorPraktisiUncheckedUpdateManyWithoutAsesorInput>
  }

  export type AsesorPraktisiScalarWhereInput = {
    AND?: AsesorPraktisiScalarWhereInput | AsesorPraktisiScalarWhereInput[]
    OR?: AsesorPraktisiScalarWhereInput[]
    NOT?: AsesorPraktisiScalarWhereInput | AsesorPraktisiScalarWhereInput[]
    AsesorPraktisiId?: StringFilter<"AsesorPraktisi"> | string
    AsesorId?: StringFilter<"AsesorPraktisi"> | string
    NamaAsosiasi?: StringFilter<"AsesorPraktisi"> | string
    NomorKeanggotaan?: StringFilter<"AsesorPraktisi"> | string
    Jabatan?: StringFilter<"AsesorPraktisi"> | string
    AlamatKantor?: StringNullableFilter<"AsesorPraktisi"> | string | null
    NamaInstansi?: StringFilter<"AsesorPraktisi"> | string
    JabatanInstansi?: StringFilter<"AsesorPraktisi"> | string
    BidangKeahlian?: StringFilter<"AsesorPraktisi"> | string
    CreatedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"AsesorPraktisi"> | Date | string | null
  }

  export type AssesorMahasiswaUpsertWithWhereUniqueWithoutAsesorInput = {
    where: AssesorMahasiswaWhereUniqueInput
    update: XOR<AssesorMahasiswaUpdateWithoutAsesorInput, AssesorMahasiswaUncheckedUpdateWithoutAsesorInput>
    create: XOR<AssesorMahasiswaCreateWithoutAsesorInput, AssesorMahasiswaUncheckedCreateWithoutAsesorInput>
  }

  export type AssesorMahasiswaUpdateWithWhereUniqueWithoutAsesorInput = {
    where: AssesorMahasiswaWhereUniqueInput
    data: XOR<AssesorMahasiswaUpdateWithoutAsesorInput, AssesorMahasiswaUncheckedUpdateWithoutAsesorInput>
  }

  export type AssesorMahasiswaUpdateManyWithWhereWithoutAsesorInput = {
    where: AssesorMahasiswaScalarWhereInput
    data: XOR<AssesorMahasiswaUpdateManyMutationInput, AssesorMahasiswaUncheckedUpdateManyWithoutAsesorInput>
  }

  export type AssesorMahasiswaScalarWhereInput = {
    AND?: AssesorMahasiswaScalarWhereInput | AssesorMahasiswaScalarWhereInput[]
    OR?: AssesorMahasiswaScalarWhereInput[]
    NOT?: AssesorMahasiswaScalarWhereInput | AssesorMahasiswaScalarWhereInput[]
    AssesorMahasiswaId?: StringFilter<"AssesorMahasiswa"> | string
    PendaftaranId?: StringFilter<"AssesorMahasiswa"> | string
    AsesorId?: StringFilter<"AssesorMahasiswa"> | string
    Urutan?: IntFilter<"AssesorMahasiswa"> | number
    Confirmation?: BoolFilter<"AssesorMahasiswa"> | boolean
    CreatedAt?: DateTimeNullableFilter<"AssesorMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AssesorMahasiswa"> | Date | string | null
  }

  export type AsesorCreateWithoutAsesorAkademikInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    TipeAsesor: TipeAsesorCreateNestedOneWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutAsesorInput
  }

  export type AsesorUncheckedCreateWithoutAsesorAkademikInput = {
    AsesorId?: string
    TipeAsesorId: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorPraktisi?: AsesorPraktisiUncheckedCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutAsesorInput
  }

  export type AsesorCreateOrConnectWithoutAsesorAkademikInput = {
    where: AsesorWhereUniqueInput
    create: XOR<AsesorCreateWithoutAsesorAkademikInput, AsesorUncheckedCreateWithoutAsesorAkademikInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateOrConnectWithoutAsesorAkademikInput = {
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    create: XOR<AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInputEnvelope = {
    data: AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInput | AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInput[]
    skipDuplicates?: boolean
  }

  export type AsesorUpsertWithoutAsesorAkademikInput = {
    update: XOR<AsesorUpdateWithoutAsesorAkademikInput, AsesorUncheckedUpdateWithoutAsesorAkademikInput>
    create: XOR<AsesorCreateWithoutAsesorAkademikInput, AsesorUncheckedCreateWithoutAsesorAkademikInput>
    where?: AsesorWhereInput
  }

  export type AsesorUpdateToOneWithWhereWithoutAsesorAkademikInput = {
    where?: AsesorWhereInput
    data: XOR<AsesorUpdateWithoutAsesorAkademikInput, AsesorUncheckedUpdateWithoutAsesorAkademikInput>
  }

  export type AsesorUpdateWithoutAsesorAkademikInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TipeAsesor?: TipeAsesorUpdateOneRequiredWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorUncheckedUpdateWithoutAsesorAkademikInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorPraktisi?: AsesorPraktisiUncheckedUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpsertWithWhereUniqueWithoutAsesorAkademikInput = {
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    update: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateWithoutAsesorAkademikInput>
    create: XOR<AsesorAkademikKeanggotaanAsosiasiCreateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedCreateWithoutAsesorAkademikInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpdateWithWhereUniqueWithoutAsesorAkademikInput = {
    where: AsesorAkademikKeanggotaanAsosiasiWhereUniqueInput
    data: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateWithoutAsesorAkademikInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateWithoutAsesorAkademikInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpdateManyWithWhereWithoutAsesorAkademikInput = {
    where: AsesorAkademikKeanggotaanAsosiasiScalarWhereInput
    data: XOR<AsesorAkademikKeanggotaanAsosiasiUpdateManyMutationInput, AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyWithoutAsesorAkademikInput>
  }

  export type AsesorAkademikKeanggotaanAsosiasiScalarWhereInput = {
    AND?: AsesorAkademikKeanggotaanAsosiasiScalarWhereInput | AsesorAkademikKeanggotaanAsosiasiScalarWhereInput[]
    OR?: AsesorAkademikKeanggotaanAsosiasiScalarWhereInput[]
    NOT?: AsesorAkademikKeanggotaanAsosiasiScalarWhereInput | AsesorAkademikKeanggotaanAsosiasiScalarWhereInput[]
    AsesorAkademikKeanggotaanAsosiasiId?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    AsesorAkademikId?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NamaAsosiasi?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    NomorKeanggotaan?: StringFilter<"AsesorAkademikKeanggotaanAsosiasi"> | string
    CreatedAt?: DateTimeNullableFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"AsesorAkademikKeanggotaanAsosiasi"> | Date | string | null
  }

  export type AsesorAkademikCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    AsesorAkademikId?: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Asesor: AsesorCreateNestedOneWithoutAsesorAkademikInput
  }

  export type AsesorAkademikUncheckedCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    AsesorAkademikId?: string
    AsesorId: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorAkademikCreateOrConnectWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    where: AsesorAkademikWhereUniqueInput
    create: XOR<AsesorAkademikCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUncheckedCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
  }

  export type AsesorAkademikUpsertWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    update: XOR<AsesorAkademikUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUncheckedUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
    create: XOR<AsesorAkademikCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUncheckedCreateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
    where?: AsesorAkademikWhereInput
  }

  export type AsesorAkademikUpdateToOneWithWhereWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    where?: AsesorAkademikWhereInput
    data: XOR<AsesorAkademikUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput, AsesorAkademikUncheckedUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput>
  }

  export type AsesorAkademikUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateOneRequiredWithoutAsesorAkademikNestedInput
  }

  export type AsesorAkademikUncheckedUpdateWithoutAsesorAkademikKeanggotaanAsosiasiInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorCreateWithoutAsesorPraktisiInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    TipeAsesor: TipeAsesorCreateNestedOneWithoutAsesorInput
    AsesorAkademik?: AsesorAkademikCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutAsesorInput
  }

  export type AsesorUncheckedCreateWithoutAsesorPraktisiInput = {
    AsesorId?: string
    TipeAsesorId: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutAsesorInput
  }

  export type AsesorCreateOrConnectWithoutAsesorPraktisiInput = {
    where: AsesorWhereUniqueInput
    create: XOR<AsesorCreateWithoutAsesorPraktisiInput, AsesorUncheckedCreateWithoutAsesorPraktisiInput>
  }

  export type AsesorUpsertWithoutAsesorPraktisiInput = {
    update: XOR<AsesorUpdateWithoutAsesorPraktisiInput, AsesorUncheckedUpdateWithoutAsesorPraktisiInput>
    create: XOR<AsesorCreateWithoutAsesorPraktisiInput, AsesorUncheckedCreateWithoutAsesorPraktisiInput>
    where?: AsesorWhereInput
  }

  export type AsesorUpdateToOneWithWhereWithoutAsesorPraktisiInput = {
    where?: AsesorWhereInput
    data: XOR<AsesorUpdateWithoutAsesorPraktisiInput, AsesorUncheckedUpdateWithoutAsesorPraktisiInput>
  }

  export type AsesorUpdateWithoutAsesorPraktisiInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TipeAsesor?: TipeAsesorUpdateOneRequiredWithoutAsesorNestedInput
    AsesorAkademik?: AsesorAkademikUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorUncheckedUpdateWithoutAsesorPraktisiInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorCreateWithoutAssesorMahasiswaInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    TipeAsesor: TipeAsesorCreateNestedOneWithoutAsesorInput
    AsesorAkademik?: AsesorAkademikCreateNestedManyWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiCreateNestedManyWithoutAsesorInput
  }

  export type AsesorUncheckedCreateWithoutAssesorMahasiswaInput = {
    AsesorId?: string
    TipeAsesorId: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedCreateNestedManyWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiUncheckedCreateNestedManyWithoutAsesorInput
  }

  export type AsesorCreateOrConnectWithoutAssesorMahasiswaInput = {
    where: AsesorWhereUniqueInput
    create: XOR<AsesorCreateWithoutAssesorMahasiswaInput, AsesorUncheckedCreateWithoutAssesorMahasiswaInput>
  }

  export type PendaftaranCreateWithoutAssesorMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutAssesorMahasiswaInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutAssesorMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutAssesorMahasiswaInput, PendaftaranUncheckedCreateWithoutAssesorMahasiswaInput>
  }

  export type SkRektorAssesorCreateWithoutAssesorMahasiswaInput = {
    SkRektor: SkRektorCreateNestedOneWithoutSkRektorAssesorInput
  }

  export type SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput = {
    SkRektorId: string
  }

  export type SkRektorAssesorCreateOrConnectWithoutAssesorMahasiswaInput = {
    where: SkRektorAssesorWhereUniqueInput
    create: XOR<SkRektorAssesorCreateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput>
  }

  export type SkRektorAssesorCreateManyAssesorMahasiswaInputEnvelope = {
    data: SkRektorAssesorCreateManyAssesorMahasiswaInput | SkRektorAssesorCreateManyAssesorMahasiswaInput[]
    skipDuplicates?: boolean
  }

  export type AsesorUpsertWithoutAssesorMahasiswaInput = {
    update: XOR<AsesorUpdateWithoutAssesorMahasiswaInput, AsesorUncheckedUpdateWithoutAssesorMahasiswaInput>
    create: XOR<AsesorCreateWithoutAssesorMahasiswaInput, AsesorUncheckedCreateWithoutAssesorMahasiswaInput>
    where?: AsesorWhereInput
  }

  export type AsesorUpdateToOneWithWhereWithoutAssesorMahasiswaInput = {
    where?: AsesorWhereInput
    data: XOR<AsesorUpdateWithoutAssesorMahasiswaInput, AsesorUncheckedUpdateWithoutAssesorMahasiswaInput>
  }

  export type AsesorUpdateWithoutAssesorMahasiswaInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TipeAsesor?: TipeAsesorUpdateOneRequiredWithoutAsesorNestedInput
    AsesorAkademik?: AsesorAkademikUpdateManyWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorUncheckedUpdateWithoutAssesorMahasiswaInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    TipeAsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedUpdateManyWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUncheckedUpdateManyWithoutAsesorNestedInput
  }

  export type PendaftaranUpsertWithoutAssesorMahasiswaInput = {
    update: XOR<PendaftaranUpdateWithoutAssesorMahasiswaInput, PendaftaranUncheckedUpdateWithoutAssesorMahasiswaInput>
    create: XOR<PendaftaranCreateWithoutAssesorMahasiswaInput, PendaftaranUncheckedCreateWithoutAssesorMahasiswaInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutAssesorMahasiswaInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutAssesorMahasiswaInput, PendaftaranUncheckedUpdateWithoutAssesorMahasiswaInput>
  }

  export type PendaftaranUpdateWithoutAssesorMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutAssesorMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type SkRektorAssesorUpsertWithWhereUniqueWithoutAssesorMahasiswaInput = {
    where: SkRektorAssesorWhereUniqueInput
    update: XOR<SkRektorAssesorUpdateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedUpdateWithoutAssesorMahasiswaInput>
    create: XOR<SkRektorAssesorCreateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedCreateWithoutAssesorMahasiswaInput>
  }

  export type SkRektorAssesorUpdateWithWhereUniqueWithoutAssesorMahasiswaInput = {
    where: SkRektorAssesorWhereUniqueInput
    data: XOR<SkRektorAssesorUpdateWithoutAssesorMahasiswaInput, SkRektorAssesorUncheckedUpdateWithoutAssesorMahasiswaInput>
  }

  export type SkRektorAssesorUpdateManyWithWhereWithoutAssesorMahasiswaInput = {
    where: SkRektorAssesorScalarWhereInput
    data: XOR<SkRektorAssesorUpdateManyMutationInput, SkRektorAssesorUncheckedUpdateManyWithoutAssesorMahasiswaInput>
  }

  export type SkRektorAssesorScalarWhereInput = {
    AND?: SkRektorAssesorScalarWhereInput | SkRektorAssesorScalarWhereInput[]
    OR?: SkRektorAssesorScalarWhereInput[]
    NOT?: SkRektorAssesorScalarWhereInput | SkRektorAssesorScalarWhereInput[]
    SkRektorId?: StringFilter<"SkRektorAssesor"> | string
    AssesorMahasiswaId?: StringFilter<"SkRektorAssesor"> | string
  }

  export type PendaftaranCreateWithoutBuktiFormInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutBuktiFormInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutBuktiFormInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutBuktiFormInput, PendaftaranUncheckedCreateWithoutBuktiFormInput>
  }

  export type JenisDokumenCreateWithoutBuktiFormInput = {
    JenisDokumenId?: string
    Jenis: string
    NomorDokumen: number
    Keterangan?: string | null
  }

  export type JenisDokumenUncheckedCreateWithoutBuktiFormInput = {
    JenisDokumenId?: string
    Jenis: string
    NomorDokumen: number
    Keterangan?: string | null
  }

  export type JenisDokumenCreateOrConnectWithoutBuktiFormInput = {
    where: JenisDokumenWhereUniqueInput
    create: XOR<JenisDokumenCreateWithoutBuktiFormInput, JenisDokumenUncheckedCreateWithoutBuktiFormInput>
  }

  export type BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput = {
    EvaluasiDiri: EvaluasiDiriCreateNestedOneWithoutBuktiFormEvaluasiDiriInput
  }

  export type BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput = {
    EvaluasiDiriId: string
  }

  export type BuktiFormEvaluasiDiriCreateOrConnectWithoutBuktiFormInput = {
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    create: XOR<BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput>
  }

  export type BuktiFormEvaluasiDiriCreateManyBuktiFormInputEnvelope = {
    data: BuktiFormEvaluasiDiriCreateManyBuktiFormInput | BuktiFormEvaluasiDiriCreateManyBuktiFormInput[]
    skipDuplicates?: boolean
  }

  export type PendaftaranUpsertWithoutBuktiFormInput = {
    update: XOR<PendaftaranUpdateWithoutBuktiFormInput, PendaftaranUncheckedUpdateWithoutBuktiFormInput>
    create: XOR<PendaftaranCreateWithoutBuktiFormInput, PendaftaranUncheckedCreateWithoutBuktiFormInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutBuktiFormInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutBuktiFormInput, PendaftaranUncheckedUpdateWithoutBuktiFormInput>
  }

  export type PendaftaranUpdateWithoutBuktiFormInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutBuktiFormInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type JenisDokumenUpsertWithoutBuktiFormInput = {
    update: XOR<JenisDokumenUpdateWithoutBuktiFormInput, JenisDokumenUncheckedUpdateWithoutBuktiFormInput>
    create: XOR<JenisDokumenCreateWithoutBuktiFormInput, JenisDokumenUncheckedCreateWithoutBuktiFormInput>
    where?: JenisDokumenWhereInput
  }

  export type JenisDokumenUpdateToOneWithWhereWithoutBuktiFormInput = {
    where?: JenisDokumenWhereInput
    data: XOR<JenisDokumenUpdateWithoutBuktiFormInput, JenisDokumenUncheckedUpdateWithoutBuktiFormInput>
  }

  export type JenisDokumenUpdateWithoutBuktiFormInput = {
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    Jenis?: StringFieldUpdateOperationsInput | string
    NomorDokumen?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type JenisDokumenUncheckedUpdateWithoutBuktiFormInput = {
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    Jenis?: StringFieldUpdateOperationsInput | string
    NomorDokumen?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutBuktiFormInput = {
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    update: XOR<BuktiFormEvaluasiDiriUpdateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedUpdateWithoutBuktiFormInput>
    create: XOR<BuktiFormEvaluasiDiriCreateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutBuktiFormInput>
  }

  export type BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutBuktiFormInput = {
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    data: XOR<BuktiFormEvaluasiDiriUpdateWithoutBuktiFormInput, BuktiFormEvaluasiDiriUncheckedUpdateWithoutBuktiFormInput>
  }

  export type BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutBuktiFormInput = {
    where: BuktiFormEvaluasiDiriScalarWhereInput
    data: XOR<BuktiFormEvaluasiDiriUpdateManyMutationInput, BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutBuktiFormInput>
  }

  export type BuktiFormEvaluasiDiriScalarWhereInput = {
    AND?: BuktiFormEvaluasiDiriScalarWhereInput | BuktiFormEvaluasiDiriScalarWhereInput[]
    OR?: BuktiFormEvaluasiDiriScalarWhereInput[]
    NOT?: BuktiFormEvaluasiDiriScalarWhereInput | BuktiFormEvaluasiDiriScalarWhereInput[]
    BuktiFormId?: StringFilter<"BuktiFormEvaluasiDiri"> | string
    EvaluasiDiriId?: StringFilter<"BuktiFormEvaluasiDiri"> | string
  }

  export type BuktiFormCreateWithoutBuktiFormEvaluasiDiriInput = {
    BuktiFormId?: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutBuktiFormInput
    JenisDokumen: JenisDokumenCreateNestedOneWithoutBuktiFormInput
  }

  export type BuktiFormUncheckedCreateWithoutBuktiFormEvaluasiDiriInput = {
    BuktiFormId?: string
    PendaftaranId: string
    JenisDokumenId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type BuktiFormCreateOrConnectWithoutBuktiFormEvaluasiDiriInput = {
    where: BuktiFormWhereUniqueInput
    create: XOR<BuktiFormCreateWithoutBuktiFormEvaluasiDiriInput, BuktiFormUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
  }

  export type EvaluasiDiriCreateWithoutBuktiFormEvaluasiDiriInput = {
    EvaluasiDiriId?: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    MataKuliahMahasiswa: MataKuliahMahasiswaCreateNestedOneWithoutEvaluasiDiriInput
    CapaianPembelajaran: CapaianPembelajaranCreateNestedOneWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriUncheckedCreateWithoutBuktiFormEvaluasiDiriInput = {
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    HasilAssesmen?: HasilAssesmenUncheckedCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriCreateOrConnectWithoutBuktiFormEvaluasiDiriInput = {
    where: EvaluasiDiriWhereUniqueInput
    create: XOR<EvaluasiDiriCreateWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
  }

  export type BuktiFormUpsertWithoutBuktiFormEvaluasiDiriInput = {
    update: XOR<BuktiFormUpdateWithoutBuktiFormEvaluasiDiriInput, BuktiFormUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput>
    create: XOR<BuktiFormCreateWithoutBuktiFormEvaluasiDiriInput, BuktiFormUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
    where?: BuktiFormWhereInput
  }

  export type BuktiFormUpdateToOneWithWhereWithoutBuktiFormEvaluasiDiriInput = {
    where?: BuktiFormWhereInput
    data: XOR<BuktiFormUpdateWithoutBuktiFormEvaluasiDiriInput, BuktiFormUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput>
  }

  export type BuktiFormUpdateWithoutBuktiFormEvaluasiDiriInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutBuktiFormNestedInput
    JenisDokumen?: JenisDokumenUpdateOneRequiredWithoutBuktiFormNestedInput
  }

  export type BuktiFormUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EvaluasiDiriUpsertWithoutBuktiFormEvaluasiDiriInput = {
    update: XOR<EvaluasiDiriUpdateWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput>
    create: XOR<EvaluasiDiriCreateWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUncheckedCreateWithoutBuktiFormEvaluasiDiriInput>
    where?: EvaluasiDiriWhereInput
  }

  export type EvaluasiDiriUpdateToOneWithWhereWithoutBuktiFormEvaluasiDiriInput = {
    where?: EvaluasiDiriWhereInput
    data: XOR<EvaluasiDiriUpdateWithoutBuktiFormEvaluasiDiriInput, EvaluasiDiriUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput>
  }

  export type EvaluasiDiriUpdateWithoutBuktiFormEvaluasiDiriInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    CapaianPembelajaran?: CapaianPembelajaranUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateWithoutBuktiFormEvaluasiDiriInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HasilAssesmen?: HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type MataKuliahCreateWithoutCapaianPembelajaranInput = {
    MataKuliahId?: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi: ProgramStudiCreateNestedOneWithoutMataKuliahInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahUncheckedCreateWithoutCapaianPembelajaranInput = {
    MataKuliahId?: string
    ProgramStudiId: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahCreateOrConnectWithoutCapaianPembelajaranInput = {
    where: MataKuliahWhereUniqueInput
    create: XOR<MataKuliahCreateWithoutCapaianPembelajaranInput, MataKuliahUncheckedCreateWithoutCapaianPembelajaranInput>
  }

  export type EvaluasiDiriCreateWithoutCapaianPembelajaranInput = {
    EvaluasiDiriId?: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    MataKuliahMahasiswa: MataKuliahMahasiswaCreateNestedOneWithoutEvaluasiDiriInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput = {
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenUncheckedCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriCreateOrConnectWithoutCapaianPembelajaranInput = {
    where: EvaluasiDiriWhereUniqueInput
    create: XOR<EvaluasiDiriCreateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput>
  }

  export type EvaluasiDiriCreateManyCapaianPembelajaranInputEnvelope = {
    data: EvaluasiDiriCreateManyCapaianPembelajaranInput | EvaluasiDiriCreateManyCapaianPembelajaranInput[]
    skipDuplicates?: boolean
  }

  export type MataKuliahUpsertWithoutCapaianPembelajaranInput = {
    update: XOR<MataKuliahUpdateWithoutCapaianPembelajaranInput, MataKuliahUncheckedUpdateWithoutCapaianPembelajaranInput>
    create: XOR<MataKuliahCreateWithoutCapaianPembelajaranInput, MataKuliahUncheckedCreateWithoutCapaianPembelajaranInput>
    where?: MataKuliahWhereInput
  }

  export type MataKuliahUpdateToOneWithWhereWithoutCapaianPembelajaranInput = {
    where?: MataKuliahWhereInput
    data: XOR<MataKuliahUpdateWithoutCapaianPembelajaranInput, MataKuliahUncheckedUpdateWithoutCapaianPembelajaranInput>
  }

  export type MataKuliahUpdateWithoutCapaianPembelajaranInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUpdateOneRequiredWithoutMataKuliahNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutMataKuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateWithoutCapaianPembelajaranInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMataKuliahNestedInput
  }

  export type EvaluasiDiriUpsertWithWhereUniqueWithoutCapaianPembelajaranInput = {
    where: EvaluasiDiriWhereUniqueInput
    update: XOR<EvaluasiDiriUpdateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedUpdateWithoutCapaianPembelajaranInput>
    create: XOR<EvaluasiDiriCreateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedCreateWithoutCapaianPembelajaranInput>
  }

  export type EvaluasiDiriUpdateWithWhereUniqueWithoutCapaianPembelajaranInput = {
    where: EvaluasiDiriWhereUniqueInput
    data: XOR<EvaluasiDiriUpdateWithoutCapaianPembelajaranInput, EvaluasiDiriUncheckedUpdateWithoutCapaianPembelajaranInput>
  }

  export type EvaluasiDiriUpdateManyWithWhereWithoutCapaianPembelajaranInput = {
    where: EvaluasiDiriScalarWhereInput
    data: XOR<EvaluasiDiriUpdateManyMutationInput, EvaluasiDiriUncheckedUpdateManyWithoutCapaianPembelajaranInput>
  }

  export type EvaluasiDiriScalarWhereInput = {
    AND?: EvaluasiDiriScalarWhereInput | EvaluasiDiriScalarWhereInput[]
    OR?: EvaluasiDiriScalarWhereInput[]
    NOT?: EvaluasiDiriScalarWhereInput | EvaluasiDiriScalarWhereInput[]
    EvaluasiDiriId?: StringFilter<"EvaluasiDiri"> | string
    MataKuliahMahasiswaId?: StringFilter<"EvaluasiDiri"> | string
    CapaianPembelajaranId?: StringFilter<"EvaluasiDiri"> | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFilter<"EvaluasiDiri"> | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"EvaluasiDiri"> | Date | string | null
  }

  export type ProvinsiCreateWithoutCountryInput = {
    ProvinsiId?: string
    Nama: string
    Kabupaten?: KabupatenCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiUncheckedCreateWithoutCountryInput = {
    ProvinsiId?: string
    Nama: string
    Kabupaten?: KabupatenUncheckedCreateNestedManyWithoutProvinsiInput
  }

  export type ProvinsiCreateOrConnectWithoutCountryInput = {
    where: ProvinsiWhereUniqueInput
    create: XOR<ProvinsiCreateWithoutCountryInput, ProvinsiUncheckedCreateWithoutCountryInput>
  }

  export type ProvinsiCreateManyCountryInputEnvelope = {
    data: ProvinsiCreateManyCountryInput | ProvinsiCreateManyCountryInput[]
    skipDuplicates?: boolean
  }

  export type ProvinsiUpsertWithWhereUniqueWithoutCountryInput = {
    where: ProvinsiWhereUniqueInput
    update: XOR<ProvinsiUpdateWithoutCountryInput, ProvinsiUncheckedUpdateWithoutCountryInput>
    create: XOR<ProvinsiCreateWithoutCountryInput, ProvinsiUncheckedCreateWithoutCountryInput>
  }

  export type ProvinsiUpdateWithWhereUniqueWithoutCountryInput = {
    where: ProvinsiWhereUniqueInput
    data: XOR<ProvinsiUpdateWithoutCountryInput, ProvinsiUncheckedUpdateWithoutCountryInput>
  }

  export type ProvinsiUpdateManyWithWhereWithoutCountryInput = {
    where: ProvinsiScalarWhereInput
    data: XOR<ProvinsiUpdateManyMutationInput, ProvinsiUncheckedUpdateManyWithoutCountryInput>
  }

  export type ProvinsiScalarWhereInput = {
    AND?: ProvinsiScalarWhereInput | ProvinsiScalarWhereInput[]
    OR?: ProvinsiScalarWhereInput[]
    NOT?: ProvinsiScalarWhereInput | ProvinsiScalarWhereInput[]
    ProvinsiId?: StringFilter<"Provinsi"> | string
    CountryId?: StringFilter<"Provinsi"> | string
    Nama?: StringFilter<"Provinsi"> | string
  }

  export type PendaftaranCreateWithoutDaftarUlangInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutDaftarUlangInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutDaftarUlangInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutDaftarUlangInput, PendaftaranUncheckedCreateWithoutDaftarUlangInput>
  }

  export type ProgramStudiCreateWithoutDaftarUlangInput = {
    ProgramStudiId?: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    University: UniversityCreateNestedOneWithoutProgramStudiInput
    MataKuliah?: MataKuliahCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiUncheckedCreateWithoutDaftarUlangInput = {
    ProgramStudiId?: string
    UniversityId: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    MataKuliah?: MataKuliahUncheckedCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiCreateOrConnectWithoutDaftarUlangInput = {
    where: ProgramStudiWhereUniqueInput
    create: XOR<ProgramStudiCreateWithoutDaftarUlangInput, ProgramStudiUncheckedCreateWithoutDaftarUlangInput>
  }

  export type PendaftaranUpsertWithoutDaftarUlangInput = {
    update: XOR<PendaftaranUpdateWithoutDaftarUlangInput, PendaftaranUncheckedUpdateWithoutDaftarUlangInput>
    create: XOR<PendaftaranCreateWithoutDaftarUlangInput, PendaftaranUncheckedCreateWithoutDaftarUlangInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutDaftarUlangInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutDaftarUlangInput, PendaftaranUncheckedUpdateWithoutDaftarUlangInput>
  }

  export type PendaftaranUpdateWithoutDaftarUlangInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutDaftarUlangInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type ProgramStudiUpsertWithoutDaftarUlangInput = {
    update: XOR<ProgramStudiUpdateWithoutDaftarUlangInput, ProgramStudiUncheckedUpdateWithoutDaftarUlangInput>
    create: XOR<ProgramStudiCreateWithoutDaftarUlangInput, ProgramStudiUncheckedCreateWithoutDaftarUlangInput>
    where?: ProgramStudiWhereInput
  }

  export type ProgramStudiUpdateToOneWithWhereWithoutDaftarUlangInput = {
    where?: ProgramStudiWhereInput
    data: XOR<ProgramStudiUpdateWithoutDaftarUlangInput, ProgramStudiUncheckedUpdateWithoutDaftarUlangInput>
  }

  export type ProgramStudiUpdateWithoutDaftarUlangInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    University?: UniversityUpdateOneRequiredWithoutProgramStudiNestedInput
    MataKuliah?: MataKuliahUpdateManyWithoutProgramStudiNestedInput
  }

  export type ProgramStudiUncheckedUpdateWithoutDaftarUlangInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliah?: MataKuliahUncheckedUpdateManyWithoutProgramStudiNestedInput
  }

  export type KecamatanCreateWithoutDesaInput = {
    KecamatanId?: string
    Nama: string
    Kabupaten: KabupatenCreateNestedOneWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateWithoutDesaInput = {
    KecamatanId?: string
    KabupatenId: string
    Nama: string
  }

  export type KecamatanCreateOrConnectWithoutDesaInput = {
    where: KecamatanWhereUniqueInput
    create: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
  }

  export type AlamatCreateWithoutDesaInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutAlamatInput
    University?: UniversityCreateNestedManyWithoutAlamatInput
    User?: UserCreateNestedManyWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutDesaInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutAlamatInput
    University?: UniversityUncheckedCreateNestedManyWithoutAlamatInput
    User?: UserUncheckedCreateNestedManyWithoutAlamatInput
  }

  export type AlamatCreateOrConnectWithoutDesaInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput>
  }

  export type AlamatCreateManyDesaInputEnvelope = {
    data: AlamatCreateManyDesaInput | AlamatCreateManyDesaInput[]
    skipDuplicates?: boolean
  }

  export type KecamatanUpsertWithoutDesaInput = {
    update: XOR<KecamatanUpdateWithoutDesaInput, KecamatanUncheckedUpdateWithoutDesaInput>
    create: XOR<KecamatanCreateWithoutDesaInput, KecamatanUncheckedCreateWithoutDesaInput>
    where?: KecamatanWhereInput
  }

  export type KecamatanUpdateToOneWithWhereWithoutDesaInput = {
    where?: KecamatanWhereInput
    data: XOR<KecamatanUpdateWithoutDesaInput, KecamatanUncheckedUpdateWithoutDesaInput>
  }

  export type KecamatanUpdateWithoutDesaInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kabupaten?: KabupatenUpdateOneRequiredWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateWithoutDesaInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type AlamatUpsertWithWhereUniqueWithoutDesaInput = {
    where: AlamatWhereUniqueInput
    update: XOR<AlamatUpdateWithoutDesaInput, AlamatUncheckedUpdateWithoutDesaInput>
    create: XOR<AlamatCreateWithoutDesaInput, AlamatUncheckedCreateWithoutDesaInput>
  }

  export type AlamatUpdateWithWhereUniqueWithoutDesaInput = {
    where: AlamatWhereUniqueInput
    data: XOR<AlamatUpdateWithoutDesaInput, AlamatUncheckedUpdateWithoutDesaInput>
  }

  export type AlamatUpdateManyWithWhereWithoutDesaInput = {
    where: AlamatScalarWhereInput
    data: XOR<AlamatUpdateManyMutationInput, AlamatUncheckedUpdateManyWithoutDesaInput>
  }

  export type AlamatScalarWhereInput = {
    AND?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
    OR?: AlamatScalarWhereInput[]
    NOT?: AlamatScalarWhereInput | AlamatScalarWhereInput[]
    AlamatId?: StringFilter<"Alamat"> | string
    DesaId?: StringFilter<"Alamat"> | string
    Alamat?: StringFilter<"Alamat"> | string
    KodePos?: StringFilter<"Alamat"> | string
  }

  export type MataKuliahMahasiswaCreateWithoutEvaluasiDiriInput = {
    MataKuliahMahasiswaId?: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMataKuliahMahasiswaInput
    MataKuliah: MataKuliahCreateNestedOneWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaUncheckedCreateWithoutEvaluasiDiriInput = {
    MataKuliahMahasiswaId?: string
    PendaftaranId: string
    MataKuliahId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaCreateOrConnectWithoutEvaluasiDiriInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    create: XOR<MataKuliahMahasiswaCreateWithoutEvaluasiDiriInput, MataKuliahMahasiswaUncheckedCreateWithoutEvaluasiDiriInput>
  }

  export type CapaianPembelajaranCreateWithoutEvaluasiDiriInput = {
    CapaianPembelajaranId?: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    MataKuliah: MataKuliahCreateNestedOneWithoutCapaianPembelajaranInput
  }

  export type CapaianPembelajaranUncheckedCreateWithoutEvaluasiDiriInput = {
    CapaianPembelajaranId?: string
    MataKuliahId: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type CapaianPembelajaranCreateOrConnectWithoutEvaluasiDiriInput = {
    where: CapaianPembelajaranWhereUniqueInput
    create: XOR<CapaianPembelajaranCreateWithoutEvaluasiDiriInput, CapaianPembelajaranUncheckedCreateWithoutEvaluasiDiriInput>
  }

  export type BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput = {
    BuktiForm: BuktiFormCreateNestedOneWithoutBuktiFormEvaluasiDiriInput
  }

  export type BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput = {
    BuktiFormId: string
  }

  export type BuktiFormEvaluasiDiriCreateOrConnectWithoutEvaluasiDiriInput = {
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    create: XOR<BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput>
  }

  export type BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInputEnvelope = {
    data: BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInput | BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInput[]
    skipDuplicates?: boolean
  }

  export type HasilAssesmenCreateWithoutEvaluasiDiriInput = {
    HasilAssesmenId?: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkorAssesmen?: SkorAssesmenCreateNestedManyWithoutHasilAssesmenInput
  }

  export type HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput = {
    HasilAssesmenId?: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkorAssesmen?: SkorAssesmenUncheckedCreateNestedManyWithoutHasilAssesmenInput
  }

  export type HasilAssesmenCreateOrConnectWithoutEvaluasiDiriInput = {
    where: HasilAssesmenWhereUniqueInput
    create: XOR<HasilAssesmenCreateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput>
  }

  export type HasilAssesmenCreateManyEvaluasiDiriInputEnvelope = {
    data: HasilAssesmenCreateManyEvaluasiDiriInput | HasilAssesmenCreateManyEvaluasiDiriInput[]
    skipDuplicates?: boolean
  }

  export type MataKuliahMahasiswaUpsertWithoutEvaluasiDiriInput = {
    update: XOR<MataKuliahMahasiswaUpdateWithoutEvaluasiDiriInput, MataKuliahMahasiswaUncheckedUpdateWithoutEvaluasiDiriInput>
    create: XOR<MataKuliahMahasiswaCreateWithoutEvaluasiDiriInput, MataKuliahMahasiswaUncheckedCreateWithoutEvaluasiDiriInput>
    where?: MataKuliahMahasiswaWhereInput
  }

  export type MataKuliahMahasiswaUpdateToOneWithWhereWithoutEvaluasiDiriInput = {
    where?: MataKuliahMahasiswaWhereInput
    data: XOR<MataKuliahMahasiswaUpdateWithoutEvaluasiDiriInput, MataKuliahMahasiswaUncheckedUpdateWithoutEvaluasiDiriInput>
  }

  export type MataKuliahMahasiswaUpdateWithoutEvaluasiDiriInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    MataKuliah?: MataKuliahUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateWithoutEvaluasiDiriInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type CapaianPembelajaranUpsertWithoutEvaluasiDiriInput = {
    update: XOR<CapaianPembelajaranUpdateWithoutEvaluasiDiriInput, CapaianPembelajaranUncheckedUpdateWithoutEvaluasiDiriInput>
    create: XOR<CapaianPembelajaranCreateWithoutEvaluasiDiriInput, CapaianPembelajaranUncheckedCreateWithoutEvaluasiDiriInput>
    where?: CapaianPembelajaranWhereInput
  }

  export type CapaianPembelajaranUpdateToOneWithWhereWithoutEvaluasiDiriInput = {
    where?: CapaianPembelajaranWhereInput
    data: XOR<CapaianPembelajaranUpdateWithoutEvaluasiDiriInput, CapaianPembelajaranUncheckedUpdateWithoutEvaluasiDiriInput>
  }

  export type CapaianPembelajaranUpdateWithoutEvaluasiDiriInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliah?: MataKuliahUpdateOneRequiredWithoutCapaianPembelajaranNestedInput
  }

  export type CapaianPembelajaranUncheckedUpdateWithoutEvaluasiDiriInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BuktiFormEvaluasiDiriUpsertWithWhereUniqueWithoutEvaluasiDiriInput = {
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    update: XOR<BuktiFormEvaluasiDiriUpdateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedUpdateWithoutEvaluasiDiriInput>
    create: XOR<BuktiFormEvaluasiDiriCreateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedCreateWithoutEvaluasiDiriInput>
  }

  export type BuktiFormEvaluasiDiriUpdateWithWhereUniqueWithoutEvaluasiDiriInput = {
    where: BuktiFormEvaluasiDiriWhereUniqueInput
    data: XOR<BuktiFormEvaluasiDiriUpdateWithoutEvaluasiDiriInput, BuktiFormEvaluasiDiriUncheckedUpdateWithoutEvaluasiDiriInput>
  }

  export type BuktiFormEvaluasiDiriUpdateManyWithWhereWithoutEvaluasiDiriInput = {
    where: BuktiFormEvaluasiDiriScalarWhereInput
    data: XOR<BuktiFormEvaluasiDiriUpdateManyMutationInput, BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriInput>
  }

  export type HasilAssesmenUpsertWithWhereUniqueWithoutEvaluasiDiriInput = {
    where: HasilAssesmenWhereUniqueInput
    update: XOR<HasilAssesmenUpdateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedUpdateWithoutEvaluasiDiriInput>
    create: XOR<HasilAssesmenCreateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedCreateWithoutEvaluasiDiriInput>
  }

  export type HasilAssesmenUpdateWithWhereUniqueWithoutEvaluasiDiriInput = {
    where: HasilAssesmenWhereUniqueInput
    data: XOR<HasilAssesmenUpdateWithoutEvaluasiDiriInput, HasilAssesmenUncheckedUpdateWithoutEvaluasiDiriInput>
  }

  export type HasilAssesmenUpdateManyWithWhereWithoutEvaluasiDiriInput = {
    where: HasilAssesmenScalarWhereInput
    data: XOR<HasilAssesmenUpdateManyMutationInput, HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriInput>
  }

  export type HasilAssesmenScalarWhereInput = {
    AND?: HasilAssesmenScalarWhereInput | HasilAssesmenScalarWhereInput[]
    OR?: HasilAssesmenScalarWhereInput[]
    NOT?: HasilAssesmenScalarWhereInput | HasilAssesmenScalarWhereInput[]
    HasilAssesmenId?: StringFilter<"HasilAssesmen"> | string
    EvaluasiDiriId?: StringFilter<"HasilAssesmen"> | string
    Valid?: BoolFilter<"HasilAssesmen"> | boolean
    Autentik?: BoolFilter<"HasilAssesmen"> | boolean
    Terkini?: BoolFilter<"HasilAssesmen"> | boolean
    Memadai?: BoolFilter<"HasilAssesmen"> | boolean
    Assesmen?: StringNullableFilter<"HasilAssesmen"> | string | null
    Nilai?: FloatFilter<"HasilAssesmen"> | number
    Diakui?: BoolFilter<"HasilAssesmen"> | boolean
    TanggalAssesmen?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"HasilAssesmen"> | Date | string | null
  }

  export type EvaluasiDiriCreateWithoutHasilAssesmenInput = {
    EvaluasiDiriId?: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    MataKuliahMahasiswa: MataKuliahMahasiswaCreateNestedOneWithoutEvaluasiDiriInput
    CapaianPembelajaran: CapaianPembelajaranCreateNestedOneWithoutEvaluasiDiriInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriUncheckedCreateWithoutHasilAssesmenInput = {
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriCreateOrConnectWithoutHasilAssesmenInput = {
    where: EvaluasiDiriWhereUniqueInput
    create: XOR<EvaluasiDiriCreateWithoutHasilAssesmenInput, EvaluasiDiriUncheckedCreateWithoutHasilAssesmenInput>
  }

  export type SkorAssesmenCreateWithoutHasilAssesmenInput = {
    SkorAssesmenId?: string
    Portofolio?: number
    Tulis?: number
    Wawancara?: number
    Demo?: number
    SkorRataRata?: number
    NilaiHuruf?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput = {
    SkorAssesmenId?: string
    Portofolio?: number
    Tulis?: number
    Wawancara?: number
    Demo?: number
    SkorRataRata?: number
    NilaiHuruf?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkorAssesmenCreateOrConnectWithoutHasilAssesmenInput = {
    where: SkorAssesmenWhereUniqueInput
    create: XOR<SkorAssesmenCreateWithoutHasilAssesmenInput, SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput>
  }

  export type SkorAssesmenCreateManyHasilAssesmenInputEnvelope = {
    data: SkorAssesmenCreateManyHasilAssesmenInput | SkorAssesmenCreateManyHasilAssesmenInput[]
    skipDuplicates?: boolean
  }

  export type EvaluasiDiriUpsertWithoutHasilAssesmenInput = {
    update: XOR<EvaluasiDiriUpdateWithoutHasilAssesmenInput, EvaluasiDiriUncheckedUpdateWithoutHasilAssesmenInput>
    create: XOR<EvaluasiDiriCreateWithoutHasilAssesmenInput, EvaluasiDiriUncheckedCreateWithoutHasilAssesmenInput>
    where?: EvaluasiDiriWhereInput
  }

  export type EvaluasiDiriUpdateToOneWithWhereWithoutHasilAssesmenInput = {
    where?: EvaluasiDiriWhereInput
    data: XOR<EvaluasiDiriUpdateWithoutHasilAssesmenInput, EvaluasiDiriUncheckedUpdateWithoutHasilAssesmenInput>
  }

  export type EvaluasiDiriUpdateWithoutHasilAssesmenInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    CapaianPembelajaran?: CapaianPembelajaranUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateWithoutHasilAssesmenInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type SkorAssesmenUpsertWithWhereUniqueWithoutHasilAssesmenInput = {
    where: SkorAssesmenWhereUniqueInput
    update: XOR<SkorAssesmenUpdateWithoutHasilAssesmenInput, SkorAssesmenUncheckedUpdateWithoutHasilAssesmenInput>
    create: XOR<SkorAssesmenCreateWithoutHasilAssesmenInput, SkorAssesmenUncheckedCreateWithoutHasilAssesmenInput>
  }

  export type SkorAssesmenUpdateWithWhereUniqueWithoutHasilAssesmenInput = {
    where: SkorAssesmenWhereUniqueInput
    data: XOR<SkorAssesmenUpdateWithoutHasilAssesmenInput, SkorAssesmenUncheckedUpdateWithoutHasilAssesmenInput>
  }

  export type SkorAssesmenUpdateManyWithWhereWithoutHasilAssesmenInput = {
    where: SkorAssesmenScalarWhereInput
    data: XOR<SkorAssesmenUpdateManyMutationInput, SkorAssesmenUncheckedUpdateManyWithoutHasilAssesmenInput>
  }

  export type SkorAssesmenScalarWhereInput = {
    AND?: SkorAssesmenScalarWhereInput | SkorAssesmenScalarWhereInput[]
    OR?: SkorAssesmenScalarWhereInput[]
    NOT?: SkorAssesmenScalarWhereInput | SkorAssesmenScalarWhereInput[]
    SkorAssesmenId?: StringFilter<"SkorAssesmen"> | string
    HasilAssesmenId?: StringFilter<"SkorAssesmen"> | string
    Portofolio?: FloatFilter<"SkorAssesmen"> | number
    Tulis?: FloatFilter<"SkorAssesmen"> | number
    Wawancara?: FloatFilter<"SkorAssesmen"> | number
    Demo?: FloatFilter<"SkorAssesmen"> | number
    SkorRataRata?: FloatFilter<"SkorAssesmen"> | number
    NilaiHuruf?: StringNullableFilter<"SkorAssesmen"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SkorAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SkorAssesmen"> | Date | string | null
  }

  export type PendaftaranCreateWithoutInformasiKependudukanInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutInformasiKependudukanInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutInformasiKependudukanInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutInformasiKependudukanInput, PendaftaranUncheckedCreateWithoutInformasiKependudukanInput>
  }

  export type PendaftaranUpsertWithoutInformasiKependudukanInput = {
    update: XOR<PendaftaranUpdateWithoutInformasiKependudukanInput, PendaftaranUncheckedUpdateWithoutInformasiKependudukanInput>
    create: XOR<PendaftaranCreateWithoutInformasiKependudukanInput, PendaftaranUncheckedCreateWithoutInformasiKependudukanInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutInformasiKependudukanInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutInformasiKependudukanInput, PendaftaranUncheckedUpdateWithoutInformasiKependudukanInput>
  }

  export type PendaftaranUpdateWithoutInformasiKependudukanInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutInformasiKependudukanInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutInstitusiLamaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutInstitusiLamaInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutInstitusiLamaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutInstitusiLamaInput, PendaftaranUncheckedCreateWithoutInstitusiLamaInput>
  }

  export type AlamatCreateWithoutInstitusiLamaInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
    Desa: DesaCreateNestedOneWithoutAlamatInput
    University?: UniversityCreateNestedManyWithoutAlamatInput
    User?: UserCreateNestedManyWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutInstitusiLamaInput = {
    AlamatId?: string
    DesaId: string
    Alamat: string
    KodePos: string
    University?: UniversityUncheckedCreateNestedManyWithoutAlamatInput
    User?: UserUncheckedCreateNestedManyWithoutAlamatInput
  }

  export type AlamatCreateOrConnectWithoutInstitusiLamaInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutInstitusiLamaInput, AlamatUncheckedCreateWithoutInstitusiLamaInput>
  }

  export type PendaftaranUpsertWithoutInstitusiLamaInput = {
    update: XOR<PendaftaranUpdateWithoutInstitusiLamaInput, PendaftaranUncheckedUpdateWithoutInstitusiLamaInput>
    create: XOR<PendaftaranCreateWithoutInstitusiLamaInput, PendaftaranUncheckedCreateWithoutInstitusiLamaInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutInstitusiLamaInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutInstitusiLamaInput, PendaftaranUncheckedUpdateWithoutInstitusiLamaInput>
  }

  export type PendaftaranUpdateWithoutInstitusiLamaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutInstitusiLamaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type AlamatUpsertWithoutInstitusiLamaInput = {
    update: XOR<AlamatUpdateWithoutInstitusiLamaInput, AlamatUncheckedUpdateWithoutInstitusiLamaInput>
    create: XOR<AlamatCreateWithoutInstitusiLamaInput, AlamatUncheckedCreateWithoutInstitusiLamaInput>
    where?: AlamatWhereInput
  }

  export type AlamatUpdateToOneWithWhereWithoutInstitusiLamaInput = {
    where?: AlamatWhereInput
    data: XOR<AlamatUpdateWithoutInstitusiLamaInput, AlamatUncheckedUpdateWithoutInstitusiLamaInput>
  }

  export type AlamatUpdateWithoutInstitusiLamaInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
    University?: UniversityUpdateManyWithoutAlamatNestedInput
    User?: UserUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutInstitusiLamaInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    DesaId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    University?: UniversityUncheckedUpdateManyWithoutAlamatNestedInput
    User?: UserUncheckedUpdateManyWithoutAlamatNestedInput
  }

  export type BuktiFormCreateWithoutJenisDokumenInput = {
    BuktiFormId?: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutBuktiFormInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutBuktiFormInput
  }

  export type BuktiFormUncheckedCreateWithoutJenisDokumenInput = {
    BuktiFormId?: string
    PendaftaranId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutBuktiFormInput
  }

  export type BuktiFormCreateOrConnectWithoutJenisDokumenInput = {
    where: BuktiFormWhereUniqueInput
    create: XOR<BuktiFormCreateWithoutJenisDokumenInput, BuktiFormUncheckedCreateWithoutJenisDokumenInput>
  }

  export type BuktiFormCreateManyJenisDokumenInputEnvelope = {
    data: BuktiFormCreateManyJenisDokumenInput | BuktiFormCreateManyJenisDokumenInput[]
    skipDuplicates?: boolean
  }

  export type BuktiFormUpsertWithWhereUniqueWithoutJenisDokumenInput = {
    where: BuktiFormWhereUniqueInput
    update: XOR<BuktiFormUpdateWithoutJenisDokumenInput, BuktiFormUncheckedUpdateWithoutJenisDokumenInput>
    create: XOR<BuktiFormCreateWithoutJenisDokumenInput, BuktiFormUncheckedCreateWithoutJenisDokumenInput>
  }

  export type BuktiFormUpdateWithWhereUniqueWithoutJenisDokumenInput = {
    where: BuktiFormWhereUniqueInput
    data: XOR<BuktiFormUpdateWithoutJenisDokumenInput, BuktiFormUncheckedUpdateWithoutJenisDokumenInput>
  }

  export type BuktiFormUpdateManyWithWhereWithoutJenisDokumenInput = {
    where: BuktiFormScalarWhereInput
    data: XOR<BuktiFormUpdateManyMutationInput, BuktiFormUncheckedUpdateManyWithoutJenisDokumenInput>
  }

  export type BuktiFormScalarWhereInput = {
    AND?: BuktiFormScalarWhereInput | BuktiFormScalarWhereInput[]
    OR?: BuktiFormScalarWhereInput[]
    NOT?: BuktiFormScalarWhereInput | BuktiFormScalarWhereInput[]
    BuktiFormId?: StringFilter<"BuktiForm"> | string
    PendaftaranId?: StringFilter<"BuktiForm"> | string
    JenisDokumenId?: StringFilter<"BuktiForm"> | string
    NamaFile?: StringFilter<"BuktiForm"> | string
    NamaDokumen?: StringFilter<"BuktiForm"> | string
    CreatedAt?: DateTimeNullableFilter<"BuktiForm"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"BuktiForm"> | Date | string | null
  }

  export type ProvinsiCreateWithoutKabupatenInput = {
    ProvinsiId?: string
    Nama: string
    Country: CountryCreateNestedOneWithoutProvinsiInput
  }

  export type ProvinsiUncheckedCreateWithoutKabupatenInput = {
    ProvinsiId?: string
    CountryId: string
    Nama: string
  }

  export type ProvinsiCreateOrConnectWithoutKabupatenInput = {
    where: ProvinsiWhereUniqueInput
    create: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
  }

  export type KecamatanCreateWithoutKabupatenInput = {
    KecamatanId?: string
    Nama: string
    Desa?: DesaCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanUncheckedCreateWithoutKabupatenInput = {
    KecamatanId?: string
    Nama: string
    Desa?: DesaUncheckedCreateNestedManyWithoutKecamatanInput
  }

  export type KecamatanCreateOrConnectWithoutKabupatenInput = {
    where: KecamatanWhereUniqueInput
    create: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput>
  }

  export type KecamatanCreateManyKabupatenInputEnvelope = {
    data: KecamatanCreateManyKabupatenInput | KecamatanCreateManyKabupatenInput[]
    skipDuplicates?: boolean
  }

  export type ProvinsiUpsertWithoutKabupatenInput = {
    update: XOR<ProvinsiUpdateWithoutKabupatenInput, ProvinsiUncheckedUpdateWithoutKabupatenInput>
    create: XOR<ProvinsiCreateWithoutKabupatenInput, ProvinsiUncheckedCreateWithoutKabupatenInput>
    where?: ProvinsiWhereInput
  }

  export type ProvinsiUpdateToOneWithWhereWithoutKabupatenInput = {
    where?: ProvinsiWhereInput
    data: XOR<ProvinsiUpdateWithoutKabupatenInput, ProvinsiUncheckedUpdateWithoutKabupatenInput>
  }

  export type ProvinsiUpdateWithoutKabupatenInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Country?: CountryUpdateOneRequiredWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateWithoutKabupatenInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type KecamatanUpsertWithWhereUniqueWithoutKabupatenInput = {
    where: KecamatanWhereUniqueInput
    update: XOR<KecamatanUpdateWithoutKabupatenInput, KecamatanUncheckedUpdateWithoutKabupatenInput>
    create: XOR<KecamatanCreateWithoutKabupatenInput, KecamatanUncheckedCreateWithoutKabupatenInput>
  }

  export type KecamatanUpdateWithWhereUniqueWithoutKabupatenInput = {
    where: KecamatanWhereUniqueInput
    data: XOR<KecamatanUpdateWithoutKabupatenInput, KecamatanUncheckedUpdateWithoutKabupatenInput>
  }

  export type KecamatanUpdateManyWithWhereWithoutKabupatenInput = {
    where: KecamatanScalarWhereInput
    data: XOR<KecamatanUpdateManyMutationInput, KecamatanUncheckedUpdateManyWithoutKabupatenInput>
  }

  export type KecamatanScalarWhereInput = {
    AND?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
    OR?: KecamatanScalarWhereInput[]
    NOT?: KecamatanScalarWhereInput | KecamatanScalarWhereInput[]
    KecamatanId?: StringFilter<"Kecamatan"> | string
    KabupatenId?: StringFilter<"Kecamatan"> | string
    Nama?: StringFilter<"Kecamatan"> | string
  }

  export type KabupatenCreateWithoutKecamatanInput = {
    KabupatenId?: string
    Nama: string
    Provinsi: ProvinsiCreateNestedOneWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateWithoutKecamatanInput = {
    KabupatenId?: string
    ProvinsiId: string
    Nama: string
  }

  export type KabupatenCreateOrConnectWithoutKecamatanInput = {
    where: KabupatenWhereUniqueInput
    create: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
  }

  export type DesaCreateWithoutKecamatanInput = {
    DesaId?: string
    Nama: string
    Alamat?: AlamatCreateNestedManyWithoutDesaInput
  }

  export type DesaUncheckedCreateWithoutKecamatanInput = {
    DesaId?: string
    Nama: string
    Alamat?: AlamatUncheckedCreateNestedManyWithoutDesaInput
  }

  export type DesaCreateOrConnectWithoutKecamatanInput = {
    where: DesaWhereUniqueInput
    create: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput>
  }

  export type DesaCreateManyKecamatanInputEnvelope = {
    data: DesaCreateManyKecamatanInput | DesaCreateManyKecamatanInput[]
    skipDuplicates?: boolean
  }

  export type KabupatenUpsertWithoutKecamatanInput = {
    update: XOR<KabupatenUpdateWithoutKecamatanInput, KabupatenUncheckedUpdateWithoutKecamatanInput>
    create: XOR<KabupatenCreateWithoutKecamatanInput, KabupatenUncheckedCreateWithoutKecamatanInput>
    where?: KabupatenWhereInput
  }

  export type KabupatenUpdateToOneWithWhereWithoutKecamatanInput = {
    where?: KabupatenWhereInput
    data: XOR<KabupatenUpdateWithoutKecamatanInput, KabupatenUncheckedUpdateWithoutKecamatanInput>
  }

  export type KabupatenUpdateWithoutKecamatanInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Provinsi?: ProvinsiUpdateOneRequiredWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateWithoutKecamatanInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type DesaUpsertWithWhereUniqueWithoutKecamatanInput = {
    where: DesaWhereUniqueInput
    update: XOR<DesaUpdateWithoutKecamatanInput, DesaUncheckedUpdateWithoutKecamatanInput>
    create: XOR<DesaCreateWithoutKecamatanInput, DesaUncheckedCreateWithoutKecamatanInput>
  }

  export type DesaUpdateWithWhereUniqueWithoutKecamatanInput = {
    where: DesaWhereUniqueInput
    data: XOR<DesaUpdateWithoutKecamatanInput, DesaUncheckedUpdateWithoutKecamatanInput>
  }

  export type DesaUpdateManyWithWhereWithoutKecamatanInput = {
    where: DesaScalarWhereInput
    data: XOR<DesaUpdateManyMutationInput, DesaUncheckedUpdateManyWithoutKecamatanInput>
  }

  export type DesaScalarWhereInput = {
    AND?: DesaScalarWhereInput | DesaScalarWhereInput[]
    OR?: DesaScalarWhereInput[]
    NOT?: DesaScalarWhereInput | DesaScalarWhereInput[]
    DesaId?: StringFilter<"Desa"> | string
    KecamatanId?: StringFilter<"Desa"> | string
    Nama?: StringFilter<"Desa"> | string
  }

  export type UserCreateWithoutMahasiswaInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUserInput
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutUserInput
    Userlogin?: UserloginCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMahasiswaInput = {
    UserId?: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutUserInput
    Userlogin?: UserloginUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMahasiswaInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMahasiswaInput, UserUncheckedCreateWithoutMahasiswaInput>
  }

  export type PendaftaranCreateWithoutMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaInput, PendaftaranUncheckedCreateWithoutMahasiswaInput>
  }

  export type PendaftaranCreateManyMahasiswaInputEnvelope = {
    data: PendaftaranCreateManyMahasiswaInput | PendaftaranCreateManyMahasiswaInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutMahasiswaInput = {
    update: XOR<UserUpdateWithoutMahasiswaInput, UserUncheckedUpdateWithoutMahasiswaInput>
    create: XOR<UserCreateWithoutMahasiswaInput, UserUncheckedCreateWithoutMahasiswaInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMahasiswaInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMahasiswaInput, UserUncheckedUpdateWithoutMahasiswaInput>
  }

  export type UserUpdateWithoutMahasiswaInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMahasiswaInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PendaftaranUpsertWithWhereUniqueWithoutMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    update: XOR<PendaftaranUpdateWithoutMahasiswaInput, PendaftaranUncheckedUpdateWithoutMahasiswaInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaInput, PendaftaranUncheckedCreateWithoutMahasiswaInput>
  }

  export type PendaftaranUpdateWithWhereUniqueWithoutMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaInput, PendaftaranUncheckedUpdateWithoutMahasiswaInput>
  }

  export type PendaftaranUpdateManyWithWhereWithoutMahasiswaInput = {
    where: PendaftaranScalarWhereInput
    data: XOR<PendaftaranUpdateManyMutationInput, PendaftaranUncheckedUpdateManyWithoutMahasiswaInput>
  }

  export type PendaftaranScalarWhereInput = {
    AND?: PendaftaranScalarWhereInput | PendaftaranScalarWhereInput[]
    OR?: PendaftaranScalarWhereInput[]
    NOT?: PendaftaranScalarWhereInput | PendaftaranScalarWhereInput[]
    PendaftaranId?: StringFilter<"Pendaftaran"> | string
    MahasiswaId?: StringFilter<"Pendaftaran"> | string
    KodePendaftar?: StringFilter<"Pendaftaran"> | string
    NoUjian?: StringFilter<"Pendaftaran"> | string
    Periode?: StringFilter<"Pendaftaran"> | string
    Gelombang?: StringFilter<"Pendaftaran"> | string
    SistemKuliah?: EnumSistemKuliahFilter<"Pendaftaran"> | $Enums.SistemKuliah
    JalurPendaftaran?: StringFilter<"Pendaftaran"> | string
    CreatedAt?: DateTimeNullableFilter<"Pendaftaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Pendaftaran"> | Date | string | null
  }

  export type PendaftaranCreateWithoutMahasiswaKonferensiInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaKonferensiInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaKonferensiInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaKonferensiInput, PendaftaranUncheckedCreateWithoutMahasiswaKonferensiInput>
  }

  export type PendaftaranUpsertWithoutMahasiswaKonferensiInput = {
    update: XOR<PendaftaranUpdateWithoutMahasiswaKonferensiInput, PendaftaranUncheckedUpdateWithoutMahasiswaKonferensiInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaKonferensiInput, PendaftaranUncheckedCreateWithoutMahasiswaKonferensiInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMahasiswaKonferensiInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaKonferensiInput, PendaftaranUncheckedUpdateWithoutMahasiswaKonferensiInput>
  }

  export type PendaftaranUpdateWithoutMahasiswaKonferensiInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaKonferensiInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutMahasiswaOrganisasiProfesiInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaOrganisasiProfesiInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaOrganisasiProfesiInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUncheckedCreateWithoutMahasiswaOrganisasiProfesiInput>
  }

  export type PendaftaranUpsertWithoutMahasiswaOrganisasiProfesiInput = {
    update: XOR<PendaftaranUpdateWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUncheckedUpdateWithoutMahasiswaOrganisasiProfesiInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUncheckedCreateWithoutMahasiswaOrganisasiProfesiInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMahasiswaOrganisasiProfesiInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaOrganisasiProfesiInput, PendaftaranUncheckedUpdateWithoutMahasiswaOrganisasiProfesiInput>
  }

  export type PendaftaranUpdateWithoutMahasiswaOrganisasiProfesiInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaOrganisasiProfesiInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutMahasiswaPelatihanProfessionalInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaPelatihanProfessionalInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaPelatihanProfessionalInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUncheckedCreateWithoutMahasiswaPelatihanProfessionalInput>
  }

  export type PendaftaranUpsertWithoutMahasiswaPelatihanProfessionalInput = {
    update: XOR<PendaftaranUpdateWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUncheckedUpdateWithoutMahasiswaPelatihanProfessionalInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUncheckedCreateWithoutMahasiswaPelatihanProfessionalInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMahasiswaPelatihanProfessionalInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaPelatihanProfessionalInput, PendaftaranUncheckedUpdateWithoutMahasiswaPelatihanProfessionalInput>
  }

  export type PendaftaranUpdateWithoutMahasiswaPelatihanProfessionalInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaPelatihanProfessionalInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutMahasiswaPendidikanInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaPendidikanInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaPendidikanInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaPendidikanInput, PendaftaranUncheckedCreateWithoutMahasiswaPendidikanInput>
  }

  export type PendaftaranUpsertWithoutMahasiswaPendidikanInput = {
    update: XOR<PendaftaranUpdateWithoutMahasiswaPendidikanInput, PendaftaranUncheckedUpdateWithoutMahasiswaPendidikanInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaPendidikanInput, PendaftaranUncheckedCreateWithoutMahasiswaPendidikanInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMahasiswaPendidikanInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaPendidikanInput, PendaftaranUncheckedUpdateWithoutMahasiswaPendidikanInput>
  }

  export type PendaftaranUpdateWithoutMahasiswaPendidikanInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaPendidikanInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutMahasiswaPiagamInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaPiagamInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaPiagamInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaPiagamInput, PendaftaranUncheckedCreateWithoutMahasiswaPiagamInput>
  }

  export type PendaftaranUpsertWithoutMahasiswaPiagamInput = {
    update: XOR<PendaftaranUpdateWithoutMahasiswaPiagamInput, PendaftaranUncheckedUpdateWithoutMahasiswaPiagamInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaPiagamInput, PendaftaranUncheckedCreateWithoutMahasiswaPiagamInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMahasiswaPiagamInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaPiagamInput, PendaftaranUncheckedUpdateWithoutMahasiswaPiagamInput>
  }

  export type PendaftaranUpdateWithoutMahasiswaPiagamInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaPiagamInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutMahasiswaRiwayatPekerjaanInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMahasiswaRiwayatPekerjaanInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMahasiswaRiwayatPekerjaanInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUncheckedCreateWithoutMahasiswaRiwayatPekerjaanInput>
  }

  export type PendaftaranUpsertWithoutMahasiswaRiwayatPekerjaanInput = {
    update: XOR<PendaftaranUpdateWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUncheckedUpdateWithoutMahasiswaRiwayatPekerjaanInput>
    create: XOR<PendaftaranCreateWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUncheckedCreateWithoutMahasiswaRiwayatPekerjaanInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMahasiswaRiwayatPekerjaanInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMahasiswaRiwayatPekerjaanInput, PendaftaranUncheckedUpdateWithoutMahasiswaRiwayatPekerjaanInput>
  }

  export type PendaftaranUpdateWithoutMahasiswaRiwayatPekerjaanInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaRiwayatPekerjaanInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type ProgramStudiCreateWithoutMataKuliahInput = {
    ProgramStudiId?: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    University: UniversityCreateNestedOneWithoutProgramStudiInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiUncheckedCreateWithoutMataKuliahInput = {
    ProgramStudiId?: string
    UniversityId: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiCreateOrConnectWithoutMataKuliahInput = {
    where: ProgramStudiWhereUniqueInput
    create: XOR<ProgramStudiCreateWithoutMataKuliahInput, ProgramStudiUncheckedCreateWithoutMataKuliahInput>
  }

  export type CapaianPembelajaranCreateWithoutMataKuliahInput = {
    CapaianPembelajaranId?: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriCreateNestedManyWithoutCapaianPembelajaranInput
  }

  export type CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput = {
    CapaianPembelajaranId?: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedCreateNestedManyWithoutCapaianPembelajaranInput
  }

  export type CapaianPembelajaranCreateOrConnectWithoutMataKuliahInput = {
    where: CapaianPembelajaranWhereUniqueInput
    create: XOR<CapaianPembelajaranCreateWithoutMataKuliahInput, CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput>
  }

  export type CapaianPembelajaranCreateManyMataKuliahInputEnvelope = {
    data: CapaianPembelajaranCreateManyMataKuliahInput | CapaianPembelajaranCreateManyMataKuliahInput[]
    skipDuplicates?: boolean
  }

  export type MataKuliahMahasiswaCreateWithoutMataKuliahInput = {
    MataKuliahMahasiswaId?: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMataKuliahMahasiswaInput
    EvaluasiDiri?: EvaluasiDiriCreateNestedManyWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput = {
    MataKuliahMahasiswaId?: string
    PendaftaranId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaCreateOrConnectWithoutMataKuliahInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    create: XOR<MataKuliahMahasiswaCreateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput>
  }

  export type MataKuliahMahasiswaCreateManyMataKuliahInputEnvelope = {
    data: MataKuliahMahasiswaCreateManyMataKuliahInput | MataKuliahMahasiswaCreateManyMataKuliahInput[]
    skipDuplicates?: boolean
  }

  export type ProgramStudiUpsertWithoutMataKuliahInput = {
    update: XOR<ProgramStudiUpdateWithoutMataKuliahInput, ProgramStudiUncheckedUpdateWithoutMataKuliahInput>
    create: XOR<ProgramStudiCreateWithoutMataKuliahInput, ProgramStudiUncheckedCreateWithoutMataKuliahInput>
    where?: ProgramStudiWhereInput
  }

  export type ProgramStudiUpdateToOneWithWhereWithoutMataKuliahInput = {
    where?: ProgramStudiWhereInput
    data: XOR<ProgramStudiUpdateWithoutMataKuliahInput, ProgramStudiUncheckedUpdateWithoutMataKuliahInput>
  }

  export type ProgramStudiUpdateWithoutMataKuliahInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    University?: UniversityUpdateOneRequiredWithoutProgramStudiNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutProgramStudiNestedInput
  }

  export type ProgramStudiUncheckedUpdateWithoutMataKuliahInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutProgramStudiNestedInput
  }

  export type CapaianPembelajaranUpsertWithWhereUniqueWithoutMataKuliahInput = {
    where: CapaianPembelajaranWhereUniqueInput
    update: XOR<CapaianPembelajaranUpdateWithoutMataKuliahInput, CapaianPembelajaranUncheckedUpdateWithoutMataKuliahInput>
    create: XOR<CapaianPembelajaranCreateWithoutMataKuliahInput, CapaianPembelajaranUncheckedCreateWithoutMataKuliahInput>
  }

  export type CapaianPembelajaranUpdateWithWhereUniqueWithoutMataKuliahInput = {
    where: CapaianPembelajaranWhereUniqueInput
    data: XOR<CapaianPembelajaranUpdateWithoutMataKuliahInput, CapaianPembelajaranUncheckedUpdateWithoutMataKuliahInput>
  }

  export type CapaianPembelajaranUpdateManyWithWhereWithoutMataKuliahInput = {
    where: CapaianPembelajaranScalarWhereInput
    data: XOR<CapaianPembelajaranUpdateManyMutationInput, CapaianPembelajaranUncheckedUpdateManyWithoutMataKuliahInput>
  }

  export type CapaianPembelajaranScalarWhereInput = {
    AND?: CapaianPembelajaranScalarWhereInput | CapaianPembelajaranScalarWhereInput[]
    OR?: CapaianPembelajaranScalarWhereInput[]
    NOT?: CapaianPembelajaranScalarWhereInput | CapaianPembelajaranScalarWhereInput[]
    CapaianPembelajaranId?: StringFilter<"CapaianPembelajaran"> | string
    MataKuliahId?: StringFilter<"CapaianPembelajaran"> | string
    Nama?: StringFilter<"CapaianPembelajaran"> | string
    Urutan?: IntFilter<"CapaianPembelajaran"> | number
    Active?: BoolFilter<"CapaianPembelajaran"> | boolean
    CreatedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"CapaianPembelajaran"> | Date | string | null
  }

  export type MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMataKuliahInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    update: XOR<MataKuliahMahasiswaUpdateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedUpdateWithoutMataKuliahInput>
    create: XOR<MataKuliahMahasiswaCreateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMataKuliahInput>
  }

  export type MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMataKuliahInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    data: XOR<MataKuliahMahasiswaUpdateWithoutMataKuliahInput, MataKuliahMahasiswaUncheckedUpdateWithoutMataKuliahInput>
  }

  export type MataKuliahMahasiswaUpdateManyWithWhereWithoutMataKuliahInput = {
    where: MataKuliahMahasiswaScalarWhereInput
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyWithoutMataKuliahInput>
  }

  export type MataKuliahMahasiswaScalarWhereInput = {
    AND?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
    OR?: MataKuliahMahasiswaScalarWhereInput[]
    NOT?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
    MataKuliahMahasiswaId?: StringFilter<"MataKuliahMahasiswa"> | string
    PendaftaranId?: StringFilter<"MataKuliahMahasiswa"> | string
    MataKuliahId?: StringFilter<"MataKuliahMahasiswa"> | string
    Rpl?: BoolFilter<"MataKuliahMahasiswa"> | boolean
    Keterangan?: EnumKeteranganMataKuliahNullableFilter<"MataKuliahMahasiswa"> | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: EnumStatusMataKuliahMahasiswaNullableFilter<"MataKuliahMahasiswa"> | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: DateTimeNullableFilter<"MataKuliahMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MataKuliahMahasiswa"> | Date | string | null
  }

  export type PendaftaranCreateWithoutMataKuliahMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutMataKuliahMahasiswaInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutMataKuliahMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutMataKuliahMahasiswaInput, PendaftaranUncheckedCreateWithoutMataKuliahMahasiswaInput>
  }

  export type MataKuliahCreateWithoutMataKuliahMahasiswaInput = {
    MataKuliahId?: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi: ProgramStudiCreateNestedOneWithoutMataKuliahInput
    CapaianPembelajaran?: CapaianPembelajaranCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahUncheckedCreateWithoutMataKuliahMahasiswaInput = {
    MataKuliahId?: string
    ProgramStudiId: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUncheckedCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahCreateOrConnectWithoutMataKuliahMahasiswaInput = {
    where: MataKuliahWhereUniqueInput
    create: XOR<MataKuliahCreateWithoutMataKuliahMahasiswaInput, MataKuliahUncheckedCreateWithoutMataKuliahMahasiswaInput>
  }

  export type EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput = {
    EvaluasiDiriId?: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    CapaianPembelajaran: CapaianPembelajaranCreateNestedOneWithoutEvaluasiDiriInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput = {
    EvaluasiDiriId?: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutEvaluasiDiriInput
    HasilAssesmen?: HasilAssesmenUncheckedCreateNestedManyWithoutEvaluasiDiriInput
  }

  export type EvaluasiDiriCreateOrConnectWithoutMataKuliahMahasiswaInput = {
    where: EvaluasiDiriWhereUniqueInput
    create: XOR<EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput>
  }

  export type EvaluasiDiriCreateManyMataKuliahMahasiswaInputEnvelope = {
    data: EvaluasiDiriCreateManyMataKuliahMahasiswaInput | EvaluasiDiriCreateManyMataKuliahMahasiswaInput[]
    skipDuplicates?: boolean
  }

  export type SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput = {
    SanggahanAssesmenMkId?: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmen: SanggahanAssesmenCreateNestedOneWithoutSanggahanAssesmenMkInput
  }

  export type SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput = {
    SanggahanAssesmenMkId?: string
    SanggahanAssesmenId: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenMkCreateOrConnectWithoutMataKuliahMahasiswaInput = {
    where: SanggahanAssesmenMkWhereUniqueInput
    create: XOR<SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput>
  }

  export type SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInputEnvelope = {
    data: SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInput | SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInput[]
    skipDuplicates?: boolean
  }

  export type PendaftaranUpsertWithoutMataKuliahMahasiswaInput = {
    update: XOR<PendaftaranUpdateWithoutMataKuliahMahasiswaInput, PendaftaranUncheckedUpdateWithoutMataKuliahMahasiswaInput>
    create: XOR<PendaftaranCreateWithoutMataKuliahMahasiswaInput, PendaftaranUncheckedCreateWithoutMataKuliahMahasiswaInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutMataKuliahMahasiswaInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutMataKuliahMahasiswaInput, PendaftaranUncheckedUpdateWithoutMataKuliahMahasiswaInput>
  }

  export type PendaftaranUpdateWithoutMataKuliahMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMataKuliahMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type MataKuliahUpsertWithoutMataKuliahMahasiswaInput = {
    update: XOR<MataKuliahUpdateWithoutMataKuliahMahasiswaInput, MataKuliahUncheckedUpdateWithoutMataKuliahMahasiswaInput>
    create: XOR<MataKuliahCreateWithoutMataKuliahMahasiswaInput, MataKuliahUncheckedCreateWithoutMataKuliahMahasiswaInput>
    where?: MataKuliahWhereInput
  }

  export type MataKuliahUpdateToOneWithWhereWithoutMataKuliahMahasiswaInput = {
    where?: MataKuliahWhereInput
    data: XOR<MataKuliahUpdateWithoutMataKuliahMahasiswaInput, MataKuliahUncheckedUpdateWithoutMataKuliahMahasiswaInput>
  }

  export type MataKuliahUpdateWithoutMataKuliahMahasiswaInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUpdateOneRequiredWithoutMataKuliahNestedInput
    CapaianPembelajaran?: CapaianPembelajaranUpdateManyWithoutMataKuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateWithoutMataKuliahMahasiswaInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUncheckedUpdateManyWithoutMataKuliahNestedInput
  }

  export type EvaluasiDiriUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput = {
    where: EvaluasiDiriWhereUniqueInput
    update: XOR<EvaluasiDiriUpdateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedUpdateWithoutMataKuliahMahasiswaInput>
    create: XOR<EvaluasiDiriCreateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedCreateWithoutMataKuliahMahasiswaInput>
  }

  export type EvaluasiDiriUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput = {
    where: EvaluasiDiriWhereUniqueInput
    data: XOR<EvaluasiDiriUpdateWithoutMataKuliahMahasiswaInput, EvaluasiDiriUncheckedUpdateWithoutMataKuliahMahasiswaInput>
  }

  export type EvaluasiDiriUpdateManyWithWhereWithoutMataKuliahMahasiswaInput = {
    where: EvaluasiDiriScalarWhereInput
    data: XOR<EvaluasiDiriUpdateManyMutationInput, EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaInput>
  }

  export type SanggahanAssesmenMkUpsertWithWhereUniqueWithoutMataKuliahMahasiswaInput = {
    where: SanggahanAssesmenMkWhereUniqueInput
    update: XOR<SanggahanAssesmenMkUpdateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedUpdateWithoutMataKuliahMahasiswaInput>
    create: XOR<SanggahanAssesmenMkCreateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedCreateWithoutMataKuliahMahasiswaInput>
  }

  export type SanggahanAssesmenMkUpdateWithWhereUniqueWithoutMataKuliahMahasiswaInput = {
    where: SanggahanAssesmenMkWhereUniqueInput
    data: XOR<SanggahanAssesmenMkUpdateWithoutMataKuliahMahasiswaInput, SanggahanAssesmenMkUncheckedUpdateWithoutMataKuliahMahasiswaInput>
  }

  export type SanggahanAssesmenMkUpdateManyWithWhereWithoutMataKuliahMahasiswaInput = {
    where: SanggahanAssesmenMkScalarWhereInput
    data: XOR<SanggahanAssesmenMkUpdateManyMutationInput, SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaInput>
  }

  export type SanggahanAssesmenMkScalarWhereInput = {
    AND?: SanggahanAssesmenMkScalarWhereInput | SanggahanAssesmenMkScalarWhereInput[]
    OR?: SanggahanAssesmenMkScalarWhereInput[]
    NOT?: SanggahanAssesmenMkScalarWhereInput | SanggahanAssesmenMkScalarWhereInput[]
    SanggahanAssesmenMkId?: StringFilter<"SanggahanAssesmenMk"> | string
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmenMk"> | string
    MataKuliahMahasiswaId?: StringFilter<"SanggahanAssesmenMk"> | string
    Keterangan?: StringNullableFilter<"SanggahanAssesmenMk"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmenMk"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmenMk"> | Date | string | null
  }

  export type PermissionCreateWithoutUserHasPermissionsInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    RoleHasPermissions?: RoleHasPermissionsCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutUserHasPermissionsInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    RoleHasPermissions?: RoleHasPermissionsUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutUserHasPermissionsInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutUserHasPermissionsInput, PermissionUncheckedCreateWithoutUserHasPermissionsInput>
  }

  export type UserCreateWithoutUserHasPermissionsInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUserInput
    Mahasiswa?: MahasiswaCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutUserInput
    Userlogin?: UserloginCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserHasPermissionsInput = {
    UserId?: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Mahasiswa?: MahasiswaUncheckedCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutUserInput
    Userlogin?: UserloginUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserHasPermissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserHasPermissionsInput, UserUncheckedCreateWithoutUserHasPermissionsInput>
  }

  export type PermissionUpsertWithoutUserHasPermissionsInput = {
    update: XOR<PermissionUpdateWithoutUserHasPermissionsInput, PermissionUncheckedUpdateWithoutUserHasPermissionsInput>
    create: XOR<PermissionCreateWithoutUserHasPermissionsInput, PermissionUncheckedCreateWithoutUserHasPermissionsInput>
    where?: PermissionWhereInput
  }

  export type PermissionUpdateToOneWithWhereWithoutUserHasPermissionsInput = {
    where?: PermissionWhereInput
    data: XOR<PermissionUpdateWithoutUserHasPermissionsInput, PermissionUncheckedUpdateWithoutUserHasPermissionsInput>
  }

  export type PermissionUpdateWithoutUserHasPermissionsInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleHasPermissions?: RoleHasPermissionsUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutUserHasPermissionsInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleHasPermissions?: RoleHasPermissionsUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type UserUpsertWithoutUserHasPermissionsInput = {
    update: XOR<UserUpdateWithoutUserHasPermissionsInput, UserUncheckedUpdateWithoutUserHasPermissionsInput>
    create: XOR<UserCreateWithoutUserHasPermissionsInput, UserUncheckedCreateWithoutUserHasPermissionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserHasPermissionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserHasPermissionsInput, UserUncheckedUpdateWithoutUserHasPermissionsInput>
  }

  export type UserUpdateWithoutUserHasPermissionsInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUserNestedInput
    Mahasiswa?: MahasiswaUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserHasPermissionsInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUncheckedUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUncheckedUpdateManyWithoutUserNestedInput
  }

  export type RoleCreateWithoutUserHasRolesInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    RoleHasPermissions?: RoleHasPermissionsCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutUserHasRolesInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    RoleHasPermissions?: RoleHasPermissionsUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutUserHasRolesInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUserHasRolesInput, RoleUncheckedCreateWithoutUserHasRolesInput>
  }

  export type UserCreateWithoutUserHasRolesInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUserInput
    Mahasiswa?: MahasiswaCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutUserInput
    Userlogin?: UserloginCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserHasRolesInput = {
    UserId?: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Mahasiswa?: MahasiswaUncheckedCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutUserInput
    Userlogin?: UserloginUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserHasRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserHasRolesInput, UserUncheckedCreateWithoutUserHasRolesInput>
  }

  export type RoleUpsertWithoutUserHasRolesInput = {
    update: XOR<RoleUpdateWithoutUserHasRolesInput, RoleUncheckedUpdateWithoutUserHasRolesInput>
    create: XOR<RoleCreateWithoutUserHasRolesInput, RoleUncheckedCreateWithoutUserHasRolesInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUserHasRolesInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUserHasRolesInput, RoleUncheckedUpdateWithoutUserHasRolesInput>
  }

  export type RoleUpdateWithoutUserHasRolesInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleHasPermissions?: RoleHasPermissionsUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutUserHasRolesInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    RoleHasPermissions?: RoleHasPermissionsUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type UserUpsertWithoutUserHasRolesInput = {
    update: XOR<UserUpdateWithoutUserHasRolesInput, UserUncheckedUpdateWithoutUserHasRolesInput>
    create: XOR<UserCreateWithoutUserHasRolesInput, UserUncheckedCreateWithoutUserHasRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserHasRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserHasRolesInput, UserUncheckedUpdateWithoutUserHasRolesInput>
  }

  export type UserUpdateWithoutUserHasRolesInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUserNestedInput
    Mahasiswa?: MahasiswaUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserHasRolesInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUncheckedUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PendaftaranCreateWithoutOrangTuaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutOrangTuaInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutOrangTuaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutOrangTuaInput, PendaftaranUncheckedCreateWithoutOrangTuaInput>
  }

  export type PendaftaranUpsertWithoutOrangTuaInput = {
    update: XOR<PendaftaranUpdateWithoutOrangTuaInput, PendaftaranUncheckedUpdateWithoutOrangTuaInput>
    create: XOR<PendaftaranCreateWithoutOrangTuaInput, PendaftaranUncheckedCreateWithoutOrangTuaInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutOrangTuaInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutOrangTuaInput, PendaftaranUncheckedUpdateWithoutOrangTuaInput>
  }

  export type PendaftaranUpdateWithoutOrangTuaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutOrangTuaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranCreateWithoutPekerjaanMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutPekerjaanMahasiswaInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutPekerjaanMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutPekerjaanMahasiswaInput, PendaftaranUncheckedCreateWithoutPekerjaanMahasiswaInput>
  }

  export type PendaftaranUpsertWithoutPekerjaanMahasiswaInput = {
    update: XOR<PendaftaranUpdateWithoutPekerjaanMahasiswaInput, PendaftaranUncheckedUpdateWithoutPekerjaanMahasiswaInput>
    create: XOR<PendaftaranCreateWithoutPekerjaanMahasiswaInput, PendaftaranUncheckedCreateWithoutPekerjaanMahasiswaInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutPekerjaanMahasiswaInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutPekerjaanMahasiswaInput, PendaftaranUncheckedUpdateWithoutPekerjaanMahasiswaInput>
  }

  export type PendaftaranUpdateWithoutPekerjaanMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutPekerjaanMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type MahasiswaCreateWithoutPendaftaranInput = {
    MahasiswaId?: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    User: UserCreateNestedOneWithoutMahasiswaInput
  }

  export type MahasiswaUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaId?: string
    UserId: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaWhereUniqueInput
    create: XOR<MahasiswaCreateWithoutPendaftaranInput, MahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type AssesorMahasiswaCreateWithoutPendaftaranInput = {
    AssesorMahasiswaId?: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Asesor: AsesorCreateNestedOneWithoutAssesorMahasiswaInput
    SkRektorAssesor?: SkRektorAssesorCreateNestedManyWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput = {
    AssesorMahasiswaId?: string
    AsesorId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedCreateNestedManyWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaCreateOrConnectWithoutPendaftaranInput = {
    where: AssesorMahasiswaWhereUniqueInput
    create: XOR<AssesorMahasiswaCreateWithoutPendaftaranInput, AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type AssesorMahasiswaCreateManyPendaftaranInputEnvelope = {
    data: AssesorMahasiswaCreateManyPendaftaranInput | AssesorMahasiswaCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type BuktiFormCreateWithoutPendaftaranInput = {
    BuktiFormId?: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    JenisDokumen: JenisDokumenCreateNestedOneWithoutBuktiFormInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriCreateNestedManyWithoutBuktiFormInput
  }

  export type BuktiFormUncheckedCreateWithoutPendaftaranInput = {
    BuktiFormId?: string
    JenisDokumenId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedCreateNestedManyWithoutBuktiFormInput
  }

  export type BuktiFormCreateOrConnectWithoutPendaftaranInput = {
    where: BuktiFormWhereUniqueInput
    create: XOR<BuktiFormCreateWithoutPendaftaranInput, BuktiFormUncheckedCreateWithoutPendaftaranInput>
  }

  export type BuktiFormCreateManyPendaftaranInputEnvelope = {
    data: BuktiFormCreateManyPendaftaranInput | BuktiFormCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type DaftarUlangCreateWithoutPendaftaranInput = {
    DaftarUlangId?: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    ProgramStudi: ProgramStudiCreateNestedOneWithoutDaftarUlangInput
  }

  export type DaftarUlangUncheckedCreateWithoutPendaftaranInput = {
    DaftarUlangId?: string
    ProgramStudiId: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type DaftarUlangCreateOrConnectWithoutPendaftaranInput = {
    where: DaftarUlangWhereUniqueInput
    create: XOR<DaftarUlangCreateWithoutPendaftaranInput, DaftarUlangUncheckedCreateWithoutPendaftaranInput>
  }

  export type DaftarUlangCreateManyPendaftaranInputEnvelope = {
    data: DaftarUlangCreateManyPendaftaranInput | DaftarUlangCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type InformasiKependudukanCreateWithoutPendaftaranInput = {
    InformasiKependudukanId?: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InformasiKependudukanUncheckedCreateWithoutPendaftaranInput = {
    InformasiKependudukanId?: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InformasiKependudukanCreateOrConnectWithoutPendaftaranInput = {
    where: InformasiKependudukanWhereUniqueInput
    create: XOR<InformasiKependudukanCreateWithoutPendaftaranInput, InformasiKependudukanUncheckedCreateWithoutPendaftaranInput>
  }

  export type InformasiKependudukanCreateManyPendaftaranInputEnvelope = {
    data: InformasiKependudukanCreateManyPendaftaranInput | InformasiKependudukanCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type InstitusiLamaCreateWithoutPendaftaranInput = {
    InstitusiLamaId?: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutInstitusiLamaInput
  }

  export type InstitusiLamaUncheckedCreateWithoutPendaftaranInput = {
    InstitusiLamaId?: string
    AlamatId: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InstitusiLamaCreateOrConnectWithoutPendaftaranInput = {
    where: InstitusiLamaWhereUniqueInput
    create: XOR<InstitusiLamaCreateWithoutPendaftaranInput, InstitusiLamaUncheckedCreateWithoutPendaftaranInput>
  }

  export type InstitusiLamaCreateManyPendaftaranInputEnvelope = {
    data: InstitusiLamaCreateManyPendaftaranInput | InstitusiLamaCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaKonferensiCreateWithoutPendaftaranInput = {
    MahasiswaKonferensiId?: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan?: $Enums.StatusKeikutsertaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaKonferensiId?: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan?: $Enums.StatusKeikutsertaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaKonferensiCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaKonferensiWhereUniqueInput
    create: XOR<MahasiswaKonferensiCreateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaKonferensiCreateManyPendaftaranInputEnvelope = {
    data: MahasiswaKonferensiCreateManyPendaftaranInput | MahasiswaKonferensiCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput = {
    MahasiswaOrganisasiProfesiId?: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaOrganisasiProfesiId?: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaOrganisasiProfesiCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
    create: XOR<MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaOrganisasiProfesiCreateManyPendaftaranInputEnvelope = {
    data: MahasiswaOrganisasiProfesiCreateManyPendaftaranInput | MahasiswaOrganisasiProfesiCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput = {
    MahasiswaPelatihanProfessionalId?: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date | string
    Selesai?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaPelatihanProfessionalId?: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date | string
    Selesai?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPelatihanProfessionalCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
    create: XOR<MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaPelatihanProfessionalCreateManyPendaftaranInputEnvelope = {
    data: MahasiswaPelatihanProfessionalCreateManyPendaftaranInput | MahasiswaPelatihanProfessionalCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaPendidikanCreateWithoutPendaftaranInput = {
    MahasiswaPendidikanId?: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaPendidikanId?: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPendidikanCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaPendidikanWhereUniqueInput
    create: XOR<MahasiswaPendidikanCreateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaPendidikanCreateManyPendaftaranInputEnvelope = {
    data: MahasiswaPendidikanCreateManyPendaftaranInput | MahasiswaPendidikanCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaPiagamCreateWithoutPendaftaranInput = {
    MahasiswaPiagamId?: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaPiagamId?: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPiagamCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaPiagamWhereUniqueInput
    create: XOR<MahasiswaPiagamCreateWithoutPendaftaranInput, MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaPiagamCreateManyPendaftaranInputEnvelope = {
    data: MahasiswaPiagamCreateManyPendaftaranInput | MahasiswaPiagamCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput = {
    MahasiswaRiwayatPekerjaanId?: string
    Nama: string
    PosisiJabatan: string
    Alamat?: string | null
    UraianTugas?: string | null
    MulaiBekerja: Date | string
    SelesaiBekerja?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput = {
    MahasiswaRiwayatPekerjaanId?: string
    Nama: string
    PosisiJabatan: string
    Alamat?: string | null
    UraianTugas?: string | null
    MulaiBekerja: Date | string
    SelesaiBekerja?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanCreateOrConnectWithoutPendaftaranInput = {
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
    create: XOR<MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaRiwayatPekerjaanCreateManyPendaftaranInputEnvelope = {
    data: MahasiswaRiwayatPekerjaanCreateManyPendaftaranInput | MahasiswaRiwayatPekerjaanCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MataKuliahMahasiswaCreateWithoutPendaftaranInput = {
    MataKuliahMahasiswaId?: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    MataKuliah: MataKuliahCreateNestedOneWithoutMataKuliahMahasiswaInput
    EvaluasiDiri?: EvaluasiDiriCreateNestedManyWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput = {
    MataKuliahMahasiswaId?: string
    MataKuliahId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaCreateOrConnectWithoutPendaftaranInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    create: XOR<MataKuliahMahasiswaCreateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type MataKuliahMahasiswaCreateManyPendaftaranInputEnvelope = {
    data: MataKuliahMahasiswaCreateManyPendaftaranInput | MataKuliahMahasiswaCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type OrangTuaCreateWithoutPendaftaranInput = {
    OrangTuaId?: string
    Nama: string
    Pekerjaan?: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type OrangTuaUncheckedCreateWithoutPendaftaranInput = {
    OrangTuaId?: string
    Nama: string
    Pekerjaan?: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type OrangTuaCreateOrConnectWithoutPendaftaranInput = {
    where: OrangTuaWhereUniqueInput
    create: XOR<OrangTuaCreateWithoutPendaftaranInput, OrangTuaUncheckedCreateWithoutPendaftaranInput>
  }

  export type OrangTuaCreateManyPendaftaranInputEnvelope = {
    data: OrangTuaCreateManyPendaftaranInput | OrangTuaCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type PekerjaanMahasiswaCreateWithoutPendaftaranInput = {
    PekerjaanMahasiswaId?: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan?: $Enums.StatusPekerjaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput = {
    PekerjaanMahasiswaId?: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan?: $Enums.StatusPekerjaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PekerjaanMahasiswaCreateOrConnectWithoutPendaftaranInput = {
    where: PekerjaanMahasiswaWhereUniqueInput
    create: XOR<PekerjaanMahasiswaCreateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type PekerjaanMahasiswaCreateManyPendaftaranInputEnvelope = {
    data: PekerjaanMahasiswaCreateManyPendaftaranInput | PekerjaanMahasiswaCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type PesantrenCreateWithoutPendaftaranInput = {
    PesantrenId?: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PesantrenUncheckedCreateWithoutPendaftaranInput = {
    PesantrenId?: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PesantrenCreateOrConnectWithoutPendaftaranInput = {
    where: PesantrenWhereUniqueInput
    create: XOR<PesantrenCreateWithoutPendaftaranInput, PesantrenUncheckedCreateWithoutPendaftaranInput>
  }

  export type PesantrenCreateManyPendaftaranInputEnvelope = {
    data: PesantrenCreateManyPendaftaranInput | PesantrenCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type SanggahanAssesmenCreateWithoutPendaftaranInput = {
    SanggahanAssesmenId?: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutSanggahanAssesmenInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput = {
    SanggahanAssesmenId?: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutSanggahanAssesmenInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUncheckedCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenCreateOrConnectWithoutPendaftaranInput = {
    where: SanggahanAssesmenWhereUniqueInput
    create: XOR<SanggahanAssesmenCreateWithoutPendaftaranInput, SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput>
  }

  export type SanggahanAssesmenCreateManyPendaftaranInputEnvelope = {
    data: SanggahanAssesmenCreateManyPendaftaranInput | SanggahanAssesmenCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type SkRektorMahasiswaCreateWithoutPendaftaranInput = {
    SkRektor: SkRektorCreateNestedOneWithoutSkRektorMahasiswaInput
  }

  export type SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput = {
    SkRektorId: string
  }

  export type SkRektorMahasiswaCreateOrConnectWithoutPendaftaranInput = {
    where: SkRektorMahasiswaWhereUniqueInput
    create: XOR<SkRektorMahasiswaCreateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type SkRektorMahasiswaCreateManyPendaftaranInputEnvelope = {
    data: SkRektorMahasiswaCreateManyPendaftaranInput | SkRektorMahasiswaCreateManyPendaftaranInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaUpsertWithoutPendaftaranInput = {
    update: XOR<MahasiswaUpdateWithoutPendaftaranInput, MahasiswaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaCreateWithoutPendaftaranInput, MahasiswaUncheckedCreateWithoutPendaftaranInput>
    where?: MahasiswaWhereInput
  }

  export type MahasiswaUpdateToOneWithWhereWithoutPendaftaranInput = {
    where?: MahasiswaWhereInput
    data: XOR<MahasiswaUpdateWithoutPendaftaranInput, MahasiswaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaUpdateWithoutPendaftaranInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutMahasiswaNestedInput
  }

  export type MahasiswaUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AssesorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: AssesorMahasiswaWhereUniqueInput
    update: XOR<AssesorMahasiswaUpdateWithoutPendaftaranInput, AssesorMahasiswaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<AssesorMahasiswaCreateWithoutPendaftaranInput, AssesorMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type AssesorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: AssesorMahasiswaWhereUniqueInput
    data: XOR<AssesorMahasiswaUpdateWithoutPendaftaranInput, AssesorMahasiswaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type AssesorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput = {
    where: AssesorMahasiswaScalarWhereInput
    data: XOR<AssesorMahasiswaUpdateManyMutationInput, AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type BuktiFormUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: BuktiFormWhereUniqueInput
    update: XOR<BuktiFormUpdateWithoutPendaftaranInput, BuktiFormUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<BuktiFormCreateWithoutPendaftaranInput, BuktiFormUncheckedCreateWithoutPendaftaranInput>
  }

  export type BuktiFormUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: BuktiFormWhereUniqueInput
    data: XOR<BuktiFormUpdateWithoutPendaftaranInput, BuktiFormUncheckedUpdateWithoutPendaftaranInput>
  }

  export type BuktiFormUpdateManyWithWhereWithoutPendaftaranInput = {
    where: BuktiFormScalarWhereInput
    data: XOR<BuktiFormUpdateManyMutationInput, BuktiFormUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type DaftarUlangUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: DaftarUlangWhereUniqueInput
    update: XOR<DaftarUlangUpdateWithoutPendaftaranInput, DaftarUlangUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<DaftarUlangCreateWithoutPendaftaranInput, DaftarUlangUncheckedCreateWithoutPendaftaranInput>
  }

  export type DaftarUlangUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: DaftarUlangWhereUniqueInput
    data: XOR<DaftarUlangUpdateWithoutPendaftaranInput, DaftarUlangUncheckedUpdateWithoutPendaftaranInput>
  }

  export type DaftarUlangUpdateManyWithWhereWithoutPendaftaranInput = {
    where: DaftarUlangScalarWhereInput
    data: XOR<DaftarUlangUpdateManyMutationInput, DaftarUlangUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type DaftarUlangScalarWhereInput = {
    AND?: DaftarUlangScalarWhereInput | DaftarUlangScalarWhereInput[]
    OR?: DaftarUlangScalarWhereInput[]
    NOT?: DaftarUlangScalarWhereInput | DaftarUlangScalarWhereInput[]
    DaftarUlangId?: StringFilter<"DaftarUlang"> | string
    PendaftaranId?: StringFilter<"DaftarUlang"> | string
    ProgramStudiId?: StringFilter<"DaftarUlang"> | string
    Nim?: StringNullableFilter<"DaftarUlang"> | string | null
    JenjangKkniDituju?: StringNullableFilter<"DaftarUlang"> | string | null
    KipK?: BoolFilter<"DaftarUlang"> | boolean
    Aktif?: BoolFilter<"DaftarUlang"> | boolean
    MengisiBiodata?: BoolFilter<"DaftarUlang"> | boolean
    Finalisasi?: BoolFilter<"DaftarUlang"> | boolean
    TanggalDaftar?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    TanggalDaftarUlang?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"DaftarUlang"> | Date | string | null
  }

  export type InformasiKependudukanUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: InformasiKependudukanWhereUniqueInput
    update: XOR<InformasiKependudukanUpdateWithoutPendaftaranInput, InformasiKependudukanUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<InformasiKependudukanCreateWithoutPendaftaranInput, InformasiKependudukanUncheckedCreateWithoutPendaftaranInput>
  }

  export type InformasiKependudukanUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: InformasiKependudukanWhereUniqueInput
    data: XOR<InformasiKependudukanUpdateWithoutPendaftaranInput, InformasiKependudukanUncheckedUpdateWithoutPendaftaranInput>
  }

  export type InformasiKependudukanUpdateManyWithWhereWithoutPendaftaranInput = {
    where: InformasiKependudukanScalarWhereInput
    data: XOR<InformasiKependudukanUpdateManyMutationInput, InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type InformasiKependudukanScalarWhereInput = {
    AND?: InformasiKependudukanScalarWhereInput | InformasiKependudukanScalarWhereInput[]
    OR?: InformasiKependudukanScalarWhereInput[]
    NOT?: InformasiKependudukanScalarWhereInput | InformasiKependudukanScalarWhereInput[]
    InformasiKependudukanId?: StringFilter<"InformasiKependudukan"> | string
    PendaftaranId?: StringFilter<"InformasiKependudukan"> | string
    NoKk?: StringFilter<"InformasiKependudukan"> | string
    NoNik?: StringFilter<"InformasiKependudukan"> | string
    Suku?: StringFilter<"InformasiKependudukan"> | string
    CreatedAt?: DateTimeNullableFilter<"InformasiKependudukan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"InformasiKependudukan"> | Date | string | null
  }

  export type InstitusiLamaUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: InstitusiLamaWhereUniqueInput
    update: XOR<InstitusiLamaUpdateWithoutPendaftaranInput, InstitusiLamaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<InstitusiLamaCreateWithoutPendaftaranInput, InstitusiLamaUncheckedCreateWithoutPendaftaranInput>
  }

  export type InstitusiLamaUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: InstitusiLamaWhereUniqueInput
    data: XOR<InstitusiLamaUpdateWithoutPendaftaranInput, InstitusiLamaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type InstitusiLamaUpdateManyWithWhereWithoutPendaftaranInput = {
    where: InstitusiLamaScalarWhereInput
    data: XOR<InstitusiLamaUpdateManyMutationInput, InstitusiLamaUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaKonferensiUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaKonferensiWhereUniqueInput
    update: XOR<MahasiswaKonferensiUpdateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaKonferensiCreateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaKonferensiUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaKonferensiWhereUniqueInput
    data: XOR<MahasiswaKonferensiUpdateWithoutPendaftaranInput, MahasiswaKonferensiUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaKonferensiUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MahasiswaKonferensiScalarWhereInput
    data: XOR<MahasiswaKonferensiUpdateManyMutationInput, MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaKonferensiScalarWhereInput = {
    AND?: MahasiswaKonferensiScalarWhereInput | MahasiswaKonferensiScalarWhereInput[]
    OR?: MahasiswaKonferensiScalarWhereInput[]
    NOT?: MahasiswaKonferensiScalarWhereInput | MahasiswaKonferensiScalarWhereInput[]
    MahasiswaKonferensiId?: StringFilter<"MahasiswaKonferensi"> | string
    PendaftaranId?: StringFilter<"MahasiswaKonferensi"> | string
    Tahun?: IntFilter<"MahasiswaKonferensi"> | number
    JudulSeminar?: StringFilter<"MahasiswaKonferensi"> | string
    Penyelenggara?: StringFilter<"MahasiswaKonferensi"> | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFilter<"MahasiswaKonferensi"> | $Enums.StatusKeikutsertaan
    CreatedAt?: DateTimeNullableFilter<"MahasiswaKonferensi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaKonferensi"> | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
    update: XOR<MahasiswaOrganisasiProfesiUpdateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaOrganisasiProfesiCreateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaOrganisasiProfesiUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaOrganisasiProfesiWhereUniqueInput
    data: XOR<MahasiswaOrganisasiProfesiUpdateWithoutPendaftaranInput, MahasiswaOrganisasiProfesiUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaOrganisasiProfesiUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MahasiswaOrganisasiProfesiScalarWhereInput
    data: XOR<MahasiswaOrganisasiProfesiUpdateManyMutationInput, MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaOrganisasiProfesiScalarWhereInput = {
    AND?: MahasiswaOrganisasiProfesiScalarWhereInput | MahasiswaOrganisasiProfesiScalarWhereInput[]
    OR?: MahasiswaOrganisasiProfesiScalarWhereInput[]
    NOT?: MahasiswaOrganisasiProfesiScalarWhereInput | MahasiswaOrganisasiProfesiScalarWhereInput[]
    MahasiswaOrganisasiProfesiId?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    PendaftaranId?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    Tahun?: IntFilter<"MahasiswaOrganisasiProfesi"> | number
    NamaOrganisasi?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    JenjangAnggotaJabatan?: StringFilter<"MahasiswaOrganisasiProfesi"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaOrganisasiProfesi"> | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
    update: XOR<MahasiswaPelatihanProfessionalUpdateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaPelatihanProfessionalCreateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaPelatihanProfessionalUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaPelatihanProfessionalWhereUniqueInput
    data: XOR<MahasiswaPelatihanProfessionalUpdateWithoutPendaftaranInput, MahasiswaPelatihanProfessionalUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaPelatihanProfessionalUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MahasiswaPelatihanProfessionalScalarWhereInput
    data: XOR<MahasiswaPelatihanProfessionalUpdateManyMutationInput, MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaPelatihanProfessionalScalarWhereInput = {
    AND?: MahasiswaPelatihanProfessionalScalarWhereInput | MahasiswaPelatihanProfessionalScalarWhereInput[]
    OR?: MahasiswaPelatihanProfessionalScalarWhereInput[]
    NOT?: MahasiswaPelatihanProfessionalScalarWhereInput | MahasiswaPelatihanProfessionalScalarWhereInput[]
    MahasiswaPelatihanProfessionalId?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    PendaftaranId?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    NamaPelatihan?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    Penyelenggara?: StringFilter<"MahasiswaPelatihanProfessional"> | string
    Mulai?: DateTimeFilter<"MahasiswaPelatihanProfessional"> | Date | string
    Selesai?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPelatihanProfessional"> | Date | string | null
  }

  export type MahasiswaPendidikanUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaPendidikanWhereUniqueInput
    update: XOR<MahasiswaPendidikanUpdateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaPendidikanCreateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaPendidikanUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaPendidikanWhereUniqueInput
    data: XOR<MahasiswaPendidikanUpdateWithoutPendaftaranInput, MahasiswaPendidikanUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaPendidikanUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MahasiswaPendidikanScalarWhereInput
    data: XOR<MahasiswaPendidikanUpdateManyMutationInput, MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaPendidikanScalarWhereInput = {
    AND?: MahasiswaPendidikanScalarWhereInput | MahasiswaPendidikanScalarWhereInput[]
    OR?: MahasiswaPendidikanScalarWhereInput[]
    NOT?: MahasiswaPendidikanScalarWhereInput | MahasiswaPendidikanScalarWhereInput[]
    MahasiswaPendidikanId?: StringFilter<"MahasiswaPendidikan"> | string
    PendaftaranId?: StringFilter<"MahasiswaPendidikan"> | string
    NamaSekolah?: StringFilter<"MahasiswaPendidikan"> | string
    TahunLulus?: IntFilter<"MahasiswaPendidikan"> | number
    Jurusan?: StringFilter<"MahasiswaPendidikan"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPendidikan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPendidikan"> | Date | string | null
  }

  export type MahasiswaPiagamUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaPiagamWhereUniqueInput
    update: XOR<MahasiswaPiagamUpdateWithoutPendaftaranInput, MahasiswaPiagamUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaPiagamCreateWithoutPendaftaranInput, MahasiswaPiagamUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaPiagamUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaPiagamWhereUniqueInput
    data: XOR<MahasiswaPiagamUpdateWithoutPendaftaranInput, MahasiswaPiagamUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaPiagamUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MahasiswaPiagamScalarWhereInput
    data: XOR<MahasiswaPiagamUpdateManyMutationInput, MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaPiagamScalarWhereInput = {
    AND?: MahasiswaPiagamScalarWhereInput | MahasiswaPiagamScalarWhereInput[]
    OR?: MahasiswaPiagamScalarWhereInput[]
    NOT?: MahasiswaPiagamScalarWhereInput | MahasiswaPiagamScalarWhereInput[]
    MahasiswaPiagamId?: StringFilter<"MahasiswaPiagam"> | string
    PendaftaranId?: StringFilter<"MahasiswaPiagam"> | string
    Tahun?: IntFilter<"MahasiswaPiagam"> | number
    BentukPenghargaan?: StringFilter<"MahasiswaPiagam"> | string
    PemberiPenghargaan?: StringFilter<"MahasiswaPiagam"> | string
    CreatedAt?: DateTimeNullableFilter<"MahasiswaPiagam"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaPiagam"> | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
    update: XOR<MahasiswaRiwayatPekerjaanUpdateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MahasiswaRiwayatPekerjaanCreateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedCreateWithoutPendaftaranInput>
  }

  export type MahasiswaRiwayatPekerjaanUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MahasiswaRiwayatPekerjaanWhereUniqueInput
    data: XOR<MahasiswaRiwayatPekerjaanUpdateWithoutPendaftaranInput, MahasiswaRiwayatPekerjaanUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MahasiswaRiwayatPekerjaanUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MahasiswaRiwayatPekerjaanScalarWhereInput
    data: XOR<MahasiswaRiwayatPekerjaanUpdateManyMutationInput, MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type MahasiswaRiwayatPekerjaanScalarWhereInput = {
    AND?: MahasiswaRiwayatPekerjaanScalarWhereInput | MahasiswaRiwayatPekerjaanScalarWhereInput[]
    OR?: MahasiswaRiwayatPekerjaanScalarWhereInput[]
    NOT?: MahasiswaRiwayatPekerjaanScalarWhereInput | MahasiswaRiwayatPekerjaanScalarWhereInput[]
    MahasiswaRiwayatPekerjaanId?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    PendaftaranId?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    Nama?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    PosisiJabatan?: StringFilter<"MahasiswaRiwayatPekerjaan"> | string
    Alamat?: StringNullableFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    UraianTugas?: StringNullableFilter<"MahasiswaRiwayatPekerjaan"> | string | null
    MulaiBekerja?: DateTimeFilter<"MahasiswaRiwayatPekerjaan"> | Date | string
    SelesaiBekerja?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    CreatedAt?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MahasiswaRiwayatPekerjaan"> | Date | string | null
  }

  export type MataKuliahMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    update: XOR<MataKuliahMahasiswaUpdateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<MataKuliahMahasiswaCreateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type MataKuliahMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    data: XOR<MataKuliahMahasiswaUpdateWithoutPendaftaranInput, MataKuliahMahasiswaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type MataKuliahMahasiswaUpdateManyWithWhereWithoutPendaftaranInput = {
    where: MataKuliahMahasiswaScalarWhereInput
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type OrangTuaUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: OrangTuaWhereUniqueInput
    update: XOR<OrangTuaUpdateWithoutPendaftaranInput, OrangTuaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<OrangTuaCreateWithoutPendaftaranInput, OrangTuaUncheckedCreateWithoutPendaftaranInput>
  }

  export type OrangTuaUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: OrangTuaWhereUniqueInput
    data: XOR<OrangTuaUpdateWithoutPendaftaranInput, OrangTuaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type OrangTuaUpdateManyWithWhereWithoutPendaftaranInput = {
    where: OrangTuaScalarWhereInput
    data: XOR<OrangTuaUpdateManyMutationInput, OrangTuaUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type OrangTuaScalarWhereInput = {
    AND?: OrangTuaScalarWhereInput | OrangTuaScalarWhereInput[]
    OR?: OrangTuaScalarWhereInput[]
    NOT?: OrangTuaScalarWhereInput | OrangTuaScalarWhereInput[]
    OrangTuaId?: StringFilter<"OrangTua"> | string
    PendaftaranId?: StringFilter<"OrangTua"> | string
    Nama?: StringFilter<"OrangTua"> | string
    Pekerjaan?: StringNullableFilter<"OrangTua"> | string | null
    JenisOrtu?: EnumJenisOrtuFilter<"OrangTua"> | $Enums.JenisOrtu
    Penghasilan?: FloatFilter<"OrangTua"> | number
    Email?: StringFilter<"OrangTua"> | string
    NomorHp?: StringFilter<"OrangTua"> | string
    CreatedAt?: DateTimeNullableFilter<"OrangTua"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"OrangTua"> | Date | string | null
  }

  export type PekerjaanMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: PekerjaanMahasiswaWhereUniqueInput
    update: XOR<PekerjaanMahasiswaUpdateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<PekerjaanMahasiswaCreateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type PekerjaanMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: PekerjaanMahasiswaWhereUniqueInput
    data: XOR<PekerjaanMahasiswaUpdateWithoutPendaftaranInput, PekerjaanMahasiswaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type PekerjaanMahasiswaUpdateManyWithWhereWithoutPendaftaranInput = {
    where: PekerjaanMahasiswaScalarWhereInput
    data: XOR<PekerjaanMahasiswaUpdateManyMutationInput, PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type PekerjaanMahasiswaScalarWhereInput = {
    AND?: PekerjaanMahasiswaScalarWhereInput | PekerjaanMahasiswaScalarWhereInput[]
    OR?: PekerjaanMahasiswaScalarWhereInput[]
    NOT?: PekerjaanMahasiswaScalarWhereInput | PekerjaanMahasiswaScalarWhereInput[]
    PekerjaanMahasiswaId?: StringFilter<"PekerjaanMahasiswa"> | string
    PendaftaranId?: StringFilter<"PekerjaanMahasiswa"> | string
    AlamatId?: StringFilter<"PekerjaanMahasiswa"> | string
    InstitusiTempatBekerja?: StringFilter<"PekerjaanMahasiswa"> | string
    Jabatan?: StringFilter<"PekerjaanMahasiswa"> | string
    StatusPekerjaan?: EnumStatusPekerjaanFilter<"PekerjaanMahasiswa"> | $Enums.StatusPekerjaan
    CreatedAt?: DateTimeNullableFilter<"PekerjaanMahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"PekerjaanMahasiswa"> | Date | string | null
  }

  export type PesantrenUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: PesantrenWhereUniqueInput
    update: XOR<PesantrenUpdateWithoutPendaftaranInput, PesantrenUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<PesantrenCreateWithoutPendaftaranInput, PesantrenUncheckedCreateWithoutPendaftaranInput>
  }

  export type PesantrenUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: PesantrenWhereUniqueInput
    data: XOR<PesantrenUpdateWithoutPendaftaranInput, PesantrenUncheckedUpdateWithoutPendaftaranInput>
  }

  export type PesantrenUpdateManyWithWhereWithoutPendaftaranInput = {
    where: PesantrenScalarWhereInput
    data: XOR<PesantrenUpdateManyMutationInput, PesantrenUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type PesantrenScalarWhereInput = {
    AND?: PesantrenScalarWhereInput | PesantrenScalarWhereInput[]
    OR?: PesantrenScalarWhereInput[]
    NOT?: PesantrenScalarWhereInput | PesantrenScalarWhereInput[]
    PesantrenId?: StringFilter<"Pesantren"> | string
    PendaftaranId?: StringFilter<"Pesantren"> | string
    NamaPesantren?: StringFilter<"Pesantren"> | string
    LamaPesantren?: StringFilter<"Pesantren"> | string
    CreatedAt?: DateTimeNullableFilter<"Pesantren"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Pesantren"> | Date | string | null
  }

  export type SanggahanAssesmenUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: SanggahanAssesmenWhereUniqueInput
    update: XOR<SanggahanAssesmenUpdateWithoutPendaftaranInput, SanggahanAssesmenUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<SanggahanAssesmenCreateWithoutPendaftaranInput, SanggahanAssesmenUncheckedCreateWithoutPendaftaranInput>
  }

  export type SanggahanAssesmenUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: SanggahanAssesmenWhereUniqueInput
    data: XOR<SanggahanAssesmenUpdateWithoutPendaftaranInput, SanggahanAssesmenUncheckedUpdateWithoutPendaftaranInput>
  }

  export type SanggahanAssesmenUpdateManyWithWhereWithoutPendaftaranInput = {
    where: SanggahanAssesmenScalarWhereInput
    data: XOR<SanggahanAssesmenUpdateManyMutationInput, SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type SanggahanAssesmenScalarWhereInput = {
    AND?: SanggahanAssesmenScalarWhereInput | SanggahanAssesmenScalarWhereInput[]
    OR?: SanggahanAssesmenScalarWhereInput[]
    NOT?: SanggahanAssesmenScalarWhereInput | SanggahanAssesmenScalarWhereInput[]
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmen"> | string
    PendaftaranId?: StringFilter<"SanggahanAssesmen"> | string
    ProsesBanding?: BoolFilter<"SanggahanAssesmen"> | boolean
    DiskusiBanding?: BoolFilter<"SanggahanAssesmen"> | boolean
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmen"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmen"> | Date | string | null
  }

  export type SkRektorMahasiswaUpsertWithWhereUniqueWithoutPendaftaranInput = {
    where: SkRektorMahasiswaWhereUniqueInput
    update: XOR<SkRektorMahasiswaUpdateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedUpdateWithoutPendaftaranInput>
    create: XOR<SkRektorMahasiswaCreateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedCreateWithoutPendaftaranInput>
  }

  export type SkRektorMahasiswaUpdateWithWhereUniqueWithoutPendaftaranInput = {
    where: SkRektorMahasiswaWhereUniqueInput
    data: XOR<SkRektorMahasiswaUpdateWithoutPendaftaranInput, SkRektorMahasiswaUncheckedUpdateWithoutPendaftaranInput>
  }

  export type SkRektorMahasiswaUpdateManyWithWhereWithoutPendaftaranInput = {
    where: SkRektorMahasiswaScalarWhereInput
    data: XOR<SkRektorMahasiswaUpdateManyMutationInput, SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranInput>
  }

  export type SkRektorMahasiswaScalarWhereInput = {
    AND?: SkRektorMahasiswaScalarWhereInput | SkRektorMahasiswaScalarWhereInput[]
    OR?: SkRektorMahasiswaScalarWhereInput[]
    NOT?: SkRektorMahasiswaScalarWhereInput | SkRektorMahasiswaScalarWhereInput[]
    SkRektorId?: StringFilter<"SkRektorMahasiswa"> | string
    PendaftaranId?: StringFilter<"SkRektorMahasiswa"> | string
  }

  export type UserHasPermissionsCreateWithoutPermissionInput = {
    User: UserCreateNestedOneWithoutUserHasPermissionsInput
  }

  export type UserHasPermissionsUncheckedCreateWithoutPermissionInput = {
    UserId: string
  }

  export type UserHasPermissionsCreateOrConnectWithoutPermissionInput = {
    where: UserHasPermissionsWhereUniqueInput
    create: XOR<UserHasPermissionsCreateWithoutPermissionInput, UserHasPermissionsUncheckedCreateWithoutPermissionInput>
  }

  export type UserHasPermissionsCreateManyPermissionInputEnvelope = {
    data: UserHasPermissionsCreateManyPermissionInput | UserHasPermissionsCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type RoleHasPermissionsCreateWithoutPermissionInput = {
    Role: RoleCreateNestedOneWithoutRoleHasPermissionsInput
  }

  export type RoleHasPermissionsUncheckedCreateWithoutPermissionInput = {
    RoleId: string
  }

  export type RoleHasPermissionsCreateOrConnectWithoutPermissionInput = {
    where: RoleHasPermissionsWhereUniqueInput
    create: XOR<RoleHasPermissionsCreateWithoutPermissionInput, RoleHasPermissionsUncheckedCreateWithoutPermissionInput>
  }

  export type RoleHasPermissionsCreateManyPermissionInputEnvelope = {
    data: RoleHasPermissionsCreateManyPermissionInput | RoleHasPermissionsCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type UserHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput = {
    where: UserHasPermissionsWhereUniqueInput
    update: XOR<UserHasPermissionsUpdateWithoutPermissionInput, UserHasPermissionsUncheckedUpdateWithoutPermissionInput>
    create: XOR<UserHasPermissionsCreateWithoutPermissionInput, UserHasPermissionsUncheckedCreateWithoutPermissionInput>
  }

  export type UserHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput = {
    where: UserHasPermissionsWhereUniqueInput
    data: XOR<UserHasPermissionsUpdateWithoutPermissionInput, UserHasPermissionsUncheckedUpdateWithoutPermissionInput>
  }

  export type UserHasPermissionsUpdateManyWithWhereWithoutPermissionInput = {
    where: UserHasPermissionsScalarWhereInput
    data: XOR<UserHasPermissionsUpdateManyMutationInput, UserHasPermissionsUncheckedUpdateManyWithoutPermissionInput>
  }

  export type UserHasPermissionsScalarWhereInput = {
    AND?: UserHasPermissionsScalarWhereInput | UserHasPermissionsScalarWhereInput[]
    OR?: UserHasPermissionsScalarWhereInput[]
    NOT?: UserHasPermissionsScalarWhereInput | UserHasPermissionsScalarWhereInput[]
    PermissionId?: StringFilter<"UserHasPermissions"> | string
    UserId?: StringFilter<"UserHasPermissions"> | string
  }

  export type RoleHasPermissionsUpsertWithWhereUniqueWithoutPermissionInput = {
    where: RoleHasPermissionsWhereUniqueInput
    update: XOR<RoleHasPermissionsUpdateWithoutPermissionInput, RoleHasPermissionsUncheckedUpdateWithoutPermissionInput>
    create: XOR<RoleHasPermissionsCreateWithoutPermissionInput, RoleHasPermissionsUncheckedCreateWithoutPermissionInput>
  }

  export type RoleHasPermissionsUpdateWithWhereUniqueWithoutPermissionInput = {
    where: RoleHasPermissionsWhereUniqueInput
    data: XOR<RoleHasPermissionsUpdateWithoutPermissionInput, RoleHasPermissionsUncheckedUpdateWithoutPermissionInput>
  }

  export type RoleHasPermissionsUpdateManyWithWhereWithoutPermissionInput = {
    where: RoleHasPermissionsScalarWhereInput
    data: XOR<RoleHasPermissionsUpdateManyMutationInput, RoleHasPermissionsUncheckedUpdateManyWithoutPermissionInput>
  }

  export type RoleHasPermissionsScalarWhereInput = {
    AND?: RoleHasPermissionsScalarWhereInput | RoleHasPermissionsScalarWhereInput[]
    OR?: RoleHasPermissionsScalarWhereInput[]
    NOT?: RoleHasPermissionsScalarWhereInput | RoleHasPermissionsScalarWhereInput[]
    PermissionId?: StringFilter<"RoleHasPermissions"> | string
    RoleId?: StringFilter<"RoleHasPermissions"> | string
  }

  export type PendaftaranCreateWithoutPesantrenInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutPesantrenInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutPesantrenInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutPesantrenInput, PendaftaranUncheckedCreateWithoutPesantrenInput>
  }

  export type PendaftaranUpsertWithoutPesantrenInput = {
    update: XOR<PendaftaranUpdateWithoutPesantrenInput, PendaftaranUncheckedUpdateWithoutPesantrenInput>
    create: XOR<PendaftaranCreateWithoutPesantrenInput, PendaftaranUncheckedCreateWithoutPesantrenInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutPesantrenInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutPesantrenInput, PendaftaranUncheckedUpdateWithoutPesantrenInput>
  }

  export type PendaftaranUpdateWithoutPesantrenInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutPesantrenInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type UniversityCreateWithoutProgramStudiInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutProgramStudiInput = {
    UniversityId?: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    UniversityJabatan?: UniversityJabatanUncheckedCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutProgramStudiInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutProgramStudiInput, UniversityUncheckedCreateWithoutProgramStudiInput>
  }

  export type DaftarUlangCreateWithoutProgramStudiInput = {
    DaftarUlangId?: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutDaftarUlangInput
  }

  export type DaftarUlangUncheckedCreateWithoutProgramStudiInput = {
    DaftarUlangId?: string
    PendaftaranId: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type DaftarUlangCreateOrConnectWithoutProgramStudiInput = {
    where: DaftarUlangWhereUniqueInput
    create: XOR<DaftarUlangCreateWithoutProgramStudiInput, DaftarUlangUncheckedCreateWithoutProgramStudiInput>
  }

  export type DaftarUlangCreateManyProgramStudiInputEnvelope = {
    data: DaftarUlangCreateManyProgramStudiInput | DaftarUlangCreateManyProgramStudiInput[]
    skipDuplicates?: boolean
  }

  export type MataKuliahCreateWithoutProgramStudiInput = {
    MataKuliahId?: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranCreateNestedManyWithoutMataKuliahInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahUncheckedCreateWithoutProgramStudiInput = {
    MataKuliahId?: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUncheckedCreateNestedManyWithoutMataKuliahInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMataKuliahInput
  }

  export type MataKuliahCreateOrConnectWithoutProgramStudiInput = {
    where: MataKuliahWhereUniqueInput
    create: XOR<MataKuliahCreateWithoutProgramStudiInput, MataKuliahUncheckedCreateWithoutProgramStudiInput>
  }

  export type MataKuliahCreateManyProgramStudiInputEnvelope = {
    data: MataKuliahCreateManyProgramStudiInput | MataKuliahCreateManyProgramStudiInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutProgramStudiInput = {
    update: XOR<UniversityUpdateWithoutProgramStudiInput, UniversityUncheckedUpdateWithoutProgramStudiInput>
    create: XOR<UniversityCreateWithoutProgramStudiInput, UniversityUncheckedCreateWithoutProgramStudiInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutProgramStudiInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutProgramStudiInput, UniversityUncheckedUpdateWithoutProgramStudiInput>
  }

  export type UniversityUpdateWithoutProgramStudiInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutProgramStudiInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UniversityJabatan?: UniversityJabatanUncheckedUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type DaftarUlangUpsertWithWhereUniqueWithoutProgramStudiInput = {
    where: DaftarUlangWhereUniqueInput
    update: XOR<DaftarUlangUpdateWithoutProgramStudiInput, DaftarUlangUncheckedUpdateWithoutProgramStudiInput>
    create: XOR<DaftarUlangCreateWithoutProgramStudiInput, DaftarUlangUncheckedCreateWithoutProgramStudiInput>
  }

  export type DaftarUlangUpdateWithWhereUniqueWithoutProgramStudiInput = {
    where: DaftarUlangWhereUniqueInput
    data: XOR<DaftarUlangUpdateWithoutProgramStudiInput, DaftarUlangUncheckedUpdateWithoutProgramStudiInput>
  }

  export type DaftarUlangUpdateManyWithWhereWithoutProgramStudiInput = {
    where: DaftarUlangScalarWhereInput
    data: XOR<DaftarUlangUpdateManyMutationInput, DaftarUlangUncheckedUpdateManyWithoutProgramStudiInput>
  }

  export type MataKuliahUpsertWithWhereUniqueWithoutProgramStudiInput = {
    where: MataKuliahWhereUniqueInput
    update: XOR<MataKuliahUpdateWithoutProgramStudiInput, MataKuliahUncheckedUpdateWithoutProgramStudiInput>
    create: XOR<MataKuliahCreateWithoutProgramStudiInput, MataKuliahUncheckedCreateWithoutProgramStudiInput>
  }

  export type MataKuliahUpdateWithWhereUniqueWithoutProgramStudiInput = {
    where: MataKuliahWhereUniqueInput
    data: XOR<MataKuliahUpdateWithoutProgramStudiInput, MataKuliahUncheckedUpdateWithoutProgramStudiInput>
  }

  export type MataKuliahUpdateManyWithWhereWithoutProgramStudiInput = {
    where: MataKuliahScalarWhereInput
    data: XOR<MataKuliahUpdateManyMutationInput, MataKuliahUncheckedUpdateManyWithoutProgramStudiInput>
  }

  export type MataKuliahScalarWhereInput = {
    AND?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
    OR?: MataKuliahScalarWhereInput[]
    NOT?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
    MataKuliahId?: StringFilter<"MataKuliah"> | string
    ProgramStudiId?: StringFilter<"MataKuliah"> | string
    Kode?: StringFilter<"MataKuliah"> | string
    Nama?: StringFilter<"MataKuliah"> | string
    Sks?: IntFilter<"MataKuliah"> | number
    Semester?: StringNullableFilter<"MataKuliah"> | string | null
    Silabus?: StringNullableFilter<"MataKuliah"> | string | null
    CreatedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"MataKuliah"> | Date | string | null
  }

  export type CountryCreateWithoutProvinsiInput = {
    CountryId?: string
    Nama: string
  }

  export type CountryUncheckedCreateWithoutProvinsiInput = {
    CountryId?: string
    Nama: string
  }

  export type CountryCreateOrConnectWithoutProvinsiInput = {
    where: CountryWhereUniqueInput
    create: XOR<CountryCreateWithoutProvinsiInput, CountryUncheckedCreateWithoutProvinsiInput>
  }

  export type KabupatenCreateWithoutProvinsiInput = {
    KabupatenId?: string
    Nama: string
    Kecamatan?: KecamatanCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenUncheckedCreateWithoutProvinsiInput = {
    KabupatenId?: string
    Nama: string
    Kecamatan?: KecamatanUncheckedCreateNestedManyWithoutKabupatenInput
  }

  export type KabupatenCreateOrConnectWithoutProvinsiInput = {
    where: KabupatenWhereUniqueInput
    create: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput>
  }

  export type KabupatenCreateManyProvinsiInputEnvelope = {
    data: KabupatenCreateManyProvinsiInput | KabupatenCreateManyProvinsiInput[]
    skipDuplicates?: boolean
  }

  export type CountryUpsertWithoutProvinsiInput = {
    update: XOR<CountryUpdateWithoutProvinsiInput, CountryUncheckedUpdateWithoutProvinsiInput>
    create: XOR<CountryCreateWithoutProvinsiInput, CountryUncheckedCreateWithoutProvinsiInput>
    where?: CountryWhereInput
  }

  export type CountryUpdateToOneWithWhereWithoutProvinsiInput = {
    where?: CountryWhereInput
    data: XOR<CountryUpdateWithoutProvinsiInput, CountryUncheckedUpdateWithoutProvinsiInput>
  }

  export type CountryUpdateWithoutProvinsiInput = {
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type CountryUncheckedUpdateWithoutProvinsiInput = {
    CountryId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type KabupatenUpsertWithWhereUniqueWithoutProvinsiInput = {
    where: KabupatenWhereUniqueInput
    update: XOR<KabupatenUpdateWithoutProvinsiInput, KabupatenUncheckedUpdateWithoutProvinsiInput>
    create: XOR<KabupatenCreateWithoutProvinsiInput, KabupatenUncheckedCreateWithoutProvinsiInput>
  }

  export type KabupatenUpdateWithWhereUniqueWithoutProvinsiInput = {
    where: KabupatenWhereUniqueInput
    data: XOR<KabupatenUpdateWithoutProvinsiInput, KabupatenUncheckedUpdateWithoutProvinsiInput>
  }

  export type KabupatenUpdateManyWithWhereWithoutProvinsiInput = {
    where: KabupatenScalarWhereInput
    data: XOR<KabupatenUpdateManyMutationInput, KabupatenUncheckedUpdateManyWithoutProvinsiInput>
  }

  export type KabupatenScalarWhereInput = {
    AND?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
    OR?: KabupatenScalarWhereInput[]
    NOT?: KabupatenScalarWhereInput | KabupatenScalarWhereInput[]
    KabupatenId?: StringFilter<"Kabupaten"> | string
    ProvinsiId?: StringFilter<"Kabupaten"> | string
    Nama?: StringFilter<"Kabupaten"> | string
  }

  export type PermissionCreateWithoutRoleHasPermissionsInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutRoleHasPermissionsInput = {
    PermissionId?: string
    Name: string
    GuardName: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutRoleHasPermissionsInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutRoleHasPermissionsInput, PermissionUncheckedCreateWithoutRoleHasPermissionsInput>
  }

  export type RoleCreateWithoutRoleHasPermissionsInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutRoleHasPermissionsInput = {
    RoleId?: string
    Name: string
    GuardName: string
    Icon?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutRoleHasPermissionsInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutRoleHasPermissionsInput, RoleUncheckedCreateWithoutRoleHasPermissionsInput>
  }

  export type PermissionUpsertWithoutRoleHasPermissionsInput = {
    update: XOR<PermissionUpdateWithoutRoleHasPermissionsInput, PermissionUncheckedUpdateWithoutRoleHasPermissionsInput>
    create: XOR<PermissionCreateWithoutRoleHasPermissionsInput, PermissionUncheckedCreateWithoutRoleHasPermissionsInput>
    where?: PermissionWhereInput
  }

  export type PermissionUpdateToOneWithWhereWithoutRoleHasPermissionsInput = {
    where?: PermissionWhereInput
    data: XOR<PermissionUpdateWithoutRoleHasPermissionsInput, PermissionUncheckedUpdateWithoutRoleHasPermissionsInput>
  }

  export type PermissionUpdateWithoutRoleHasPermissionsInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutRoleHasPermissionsInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type RoleUpsertWithoutRoleHasPermissionsInput = {
    update: XOR<RoleUpdateWithoutRoleHasPermissionsInput, RoleUncheckedUpdateWithoutRoleHasPermissionsInput>
    create: XOR<RoleCreateWithoutRoleHasPermissionsInput, RoleUncheckedCreateWithoutRoleHasPermissionsInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutRoleHasPermissionsInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutRoleHasPermissionsInput, RoleUncheckedUpdateWithoutRoleHasPermissionsInput>
  }

  export type RoleUpdateWithoutRoleHasPermissionsInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasRoles?: UserHasRolesUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutRoleHasPermissionsInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
    Name?: StringFieldUpdateOperationsInput | string
    GuardName?: StringFieldUpdateOperationsInput | string
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type UserHasRolesCreateWithoutRoleInput = {
    User: UserCreateNestedOneWithoutUserHasRolesInput
  }

  export type UserHasRolesUncheckedCreateWithoutRoleInput = {
    UserId: string
  }

  export type UserHasRolesCreateOrConnectWithoutRoleInput = {
    where: UserHasRolesWhereUniqueInput
    create: XOR<UserHasRolesCreateWithoutRoleInput, UserHasRolesUncheckedCreateWithoutRoleInput>
  }

  export type UserHasRolesCreateManyRoleInputEnvelope = {
    data: UserHasRolesCreateManyRoleInput | UserHasRolesCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type RoleHasPermissionsCreateWithoutRoleInput = {
    Permission: PermissionCreateNestedOneWithoutRoleHasPermissionsInput
  }

  export type RoleHasPermissionsUncheckedCreateWithoutRoleInput = {
    PermissionId: string
  }

  export type RoleHasPermissionsCreateOrConnectWithoutRoleInput = {
    where: RoleHasPermissionsWhereUniqueInput
    create: XOR<RoleHasPermissionsCreateWithoutRoleInput, RoleHasPermissionsUncheckedCreateWithoutRoleInput>
  }

  export type RoleHasPermissionsCreateManyRoleInputEnvelope = {
    data: RoleHasPermissionsCreateManyRoleInput | RoleHasPermissionsCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserHasRolesUpsertWithWhereUniqueWithoutRoleInput = {
    where: UserHasRolesWhereUniqueInput
    update: XOR<UserHasRolesUpdateWithoutRoleInput, UserHasRolesUncheckedUpdateWithoutRoleInput>
    create: XOR<UserHasRolesCreateWithoutRoleInput, UserHasRolesUncheckedCreateWithoutRoleInput>
  }

  export type UserHasRolesUpdateWithWhereUniqueWithoutRoleInput = {
    where: UserHasRolesWhereUniqueInput
    data: XOR<UserHasRolesUpdateWithoutRoleInput, UserHasRolesUncheckedUpdateWithoutRoleInput>
  }

  export type UserHasRolesUpdateManyWithWhereWithoutRoleInput = {
    where: UserHasRolesScalarWhereInput
    data: XOR<UserHasRolesUpdateManyMutationInput, UserHasRolesUncheckedUpdateManyWithoutRoleInput>
  }

  export type UserHasRolesScalarWhereInput = {
    AND?: UserHasRolesScalarWhereInput | UserHasRolesScalarWhereInput[]
    OR?: UserHasRolesScalarWhereInput[]
    NOT?: UserHasRolesScalarWhereInput | UserHasRolesScalarWhereInput[]
    RoleId?: StringFilter<"UserHasRoles"> | string
    UserId?: StringFilter<"UserHasRoles"> | string
  }

  export type RoleHasPermissionsUpsertWithWhereUniqueWithoutRoleInput = {
    where: RoleHasPermissionsWhereUniqueInput
    update: XOR<RoleHasPermissionsUpdateWithoutRoleInput, RoleHasPermissionsUncheckedUpdateWithoutRoleInput>
    create: XOR<RoleHasPermissionsCreateWithoutRoleInput, RoleHasPermissionsUncheckedCreateWithoutRoleInput>
  }

  export type RoleHasPermissionsUpdateWithWhereUniqueWithoutRoleInput = {
    where: RoleHasPermissionsWhereUniqueInput
    data: XOR<RoleHasPermissionsUpdateWithoutRoleInput, RoleHasPermissionsUncheckedUpdateWithoutRoleInput>
  }

  export type RoleHasPermissionsUpdateManyWithWhereWithoutRoleInput = {
    where: RoleHasPermissionsScalarWhereInput
    data: XOR<RoleHasPermissionsUpdateManyMutationInput, RoleHasPermissionsUncheckedUpdateManyWithoutRoleInput>
  }

  export type PendaftaranCreateWithoutSanggahanAssesmenInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutSanggahanAssesmenInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutSanggahanAssesmenInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutSanggahanAssesmenInput, PendaftaranUncheckedCreateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenMkId?: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    MataKuliahMahasiswa: MataKuliahMahasiswaCreateNestedOneWithoutSanggahanAssesmenMkInput
  }

  export type SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenMkId?: string
    MataKuliahMahasiswaId: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenMkCreateOrConnectWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenMkWhereUniqueInput
    create: XOR<SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenMkCreateManySanggahanAssesmenInputEnvelope = {
    data: SanggahanAssesmenMkCreateManySanggahanAssesmenInput | SanggahanAssesmenMkCreateManySanggahanAssesmenInput[]
    skipDuplicates?: boolean
  }

  export type SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenPihakId?: string
    NamaPihak: string
    JabatanPihak?: string | null
    InstansiPihak?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenPihakId?: string
    NamaPihak: string
    JabatanPihak?: string | null
    InstansiPihak?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenPihakCreateOrConnectWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenPihakWhereUniqueInput
    create: XOR<SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenPihakCreateManySanggahanAssesmenInputEnvelope = {
    data: SanggahanAssesmenPihakCreateManySanggahanAssesmenInput | SanggahanAssesmenPihakCreateManySanggahanAssesmenInput[]
    skipDuplicates?: boolean
  }

  export type PendaftaranUpsertWithoutSanggahanAssesmenInput = {
    update: XOR<PendaftaranUpdateWithoutSanggahanAssesmenInput, PendaftaranUncheckedUpdateWithoutSanggahanAssesmenInput>
    create: XOR<PendaftaranCreateWithoutSanggahanAssesmenInput, PendaftaranUncheckedCreateWithoutSanggahanAssesmenInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutSanggahanAssesmenInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutSanggahanAssesmenInput, PendaftaranUncheckedUpdateWithoutSanggahanAssesmenInput>
  }

  export type PendaftaranUpdateWithoutSanggahanAssesmenInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutSanggahanAssesmenInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type SanggahanAssesmenMkUpsertWithWhereUniqueWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenMkWhereUniqueInput
    update: XOR<SanggahanAssesmenMkUpdateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedUpdateWithoutSanggahanAssesmenInput>
    create: XOR<SanggahanAssesmenMkCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedCreateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenMkUpdateWithWhereUniqueWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenMkWhereUniqueInput
    data: XOR<SanggahanAssesmenMkUpdateWithoutSanggahanAssesmenInput, SanggahanAssesmenMkUncheckedUpdateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenMkUpdateManyWithWhereWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenMkScalarWhereInput
    data: XOR<SanggahanAssesmenMkUpdateManyMutationInput, SanggahanAssesmenMkUncheckedUpdateManyWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenPihakUpsertWithWhereUniqueWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenPihakWhereUniqueInput
    update: XOR<SanggahanAssesmenPihakUpdateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedUpdateWithoutSanggahanAssesmenInput>
    create: XOR<SanggahanAssesmenPihakCreateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedCreateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenPihakUpdateWithWhereUniqueWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenPihakWhereUniqueInput
    data: XOR<SanggahanAssesmenPihakUpdateWithoutSanggahanAssesmenInput, SanggahanAssesmenPihakUncheckedUpdateWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenPihakUpdateManyWithWhereWithoutSanggahanAssesmenInput = {
    where: SanggahanAssesmenPihakScalarWhereInput
    data: XOR<SanggahanAssesmenPihakUpdateManyMutationInput, SanggahanAssesmenPihakUncheckedUpdateManyWithoutSanggahanAssesmenInput>
  }

  export type SanggahanAssesmenPihakScalarWhereInput = {
    AND?: SanggahanAssesmenPihakScalarWhereInput | SanggahanAssesmenPihakScalarWhereInput[]
    OR?: SanggahanAssesmenPihakScalarWhereInput[]
    NOT?: SanggahanAssesmenPihakScalarWhereInput | SanggahanAssesmenPihakScalarWhereInput[]
    SanggahanAssesmenPihakId?: StringFilter<"SanggahanAssesmenPihak"> | string
    SanggahanAssesmenId?: StringFilter<"SanggahanAssesmenPihak"> | string
    NamaPihak?: StringFilter<"SanggahanAssesmenPihak"> | string
    JabatanPihak?: StringNullableFilter<"SanggahanAssesmenPihak"> | string | null
    InstansiPihak?: StringNullableFilter<"SanggahanAssesmenPihak"> | string | null
    CreatedAt?: DateTimeNullableFilter<"SanggahanAssesmenPihak"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"SanggahanAssesmenPihak"> | Date | string | null
  }

  export type SanggahanAssesmenCreateWithoutSanggahanAssesmenMkInput = {
    SanggahanAssesmenId?: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutSanggahanAssesmenInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenMkInput = {
    SanggahanAssesmenId?: string
    PendaftaranId: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUncheckedCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenCreateOrConnectWithoutSanggahanAssesmenMkInput = {
    where: SanggahanAssesmenWhereUniqueInput
    create: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenMkInput>
  }

  export type MataKuliahMahasiswaCreateWithoutSanggahanAssesmenMkInput = {
    MataKuliahMahasiswaId?: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutMataKuliahMahasiswaInput
    MataKuliah: MataKuliahCreateNestedOneWithoutMataKuliahMahasiswaInput
    EvaluasiDiri?: EvaluasiDiriCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaUncheckedCreateWithoutSanggahanAssesmenMkInput = {
    MataKuliahMahasiswaId?: string
    PendaftaranId: string
    MataKuliahId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedCreateNestedManyWithoutMataKuliahMahasiswaInput
  }

  export type MataKuliahMahasiswaCreateOrConnectWithoutSanggahanAssesmenMkInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    create: XOR<MataKuliahMahasiswaCreateWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUncheckedCreateWithoutSanggahanAssesmenMkInput>
  }

  export type SanggahanAssesmenUpsertWithoutSanggahanAssesmenMkInput = {
    update: XOR<SanggahanAssesmenUpdateWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenMkInput>
    create: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenMkInput>
    where?: SanggahanAssesmenWhereInput
  }

  export type SanggahanAssesmenUpdateToOneWithWhereWithoutSanggahanAssesmenMkInput = {
    where?: SanggahanAssesmenWhereInput
    data: XOR<SanggahanAssesmenUpdateWithoutSanggahanAssesmenMkInput, SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenMkInput>
  }

  export type SanggahanAssesmenUpdateWithoutSanggahanAssesmenMkInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenMkInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type MataKuliahMahasiswaUpsertWithoutSanggahanAssesmenMkInput = {
    update: XOR<MataKuliahMahasiswaUpdateWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUncheckedUpdateWithoutSanggahanAssesmenMkInput>
    create: XOR<MataKuliahMahasiswaCreateWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUncheckedCreateWithoutSanggahanAssesmenMkInput>
    where?: MataKuliahMahasiswaWhereInput
  }

  export type MataKuliahMahasiswaUpdateToOneWithWhereWithoutSanggahanAssesmenMkInput = {
    where?: MataKuliahMahasiswaWhereInput
    data: XOR<MataKuliahMahasiswaUpdateWithoutSanggahanAssesmenMkInput, MataKuliahMahasiswaUncheckedUpdateWithoutSanggahanAssesmenMkInput>
  }

  export type MataKuliahMahasiswaUpdateWithoutSanggahanAssesmenMkInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    MataKuliah?: MataKuliahUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    EvaluasiDiri?: EvaluasiDiriUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateWithoutSanggahanAssesmenMkInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type SanggahanAssesmenCreateWithoutSanggahanAssesmenPihakInput = {
    SanggahanAssesmenId?: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran: PendaftaranCreateNestedOneWithoutSanggahanAssesmenInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenPihakInput = {
    SanggahanAssesmenId?: string
    PendaftaranId: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedCreateNestedManyWithoutSanggahanAssesmenInput
  }

  export type SanggahanAssesmenCreateOrConnectWithoutSanggahanAssesmenPihakInput = {
    where: SanggahanAssesmenWhereUniqueInput
    create: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenPihakInput>
  }

  export type SanggahanAssesmenUpsertWithoutSanggahanAssesmenPihakInput = {
    update: XOR<SanggahanAssesmenUpdateWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenPihakInput>
    create: XOR<SanggahanAssesmenCreateWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUncheckedCreateWithoutSanggahanAssesmenPihakInput>
    where?: SanggahanAssesmenWhereInput
  }

  export type SanggahanAssesmenUpdateToOneWithWhereWithoutSanggahanAssesmenPihakInput = {
    where?: SanggahanAssesmenWhereInput
    data: XOR<SanggahanAssesmenUpdateWithoutSanggahanAssesmenPihakInput, SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenPihakInput>
  }

  export type SanggahanAssesmenUpdateWithoutSanggahanAssesmenPihakInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SanggahanAssesmenUncheckedUpdateWithoutSanggahanAssesmenPihakInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SkRektorAssesorCreateWithoutSkRektorInput = {
    AssesorMahasiswa: AssesorMahasiswaCreateNestedOneWithoutSkRektorAssesorInput
  }

  export type SkRektorAssesorUncheckedCreateWithoutSkRektorInput = {
    AssesorMahasiswaId: string
  }

  export type SkRektorAssesorCreateOrConnectWithoutSkRektorInput = {
    where: SkRektorAssesorWhereUniqueInput
    create: XOR<SkRektorAssesorCreateWithoutSkRektorInput, SkRektorAssesorUncheckedCreateWithoutSkRektorInput>
  }

  export type SkRektorAssesorCreateManySkRektorInputEnvelope = {
    data: SkRektorAssesorCreateManySkRektorInput | SkRektorAssesorCreateManySkRektorInput[]
    skipDuplicates?: boolean
  }

  export type SkRektorMahasiswaCreateWithoutSkRektorInput = {
    Pendaftaran: PendaftaranCreateNestedOneWithoutSkRektorMahasiswaInput
  }

  export type SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput = {
    PendaftaranId: string
  }

  export type SkRektorMahasiswaCreateOrConnectWithoutSkRektorInput = {
    where: SkRektorMahasiswaWhereUniqueInput
    create: XOR<SkRektorMahasiswaCreateWithoutSkRektorInput, SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput>
  }

  export type SkRektorMahasiswaCreateManySkRektorInputEnvelope = {
    data: SkRektorMahasiswaCreateManySkRektorInput | SkRektorMahasiswaCreateManySkRektorInput[]
    skipDuplicates?: boolean
  }

  export type SkRektorAssesorUpsertWithWhereUniqueWithoutSkRektorInput = {
    where: SkRektorAssesorWhereUniqueInput
    update: XOR<SkRektorAssesorUpdateWithoutSkRektorInput, SkRektorAssesorUncheckedUpdateWithoutSkRektorInput>
    create: XOR<SkRektorAssesorCreateWithoutSkRektorInput, SkRektorAssesorUncheckedCreateWithoutSkRektorInput>
  }

  export type SkRektorAssesorUpdateWithWhereUniqueWithoutSkRektorInput = {
    where: SkRektorAssesorWhereUniqueInput
    data: XOR<SkRektorAssesorUpdateWithoutSkRektorInput, SkRektorAssesorUncheckedUpdateWithoutSkRektorInput>
  }

  export type SkRektorAssesorUpdateManyWithWhereWithoutSkRektorInput = {
    where: SkRektorAssesorScalarWhereInput
    data: XOR<SkRektorAssesorUpdateManyMutationInput, SkRektorAssesorUncheckedUpdateManyWithoutSkRektorInput>
  }

  export type SkRektorMahasiswaUpsertWithWhereUniqueWithoutSkRektorInput = {
    where: SkRektorMahasiswaWhereUniqueInput
    update: XOR<SkRektorMahasiswaUpdateWithoutSkRektorInput, SkRektorMahasiswaUncheckedUpdateWithoutSkRektorInput>
    create: XOR<SkRektorMahasiswaCreateWithoutSkRektorInput, SkRektorMahasiswaUncheckedCreateWithoutSkRektorInput>
  }

  export type SkRektorMahasiswaUpdateWithWhereUniqueWithoutSkRektorInput = {
    where: SkRektorMahasiswaWhereUniqueInput
    data: XOR<SkRektorMahasiswaUpdateWithoutSkRektorInput, SkRektorMahasiswaUncheckedUpdateWithoutSkRektorInput>
  }

  export type SkRektorMahasiswaUpdateManyWithWhereWithoutSkRektorInput = {
    where: SkRektorMahasiswaScalarWhereInput
    data: XOR<SkRektorMahasiswaUpdateManyMutationInput, SkRektorMahasiswaUncheckedUpdateManyWithoutSkRektorInput>
  }

  export type SkRektorCreateWithoutSkRektorAssesorInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorMahasiswa?: SkRektorMahasiswaCreateNestedManyWithoutSkRektorInput
  }

  export type SkRektorUncheckedCreateWithoutSkRektorAssesorInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedCreateNestedManyWithoutSkRektorInput
  }

  export type SkRektorCreateOrConnectWithoutSkRektorAssesorInput = {
    where: SkRektorWhereUniqueInput
    create: XOR<SkRektorCreateWithoutSkRektorAssesorInput, SkRektorUncheckedCreateWithoutSkRektorAssesorInput>
  }

  export type AssesorMahasiswaCreateWithoutSkRektorAssesorInput = {
    AssesorMahasiswaId?: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Asesor: AsesorCreateNestedOneWithoutAssesorMahasiswaInput
    Pendaftaran: PendaftaranCreateNestedOneWithoutAssesorMahasiswaInput
  }

  export type AssesorMahasiswaUncheckedCreateWithoutSkRektorAssesorInput = {
    AssesorMahasiswaId?: string
    PendaftaranId: string
    AsesorId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AssesorMahasiswaCreateOrConnectWithoutSkRektorAssesorInput = {
    where: AssesorMahasiswaWhereUniqueInput
    create: XOR<AssesorMahasiswaCreateWithoutSkRektorAssesorInput, AssesorMahasiswaUncheckedCreateWithoutSkRektorAssesorInput>
  }

  export type SkRektorUpsertWithoutSkRektorAssesorInput = {
    update: XOR<SkRektorUpdateWithoutSkRektorAssesorInput, SkRektorUncheckedUpdateWithoutSkRektorAssesorInput>
    create: XOR<SkRektorCreateWithoutSkRektorAssesorInput, SkRektorUncheckedCreateWithoutSkRektorAssesorInput>
    where?: SkRektorWhereInput
  }

  export type SkRektorUpdateToOneWithWhereWithoutSkRektorAssesorInput = {
    where?: SkRektorWhereInput
    data: XOR<SkRektorUpdateWithoutSkRektorAssesorInput, SkRektorUncheckedUpdateWithoutSkRektorAssesorInput>
  }

  export type SkRektorUpdateWithoutSkRektorAssesorInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutSkRektorNestedInput
  }

  export type SkRektorUncheckedUpdateWithoutSkRektorAssesorInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutSkRektorNestedInput
  }

  export type AssesorMahasiswaUpsertWithoutSkRektorAssesorInput = {
    update: XOR<AssesorMahasiswaUpdateWithoutSkRektorAssesorInput, AssesorMahasiswaUncheckedUpdateWithoutSkRektorAssesorInput>
    create: XOR<AssesorMahasiswaCreateWithoutSkRektorAssesorInput, AssesorMahasiswaUncheckedCreateWithoutSkRektorAssesorInput>
    where?: AssesorMahasiswaWhereInput
  }

  export type AssesorMahasiswaUpdateToOneWithWhereWithoutSkRektorAssesorInput = {
    where?: AssesorMahasiswaWhereInput
    data: XOR<AssesorMahasiswaUpdateWithoutSkRektorAssesorInput, AssesorMahasiswaUncheckedUpdateWithoutSkRektorAssesorInput>
  }

  export type AssesorMahasiswaUpdateWithoutSkRektorAssesorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateOneRequiredWithoutAssesorMahasiswaNestedInput
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaUncheckedUpdateWithoutSkRektorAssesorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorCreateWithoutSkRektorMahasiswaInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorCreateNestedManyWithoutSkRektorInput
  }

  export type SkRektorUncheckedCreateWithoutSkRektorMahasiswaInput = {
    SkRektorId?: string
    NamaSk: string
    TahunSk?: number
    NomorSk: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedCreateNestedManyWithoutSkRektorInput
  }

  export type SkRektorCreateOrConnectWithoutSkRektorMahasiswaInput = {
    where: SkRektorWhereUniqueInput
    create: XOR<SkRektorCreateWithoutSkRektorMahasiswaInput, SkRektorUncheckedCreateWithoutSkRektorMahasiswaInput>
  }

  export type PendaftaranCreateWithoutSkRektorMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Mahasiswa: MahasiswaCreateNestedOneWithoutPendaftaranInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranUncheckedCreateWithoutSkRektorMahasiswaInput = {
    PendaftaranId?: string
    MahasiswaId: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    BuktiForm?: BuktiFormUncheckedCreateNestedManyWithoutPendaftaranInput
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutPendaftaranInput
    InformasiKependudukan?: InformasiKependudukanUncheckedCreateNestedManyWithoutPendaftaranInput
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedCreateNestedManyWithoutPendaftaranInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedCreateNestedManyWithoutPendaftaranInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    OrangTua?: OrangTuaUncheckedCreateNestedManyWithoutPendaftaranInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedCreateNestedManyWithoutPendaftaranInput
    Pesantren?: PesantrenUncheckedCreateNestedManyWithoutPendaftaranInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedCreateNestedManyWithoutPendaftaranInput
  }

  export type PendaftaranCreateOrConnectWithoutSkRektorMahasiswaInput = {
    where: PendaftaranWhereUniqueInput
    create: XOR<PendaftaranCreateWithoutSkRektorMahasiswaInput, PendaftaranUncheckedCreateWithoutSkRektorMahasiswaInput>
  }

  export type SkRektorUpsertWithoutSkRektorMahasiswaInput = {
    update: XOR<SkRektorUpdateWithoutSkRektorMahasiswaInput, SkRektorUncheckedUpdateWithoutSkRektorMahasiswaInput>
    create: XOR<SkRektorCreateWithoutSkRektorMahasiswaInput, SkRektorUncheckedCreateWithoutSkRektorMahasiswaInput>
    where?: SkRektorWhereInput
  }

  export type SkRektorUpdateToOneWithWhereWithoutSkRektorMahasiswaInput = {
    where?: SkRektorWhereInput
    data: XOR<SkRektorUpdateWithoutSkRektorMahasiswaInput, SkRektorUncheckedUpdateWithoutSkRektorMahasiswaInput>
  }

  export type SkRektorUpdateWithoutSkRektorMahasiswaInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUpdateManyWithoutSkRektorNestedInput
  }

  export type SkRektorUncheckedUpdateWithoutSkRektorMahasiswaInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
    NamaSk?: StringFieldUpdateOperationsInput | string
    TahunSk?: IntFieldUpdateOperationsInput | number
    NomorSk?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedUpdateManyWithoutSkRektorNestedInput
  }

  export type PendaftaranUpsertWithoutSkRektorMahasiswaInput = {
    update: XOR<PendaftaranUpdateWithoutSkRektorMahasiswaInput, PendaftaranUncheckedUpdateWithoutSkRektorMahasiswaInput>
    create: XOR<PendaftaranCreateWithoutSkRektorMahasiswaInput, PendaftaranUncheckedCreateWithoutSkRektorMahasiswaInput>
    where?: PendaftaranWhereInput
  }

  export type PendaftaranUpdateToOneWithWhereWithoutSkRektorMahasiswaInput = {
    where?: PendaftaranWhereInput
    data: XOR<PendaftaranUpdateWithoutSkRektorMahasiswaInput, PendaftaranUncheckedUpdateWithoutSkRektorMahasiswaInput>
  }

  export type PendaftaranUpdateWithoutSkRektorMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateOneRequiredWithoutPendaftaranNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutSkRektorMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type HasilAssesmenCreateWithoutSkorAssesmenInput = {
    HasilAssesmenId?: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    EvaluasiDiri: EvaluasiDiriCreateNestedOneWithoutHasilAssesmenInput
  }

  export type HasilAssesmenUncheckedCreateWithoutSkorAssesmenInput = {
    HasilAssesmenId?: string
    EvaluasiDiriId: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type HasilAssesmenCreateOrConnectWithoutSkorAssesmenInput = {
    where: HasilAssesmenWhereUniqueInput
    create: XOR<HasilAssesmenCreateWithoutSkorAssesmenInput, HasilAssesmenUncheckedCreateWithoutSkorAssesmenInput>
  }

  export type HasilAssesmenUpsertWithoutSkorAssesmenInput = {
    update: XOR<HasilAssesmenUpdateWithoutSkorAssesmenInput, HasilAssesmenUncheckedUpdateWithoutSkorAssesmenInput>
    create: XOR<HasilAssesmenCreateWithoutSkorAssesmenInput, HasilAssesmenUncheckedCreateWithoutSkorAssesmenInput>
    where?: HasilAssesmenWhereInput
  }

  export type HasilAssesmenUpdateToOneWithWhereWithoutSkorAssesmenInput = {
    where?: HasilAssesmenWhereInput
    data: XOR<HasilAssesmenUpdateWithoutSkorAssesmenInput, HasilAssesmenUncheckedUpdateWithoutSkorAssesmenInput>
  }

  export type HasilAssesmenUpdateWithoutSkorAssesmenInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUpdateOneRequiredWithoutHasilAssesmenNestedInput
  }

  export type HasilAssesmenUncheckedUpdateWithoutSkorAssesmenInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput = {
    StatusMahasiswaAssesmentHistoryId?: string
    DaftarUlangId: string
    Tanggal?: Date | string | null
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput = {
    StatusMahasiswaAssesmentHistoryId?: string
    DaftarUlangId: string
    Tanggal?: Date | string | null
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentHistoryCreateOrConnectWithoutStatusMahasiswaAssesmentInput = {
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    create: XOR<StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput>
  }

  export type StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInputEnvelope = {
    data: StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInput | StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInput[]
    skipDuplicates?: boolean
  }

  export type StatusMahasiswaAssesmentHistoryUpsertWithWhereUniqueWithoutStatusMahasiswaAssesmentInput = {
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    update: XOR<StatusMahasiswaAssesmentHistoryUpdateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateWithoutStatusMahasiswaAssesmentInput>
    create: XOR<StatusMahasiswaAssesmentHistoryCreateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedCreateWithoutStatusMahasiswaAssesmentInput>
  }

  export type StatusMahasiswaAssesmentHistoryUpdateWithWhereUniqueWithoutStatusMahasiswaAssesmentInput = {
    where: StatusMahasiswaAssesmentHistoryWhereUniqueInput
    data: XOR<StatusMahasiswaAssesmentHistoryUpdateWithoutStatusMahasiswaAssesmentInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateWithoutStatusMahasiswaAssesmentInput>
  }

  export type StatusMahasiswaAssesmentHistoryUpdateManyWithWhereWithoutStatusMahasiswaAssesmentInput = {
    where: StatusMahasiswaAssesmentHistoryScalarWhereInput
    data: XOR<StatusMahasiswaAssesmentHistoryUpdateManyMutationInput, StatusMahasiswaAssesmentHistoryUncheckedUpdateManyWithoutStatusMahasiswaAssesmentInput>
  }

  export type StatusMahasiswaAssesmentHistoryScalarWhereInput = {
    AND?: StatusMahasiswaAssesmentHistoryScalarWhereInput | StatusMahasiswaAssesmentHistoryScalarWhereInput[]
    OR?: StatusMahasiswaAssesmentHistoryScalarWhereInput[]
    NOT?: StatusMahasiswaAssesmentHistoryScalarWhereInput | StatusMahasiswaAssesmentHistoryScalarWhereInput[]
    StatusMahasiswaAssesmentHistoryId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    StatusMahasiswaAssesmentId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    DaftarUlangId?: StringFilter<"StatusMahasiswaAssesmentHistory"> | string
    Tanggal?: DateTimeNullableFilter<"StatusMahasiswaAssesmentHistory"> | Date | string | null
    Keterangan?: StringNullableFilter<"StatusMahasiswaAssesmentHistory"> | string | null
  }

  export type StatusMahasiswaAssesmentCreateWithoutStatusMahasiswaAssesmentHistoryInput = {
    StatusMahasiswaAssesmentId?: string
    NamaStatus: string
    Icon: string
    Urutan: number
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentUncheckedCreateWithoutStatusMahasiswaAssesmentHistoryInput = {
    StatusMahasiswaAssesmentId?: string
    NamaStatus: string
    Icon: string
    Urutan: number
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentCreateOrConnectWithoutStatusMahasiswaAssesmentHistoryInput = {
    where: StatusMahasiswaAssesmentWhereUniqueInput
    create: XOR<StatusMahasiswaAssesmentCreateWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUncheckedCreateWithoutStatusMahasiswaAssesmentHistoryInput>
  }

  export type StatusMahasiswaAssesmentUpsertWithoutStatusMahasiswaAssesmentHistoryInput = {
    update: XOR<StatusMahasiswaAssesmentUpdateWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUncheckedUpdateWithoutStatusMahasiswaAssesmentHistoryInput>
    create: XOR<StatusMahasiswaAssesmentCreateWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUncheckedCreateWithoutStatusMahasiswaAssesmentHistoryInput>
    where?: StatusMahasiswaAssesmentWhereInput
  }

  export type StatusMahasiswaAssesmentUpdateToOneWithWhereWithoutStatusMahasiswaAssesmentHistoryInput = {
    where?: StatusMahasiswaAssesmentWhereInput
    data: XOR<StatusMahasiswaAssesmentUpdateWithoutStatusMahasiswaAssesmentHistoryInput, StatusMahasiswaAssesmentUncheckedUpdateWithoutStatusMahasiswaAssesmentHistoryInput>
  }

  export type StatusMahasiswaAssesmentUpdateWithoutStatusMahasiswaAssesmentHistoryInput = {
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    NamaStatus?: StringFieldUpdateOperationsInput | string
    Icon?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentUncheckedUpdateWithoutStatusMahasiswaAssesmentHistoryInput = {
    StatusMahasiswaAssesmentId?: StringFieldUpdateOperationsInput | string
    NamaStatus?: StringFieldUpdateOperationsInput | string
    Icon?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AsesorCreateWithoutTipeAsesorInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademik?: AsesorAkademikCreateNestedManyWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaCreateNestedManyWithoutAsesorInput
  }

  export type AsesorUncheckedCreateWithoutTipeAsesorInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedCreateNestedManyWithoutAsesorInput
    AsesorPraktisi?: AsesorPraktisiUncheckedCreateNestedManyWithoutAsesorInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedCreateNestedManyWithoutAsesorInput
  }

  export type AsesorCreateOrConnectWithoutTipeAsesorInput = {
    where: AsesorWhereUniqueInput
    create: XOR<AsesorCreateWithoutTipeAsesorInput, AsesorUncheckedCreateWithoutTipeAsesorInput>
  }

  export type AsesorCreateManyTipeAsesorInputEnvelope = {
    data: AsesorCreateManyTipeAsesorInput | AsesorCreateManyTipeAsesorInput[]
    skipDuplicates?: boolean
  }

  export type AsesorUpsertWithWhereUniqueWithoutTipeAsesorInput = {
    where: AsesorWhereUniqueInput
    update: XOR<AsesorUpdateWithoutTipeAsesorInput, AsesorUncheckedUpdateWithoutTipeAsesorInput>
    create: XOR<AsesorCreateWithoutTipeAsesorInput, AsesorUncheckedCreateWithoutTipeAsesorInput>
  }

  export type AsesorUpdateWithWhereUniqueWithoutTipeAsesorInput = {
    where: AsesorWhereUniqueInput
    data: XOR<AsesorUpdateWithoutTipeAsesorInput, AsesorUncheckedUpdateWithoutTipeAsesorInput>
  }

  export type AsesorUpdateManyWithWhereWithoutTipeAsesorInput = {
    where: AsesorScalarWhereInput
    data: XOR<AsesorUpdateManyMutationInput, AsesorUncheckedUpdateManyWithoutTipeAsesorInput>
  }

  export type AsesorScalarWhereInput = {
    AND?: AsesorScalarWhereInput | AsesorScalarWhereInput[]
    OR?: AsesorScalarWhereInput[]
    NOT?: AsesorScalarWhereInput | AsesorScalarWhereInput[]
    AsesorId?: StringFilter<"Asesor"> | string
    TipeAsesorId?: StringFilter<"Asesor"> | string
    UserId?: StringFilter<"Asesor"> | string
    CreatedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"Asesor"> | Date | string | null
  }

  export type AlamatCreateWithoutUniversityInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
    Desa: DesaCreateNestedOneWithoutAlamatInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutAlamatInput
    User?: UserCreateNestedManyWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutUniversityInput = {
    AlamatId?: string
    DesaId: string
    Alamat: string
    KodePos: string
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutAlamatInput
    User?: UserUncheckedCreateNestedManyWithoutAlamatInput
  }

  export type AlamatCreateOrConnectWithoutUniversityInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutUniversityInput, AlamatUncheckedCreateWithoutUniversityInput>
  }

  export type ProgramStudiCreateWithoutUniversityInput = {
    ProgramStudiId?: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    DaftarUlang?: DaftarUlangCreateNestedManyWithoutProgramStudiInput
    MataKuliah?: MataKuliahCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiUncheckedCreateWithoutUniversityInput = {
    ProgramStudiId?: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    DaftarUlang?: DaftarUlangUncheckedCreateNestedManyWithoutProgramStudiInput
    MataKuliah?: MataKuliahUncheckedCreateNestedManyWithoutProgramStudiInput
  }

  export type ProgramStudiCreateOrConnectWithoutUniversityInput = {
    where: ProgramStudiWhereUniqueInput
    create: XOR<ProgramStudiCreateWithoutUniversityInput, ProgramStudiUncheckedCreateWithoutUniversityInput>
  }

  export type ProgramStudiCreateManyUniversityInputEnvelope = {
    data: ProgramStudiCreateManyUniversityInput | ProgramStudiCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type UniversityJabatanCreateWithoutUniversityInput = {
    UniversityJabatanId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    UniversityJabatanOrang?: UniversityJabatanOrangCreateNestedManyWithoutUniversityJabatanInput
  }

  export type UniversityJabatanUncheckedCreateWithoutUniversityInput = {
    UniversityJabatanId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    UniversityJabatanOrang?: UniversityJabatanOrangUncheckedCreateNestedManyWithoutUniversityJabatanInput
  }

  export type UniversityJabatanCreateOrConnectWithoutUniversityInput = {
    where: UniversityJabatanWhereUniqueInput
    create: XOR<UniversityJabatanCreateWithoutUniversityInput, UniversityJabatanUncheckedCreateWithoutUniversityInput>
  }

  export type UniversityJabatanCreateManyUniversityInputEnvelope = {
    data: UniversityJabatanCreateManyUniversityInput | UniversityJabatanCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type UniversitySosialMediaCreateWithoutUniversityInput = {
    UniversitySosialMediaId?: string
    Nama: string
    Username?: string | null
    Icon?: string | null
  }

  export type UniversitySosialMediaUncheckedCreateWithoutUniversityInput = {
    UniversitySosialMediaId?: string
    Nama: string
    Username?: string | null
    Icon?: string | null
  }

  export type UniversitySosialMediaCreateOrConnectWithoutUniversityInput = {
    where: UniversitySosialMediaWhereUniqueInput
    create: XOR<UniversitySosialMediaCreateWithoutUniversityInput, UniversitySosialMediaUncheckedCreateWithoutUniversityInput>
  }

  export type UniversitySosialMediaCreateManyUniversityInputEnvelope = {
    data: UniversitySosialMediaCreateManyUniversityInput | UniversitySosialMediaCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type UniversityInformasiCreateWithoutUniversityInput = {
    UniversityInformasiId?: string
    Nama: string
    Informasi?: string | null
  }

  export type UniversityInformasiUncheckedCreateWithoutUniversityInput = {
    UniversityInformasiId?: string
    Nama: string
    Informasi?: string | null
  }

  export type UniversityInformasiCreateOrConnectWithoutUniversityInput = {
    where: UniversityInformasiWhereUniqueInput
    create: XOR<UniversityInformasiCreateWithoutUniversityInput, UniversityInformasiUncheckedCreateWithoutUniversityInput>
  }

  export type UniversityInformasiCreateManyUniversityInputEnvelope = {
    data: UniversityInformasiCreateManyUniversityInput | UniversityInformasiCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type AlamatUpsertWithoutUniversityInput = {
    update: XOR<AlamatUpdateWithoutUniversityInput, AlamatUncheckedUpdateWithoutUniversityInput>
    create: XOR<AlamatCreateWithoutUniversityInput, AlamatUncheckedCreateWithoutUniversityInput>
    where?: AlamatWhereInput
  }

  export type AlamatUpdateToOneWithWhereWithoutUniversityInput = {
    where?: AlamatWhereInput
    data: XOR<AlamatUpdateWithoutUniversityInput, AlamatUncheckedUpdateWithoutUniversityInput>
  }

  export type AlamatUpdateWithoutUniversityInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutAlamatNestedInput
    User?: UserUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutUniversityInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    DesaId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutAlamatNestedInput
    User?: UserUncheckedUpdateManyWithoutAlamatNestedInput
  }

  export type ProgramStudiUpsertWithWhereUniqueWithoutUniversityInput = {
    where: ProgramStudiWhereUniqueInput
    update: XOR<ProgramStudiUpdateWithoutUniversityInput, ProgramStudiUncheckedUpdateWithoutUniversityInput>
    create: XOR<ProgramStudiCreateWithoutUniversityInput, ProgramStudiUncheckedCreateWithoutUniversityInput>
  }

  export type ProgramStudiUpdateWithWhereUniqueWithoutUniversityInput = {
    where: ProgramStudiWhereUniqueInput
    data: XOR<ProgramStudiUpdateWithoutUniversityInput, ProgramStudiUncheckedUpdateWithoutUniversityInput>
  }

  export type ProgramStudiUpdateManyWithWhereWithoutUniversityInput = {
    where: ProgramStudiScalarWhereInput
    data: XOR<ProgramStudiUpdateManyMutationInput, ProgramStudiUncheckedUpdateManyWithoutUniversityInput>
  }

  export type ProgramStudiScalarWhereInput = {
    AND?: ProgramStudiScalarWhereInput | ProgramStudiScalarWhereInput[]
    OR?: ProgramStudiScalarWhereInput[]
    NOT?: ProgramStudiScalarWhereInput | ProgramStudiScalarWhereInput[]
    ProgramStudiId?: StringFilter<"ProgramStudi"> | string
    UniversityId?: StringFilter<"ProgramStudi"> | string
    Nama?: StringFilter<"ProgramStudi"> | string
    Jenjang?: StringNullableFilter<"ProgramStudi"> | string | null
    Akreditasi?: StringFilter<"ProgramStudi"> | string
    CreatedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"ProgramStudi"> | Date | string | null
  }

  export type UniversityJabatanUpsertWithWhereUniqueWithoutUniversityInput = {
    where: UniversityJabatanWhereUniqueInput
    update: XOR<UniversityJabatanUpdateWithoutUniversityInput, UniversityJabatanUncheckedUpdateWithoutUniversityInput>
    create: XOR<UniversityJabatanCreateWithoutUniversityInput, UniversityJabatanUncheckedCreateWithoutUniversityInput>
  }

  export type UniversityJabatanUpdateWithWhereUniqueWithoutUniversityInput = {
    where: UniversityJabatanWhereUniqueInput
    data: XOR<UniversityJabatanUpdateWithoutUniversityInput, UniversityJabatanUncheckedUpdateWithoutUniversityInput>
  }

  export type UniversityJabatanUpdateManyWithWhereWithoutUniversityInput = {
    where: UniversityJabatanScalarWhereInput
    data: XOR<UniversityJabatanUpdateManyMutationInput, UniversityJabatanUncheckedUpdateManyWithoutUniversityInput>
  }

  export type UniversityJabatanScalarWhereInput = {
    AND?: UniversityJabatanScalarWhereInput | UniversityJabatanScalarWhereInput[]
    OR?: UniversityJabatanScalarWhereInput[]
    NOT?: UniversityJabatanScalarWhereInput | UniversityJabatanScalarWhereInput[]
    UniversityJabatanId?: StringFilter<"UniversityJabatan"> | string
    UniversityId?: StringFilter<"UniversityJabatan"> | string
    Nama?: StringFilter<"UniversityJabatan"> | string
    Keterangan?: StringNullableFilter<"UniversityJabatan"> | string | null
    CreatedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"UniversityJabatan"> | Date | string | null
  }

  export type UniversitySosialMediaUpsertWithWhereUniqueWithoutUniversityInput = {
    where: UniversitySosialMediaWhereUniqueInput
    update: XOR<UniversitySosialMediaUpdateWithoutUniversityInput, UniversitySosialMediaUncheckedUpdateWithoutUniversityInput>
    create: XOR<UniversitySosialMediaCreateWithoutUniversityInput, UniversitySosialMediaUncheckedCreateWithoutUniversityInput>
  }

  export type UniversitySosialMediaUpdateWithWhereUniqueWithoutUniversityInput = {
    where: UniversitySosialMediaWhereUniqueInput
    data: XOR<UniversitySosialMediaUpdateWithoutUniversityInput, UniversitySosialMediaUncheckedUpdateWithoutUniversityInput>
  }

  export type UniversitySosialMediaUpdateManyWithWhereWithoutUniversityInput = {
    where: UniversitySosialMediaScalarWhereInput
    data: XOR<UniversitySosialMediaUpdateManyMutationInput, UniversitySosialMediaUncheckedUpdateManyWithoutUniversityInput>
  }

  export type UniversitySosialMediaScalarWhereInput = {
    AND?: UniversitySosialMediaScalarWhereInput | UniversitySosialMediaScalarWhereInput[]
    OR?: UniversitySosialMediaScalarWhereInput[]
    NOT?: UniversitySosialMediaScalarWhereInput | UniversitySosialMediaScalarWhereInput[]
    UniversitySosialMediaId?: StringFilter<"UniversitySosialMedia"> | string
    UniversityId?: StringFilter<"UniversitySosialMedia"> | string
    Nama?: StringFilter<"UniversitySosialMedia"> | string
    Username?: StringNullableFilter<"UniversitySosialMedia"> | string | null
    Icon?: StringNullableFilter<"UniversitySosialMedia"> | string | null
  }

  export type UniversityInformasiUpsertWithWhereUniqueWithoutUniversityInput = {
    where: UniversityInformasiWhereUniqueInput
    update: XOR<UniversityInformasiUpdateWithoutUniversityInput, UniversityInformasiUncheckedUpdateWithoutUniversityInput>
    create: XOR<UniversityInformasiCreateWithoutUniversityInput, UniversityInformasiUncheckedCreateWithoutUniversityInput>
  }

  export type UniversityInformasiUpdateWithWhereUniqueWithoutUniversityInput = {
    where: UniversityInformasiWhereUniqueInput
    data: XOR<UniversityInformasiUpdateWithoutUniversityInput, UniversityInformasiUncheckedUpdateWithoutUniversityInput>
  }

  export type UniversityInformasiUpdateManyWithWhereWithoutUniversityInput = {
    where: UniversityInformasiScalarWhereInput
    data: XOR<UniversityInformasiUpdateManyMutationInput, UniversityInformasiUncheckedUpdateManyWithoutUniversityInput>
  }

  export type UniversityInformasiScalarWhereInput = {
    AND?: UniversityInformasiScalarWhereInput | UniversityInformasiScalarWhereInput[]
    OR?: UniversityInformasiScalarWhereInput[]
    NOT?: UniversityInformasiScalarWhereInput | UniversityInformasiScalarWhereInput[]
    UniversityInformasiId?: StringFilter<"UniversityInformasi"> | string
    UniversityId?: StringFilter<"UniversityInformasi"> | string
    Nama?: StringFilter<"UniversityInformasi"> | string
    Informasi?: StringNullableFilter<"UniversityInformasi"> | string | null
  }

  export type UniversityCreateWithoutUniversitySosialMediaInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUniversityInput
    ProgramStudi?: ProgramStudiCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutUniversitySosialMediaInput = {
    UniversityId?: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi?: ProgramStudiUncheckedCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanUncheckedCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutUniversitySosialMediaInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutUniversitySosialMediaInput, UniversityUncheckedCreateWithoutUniversitySosialMediaInput>
  }

  export type UniversityUpsertWithoutUniversitySosialMediaInput = {
    update: XOR<UniversityUpdateWithoutUniversitySosialMediaInput, UniversityUncheckedUpdateWithoutUniversitySosialMediaInput>
    create: XOR<UniversityCreateWithoutUniversitySosialMediaInput, UniversityUncheckedCreateWithoutUniversitySosialMediaInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutUniversitySosialMediaInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutUniversitySosialMediaInput, UniversityUncheckedUpdateWithoutUniversitySosialMediaInput>
  }

  export type UniversityUpdateWithoutUniversitySosialMediaInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUniversityNestedInput
    ProgramStudi?: ProgramStudiUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutUniversitySosialMediaInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityCreateWithoutUniversityInformasiInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUniversityInput
    ProgramStudi?: ProgramStudiCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutUniversityInformasiInput = {
    UniversityId?: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi?: ProgramStudiUncheckedCreateNestedManyWithoutUniversityInput
    UniversityJabatan?: UniversityJabatanUncheckedCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutUniversityInformasiInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutUniversityInformasiInput, UniversityUncheckedCreateWithoutUniversityInformasiInput>
  }

  export type UniversityUpsertWithoutUniversityInformasiInput = {
    update: XOR<UniversityUpdateWithoutUniversityInformasiInput, UniversityUncheckedUpdateWithoutUniversityInformasiInput>
    create: XOR<UniversityCreateWithoutUniversityInformasiInput, UniversityUncheckedCreateWithoutUniversityInformasiInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutUniversityInformasiInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutUniversityInformasiInput, UniversityUncheckedUpdateWithoutUniversityInformasiInput>
  }

  export type UniversityUpdateWithoutUniversityInformasiInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUniversityNestedInput
    ProgramStudi?: ProgramStudiUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutUniversityInformasiInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUncheckedUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityCreateWithoutUniversityJabatanInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUniversityInput
    ProgramStudi?: ProgramStudiCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutUniversityJabatanInput = {
    UniversityId?: string
    AlamatId: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    ProgramStudi?: ProgramStudiUncheckedCreateNestedManyWithoutUniversityInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedCreateNestedManyWithoutUniversityInput
    UniversityInformasi?: UniversityInformasiUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutUniversityJabatanInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutUniversityJabatanInput, UniversityUncheckedCreateWithoutUniversityJabatanInput>
  }

  export type UniversityJabatanOrangCreateWithoutUniversityJabatanInput = {
    UniversityJabatanOrangId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput = {
    UniversityJabatanOrangId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanOrangCreateOrConnectWithoutUniversityJabatanInput = {
    where: UniversityJabatanOrangWhereUniqueInput
    create: XOR<UniversityJabatanOrangCreateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput>
  }

  export type UniversityJabatanOrangCreateManyUniversityJabatanInputEnvelope = {
    data: UniversityJabatanOrangCreateManyUniversityJabatanInput | UniversityJabatanOrangCreateManyUniversityJabatanInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutUniversityJabatanInput = {
    update: XOR<UniversityUpdateWithoutUniversityJabatanInput, UniversityUncheckedUpdateWithoutUniversityJabatanInput>
    create: XOR<UniversityCreateWithoutUniversityJabatanInput, UniversityUncheckedCreateWithoutUniversityJabatanInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutUniversityJabatanInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutUniversityJabatanInput, UniversityUncheckedUpdateWithoutUniversityJabatanInput>
  }

  export type UniversityUpdateWithoutUniversityJabatanInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUniversityNestedInput
    ProgramStudi?: ProgramStudiUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutUniversityJabatanInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUncheckedUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityJabatanOrangUpsertWithWhereUniqueWithoutUniversityJabatanInput = {
    where: UniversityJabatanOrangWhereUniqueInput
    update: XOR<UniversityJabatanOrangUpdateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedUpdateWithoutUniversityJabatanInput>
    create: XOR<UniversityJabatanOrangCreateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedCreateWithoutUniversityJabatanInput>
  }

  export type UniversityJabatanOrangUpdateWithWhereUniqueWithoutUniversityJabatanInput = {
    where: UniversityJabatanOrangWhereUniqueInput
    data: XOR<UniversityJabatanOrangUpdateWithoutUniversityJabatanInput, UniversityJabatanOrangUncheckedUpdateWithoutUniversityJabatanInput>
  }

  export type UniversityJabatanOrangUpdateManyWithWhereWithoutUniversityJabatanInput = {
    where: UniversityJabatanOrangScalarWhereInput
    data: XOR<UniversityJabatanOrangUpdateManyMutationInput, UniversityJabatanOrangUncheckedUpdateManyWithoutUniversityJabatanInput>
  }

  export type UniversityJabatanOrangScalarWhereInput = {
    AND?: UniversityJabatanOrangScalarWhereInput | UniversityJabatanOrangScalarWhereInput[]
    OR?: UniversityJabatanOrangScalarWhereInput[]
    NOT?: UniversityJabatanOrangScalarWhereInput | UniversityJabatanOrangScalarWhereInput[]
    UniversityJabatanOrangId?: StringFilter<"UniversityJabatanOrang"> | string
    UniversityJabatanId?: StringFilter<"UniversityJabatanOrang"> | string
    Nama?: StringFilter<"UniversityJabatanOrang"> | string
    Keterangan?: StringNullableFilter<"UniversityJabatanOrang"> | string | null
    CreatedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
    DeletedAt?: DateTimeNullableFilter<"UniversityJabatanOrang"> | Date | string | null
  }

  export type UniversityJabatanCreateWithoutUniversityJabatanOrangInput = {
    UniversityJabatanId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    University: UniversityCreateNestedOneWithoutUniversityJabatanInput
  }

  export type UniversityJabatanUncheckedCreateWithoutUniversityJabatanOrangInput = {
    UniversityJabatanId?: string
    UniversityId: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanCreateOrConnectWithoutUniversityJabatanOrangInput = {
    where: UniversityJabatanWhereUniqueInput
    create: XOR<UniversityJabatanCreateWithoutUniversityJabatanOrangInput, UniversityJabatanUncheckedCreateWithoutUniversityJabatanOrangInput>
  }

  export type UniversityJabatanUpsertWithoutUniversityJabatanOrangInput = {
    update: XOR<UniversityJabatanUpdateWithoutUniversityJabatanOrangInput, UniversityJabatanUncheckedUpdateWithoutUniversityJabatanOrangInput>
    create: XOR<UniversityJabatanCreateWithoutUniversityJabatanOrangInput, UniversityJabatanUncheckedCreateWithoutUniversityJabatanOrangInput>
    where?: UniversityJabatanWhereInput
  }

  export type UniversityJabatanUpdateToOneWithWhereWithoutUniversityJabatanOrangInput = {
    where?: UniversityJabatanWhereInput
    data: XOR<UniversityJabatanUpdateWithoutUniversityJabatanOrangInput, UniversityJabatanUncheckedUpdateWithoutUniversityJabatanOrangInput>
  }

  export type UniversityJabatanUpdateWithoutUniversityJabatanOrangInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    University?: UniversityUpdateOneRequiredWithoutUniversityJabatanNestedInput
  }

  export type UniversityJabatanUncheckedUpdateWithoutUniversityJabatanOrangInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AlamatCreateWithoutUserInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
    Desa: DesaCreateNestedOneWithoutAlamatInput
    InstitusiLama?: InstitusiLamaCreateNestedManyWithoutAlamatInput
    University?: UniversityCreateNestedManyWithoutAlamatInput
  }

  export type AlamatUncheckedCreateWithoutUserInput = {
    AlamatId?: string
    DesaId: string
    Alamat: string
    KodePos: string
    InstitusiLama?: InstitusiLamaUncheckedCreateNestedManyWithoutAlamatInput
    University?: UniversityUncheckedCreateNestedManyWithoutAlamatInput
  }

  export type AlamatCreateOrConnectWithoutUserInput = {
    where: AlamatWhereUniqueInput
    create: XOR<AlamatCreateWithoutUserInput, AlamatUncheckedCreateWithoutUserInput>
  }

  export type MahasiswaCreateWithoutUserInput = {
    MahasiswaId?: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran?: PendaftaranCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaUncheckedCreateWithoutUserInput = {
    MahasiswaId?: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    Pendaftaran?: PendaftaranUncheckedCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaCreateOrConnectWithoutUserInput = {
    where: MahasiswaWhereUniqueInput
    create: XOR<MahasiswaCreateWithoutUserInput, MahasiswaUncheckedCreateWithoutUserInput>
  }

  export type MahasiswaCreateManyUserInputEnvelope = {
    data: MahasiswaCreateManyUserInput | MahasiswaCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserHasPermissionsCreateWithoutUserInput = {
    Permission: PermissionCreateNestedOneWithoutUserHasPermissionsInput
  }

  export type UserHasPermissionsUncheckedCreateWithoutUserInput = {
    PermissionId: string
  }

  export type UserHasPermissionsCreateOrConnectWithoutUserInput = {
    where: UserHasPermissionsWhereUniqueInput
    create: XOR<UserHasPermissionsCreateWithoutUserInput, UserHasPermissionsUncheckedCreateWithoutUserInput>
  }

  export type UserHasPermissionsCreateManyUserInputEnvelope = {
    data: UserHasPermissionsCreateManyUserInput | UserHasPermissionsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserHasRolesCreateWithoutUserInput = {
    Role: RoleCreateNestedOneWithoutUserHasRolesInput
  }

  export type UserHasRolesUncheckedCreateWithoutUserInput = {
    RoleId: string
  }

  export type UserHasRolesCreateOrConnectWithoutUserInput = {
    where: UserHasRolesWhereUniqueInput
    create: XOR<UserHasRolesCreateWithoutUserInput, UserHasRolesUncheckedCreateWithoutUserInput>
  }

  export type UserHasRolesCreateManyUserInputEnvelope = {
    data: UserHasRolesCreateManyUserInput | UserHasRolesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserloginCreateWithoutUserInput = {
    UserloginId?: string
    Username: string
    Password: string
    Credential: string
  }

  export type UserloginUncheckedCreateWithoutUserInput = {
    UserloginId?: string
    Username: string
    Password: string
    Credential: string
  }

  export type UserloginCreateOrConnectWithoutUserInput = {
    where: UserloginWhereUniqueInput
    create: XOR<UserloginCreateWithoutUserInput, UserloginUncheckedCreateWithoutUserInput>
  }

  export type UserloginCreateManyUserInputEnvelope = {
    data: UserloginCreateManyUserInput | UserloginCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AlamatUpsertWithoutUserInput = {
    update: XOR<AlamatUpdateWithoutUserInput, AlamatUncheckedUpdateWithoutUserInput>
    create: XOR<AlamatCreateWithoutUserInput, AlamatUncheckedCreateWithoutUserInput>
    where?: AlamatWhereInput
  }

  export type AlamatUpdateToOneWithWhereWithoutUserInput = {
    where?: AlamatWhereInput
    data: XOR<AlamatUpdateWithoutUserInput, AlamatUncheckedUpdateWithoutUserInput>
  }

  export type AlamatUpdateWithoutUserInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUpdateOneRequiredWithoutAlamatNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutAlamatNestedInput
    University?: UniversityUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutUserInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    DesaId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutAlamatNestedInput
    University?: UniversityUncheckedUpdateManyWithoutAlamatNestedInput
  }

  export type MahasiswaUpsertWithWhereUniqueWithoutUserInput = {
    where: MahasiswaWhereUniqueInput
    update: XOR<MahasiswaUpdateWithoutUserInput, MahasiswaUncheckedUpdateWithoutUserInput>
    create: XOR<MahasiswaCreateWithoutUserInput, MahasiswaUncheckedCreateWithoutUserInput>
  }

  export type MahasiswaUpdateWithWhereUniqueWithoutUserInput = {
    where: MahasiswaWhereUniqueInput
    data: XOR<MahasiswaUpdateWithoutUserInput, MahasiswaUncheckedUpdateWithoutUserInput>
  }

  export type MahasiswaUpdateManyWithWhereWithoutUserInput = {
    where: MahasiswaScalarWhereInput
    data: XOR<MahasiswaUpdateManyMutationInput, MahasiswaUncheckedUpdateManyWithoutUserInput>
  }

  export type MahasiswaScalarWhereInput = {
    AND?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
    OR?: MahasiswaScalarWhereInput[]
    NOT?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
    MahasiswaId?: StringFilter<"Mahasiswa"> | string
    UserId?: StringFilter<"Mahasiswa"> | string
    StatusPerkawinan?: EnumStatusPerkawinanFilter<"Mahasiswa"> | $Enums.StatusPerkawinan
    CreatedAt?: DateTimeNullableFilter<"Mahasiswa"> | Date | string | null
    UpdatedAt?: DateTimeNullableFilter<"Mahasiswa"> | Date | string | null
  }

  export type UserHasPermissionsUpsertWithWhereUniqueWithoutUserInput = {
    where: UserHasPermissionsWhereUniqueInput
    update: XOR<UserHasPermissionsUpdateWithoutUserInput, UserHasPermissionsUncheckedUpdateWithoutUserInput>
    create: XOR<UserHasPermissionsCreateWithoutUserInput, UserHasPermissionsUncheckedCreateWithoutUserInput>
  }

  export type UserHasPermissionsUpdateWithWhereUniqueWithoutUserInput = {
    where: UserHasPermissionsWhereUniqueInput
    data: XOR<UserHasPermissionsUpdateWithoutUserInput, UserHasPermissionsUncheckedUpdateWithoutUserInput>
  }

  export type UserHasPermissionsUpdateManyWithWhereWithoutUserInput = {
    where: UserHasPermissionsScalarWhereInput
    data: XOR<UserHasPermissionsUpdateManyMutationInput, UserHasPermissionsUncheckedUpdateManyWithoutUserInput>
  }

  export type UserHasRolesUpsertWithWhereUniqueWithoutUserInput = {
    where: UserHasRolesWhereUniqueInput
    update: XOR<UserHasRolesUpdateWithoutUserInput, UserHasRolesUncheckedUpdateWithoutUserInput>
    create: XOR<UserHasRolesCreateWithoutUserInput, UserHasRolesUncheckedCreateWithoutUserInput>
  }

  export type UserHasRolesUpdateWithWhereUniqueWithoutUserInput = {
    where: UserHasRolesWhereUniqueInput
    data: XOR<UserHasRolesUpdateWithoutUserInput, UserHasRolesUncheckedUpdateWithoutUserInput>
  }

  export type UserHasRolesUpdateManyWithWhereWithoutUserInput = {
    where: UserHasRolesScalarWhereInput
    data: XOR<UserHasRolesUpdateManyMutationInput, UserHasRolesUncheckedUpdateManyWithoutUserInput>
  }

  export type UserloginUpsertWithWhereUniqueWithoutUserInput = {
    where: UserloginWhereUniqueInput
    update: XOR<UserloginUpdateWithoutUserInput, UserloginUncheckedUpdateWithoutUserInput>
    create: XOR<UserloginCreateWithoutUserInput, UserloginUncheckedCreateWithoutUserInput>
  }

  export type UserloginUpdateWithWhereUniqueWithoutUserInput = {
    where: UserloginWhereUniqueInput
    data: XOR<UserloginUpdateWithoutUserInput, UserloginUncheckedUpdateWithoutUserInput>
  }

  export type UserloginUpdateManyWithWhereWithoutUserInput = {
    where: UserloginScalarWhereInput
    data: XOR<UserloginUpdateManyMutationInput, UserloginUncheckedUpdateManyWithoutUserInput>
  }

  export type UserloginScalarWhereInput = {
    AND?: UserloginScalarWhereInput | UserloginScalarWhereInput[]
    OR?: UserloginScalarWhereInput[]
    NOT?: UserloginScalarWhereInput | UserloginScalarWhereInput[]
    UserloginId?: StringFilter<"Userlogin"> | string
    UserId?: StringFilter<"Userlogin"> | string
    Username?: StringFilter<"Userlogin"> | string
    Password?: StringFilter<"Userlogin"> | string
    Credential?: StringFilter<"Userlogin"> | string
  }

  export type UserCreateWithoutUserloginInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Alamat: AlamatCreateNestedOneWithoutUserInput
    Mahasiswa?: MahasiswaCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserloginInput = {
    UserId?: string
    AlamatId: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
    Mahasiswa?: MahasiswaUncheckedCreateNestedManyWithoutUserInput
    UserHasPermissions?: UserHasPermissionsUncheckedCreateNestedManyWithoutUserInput
    UserHasRoles?: UserHasRolesUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserloginInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserloginInput, UserUncheckedCreateWithoutUserloginInput>
  }

  export type UserUpsertWithoutUserloginInput = {
    update: XOR<UserUpdateWithoutUserloginInput, UserUncheckedUpdateWithoutUserloginInput>
    create: XOR<UserCreateWithoutUserloginInput, UserUncheckedCreateWithoutUserloginInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserloginInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserloginInput, UserUncheckedUpdateWithoutUserloginInput>
  }

  export type UserUpdateWithoutUserloginInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutUserNestedInput
    Mahasiswa?: MahasiswaUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserloginInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUncheckedUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InstitusiLamaCreateManyAlamatInput = {
    InstitusiLamaId?: string
    PendaftaranId: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type UniversityCreateManyAlamatInput = {
    UniversityId?: string
    Nama: string
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UserCreateManyAlamatInput = {
    UserId?: string
    Nama: string
    Email: string
    EmailVerifiedAt?: Date | string | null
    TempatLahir?: string | null
    TanggalLahir?: Date | string | null
    JenisKelamin?: $Enums.JenisKelamin
    PendidikanTerakhir?: $Enums.Jenjang
    Avatar?: string | null
    Agama?: string | null
    Telepon?: string | null
    NomorWa?: string | null
    NomorHp?: string | null
    RememberToken?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type InstitusiLamaUpdateWithoutAlamatInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutInstitusiLamaNestedInput
  }

  export type InstitusiLamaUncheckedUpdateWithoutAlamatInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitusiLamaUncheckedUpdateManyWithoutAlamatInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityUpdateWithoutAlamatInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutAlamatInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityJabatan?: UniversityJabatanUncheckedUpdateManyWithoutUniversityNestedInput
    UniversitySosialMedia?: UniversitySosialMediaUncheckedUpdateManyWithoutUniversityNestedInput
    UniversityInformasi?: UniversityInformasiUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateManyWithoutAlamatInput = {
    UniversityId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUpdateWithoutAlamatInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAlamatInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Mahasiswa?: MahasiswaUncheckedUpdateManyWithoutUserNestedInput
    UserHasPermissions?: UserHasPermissionsUncheckedUpdateManyWithoutUserNestedInput
    UserHasRoles?: UserHasRolesUncheckedUpdateManyWithoutUserNestedInput
    Userlogin?: UserloginUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutAlamatInput = {
    UserId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Email?: StringFieldUpdateOperationsInput | string
    EmailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TempatLahir?: NullableStringFieldUpdateOperationsInput | string | null
    TanggalLahir?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisKelamin?: EnumJenisKelaminFieldUpdateOperationsInput | $Enums.JenisKelamin
    PendidikanTerakhir?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    Agama?: NullableStringFieldUpdateOperationsInput | string | null
    Telepon?: NullableStringFieldUpdateOperationsInput | string | null
    NomorWa?: NullableStringFieldUpdateOperationsInput | string | null
    NomorHp?: NullableStringFieldUpdateOperationsInput | string | null
    RememberToken?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikCreateManyAsesorInput = {
    AsesorAkademikId?: string
    Pangkat: string
    JabatanFungsionalAkademik: string
    NipNidn: string
    NamaPerguruanTinggi: string
    AlamatPerguruanTinggi?: string | null
    PendidikanTerakhirBidangKeilmuan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorPraktisiCreateManyAsesorInput = {
    AsesorPraktisiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    Jabatan: string
    AlamatKantor?: string | null
    NamaInstansi: string
    JabatanInstansi: string
    BidangKeahlian: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AssesorMahasiswaCreateManyAsesorInput = {
    AssesorMahasiswaId?: string
    PendaftaranId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AsesorAkademikUpdateWithoutAsesorInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiUpdateManyWithoutAsesorAkademikNestedInput
  }

  export type AsesorAkademikUncheckedUpdateWithoutAsesorInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademikKeanggotaanAsosiasi?: AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyWithoutAsesorAkademikNestedInput
  }

  export type AsesorAkademikUncheckedUpdateManyWithoutAsesorInput = {
    AsesorAkademikId?: StringFieldUpdateOperationsInput | string
    Pangkat?: StringFieldUpdateOperationsInput | string
    JabatanFungsionalAkademik?: StringFieldUpdateOperationsInput | string
    NipNidn?: StringFieldUpdateOperationsInput | string
    NamaPerguruanTinggi?: StringFieldUpdateOperationsInput | string
    AlamatPerguruanTinggi?: NullableStringFieldUpdateOperationsInput | string | null
    PendidikanTerakhirBidangKeilmuan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorPraktisiUpdateWithoutAsesorInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorPraktisiUncheckedUpdateWithoutAsesorInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorPraktisiUncheckedUpdateManyWithoutAsesorInput = {
    AsesorPraktisiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    AlamatKantor?: NullableStringFieldUpdateOperationsInput | string | null
    NamaInstansi?: StringFieldUpdateOperationsInput | string
    JabatanInstansi?: StringFieldUpdateOperationsInput | string
    BidangKeahlian?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AssesorMahasiswaUpdateWithoutAsesorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutAssesorMahasiswaNestedInput
    SkRektorAssesor?: SkRektorAssesorUpdateManyWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaUncheckedUpdateWithoutAsesorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedUpdateManyWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaUncheckedUpdateManyWithoutAsesorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiCreateManyAsesorAkademikInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: string
    NamaAsosiasi: string
    NomorKeanggotaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUpdateWithoutAsesorAkademikInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateWithoutAsesorAkademikInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AsesorAkademikKeanggotaanAsosiasiUncheckedUpdateManyWithoutAsesorAkademikInput = {
    AsesorAkademikKeanggotaanAsosiasiId?: StringFieldUpdateOperationsInput | string
    NamaAsosiasi?: StringFieldUpdateOperationsInput | string
    NomorKeanggotaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorAssesorCreateManyAssesorMahasiswaInput = {
    SkRektorId: string
  }

  export type SkRektorAssesorUpdateWithoutAssesorMahasiswaInput = {
    SkRektor?: SkRektorUpdateOneRequiredWithoutSkRektorAssesorNestedInput
  }

  export type SkRektorAssesorUncheckedUpdateWithoutAssesorMahasiswaInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorAssesorUncheckedUpdateManyWithoutAssesorMahasiswaInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
  }

  export type BuktiFormEvaluasiDiriCreateManyBuktiFormInput = {
    EvaluasiDiriId: string
  }

  export type BuktiFormEvaluasiDiriUpdateWithoutBuktiFormInput = {
    EvaluasiDiri?: EvaluasiDiriUpdateOneRequiredWithoutBuktiFormEvaluasiDiriNestedInput
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateWithoutBuktiFormInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutBuktiFormInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluasiDiriCreateManyCapaianPembelajaranInput = {
    EvaluasiDiriId?: string
    MataKuliahMahasiswaId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type EvaluasiDiriUpdateWithoutCapaianPembelajaranInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateWithoutCapaianPembelajaranInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateManyWithoutCapaianPembelajaranInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProvinsiCreateManyCountryInput = {
    ProvinsiId?: string
    Nama: string
  }

  export type ProvinsiUpdateWithoutCountryInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kabupaten?: KabupatenUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateWithoutCountryInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kabupaten?: KabupatenUncheckedUpdateManyWithoutProvinsiNestedInput
  }

  export type ProvinsiUncheckedUpdateManyWithoutCountryInput = {
    ProvinsiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type AlamatCreateManyDesaInput = {
    AlamatId?: string
    Alamat: string
    KodePos: string
  }

  export type AlamatUpdateWithoutDesaInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    InstitusiLama?: InstitusiLamaUpdateManyWithoutAlamatNestedInput
    University?: UniversityUpdateManyWithoutAlamatNestedInput
    User?: UserUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateWithoutDesaInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutAlamatNestedInput
    University?: UniversityUncheckedUpdateManyWithoutAlamatNestedInput
    User?: UserUncheckedUpdateManyWithoutAlamatNestedInput
  }

  export type AlamatUncheckedUpdateManyWithoutDesaInput = {
    AlamatId?: StringFieldUpdateOperationsInput | string
    Alamat?: StringFieldUpdateOperationsInput | string
    KodePos?: StringFieldUpdateOperationsInput | string
  }

  export type BuktiFormEvaluasiDiriCreateManyEvaluasiDiriInput = {
    BuktiFormId: string
  }

  export type HasilAssesmenCreateManyEvaluasiDiriInput = {
    HasilAssesmenId?: string
    Valid?: boolean
    Autentik?: boolean
    Terkini?: boolean
    Memadai?: boolean
    Assesmen?: string | null
    Nilai?: number
    Diakui?: boolean
    TanggalAssesmen?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type BuktiFormEvaluasiDiriUpdateWithoutEvaluasiDiriInput = {
    BuktiForm?: BuktiFormUpdateOneRequiredWithoutBuktiFormEvaluasiDiriNestedInput
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateWithoutEvaluasiDiriInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
  }

  export type BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
  }

  export type HasilAssesmenUpdateWithoutEvaluasiDiriInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkorAssesmen?: SkorAssesmenUpdateManyWithoutHasilAssesmenNestedInput
  }

  export type HasilAssesmenUncheckedUpdateWithoutEvaluasiDiriInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkorAssesmen?: SkorAssesmenUncheckedUpdateManyWithoutHasilAssesmenNestedInput
  }

  export type HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriInput = {
    HasilAssesmenId?: StringFieldUpdateOperationsInput | string
    Valid?: BoolFieldUpdateOperationsInput | boolean
    Autentik?: BoolFieldUpdateOperationsInput | boolean
    Terkini?: BoolFieldUpdateOperationsInput | boolean
    Memadai?: BoolFieldUpdateOperationsInput | boolean
    Assesmen?: NullableStringFieldUpdateOperationsInput | string | null
    Nilai?: FloatFieldUpdateOperationsInput | number
    Diakui?: BoolFieldUpdateOperationsInput | boolean
    TanggalAssesmen?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkorAssesmenCreateManyHasilAssesmenInput = {
    SkorAssesmenId?: string
    Portofolio?: number
    Tulis?: number
    Wawancara?: number
    Demo?: number
    SkorRataRata?: number
    NilaiHuruf?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkorAssesmenUpdateWithoutHasilAssesmenInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkorAssesmenUncheckedUpdateWithoutHasilAssesmenInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkorAssesmenUncheckedUpdateManyWithoutHasilAssesmenInput = {
    SkorAssesmenId?: StringFieldUpdateOperationsInput | string
    Portofolio?: FloatFieldUpdateOperationsInput | number
    Tulis?: FloatFieldUpdateOperationsInput | number
    Wawancara?: FloatFieldUpdateOperationsInput | number
    Demo?: FloatFieldUpdateOperationsInput | number
    SkorRataRata?: FloatFieldUpdateOperationsInput | number
    NilaiHuruf?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BuktiFormCreateManyJenisDokumenInput = {
    BuktiFormId?: string
    PendaftaranId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type BuktiFormUpdateWithoutJenisDokumenInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutBuktiFormNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutBuktiFormNestedInput
  }

  export type BuktiFormUncheckedUpdateWithoutJenisDokumenInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutBuktiFormNestedInput
  }

  export type BuktiFormUncheckedUpdateManyWithoutJenisDokumenInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KecamatanCreateManyKabupatenInput = {
    KecamatanId?: string
    Nama: string
  }

  export type KecamatanUpdateWithoutKabupatenInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateWithoutKabupatenInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Desa?: DesaUncheckedUpdateManyWithoutKecamatanNestedInput
  }

  export type KecamatanUncheckedUpdateManyWithoutKabupatenInput = {
    KecamatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type DesaCreateManyKecamatanInput = {
    DesaId?: string
    Nama: string
  }

  export type DesaUpdateWithoutKecamatanInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Alamat?: AlamatUpdateManyWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateWithoutKecamatanInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Alamat?: AlamatUncheckedUpdateManyWithoutDesaNestedInput
  }

  export type DesaUncheckedUpdateManyWithoutKecamatanInput = {
    DesaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type PendaftaranCreateManyMahasiswaInput = {
    PendaftaranId?: string
    KodePendaftar: string
    NoUjian: string
    Periode: string
    Gelombang: string
    SistemKuliah?: $Enums.SistemKuliah
    JalurPendaftaran: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PendaftaranUpdateWithoutMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateWithoutMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    BuktiForm?: BuktiFormUncheckedUpdateManyWithoutPendaftaranNestedInput
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutPendaftaranNestedInput
    InformasiKependudukan?: InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranNestedInput
    InstitusiLama?: InstitusiLamaUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaKonferensi?: MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaOrganisasiProfesi?: MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPelatihanProfessional?: MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPendidikan?: MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaPiagam?: MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranNestedInput
    MahasiswaRiwayatPekerjaan?: MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    OrangTua?: OrangTuaUncheckedUpdateManyWithoutPendaftaranNestedInput
    PekerjaanMahasiswa?: PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
    Pesantren?: PesantrenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SanggahanAssesmen?: SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranNestedInput
    SkRektorMahasiswa?: SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranNestedInput
  }

  export type PendaftaranUncheckedUpdateManyWithoutMahasiswaInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    KodePendaftar?: StringFieldUpdateOperationsInput | string
    NoUjian?: StringFieldUpdateOperationsInput | string
    Periode?: StringFieldUpdateOperationsInput | string
    Gelombang?: StringFieldUpdateOperationsInput | string
    SistemKuliah?: EnumSistemKuliahFieldUpdateOperationsInput | $Enums.SistemKuliah
    JalurPendaftaran?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CapaianPembelajaranCreateManyMataKuliahInput = {
    CapaianPembelajaranId?: string
    Nama: string
    Urutan: number
    Active?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type MataKuliahMahasiswaCreateManyMataKuliahInput = {
    MataKuliahMahasiswaId?: string
    PendaftaranId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type CapaianPembelajaranUpdateWithoutMataKuliahInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUpdateManyWithoutCapaianPembelajaranNestedInput
  }

  export type CapaianPembelajaranUncheckedUpdateWithoutMataKuliahInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedUpdateManyWithoutCapaianPembelajaranNestedInput
  }

  export type CapaianPembelajaranUncheckedUpdateManyWithoutMataKuliahInput = {
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Active?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahMahasiswaUpdateWithoutMataKuliahInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    EvaluasiDiri?: EvaluasiDiriUpdateManyWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateWithoutMataKuliahInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutMataKuliahInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EvaluasiDiriCreateManyMataKuliahMahasiswaInput = {
    EvaluasiDiriId?: string
    CapaianPembelajaranId: string
    ProfiensiPengetahuan?: $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenMkCreateManyMataKuliahMahasiswaInput = {
    SanggahanAssesmenMkId?: string
    SanggahanAssesmenId: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type EvaluasiDiriUpdateWithoutMataKuliahMahasiswaInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUpdateOneRequiredWithoutEvaluasiDiriNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateWithoutMataKuliahMahasiswaInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
    HasilAssesmen?: HasilAssesmenUncheckedUpdateManyWithoutEvaluasiDiriNestedInput
  }

  export type EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaInput = {
    EvaluasiDiriId?: StringFieldUpdateOperationsInput | string
    CapaianPembelajaranId?: StringFieldUpdateOperationsInput | string
    ProfiensiPengetahuan?: EnumProfiensiPengetahuanFieldUpdateOperationsInput | $Enums.ProfiensiPengetahuan
    TanggalPengesahan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenMkUpdateWithoutMataKuliahMahasiswaInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmen?: SanggahanAssesmenUpdateOneRequiredWithoutSanggahanAssesmenMkNestedInput
  }

  export type SanggahanAssesmenMkUncheckedUpdateWithoutMataKuliahMahasiswaInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AssesorMahasiswaCreateManyPendaftaranInput = {
    AssesorMahasiswaId?: string
    AsesorId: string
    Urutan: number
    Confirmation?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type BuktiFormCreateManyPendaftaranInput = {
    BuktiFormId?: string
    JenisDokumenId: string
    NamaFile: string
    NamaDokumen: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type DaftarUlangCreateManyPendaftaranInput = {
    DaftarUlangId?: string
    ProgramStudiId: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InformasiKependudukanCreateManyPendaftaranInput = {
    InformasiKependudukanId?: string
    NoKk: string
    NoNik: string
    Suku: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type InstitusiLamaCreateManyPendaftaranInput = {
    InstitusiLamaId?: string
    AlamatId: string
    Jenjang?: $Enums.Jenjang
    JenisInstitusi: string
    NamaInstitusi: string
    Jurusan: string
    Nisn: string
    Npsn: string
    TahunLulus: number
    NilaiLulusan: number
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaKonferensiCreateManyPendaftaranInput = {
    MahasiswaKonferensiId?: string
    Tahun: number
    JudulSeminar: string
    Penyelenggara: string
    StatusKeikutsertaan?: $Enums.StatusKeikutsertaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaOrganisasiProfesiCreateManyPendaftaranInput = {
    MahasiswaOrganisasiProfesiId?: string
    Tahun: number
    NamaOrganisasi: string
    JenjangAnggotaJabatan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPelatihanProfessionalCreateManyPendaftaranInput = {
    MahasiswaPelatihanProfessionalId?: string
    NamaPelatihan: string
    Penyelenggara: string
    Mulai: Date | string
    Selesai?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPendidikanCreateManyPendaftaranInput = {
    MahasiswaPendidikanId?: string
    NamaSekolah: string
    TahunLulus: number
    Jurusan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaPiagamCreateManyPendaftaranInput = {
    MahasiswaPiagamId?: string
    Tahun: number
    BentukPenghargaan: string
    PemberiPenghargaan: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanCreateManyPendaftaranInput = {
    MahasiswaRiwayatPekerjaanId?: string
    Nama: string
    PosisiJabatan: string
    Alamat?: string | null
    UraianTugas?: string | null
    MulaiBekerja: Date | string
    SelesaiBekerja?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MataKuliahMahasiswaCreateManyPendaftaranInput = {
    MataKuliahMahasiswaId?: string
    MataKuliahId: string
    Rpl?: boolean
    Keterangan?: $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type OrangTuaCreateManyPendaftaranInput = {
    OrangTuaId?: string
    Nama: string
    Pekerjaan?: string | null
    JenisOrtu: $Enums.JenisOrtu
    Penghasilan: number
    Email: string
    NomorHp: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PekerjaanMahasiswaCreateManyPendaftaranInput = {
    PekerjaanMahasiswaId?: string
    AlamatId: string
    InstitusiTempatBekerja: string
    Jabatan: string
    StatusPekerjaan?: $Enums.StatusPekerjaan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type PesantrenCreateManyPendaftaranInput = {
    PesantrenId?: string
    NamaPesantren: string
    LamaPesantren: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenCreateManyPendaftaranInput = {
    SanggahanAssesmenId?: string
    ProsesBanding?: boolean
    DiskusiBanding?: boolean
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SkRektorMahasiswaCreateManyPendaftaranInput = {
    SkRektorId: string
  }

  export type AssesorMahasiswaUpdateWithoutPendaftaranInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Asesor?: AsesorUpdateOneRequiredWithoutAssesorMahasiswaNestedInput
    SkRektorAssesor?: SkRektorAssesorUpdateManyWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaUncheckedUpdateWithoutPendaftaranInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SkRektorAssesor?: SkRektorAssesorUncheckedUpdateManyWithoutAssesorMahasiswaNestedInput
  }

  export type AssesorMahasiswaUncheckedUpdateManyWithoutPendaftaranInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
    AsesorId?: StringFieldUpdateOperationsInput | string
    Urutan?: IntFieldUpdateOperationsInput | number
    Confirmation?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BuktiFormUpdateWithoutPendaftaranInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    JenisDokumen?: JenisDokumenUpdateOneRequiredWithoutBuktiFormNestedInput
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUpdateManyWithoutBuktiFormNestedInput
  }

  export type BuktiFormUncheckedUpdateWithoutPendaftaranInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    BuktiFormEvaluasiDiri?: BuktiFormEvaluasiDiriUncheckedUpdateManyWithoutBuktiFormNestedInput
  }

  export type BuktiFormUncheckedUpdateManyWithoutPendaftaranInput = {
    BuktiFormId?: StringFieldUpdateOperationsInput | string
    JenisDokumenId?: StringFieldUpdateOperationsInput | string
    NamaFile?: StringFieldUpdateOperationsInput | string
    NamaDokumen?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DaftarUlangUpdateWithoutPendaftaranInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ProgramStudi?: ProgramStudiUpdateOneRequiredWithoutDaftarUlangNestedInput
  }

  export type DaftarUlangUncheckedUpdateWithoutPendaftaranInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DaftarUlangUncheckedUpdateManyWithoutPendaftaranInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InformasiKependudukanUpdateWithoutPendaftaranInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InformasiKependudukanUncheckedUpdateWithoutPendaftaranInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InformasiKependudukanUncheckedUpdateManyWithoutPendaftaranInput = {
    InformasiKependudukanId?: StringFieldUpdateOperationsInput | string
    NoKk?: StringFieldUpdateOperationsInput | string
    NoNik?: StringFieldUpdateOperationsInput | string
    Suku?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitusiLamaUpdateWithoutPendaftaranInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Alamat?: AlamatUpdateOneRequiredWithoutInstitusiLamaNestedInput
  }

  export type InstitusiLamaUncheckedUpdateWithoutPendaftaranInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type InstitusiLamaUncheckedUpdateManyWithoutPendaftaranInput = {
    InstitusiLamaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    Jenjang?: EnumJenjangFieldUpdateOperationsInput | $Enums.Jenjang
    JenisInstitusi?: StringFieldUpdateOperationsInput | string
    NamaInstitusi?: StringFieldUpdateOperationsInput | string
    Jurusan?: StringFieldUpdateOperationsInput | string
    Nisn?: StringFieldUpdateOperationsInput | string
    Npsn?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    NilaiLulusan?: FloatFieldUpdateOperationsInput | number
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaKonferensiUpdateWithoutPendaftaranInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaKonferensiUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaKonferensiUncheckedUpdateManyWithoutPendaftaranInput = {
    MahasiswaKonferensiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    JudulSeminar?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    StatusKeikutsertaan?: EnumStatusKeikutsertaanFieldUpdateOperationsInput | $Enums.StatusKeikutsertaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUpdateWithoutPendaftaranInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaOrganisasiProfesiUncheckedUpdateManyWithoutPendaftaranInput = {
    MahasiswaOrganisasiProfesiId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    NamaOrganisasi?: StringFieldUpdateOperationsInput | string
    JenjangAnggotaJabatan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUpdateWithoutPendaftaranInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPelatihanProfessionalUncheckedUpdateManyWithoutPendaftaranInput = {
    MahasiswaPelatihanProfessionalId?: StringFieldUpdateOperationsInput | string
    NamaPelatihan?: StringFieldUpdateOperationsInput | string
    Penyelenggara?: StringFieldUpdateOperationsInput | string
    Mulai?: DateTimeFieldUpdateOperationsInput | Date | string
    Selesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPendidikanUpdateWithoutPendaftaranInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPendidikanUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPendidikanUncheckedUpdateManyWithoutPendaftaranInput = {
    MahasiswaPendidikanId?: StringFieldUpdateOperationsInput | string
    NamaSekolah?: StringFieldUpdateOperationsInput | string
    TahunLulus?: IntFieldUpdateOperationsInput | number
    Jurusan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPiagamUpdateWithoutPendaftaranInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPiagamUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaPiagamUncheckedUpdateManyWithoutPendaftaranInput = {
    MahasiswaPiagamId?: StringFieldUpdateOperationsInput | string
    Tahun?: IntFieldUpdateOperationsInput | number
    BentukPenghargaan?: StringFieldUpdateOperationsInput | string
    PemberiPenghargaan?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUpdateWithoutPendaftaranInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUncheckedUpdateWithoutPendaftaranInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaRiwayatPekerjaanUncheckedUpdateManyWithoutPendaftaranInput = {
    MahasiswaRiwayatPekerjaanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    PosisiJabatan?: StringFieldUpdateOperationsInput | string
    Alamat?: NullableStringFieldUpdateOperationsInput | string | null
    UraianTugas?: NullableStringFieldUpdateOperationsInput | string | null
    MulaiBekerja?: DateTimeFieldUpdateOperationsInput | Date | string
    SelesaiBekerja?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahMahasiswaUpdateWithoutPendaftaranInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliah?: MataKuliahUpdateOneRequiredWithoutMataKuliahMahasiswaNestedInput
    EvaluasiDiri?: EvaluasiDiriUpdateManyWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateWithoutPendaftaranInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    EvaluasiDiri?: EvaluasiDiriUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutMataKuliahMahasiswaNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutPendaftaranInput = {
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Rpl?: BoolFieldUpdateOperationsInput | boolean
    Keterangan?: NullableEnumKeteranganMataKuliahFieldUpdateOperationsInput | $Enums.KeteranganMataKuliah | null
    StatusMataKuliahMahasiswa?: NullableEnumStatusMataKuliahMahasiswaFieldUpdateOperationsInput | $Enums.StatusMataKuliahMahasiswa | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrangTuaUpdateWithoutPendaftaranInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrangTuaUncheckedUpdateWithoutPendaftaranInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrangTuaUncheckedUpdateManyWithoutPendaftaranInput = {
    OrangTuaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Pekerjaan?: NullableStringFieldUpdateOperationsInput | string | null
    JenisOrtu?: EnumJenisOrtuFieldUpdateOperationsInput | $Enums.JenisOrtu
    Penghasilan?: FloatFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    NomorHp?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PekerjaanMahasiswaUpdateWithoutPendaftaranInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PekerjaanMahasiswaUncheckedUpdateWithoutPendaftaranInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PekerjaanMahasiswaUncheckedUpdateManyWithoutPendaftaranInput = {
    PekerjaanMahasiswaId?: StringFieldUpdateOperationsInput | string
    AlamatId?: StringFieldUpdateOperationsInput | string
    InstitusiTempatBekerja?: StringFieldUpdateOperationsInput | string
    Jabatan?: StringFieldUpdateOperationsInput | string
    StatusPekerjaan?: EnumStatusPekerjaanFieldUpdateOperationsInput | $Enums.StatusPekerjaan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PesantrenUpdateWithoutPendaftaranInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PesantrenUncheckedUpdateWithoutPendaftaranInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PesantrenUncheckedUpdateManyWithoutPendaftaranInput = {
    PesantrenId?: StringFieldUpdateOperationsInput | string
    NamaPesantren?: StringFieldUpdateOperationsInput | string
    LamaPesantren?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenUpdateWithoutPendaftaranInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUpdateManyWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SanggahanAssesmenUncheckedUpdateWithoutPendaftaranInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SanggahanAssesmenMk?: SanggahanAssesmenMkUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput
    SanggahanAssesmenPihak?: SanggahanAssesmenPihakUncheckedUpdateManyWithoutSanggahanAssesmenNestedInput
  }

  export type SanggahanAssesmenUncheckedUpdateManyWithoutPendaftaranInput = {
    SanggahanAssesmenId?: StringFieldUpdateOperationsInput | string
    ProsesBanding?: BoolFieldUpdateOperationsInput | boolean
    DiskusiBanding?: BoolFieldUpdateOperationsInput | boolean
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorMahasiswaUpdateWithoutPendaftaranInput = {
    SkRektor?: SkRektorUpdateOneRequiredWithoutSkRektorMahasiswaNestedInput
  }

  export type SkRektorMahasiswaUncheckedUpdateWithoutPendaftaranInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorMahasiswaUncheckedUpdateManyWithoutPendaftaranInput = {
    SkRektorId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasPermissionsCreateManyPermissionInput = {
    UserId: string
  }

  export type RoleHasPermissionsCreateManyPermissionInput = {
    RoleId: string
  }

  export type UserHasPermissionsUpdateWithoutPermissionInput = {
    User?: UserUpdateOneRequiredWithoutUserHasPermissionsNestedInput
  }

  export type UserHasPermissionsUncheckedUpdateWithoutPermissionInput = {
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasPermissionsUncheckedUpdateManyWithoutPermissionInput = {
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type RoleHasPermissionsUpdateWithoutPermissionInput = {
    Role?: RoleUpdateOneRequiredWithoutRoleHasPermissionsNestedInput
  }

  export type RoleHasPermissionsUncheckedUpdateWithoutPermissionInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
  }

  export type RoleHasPermissionsUncheckedUpdateManyWithoutPermissionInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
  }

  export type DaftarUlangCreateManyProgramStudiInput = {
    DaftarUlangId?: string
    PendaftaranId: string
    Nim?: string | null
    JenjangKkniDituju?: string | null
    KipK?: boolean
    Aktif?: boolean
    MengisiBiodata?: boolean
    Finalisasi?: boolean
    TanggalDaftar?: Date | string | null
    TanggalDaftarUlang?: Date | string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type MataKuliahCreateManyProgramStudiInput = {
    MataKuliahId?: string
    Kode: string
    Nama: string
    Sks: number
    Semester?: string | null
    Silabus?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type DaftarUlangUpdateWithoutProgramStudiInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutDaftarUlangNestedInput
  }

  export type DaftarUlangUncheckedUpdateWithoutProgramStudiInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DaftarUlangUncheckedUpdateManyWithoutProgramStudiInput = {
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    PendaftaranId?: StringFieldUpdateOperationsInput | string
    Nim?: NullableStringFieldUpdateOperationsInput | string | null
    JenjangKkniDituju?: NullableStringFieldUpdateOperationsInput | string | null
    KipK?: BoolFieldUpdateOperationsInput | boolean
    Aktif?: BoolFieldUpdateOperationsInput | boolean
    MengisiBiodata?: BoolFieldUpdateOperationsInput | boolean
    Finalisasi?: BoolFieldUpdateOperationsInput | boolean
    TanggalDaftar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    TanggalDaftarUlang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MataKuliahUpdateWithoutProgramStudiInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUpdateManyWithoutMataKuliahNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateManyWithoutMataKuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateWithoutProgramStudiInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    CapaianPembelajaran?: CapaianPembelajaranUncheckedUpdateManyWithoutMataKuliahNestedInput
    MataKuliahMahasiswa?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMataKuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateManyWithoutProgramStudiInput = {
    MataKuliahId?: StringFieldUpdateOperationsInput | string
    Kode?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Sks?: IntFieldUpdateOperationsInput | number
    Semester?: NullableStringFieldUpdateOperationsInput | string | null
    Silabus?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type KabupatenCreateManyProvinsiInput = {
    KabupatenId?: string
    Nama: string
  }

  export type KabupatenUpdateWithoutProvinsiInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kecamatan?: KecamatanUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateWithoutProvinsiInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Kecamatan?: KecamatanUncheckedUpdateManyWithoutKabupatenNestedInput
  }

  export type KabupatenUncheckedUpdateManyWithoutProvinsiInput = {
    KabupatenId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasRolesCreateManyRoleInput = {
    UserId: string
  }

  export type RoleHasPermissionsCreateManyRoleInput = {
    PermissionId: string
  }

  export type UserHasRolesUpdateWithoutRoleInput = {
    User?: UserUpdateOneRequiredWithoutUserHasRolesNestedInput
  }

  export type UserHasRolesUncheckedUpdateWithoutRoleInput = {
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasRolesUncheckedUpdateManyWithoutRoleInput = {
    UserId?: StringFieldUpdateOperationsInput | string
  }

  export type RoleHasPermissionsUpdateWithoutRoleInput = {
    Permission?: PermissionUpdateOneRequiredWithoutRoleHasPermissionsNestedInput
  }

  export type RoleHasPermissionsUncheckedUpdateWithoutRoleInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
  }

  export type RoleHasPermissionsUncheckedUpdateManyWithoutRoleInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
  }

  export type SanggahanAssesmenMkCreateManySanggahanAssesmenInput = {
    SanggahanAssesmenMkId?: string
    MataKuliahMahasiswaId: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenPihakCreateManySanggahanAssesmenInput = {
    SanggahanAssesmenPihakId?: string
    NamaPihak: string
    JabatanPihak?: string | null
    InstansiPihak?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type SanggahanAssesmenMkUpdateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    MataKuliahMahasiswa?: MataKuliahMahasiswaUpdateOneRequiredWithoutSanggahanAssesmenMkNestedInput
  }

  export type SanggahanAssesmenMkUncheckedUpdateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenMkUncheckedUpdateManyWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenMkId?: StringFieldUpdateOperationsInput | string
    MataKuliahMahasiswaId?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenPihakUpdateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenPihakUncheckedUpdateWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SanggahanAssesmenPihakUncheckedUpdateManyWithoutSanggahanAssesmenInput = {
    SanggahanAssesmenPihakId?: StringFieldUpdateOperationsInput | string
    NamaPihak?: StringFieldUpdateOperationsInput | string
    JabatanPihak?: NullableStringFieldUpdateOperationsInput | string | null
    InstansiPihak?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SkRektorAssesorCreateManySkRektorInput = {
    AssesorMahasiswaId: string
  }

  export type SkRektorMahasiswaCreateManySkRektorInput = {
    PendaftaranId: string
  }

  export type SkRektorAssesorUpdateWithoutSkRektorInput = {
    AssesorMahasiswa?: AssesorMahasiswaUpdateOneRequiredWithoutSkRektorAssesorNestedInput
  }

  export type SkRektorAssesorUncheckedUpdateWithoutSkRektorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorAssesorUncheckedUpdateManyWithoutSkRektorInput = {
    AssesorMahasiswaId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorMahasiswaUpdateWithoutSkRektorInput = {
    Pendaftaran?: PendaftaranUpdateOneRequiredWithoutSkRektorMahasiswaNestedInput
  }

  export type SkRektorMahasiswaUncheckedUpdateWithoutSkRektorInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
  }

  export type SkRektorMahasiswaUncheckedUpdateManyWithoutSkRektorInput = {
    PendaftaranId?: StringFieldUpdateOperationsInput | string
  }

  export type StatusMahasiswaAssesmentHistoryCreateManyStatusMahasiswaAssesmentInput = {
    StatusMahasiswaAssesmentHistoryId?: string
    DaftarUlangId: string
    Tanggal?: Date | string | null
    Keterangan?: string | null
  }

  export type StatusMahasiswaAssesmentHistoryUpdateWithoutStatusMahasiswaAssesmentInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedUpdateWithoutStatusMahasiswaAssesmentInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StatusMahasiswaAssesmentHistoryUncheckedUpdateManyWithoutStatusMahasiswaAssesmentInput = {
    StatusMahasiswaAssesmentHistoryId?: StringFieldUpdateOperationsInput | string
    DaftarUlangId?: StringFieldUpdateOperationsInput | string
    Tanggal?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AsesorCreateManyTipeAsesorInput = {
    AsesorId?: string
    UserId: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type AsesorUpdateWithoutTipeAsesorInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademik?: AsesorAkademikUpdateManyWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorUncheckedUpdateWithoutTipeAsesorInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AsesorAkademik?: AsesorAkademikUncheckedUpdateManyWithoutAsesorNestedInput
    AsesorPraktisi?: AsesorPraktisiUncheckedUpdateManyWithoutAsesorNestedInput
    AssesorMahasiswa?: AssesorMahasiswaUncheckedUpdateManyWithoutAsesorNestedInput
  }

  export type AsesorUncheckedUpdateManyWithoutTipeAsesorInput = {
    AsesorId?: StringFieldUpdateOperationsInput | string
    UserId?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProgramStudiCreateManyUniversityInput = {
    ProgramStudiId?: string
    Nama: string
    Jenjang?: string | null
    Akreditasi: string
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanCreateManyUniversityInput = {
    UniversityJabatanId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversitySosialMediaCreateManyUniversityInput = {
    UniversitySosialMediaId?: string
    Nama: string
    Username?: string | null
    Icon?: string | null
  }

  export type UniversityInformasiCreateManyUniversityInput = {
    UniversityInformasiId?: string
    Nama: string
    Informasi?: string | null
  }

  export type ProgramStudiUpdateWithoutUniversityInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaftarUlang?: DaftarUlangUpdateManyWithoutProgramStudiNestedInput
    MataKuliah?: MataKuliahUpdateManyWithoutProgramStudiNestedInput
  }

  export type ProgramStudiUncheckedUpdateWithoutUniversityInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaftarUlang?: DaftarUlangUncheckedUpdateManyWithoutProgramStudiNestedInput
    MataKuliah?: MataKuliahUncheckedUpdateManyWithoutProgramStudiNestedInput
  }

  export type ProgramStudiUncheckedUpdateManyWithoutUniversityInput = {
    ProgramStudiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Jenjang?: NullableStringFieldUpdateOperationsInput | string | null
    Akreditasi?: StringFieldUpdateOperationsInput | string
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanUpdateWithoutUniversityInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UniversityJabatanOrang?: UniversityJabatanOrangUpdateManyWithoutUniversityJabatanNestedInput
  }

  export type UniversityJabatanUncheckedUpdateWithoutUniversityInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UniversityJabatanOrang?: UniversityJabatanOrangUncheckedUpdateManyWithoutUniversityJabatanNestedInput
  }

  export type UniversityJabatanUncheckedUpdateManyWithoutUniversityInput = {
    UniversityJabatanId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversitySosialMediaUpdateWithoutUniversityInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversitySosialMediaUncheckedUpdateWithoutUniversityInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversitySosialMediaUncheckedUpdateManyWithoutUniversityInput = {
    UniversitySosialMediaId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Username?: NullableStringFieldUpdateOperationsInput | string | null
    Icon?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityInformasiUpdateWithoutUniversityInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityInformasiUncheckedUpdateWithoutUniversityInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityInformasiUncheckedUpdateManyWithoutUniversityInput = {
    UniversityInformasiId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Informasi?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityJabatanOrangCreateManyUniversityJabatanInput = {
    UniversityJabatanOrangId?: string
    Nama: string
    Keterangan?: string | null
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
    DeletedAt?: Date | string | null
  }

  export type UniversityJabatanOrangUpdateWithoutUniversityJabatanInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanOrangUncheckedUpdateWithoutUniversityJabatanInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UniversityJabatanOrangUncheckedUpdateManyWithoutUniversityJabatanInput = {
    UniversityJabatanOrangId?: StringFieldUpdateOperationsInput | string
    Nama?: StringFieldUpdateOperationsInput | string
    Keterangan?: NullableStringFieldUpdateOperationsInput | string | null
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DeletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MahasiswaCreateManyUserInput = {
    MahasiswaId?: string
    StatusPerkawinan?: $Enums.StatusPerkawinan
    CreatedAt?: Date | string | null
    UpdatedAt?: Date | string | null
  }

  export type UserHasPermissionsCreateManyUserInput = {
    PermissionId: string
  }

  export type UserHasRolesCreateManyUserInput = {
    RoleId: string
  }

  export type UserloginCreateManyUserInput = {
    UserloginId?: string
    Username: string
    Password: string
    Credential: string
  }

  export type MahasiswaUpdateWithoutUserInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaUncheckedUpdateWithoutUserInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Pendaftaran?: PendaftaranUncheckedUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaUncheckedUpdateManyWithoutUserInput = {
    MahasiswaId?: StringFieldUpdateOperationsInput | string
    StatusPerkawinan?: EnumStatusPerkawinanFieldUpdateOperationsInput | $Enums.StatusPerkawinan
    CreatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    UpdatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserHasPermissionsUpdateWithoutUserInput = {
    Permission?: PermissionUpdateOneRequiredWithoutUserHasPermissionsNestedInput
  }

  export type UserHasPermissionsUncheckedUpdateWithoutUserInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasPermissionsUncheckedUpdateManyWithoutUserInput = {
    PermissionId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasRolesUpdateWithoutUserInput = {
    Role?: RoleUpdateOneRequiredWithoutUserHasRolesNestedInput
  }

  export type UserHasRolesUncheckedUpdateWithoutUserInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
  }

  export type UserHasRolesUncheckedUpdateManyWithoutUserInput = {
    RoleId?: StringFieldUpdateOperationsInput | string
  }

  export type UserloginUpdateWithoutUserInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
  }

  export type UserloginUncheckedUpdateWithoutUserInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
  }

  export type UserloginUncheckedUpdateManyWithoutUserInput = {
    UserloginId?: StringFieldUpdateOperationsInput | string
    Username?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    Credential?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}